<HTML><HEAD><TITLE>[Chapter 6] 6.3 Minimizing Pain and Suffering</TITLE><METANAME="DC.title"CONTENT="DNS &amp; BIND"><METANAME="DC.creator"CONTENT="Cricket Liu &amp; Paul Albitz"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:29:13Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-512-2"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Configuring Hosts"><LINKREL="prev"HREF="ch06_02.htm"TITLE="6.2 Sample Resolver Configurations"><LINKREL="next"HREF="ch06_04.htm"TITLE="6.4 Vendor-Specific Options"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="DNS &amp; BIND"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="DNS &amp; BIND"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/dsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_02.htm"TITLE="6.2 Sample Resolver Configurations"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.2 Sample Resolver Configurations"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Configuring Hosts</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_04.htm"TITLE="6.4 Vendor-Specific Options"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.4 Vendor-Specific Options"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="AUTOID-5084">6.3 Minimizing Pain and Suffering</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-6-DNS-DOMAIN-NAME-SYSTEM-CONFIGURING-HOSTS-FOR-CONSEQUENCES-OF"></A><ACLASS="indexterm"NAME="DNS3-IDX-6-HOSTS-CONFIGURING-TO-USE-DNS-CONSEQUENCES-OF"></A><ACLASS="indexterm"NAME="DNS3-IDX-6-CONFIGURING-HOSTS-TO-USE-DNS-CONSEQUENCES-OF"></A>Now that you've configured your host to use<SPANCLASS="acronym">DNS</SPAN>, what's going to change?  Will your users beforced to type long domain names? Will they have to change their mailaddresses and mailing lists?</P><PCLASS="para">Thanks to the search list, much of this will continue working asbefore.  There are some exceptions, though, and there are notabledifferences in the way that some programs behave when they use<SPANCLASS="acronym">DNS</SPAN>. We'll try to cover all of the commonones.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-5102">6.3.1 Differences in Service Behavior</A></H3><PCLASS="para">As you've seen earlier in this chapter, programs like<ACLASS="indexterm"NAME="AUTOID-5105"></A><KBDCLASS="command">telnet</KBD>, <KBDCLASS="command">ftp</KBD>,<KBDCLASS="command">rlogin</KBD>, and <KBDCLASS="command">rsh</KBD> apply the searchlist to domain name arguments that aren't dot-terminated. That meansthat if you're in <ICLASS="systemitem.sitename">movie.edu</I>(i.e., your default domain is <ICLASS="systemitem.sitename">movie.edu</I> and your search list includes<ICLASS="systemitem.sitename">movie.edu</I>), you can typeeither:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>telnet misery</B></CODE></PRE></BLOCKQUOTE><PCLASS="para">or:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>telnet misery.movie.edu</B></CODE></PRE></BLOCKQUOTE><PCLASS="para">or even:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>telnet misery.movie.edu.</B></CODE></PRE></BLOCKQUOTE><PCLASS="para">and get to the same place. The same holds true for the otherservices, too. There's one other behavioral difference you may benefitfrom: because a name server may return more than one<SPANCLASS="acronym">IP</SPAN> address when you look up an address, modernversions of <KBDCLASS="command">telnet</KBD> and <KBDCLASS="command">ftp</KBD> willtry to connect to the first address returned, and if the connection isrefused or times out, for example, it will try the next, and soon:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ftp tootsie</B></CODE>ftp: connect to address 192.249.249.244: Connection timed outTrying 192.253.253.244...Connected to tootsie.movie.edu.220 tootsie.movie.edu FTP server (Version 16.2 Fri Apr 26    18:20:43 GMT 1991) ready.Name (tootsie: guest):</PRE></BLOCKQUOTE><PCLASS="para">And remember that with the <ICLASS="filename">resolv.conf</I><ACLASS="indexterm"NAME="AUTOID-5130"></A><ACLASS="indexterm"NAME="AUTOID-5132"></A><ACLASS="indexterm"NAME="AUTOID-5134"></A><ICLASS="structfield">sortlist</I> directive, you can even controlthe order in which your applications try those <SPANCLASS="acronym">IP</SPAN>addresses.</P><PCLASS="para">One oddball service is<ACLASS="indexterm"NAME="AUTOID-5140"></A><ACLASS="indexterm"NAME="AUTOID-5142"></A><SPANCLASS="acronym">NFS</SPAN>. The <KBDCLASS="command">mount</KBD> command canhandle domain names just fine, and you can put domain names into<ICLASS="filename">/etc/fstab</I> (your vendor may call it<ICLASS="filename">/etc/checklist</I>), too. But watch out for<ACLASS="indexterm"NAME="AUTOID-5148"></A><ACLASS="indexterm"NAME="AUTOID-5150"></A><ACLASS="indexterm"NAME="AUTOID-5152"></A><ACLASS="indexterm"NAME="AUTOID-5154"></A><ICLASS="filename">/etc/exports</I> and<ICLASS="filename">/etc/netgroup</I>. <ICLASS="filename">/etc/exports</I>controls which filesystems you allow various clients to<SPANCLASS="acronym">NFS</SPAN>-mount. You can also assign a name to a group ofhosts in <ICLASS="filename">netgroup</I> and then allow them access via<ICLASS="filename">exports</I> by using the name of the group.</P><PCLASS="para">Unfortunately, older versions of <SPANCLASS="acronym">NFS</SPAN> don't<EMCLASS="emphasis">really</EM> use <SPANCLASS="acronym">DNS</SPAN> to check<ICLASS="filename">exports</I> or<ICLASS="filename">netgroup</I>&nbsp;- the client tells the<SPANCLASS="acronym">NFS</SPAN> server its identity in an<SPANCLASS="acronym">RPC</SPAN> (Remote Procedure Call) packet. Consequently,the client's identity is whatever the client claims it is. And theidentity a host uses in Sun <SPANCLASS="acronym">RPC</SPAN> is the local host's<KBDCLASS="command">hostname</KBD>. So the name you use in either file needsto match the client's <KBDCLASS="command">hostname</KBD>, which isn'tnecessarily its domain name.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-5173">6.3.2 Electronic Mail</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-6-ELECTRONIC-MAIL-DNS-AND"></A><ACLASS="indexterm"NAME="DNS3-IDX-6-SENDMAIL-PROGRAM-DNS-AND"></A>Some electronic mail programs, including <KBDCLASS="command">sendmail</KBD>,also don't work as expected; <KBDCLASS="command">sendmail</KBD> doesn't usethe search list quite the same way other programs do. Instead, whenconfigured to use a name server, it uses a process called<ACLASS="indexterm"NAME="AUTOID-5184"></A><ICLASS="firstterm">canonicalization</I> to convert names in electronicmail addresses to full, canonical domain names.</P><PCLASS="para">In canonicalization, <KBDCLASS="command">sendmail</KBD> applies thesearch list to a name and looks up data of type<SPANCLASS="acronym">ANY</SPAN>, which matches any type of record. If the nameserver queried finds a <SPANCLASS="acronym">CNAME</SPAN> record (an alias), itreplaces the name looked up with the canonical name the alias pointsto.  If the name server queried finds an A record (an address),<KBDCLASS="command">sendmail</KBD> uses the domain name that resolved to theaddress as the canonical name.  If the name server doesn't find anaddress, but finds one or more <SPANCLASS="acronym">MX</SPAN> records:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">If the search list has not yet been appended,<KBDCLASS="command">sendmail</KBD> uses the domain name that resolved to the<SPANCLASS="acronym">MX</SPAN> record(s) as the canonical name.</P></LI><LICLASS="listitem"><PCLASS="para">If one or more elements of the search list have been appended,<KBDCLASS="command">sendmail</KBD> notes that the domain name is a potentialcanonical name, and continues appending elements of the search list.If a subsequent element of the search list turns up an address, thedomain name that turned up the address is the canonical name.Otherwise, the domain name that found the first <SPANCLASS="acronym">MX</SPAN>record is used as the canonical name.[7]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] All this complexity is necessary to deal with wildcard<SPANCLASS="acronym">MX</SPAN> records, which we'll discuss in <ACLASS="xref"HREF="ch15_01.htm"TITLE="Miscellaneous">Chapter 15, <CITECLASS="chapter">Miscellaneous</CITE></A>.</P></BLOCKQUOTE></LI></UL><PCLASS="para"><KBDCLASS="command">sendmail</KBD> uses canonicalization several timeswhen processing an <SPANCLASS="acronym">SMTP</SPAN> message; it canonicalizesthe destination address and several fields in the<SPANCLASS="acronym">SMTP</SPAN> headers.[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] Some older versions of <KBDCLASS="command">sendmail</KBD> use adifferent technique for doing canonicalization: they apply the searchlist and query the name server for type <SPANCLASS="acronym">CNAME</SPAN>records for the name in question. <SPANCLASS="acronym">CNAME</SPAN> matchesonly <SPANCLASS="acronym">CNAME</SPAN> records. If a record is found, the nameis replaced with the domain name on the right-hand side of the<SPANCLASS="acronym">CNAME</SPAN> record.</P></BLOCKQUOTE><PCLASS="para"><KBDCLASS="command">sendmail</KBD> also sets macro<ICLASS="wordasword">w</I> (not to be confused with class<ICLASS="wordasword">w</I>) to the canonicalized<KBDCLASS="command">hostname</KBD> when you freeze the<ICLASS="filename">sendmail.cf</I> file, or, if you don't freeze yourconfiguration file, when the <KBDCLASS="command">sendmail</KBD> daemon startsup. So even if you set your <KBDCLASS="command">hostname</KBD> to a short,single-part name, <KBDCLASS="command">sendmail</KBD> will canonicalize the<KBDCLASS="command">hostname</KBD> using the search list defined in<ICLASS="filename">resolv.conf</I>.</P><PCLASS="para">This is important because the local host's canonical name is theonly name <KBDCLASS="command">sendmail</KBD> recognizes, by default, as thelocal host's name. <KBDCLASS="command">sendmail</KBD> will attempt to forwardmail that's addressed to a domain name it thinks isn't local. So, forexample, unless you configure <KBDCLASS="command">sendmail</KBD> to recognizethe host's aliases (using class <ICLASS="option">w</I> or fileclass <ICLASS="option">w</I>, as we showed in<ACLASS="xref"HREF="ch05_01.htm"TITLE="DNS and Electronic Mail">Chapter 5, <CITECLASS="chapter"><SPANCLASS="acronym">DNS</SPAN> and Electronic Mail</CITE></A>), the host will try to forward messagesthat arrive addressed for anything other than the canonical domainname.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5236"></A>There's another important implication of the way<KBDCLASS="command">sendmail</KBD> canonicalizes the local<KBDCLASS="command">hostname</KBD>&nbsp;- <KBDCLASS="command">sendmail</KBD>recognizes only the local host's canonical name in<SPANCLASS="acronym">MX</SPAN> lists. Consequently, if you use anything otherthan a host's canonical name in an <SPANCLASS="acronym">MX</SPAN> record, yourun the risk that the host will not recognize it. This can cause mailto loop and then be returned to the sender.</P><PCLASS="para">One last note on <KBDCLASS="command">sendmail</KBD>: when you startrunning a name server, if you're running an older version of<KBDCLASS="command">sendmail</KBD> (before version 8), you should also setthe <ICLASS="wordasword">I</I> option in your<ACLASS="indexterm"NAME="AUTOID-5248"></A><ICLASS="filename">sendmail.cf</I> file. Option <ICLASS="option">I</I>determines what <KBDCLASS="command">sendmail</KBD> does if a lookup for adestination host fails. When using <ICLASS="filename">/etc/hosts</I>, afailed lookup is fatal. If you search the host table once for a nameand don't find it, it's doubtful it'll miraculously appear later, sothe mailer may as well return the message. When using<SPANCLASS="acronym">DNS</SPAN>, however, a lookup failure may be temporary,because of intermittent networking problems, for example. Settingoption <ICLASS="wordasword">I</I> instructs<KBDCLASS="command">sendmail</KBD> to queue mail if a lookup fails, insteadof returning it to the sender.  Just add <CODECLASS="literal">OI</CODE> to your<ICLASS="filename">sendmail.cf</I> file and refreeze it, if you use afrozen configuration file.<ACLASS="indexterm"NAME="AUTOID-5259"></A><ACLASS="indexterm"NAME="AUTOID-5260"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-5261">6.3.3 Updating .rhosts, hosts.equiv, etc.</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5264"></A><ACLASS="indexterm"NAME="AUTOID-5267"></A><ACLASS="indexterm"NAME="AUTOID-5270"></A><ACLASS="indexterm"NAME="AUTOID-5272"></A><ACLASS="indexterm"NAME="AUTOID-5274"></A>Once you start using <SPANCLASS="acronym">DNS</SPAN>, you may also need todisambiguate host names in your host's authorization files. Entriesthat use simple, one-part host names will now be assumed to be in thelocal domain. For example, the <ICLASS="filename">lpd.allow</I> file on<ICLASS="systemitem.sitename">wormhole</I> might include:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">wormholeterminatordiehardrobocopmashtwins</PRE></BLOCKQUOTE><PCLASS="para">If we move <ICLASS="systemitem.sitename">mash</I> and<ICLASS="systemitem.sitename">twins</I> into the <ICLASS="systemitem.sitename">comedy.movie.edu</I> domain, though, they won'tbe allowed to access <EMCLASS="emphasis">lpd</EM>; the entries in<ICLASS="filename">lpd.allow</I> only allow <ICLASS="systemitem.sitename">mash.movie.edu</I> and <ICLASS="systemitem.sitename">twins.movie.edu</I>.  So we'd have to add theproper domains to host names outside of the local host's defaultdomain:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">wormholeterminatordiehardrobocopmash.comedy.movie.edutwins.comedy.movie.edu</PRE></BLOCKQUOTE><PCLASS="para">Some other files you should check for host names in need ofdomain-ification are:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hosts.equiv.rhosts<ACLASS="indexterm"NAME="AUTOID-5291"></A><ACLASS="indexterm"NAME="AUTOID-5293"></A>X0.hostssendmail.cf</PRE></BLOCKQUOTE><PCLASS="para">Sometimes, simply running these files through a canonicalizationfilter&nbsp;- a program that translates host names to domain namesusing the search list&nbsp;- is enough to disambiguate them. Here's ashort canonicalization filter in Perl to help you out:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/usr/bin/perl# Perl canonicalization filter## Expects one hostname per line, in the first field (a la .rhosts,# X0.hosts)use Socket;while( &lt; &gt;)    if(($hostname, $null) = split){      ($domainname, $aliases, $addrtype, $length, @addrs) =            gethostbyname($hostname);      if($domainname) {s/$hostname/$domainname/;}    }    print;}</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-5297">6.3.4 Providing Aliases</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-6-ALIASES"></A>Even if you cover all your bases and convert all your<ICLASS="filename">.rhosts</I>, <ICLASS="filename">hosts.equiv</I>, and<ICLASS="filename">sendmail.cf</I> files after you configure your hostto use <SPANCLASS="acronym">DNS</SPAN>, your users will still have to adjust tousing domain names. Hopefully, the confusion they feel will beminimal, and will be more than offset by the benefits of<SPANCLASS="acronym">DNS</SPAN>.</P><PCLASS="para">One way to make your users' lives less confusing afterconfiguring <SPANCLASS="acronym">DNS</SPAN> is to provide aliases forwell-known hosts that are no longer reachable using their familiarnames. For example, our users are accustomed to typing <KBDCLASS="command">telnetdoofy</KBD> or <KBDCLASS="command">rlogin doofy</KBD> to get to thebulletin board system run by the movie studio on the other side oftown. Now they'll have to start using <ICLASS="systemitem.sitename">doofy</I>'s full domain name, <ICLASS="systemitem.sitename">doofy.maroon.com</I>. But most of our usersdon't know the full domain name, and it'll be some time before we cantell all of them and they get used to it.</P><PCLASS="para">Luckily, <SPANCLASS="acronym">DNS</SPAN> will let you define aliases foryour users.  All we need to do is set the<ACLASS="indexterm"NAME="AUTOID-5315"></A><ACLASS="indexterm"NAME="AUTOID-5317"></A>environment variable <ICLASS="envar">HOSTALIASES</I> to the pathname of afile that contains mappings between aliases and domain names. Forexample, to set up a system-wide alias for <ICLASS="systemitem.sitename">doofy</I>, we could set<ICLASS="envar">HOSTALIASES</I> to<ACLASS="indexterm"NAME="AUTOID-5322"></A><ICLASS="filename">/etc/host.aliases</I> in the system's shell startupfiles, and add:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">doofy    doofy.maroon.com</PRE></BLOCKQUOTE><PCLASS="para">to <ICLASS="filename">/etc/host.aliases</I>. The alias file formatis simple: the alias starts the line in column one, followed bywhitespace, and then the domain name that corresponds to thealias. The domain name is written without a trailing dot.  The aliascan't contain dots.</P><PCLASS="para">Now, when our users type <KBDCLASS="command">telnet doofy</KBD> or<KBDCLASS="command">rlogin doofy</KBD>, the resolver will transparentlysubstitute <ICLASS="systemitem.sitename">doofy.maroon.com</I> for<ICLASS="systemitem.sitename">doofy</I> in the name serverquery. The message the users see will look something like:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Trying...Connected to doofy.maroon.com.Escape character is '^]'.IRIX System V.3 (sgi)login:</PRE></BLOCKQUOTE><PCLASS="para">If the resolver falls back to using<ICLASS="filename">/etc/hosts</I>, though, our<ICLASS="envar">HOSTALIASES</I> won't have any effect. So we should alsokeep a similar alias in <ICLASS="filename">/etc/hosts</I>.</P><PCLASS="para">With time, and perhaps a little instruction, the users willstart to associate the full domain name they see in the<KBDCLASS="command">telnet</KBD> banner with the bulletin board theyuse.</P><PCLASS="para">With <ICLASS="envar">HOSTALIASES</I>, if you know the domain namesyour users are likely to have trouble with, you can save them a littlefrustration. If you don't know which hosts they're trying to get to,you can let your users create their own alias files, and have eachpoint the <ICLASS="envar">HOSTALIASES</I> variable in his shell startupfile to his personal alias file.<ACLASS="indexterm"NAME="AUTOID-5343"></A><ACLASS="indexterm"NAME="AUTOID-5344"></A><ACLASS="indexterm"NAME="AUTOID-5345"></A><ACLASS="indexterm"NAME="AUTOID-5346"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_02.htm"TITLE="6.2 Sample Resolver Configurations"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.2 Sample Resolver Configurations"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="DNS &amp; BIND"><IMGSRC="../gifs/txthome.gif"ALT="DNS &amp; BIND"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_04.htm"TITLE="6.4 Vendor-Specific Options"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.4 Vendor-Specific Options"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.2 Sample Resolver Configurations</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.4 Vendor-Specific Options</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>