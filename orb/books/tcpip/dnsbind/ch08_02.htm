<HTML><HEAD><TITLE>[Chapter 8] 8.2 Adding More Name Servers</TITLE><METANAME="DC.title"CONTENT="DNS &amp; BIND"><METANAME="DC.creator"CONTENT="Cricket Liu &amp; Paul Albitz"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:33:23Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-512-2"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Growing Your Domain"><LINKREL="prev"HREF="ch08_01.htm"TITLE="8.1 How Many Name Servers?"><LINKREL="next"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="DNS &amp; BIND"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="DNS &amp; BIND"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/dsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_01.htm"TITLE="8.1 How Many Name Servers?"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.1 How Many Name Servers?"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Growing Your Domain</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.3 Registering Name Servers"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="AUTOID-8612">8.2 Adding More Name Servers</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-8-ADDING-NAME-SERVERS"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-NAME-SERVERS-ADDING-AND-DELETING"></A>When you need to create new name servers for your domain, the simplestrecourse is to add slaves.  You already know how&nbsp;- we went over itin <ACLASS="xref"HREF="ch04_01.htm"TITLE="Setting Up BIND">Chapter 4</A>&nbsp;- and once you've set one slave up,cloning it is a piece of cake.  But you can run into troubleindiscriminately adding slaves.</P><PCLASS="para">If you run a large number of slave servers for a zone, theprimary master name server can take quite a beating just keeping upwith the slaves' polling to check that their data are current. Thereare a number of courses of action to take for this problem:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Make more primary master name servers.</P></LI><LICLASS="listitem"><PCLASS="para">Increase the refresh interval so that the slaves don't check sooften.</P></LI><LICLASS="listitem"><PCLASS="para">Direct some of the slave name servers to load from other slavename servers.</P></LI><LICLASS="listitem"><PCLASS="para">Create caching-only name servers (described later).</P></LI><LICLASS="listitem"><PCLASS="para">Create <SPANCLASS="quote">"partial-slave"</SPAN> name servers (also describedlater).</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-8635">8.2.1 Primary Master and Slave Servers</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-8-PRIMARY-NAME-SERVERS-ADDING"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-RDIST-COMMAND"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-DISTFILE-FILE"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-SLAVE-SECONDARY-NAME-SERVERS-ADDING"></A>Creating more primaries will mean extra work for you, since you haveto keep the db files synchronized manually. Whether or not this ispreferable to your other alternatives is your call. You can use toolslike <KBDCLASS="command">rdist</KBD> to simplify the process of distributingthe files. A <ICLASS="filename">distfile</I> to synchronize filesbetween primaries might be as simple as the following[6]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] The file <KBDCLASS="command">rdist</KBD> reads to find out which filesto update.</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen">dup-primary:# copy named.boot file to dup'd primary/etc/named.conf  -&gt; wormhole    install ;# copy contents of /usr/local/named (db files, etc.) to dup'd primary/usr/local/named -&gt; wormhole    install ;</PRE></BLOCKQUOTE><PCLASS="para">or for multiple primaries:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">dup-primary:primaries =  ( wormhole carrie )/etc/named.conf  -&gt; {$primaries}    install ;/usr/local/named -&gt; {$primaries}    install ;</PRE></BLOCKQUOTE><PCLASS="para">You can even have <KBDCLASS="command">rdist</KBD> trigger your nameserver's reload using the<ACLASS="indexterm"NAME="AUTOID-8658"></A><ICLASS="option">special</I> option by adding lines like:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">special /usr/local/named/* &quot;kill -HUP `cat /etc/named.pid`&quot; ;special /etc/named.conf &quot;kill -HUP `cat /etc/named.pid`&quot; ;</PRE></BLOCKQUOTE><PCLASS="para">These tell <KBDCLASS="command">rdist</KBD> to execute the quotedcommand if any of the files change.</P><PCLASS="para">Increasing your name servers'<ACLASS="indexterm"NAME="AUTOID-8665"></A>refresh interval is another option. This slows down the propagation ofnew information, however. In some cases, this is not a problem. If yourebuild your <SPANCLASS="acronym">DNS</SPAN> data with <KBDCLASS="command">h2n</KBD>only once each day at 1 a.m.  (run from <KBDCLASS="command">cron</KBD>) andthen allow six hours for the data to distribute, all the slaves willbe current by 7 a.m.[7] That may be acceptable to your user population. See thesection called <SPANCLASS="quote">"Changing Other <SPANCLASS="acronym">SOA</SPAN>Values"</SPAN> later in this chapter for more detail.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] And, of course, if you're using <SPANCLASS="acronym">BIND</SPAN> 8's<SPANCLASS="acronym">NOTIFY</SPAN>, they'll catch up much sooner thanthat.</P></BLOCKQUOTE><PCLASS="para">You can even have some of your slaves load from other slaves.<ACLASS="indexterm"NAME="AUTOID-8677"></A>Slave name servers <EMCLASS="emphasis">can</EM> load zone data from otherslave name servers instead of loading from a primary name server. Theslave name server can't tell if it is loading from a primary oranother slave. It's only important that the name server serving thezone transfer is authoritative for the zone.  There's no trick toconfiguring this. Instead of specifying the <SPANCLASS="acronym">IP</SPAN>address of the primary in the slave's conf file, you simply specifythe <SPANCLASS="acronym">IP</SPAN> address of another slave.</P><PCLASS="para">Here are the contents of the file <ICLASS="filename">named.conf</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">// this slave updates from wormhole, another// slavezone &quot;movie.edu&quot; {                type slave;                file &quot;db.movie&quot;;                masters { 192.249.249.1; };};</PRE></BLOCKQUOTE><PCLASS="para">For a <SPANCLASS="acronym">BIND</SPAN> 4 server, this would look slightlydifferent.</P><PCLASS="para">Here are the contents of the file <ICLASS="filename">named.boot</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; this slave updates from wormhole, another slavesecondary   movie.edu   192.249.249.1   db.movie</PRE></BLOCKQUOTE><PCLASS="para">When you go to this second level of distribution, though, it cantake up to twice as long for the data to percolate from the primaryname server to all the slaves. Remember that the <ICLASS="firstterm">refreshinterval</I> is the period after which the slave servers willcheck to make sure that their zone data are still current.  Therefore,it can take the first-level slave servers the entire refresh intervalbefore they get their copy of the zone files from the primary masterserver. Similarly, it can take the second-level slave servers theentire refresh interval to get their copy of the files from thefirst-level slave servers. The propagation time from the primarymaster server to all of the slave servers can therefore be twice therefresh interval.</P><PCLASS="para">One way to avoid this to use <SPANCLASS="acronym">BIND</SPAN> 8's<SPANCLASS="acronym">NOTIFY</SPAN> feature.  This is on by default, and willtrigger zone transfers soon after the zone is updated on the primarymaster.  Unfortunately, it only works on version 8<SPANCLASS="acronym">BIND</SPAN> slaves.[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] And, incidentally, on the Microsoft <SPANCLASS="acronym">DNS</SPAN>Server.</P></BLOCKQUOTE><PCLASS="para">If you decide to configure your network with two (or more) tiersof slave servers, be careful to avoid updating loops. If we were toconfigure <ICLASS="systemitem.sitename">wormhole</I> to updatefrom <ICLASS="systemitem.sitename">diehard</I>, and then weaccidentally configured <ICLASS="systemitem.sitename">diehard</I> to update from <ICLASS="systemitem.sitename">wormhole</I>, neither would ever get datafrom the primary. They would merely check their out-of-date serialnumbers against each other, and perpetually decide that they were bothup-to-date.<ACLASS="indexterm"NAME="AUTOID-8705"></A><ACLASS="indexterm"NAME="AUTOID-8706"></A><ACLASS="indexterm"NAME="AUTOID-8707"></A><ACLASS="indexterm"NAME="AUTOID-8708"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-8709">8.2.2 Caching-Only Servers</A></H3><PCLASS="para">Creating<ACLASS="indexterm"NAME="AUTOID-8712"></A><ACLASS="indexterm"NAME="AUTOID-8715"></A><ICLASS="firstterm">caching-only name servers</I> is anotheralternative when you need more servers. Caching-only name servers arename servers not authoritative for any domains (except <ICLASS="systemitem.sitename">0.0.127.in-addr.arpa</I>).  The name doesn'timply that primary and slave name servers don't cache&nbsp;- theydo. The name means that the <EMCLASS="emphasis">only</EM> function thisserver performs is looking up data and caching them. As with primaryand slave name servers, a caching-only name server needs a<ICLASS="filename">db.cache</I> file and a<ICLASS="filename">db.127.0.0</I> file. The<ICLASS="filename">named.conf</I> file for a caching-only servercontains these lines:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options {                directory &quot;/usr/local/named&quot;;                                                   // or your data directory};zone &quot;0.0.127.in-addr.arpa&quot; {                type master;                file &quot;db.127.0.0&quot;;};zone . {                type hint;                file &quot;db.cache&quot;;};</PRE></BLOCKQUOTE><PCLASS="para">On a <SPANCLASS="acronym">BIND</SPAN> 4 server, the<ICLASS="filename">named.boot</I> file looks like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">directory /usr/local/named  ; or your data directoryprimary 0.0.127.in-addr.arpa  db.127.0.0  ; for loopback addresscache   .                     db.cache</PRE></BLOCKQUOTE><PCLASS="para">A caching-only name server can look up names inside and outsideyour zone, as can primary and slave name servers. The difference isthat when a caching-only name server initially looks up a name withinyour zone, it ends up asking one of the primary or slave name serversfor your zone for the answer. A primary or slave would answer the samequestion out of its authoritative data. Which primary or slave doesthe caching-only server ask? As with name servers outside of yourdomain, it finds out which name servers serve your zone from the nameserver for your parent zone. Is there any way to prime a caching-onlyname server's cache so it knows which hosts run primary and slave nameservers for your zone? No, there isn't.  You can't use<ICLASS="filename">db.cache</I>&nbsp;- the <ICLASS="filename">db.cache</I>file is only for <EMCLASS="emphasis">root</EM> name server hints.</P><PCLASS="para">A caching-only name server's real value comes after it builds upits cache. Each time it queries an authoritative name server andreceives an answer, it caches the records in the answer. Over time,the cache will grow to include the information most often requested bythe resolvers querying the caching-only name server. And you avoid theoverhead of zone transfers&nbsp;- a caching-only name server doesn'tneed to do them.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-8734">8.2.3 Partial-Slave Servers</A></H3><PCLASS="para">In between a caching-only name server and a slave name server isanother variation: a name server that is a slave for only a few of thelocal zones. We call this a<ACLASS="indexterm"NAME="DNS3-IDX-8-PARTIAL-SLAVE-NAME-SERVERS"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-NAME-SERVERS-PARTIAL-SLAVE-SERVERS"></A><ACLASS="indexterm"NAME="DNS3-IDX-8-SLAVE-SECONDARY-NAME-SERVERS-PARTIAL-SLAVE-SERVERS"></A><ICLASS="firstterm">partial-slave name server</I> (and probably nobodyelse does). Suppose <ICLASS="systemitem.sitename">movie.edu</I>had twenty class C networks (and a corresponding twenty <ICLASS="systemitem.sitename">in-addr.arpa</I> zones).  Instead of creatinga slave server for all 21 zones (all the <ICLASS="systemitem.sitename">in-addr.arpa</I> subdomains plus <ICLASS="systemitem.sitename">movie.edu</I>), we could create apartial-slave server for <ICLASS="systemitem.sitename">movie.edu</I> and only those <ICLASS="systemitem.sitename">in-addr.arpa</I> zones the host itself isin. If the host had two network interfaces, then its name server wouldbe a slave for three zones: <ICLASS="systemitem.sitename">movie.edu</I> and the two <ICLASS="systemitem.sitename">in-addr.arpa</I> zones.</P><PCLASS="para">Let's say we scare up the hardware for another nameserver. We'll call the new host <ICLASS="systemitem.sitename">zardoz.movie.edu</I>, with<SPANCLASS="acronym">IP</SPAN> addresses 192.249.249.9 and 192.253.253.9. We'llcreate a partial-slave name server on <ICLASS="systemitem.sitename">zardoz</I>, with this<ICLASS="filename">named.conf</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options {                directory &quot;/usr/local/named&quot;;};zone &quot;movie.edu&quot; {                type slave;                file &quot;db.movie&quot;;                masters { 192.249.249.3; };};zone &quot;249.249.192.in-addr.arpa&quot; {                type slave;                file &quot;db.192.249.249&quot;;                masters { 192.249.249.3; };zone &quot;253.253.192.in-addr.arpa&quot; {                type slave;                file &quot;db.192.253.253&quot;;                masters { 192.249.249.3; };};zone &quot;0.0.127.in-addr.arpa&quot;;                type master;                file &quot;db.127.0.0&quot;;};zone . {                type hint;                file &quot;db.cache&quot;;};</PRE></BLOCKQUOTE><PCLASS="para">For a <SPANCLASS="acronym">BIND</SPAN> 4 server, the<ICLASS="filename">named.boot</I> file would look like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">directory   /usr/local/namedsecondary   movie.edu                192.249.249.3 db.moviesecondary   249.249.192.in-addr.arpa 192.249.249.3 db.192.249.249secondary   253.253.192.in-addr.arpa 192.249.249.3 db.192.253.253primary     0.0.127.in-addr.arpa     db.127.0.0cache       .                        db.cache</PRE></BLOCKQUOTE><PCLASS="para">This server is a slave for <ICLASS="systemitem.sitename">movie.edu</I> and only two of the 20<ICLASS="systemitem.sitename">in-addr.arpa</I> zones. A<SPANCLASS="quote">"full"</SPAN> slave would have 21 different<ICLASS="structfield">zone</I> statements in<ICLASS="filename">named.conf</I>.</P><PCLASS="para">What's so useful about a partial-slave name server? They're notmuch work to administer, because their <ICLASS="filename">named.conf</I>files don't change much. On a server authoritative for all the<ICLASS="systemitem.sitename">in-addr.arpa</I> zones, we'd needto add and delete <ICLASS="systemitem.sitename">in-addr.arpa</I> zones (and theircorresponding entries in <ICLASS="filename">named.conf</I>) asour network changed. That can be a surprising amount of work on alarge network.</P><PCLASS="para">A partial slave can still answer most of the queries itreceives, though. Most of these queries will be for data in the<ICLASS="systemitem.sitename">movie.edu</I> and two <ICLASS="systemitem.sitename">in-addr.arpa</I> zones.  Why? Because most ofthe hosts querying the name server are on the two networks it'sconnected to, 192.249.249 and 192.253.253. And those hosts probablycommunicate primarily with other hosts on their own network. Thisgenerates queries for data within the <ICLASS="systemitem.sitename">in-addr.arpa</I> zone that corresponds to thelocal<ACLASS="indexterm"NAME="AUTOID-8779"></A><ACLASS="indexterm"NAME="AUTOID-8780"></A><ACLASS="indexterm"NAME="AUTOID-8781"></A>network.<ACLASS="indexterm"NAME="AUTOID-8782"></A><ACLASS="indexterm"NAME="AUTOID-8783"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_01.htm"TITLE="8.1 How Many Name Servers?"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.1 How Many Name Servers?"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="DNS &amp; BIND"><IMGSRC="../gifs/txthome.gif"ALT="DNS &amp; BIND"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.3 Registering Name Servers"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.1 How Many Name Servers?</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.3 Registering Name Servers</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>