<HTML><HEAD><TITLE>[Chapter 8] 8.4 Changing TTLs</TITLE><METANAME="DC.title"CONTENT="DNS &amp; BIND"><METANAME="DC.creator"CONTENT="Cricket Liu &amp; Paul Albitz"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:33:49Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-512-2"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Growing Your Domain"><LINKREL="prev"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"><LINKREL="next"HREF="ch08_05.htm"TITLE="8.5 Planning for Disasters"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="DNS &amp; BIND"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="DNS &amp; BIND"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/dsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.3 Registering Name Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Growing Your Domain</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_05.htm"TITLE="8.5 Planning for Disasters"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.5 Planning for Disasters"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="AUTOID-8863">8.4 Changing <SPANCLASS="acronym">TTL</SPAN>s</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="CH08.TTLCHANGING1"></A><ACLASS="indexterm"NAME="CH08.TTLCHANGING2"></A><ACLASS="indexterm"NAME="CH08.TTLCHANGING3"></A><ACLASS="indexterm"NAME="CH08.TTLCHANGING4"></A>An experienced domain administrator needs to know how to set the timeto live on his zone's data to his best advantage. The<ICLASS="firstterm"><SPANCLASS="acronym">TTL</SPAN></I> on a resource record,remember, is the time in seconds any server can cache that record. Soif the <SPANCLASS="acronym">TTL</SPAN> for a particular resource record is 3600(seconds), and a server outside your domain caches that record, itwill have to remove the entry from its cache after an hour. If itneeds the same data after the hour is up, it'll have to query yourname servers again.</P><PCLASS="para">When we introduced <SPANCLASS="acronym">TTL</SPAN>s, we emphasized thatyour choice of a <SPANCLASS="acronym">TTL</SPAN> would dictate how currentyou'd keep copies of your data, at the cost of increased load on yourname servers. A low <SPANCLASS="acronym">TTL</SPAN> would mean that nameservers outside your domain would have to get data from your nameservers often, and would therefore keep current. On the other hand,your name servers would be peppered by their queries.</P><PCLASS="para">You don't <EMCLASS="emphasis">have</EM> to choose a<SPANCLASS="acronym">TTL</SPAN> once and for all, though. You can&nbsp;- andexperienced administrators do&nbsp;- change <SPANCLASS="acronym">TTL</SPAN>speriodically to suit your needs.</P><PCLASS="para">Suppose we know that one of our hosts is about to be moved toanother network.  This host is the <ICLASS="systemitem.sitename">movie.edu</I> film library. It houses a largecollection of files our site makes available to hosts on theInternet. During normal operation, outside name servers cache theaddress of our host according to the minimum <SPANCLASS="acronym">TTL</SPAN> inthe <SPANCLASS="acronym">SOA</SPAN> record. (We set the <ICLASS="systemitem.sitename">movie.edu</I> <SPANCLASS="acronym">TTL</SPAN> to beone day in our sample files.) A name server caching the old addressrecord just before the change could have the wrong address for as longas a day.  A loss of connectivity for a day is unacceptable,though. What can we do to minimize the loss of connectivity? We canlower the <SPANCLASS="acronym">TTL</SPAN>, so that outside servers cache theaddress record for a shorter period. By reducing the<SPANCLASS="acronym">TTL</SPAN>, we force the outside servers to update theirdata more frequently, which means that any changes we make when weactually move the system will be propagated to the outside worldquickly. How long can we make the <SPANCLASS="acronym">TTL</SPAN>?Unfortunately, we can't use a <SPANCLASS="acronym">TTL</SPAN> of zero, whichshould mean <SPANCLASS="quote">"don't cache this record at all."</SPAN> Some older<SPANCLASS="acronym">BIND</SPAN> 4 name servers can't return records with a<SPANCLASS="acronym">TTL</SPAN> of zero, instead returning null answers or<SPANCLASS="acronym">SERVFAIL</SPAN> errors.  Small <SPANCLASS="acronym">TTL</SPAN>s,like 30 seconds, are okay, though. The easiest change is to lower the<SPANCLASS="acronym">TTL</SPAN> in the <SPANCLASS="acronym">SOA</SPAN> record in the<ICLASS="filename">db.movie</I> file. If you don't place an explicit<SPANCLASS="acronym">TTL</SPAN> on resource records in the db files, the nameserver applies this <ICLASS="firstterm">minimum<SPANCLASS="acronym">TTL</SPAN></I> from the <SPANCLASS="acronym">SOA</SPAN>record to each resource record. If you lower the minimum<SPANCLASS="acronym">TTL</SPAN> field, though, the new, lower<SPANCLASS="acronym">TTL</SPAN> applies to all addresses, not just the addressof the host being moved. The drawback to this approach is that yourname server will be answering a lot more queries, since the queryingservers will cache <EMCLASS="emphasis">all</EM> the data in your zone fora shorter period. A better alternative is to put a different<SPANCLASS="acronym">TTL</SPAN> only on the affected address record.</P><PCLASS="para">To add an explicit <SPANCLASS="acronym">TTL</SPAN> on an individualresource record, place it before the <SPANCLASS="acronym">IN</SPAN> in theclass field. The <SPANCLASS="acronym">TTL</SPAN> value is in seconds. Here's anexample of an explicit <SPANCLASS="acronym">TTL</SPAN> from<ICLASS="filename">db.movie</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cujo  3600 IN  A    192.253.253.5  ; explicit TTL of 1 hour</PRE></BLOCKQUOTE><PCLASS="para">If you're observant, you may have noticed a potential problem:the explicit <SPANCLASS="acronym">TTL</SPAN> on <ICLASS="systemitem.sitename">cujo</I>'s address is 3600 seconds, but the<SPANCLASS="acronym">TTL</SPAN> field in the<ACLASS="indexterm"NAME="AUTOID-8927"></A><SPANCLASS="acronym">SOA</SPAN> record&nbsp;- ostensibly the<EMCLASS="emphasis">minimum</EM> <SPANCLASS="acronym">TTL</SPAN> for thezone&nbsp;- is <EMCLASS="emphasis">higher</EM>.  Which takesprecedence?</P><PCLASS="para">If <SPANCLASS="acronym">BIND</SPAN> followed the <SPANCLASS="acronym">DNS</SPAN><SPANCLASS="acronym">RFC</SPAN>s, the <SPANCLASS="acronym">TTL</SPAN> field in the<SPANCLASS="acronym">SOA</SPAN> record would really define the minimum<SPANCLASS="acronym">TTL</SPAN> value for all resource records in thezone. Thus, you could only specify explicit <SPANCLASS="acronym">TTL</SPAN>slarger than this minimum. <SPANCLASS="acronym">BIND</SPAN> name servers don'twork this way, though. In other words, in <SPANCLASS="acronym">BIND</SPAN>,<SPANCLASS="quote">"minimum"</SPAN> is not really minimum. Instead,<SPANCLASS="acronym">BIND</SPAN> implements the minimum <SPANCLASS="acronym">TTL</SPAN>field in the <SPANCLASS="acronym">SOA</SPAN> record as a <SPANCLASS="quote">"default"</SPAN><SPANCLASS="acronym">TTL</SPAN>. If there is no <SPANCLASS="acronym">TTL</SPAN> on arecord, the minimum applies. If there is a <SPANCLASS="acronym">TTL</SPAN> onthe resource record, <SPANCLASS="acronym">BIND</SPAN> allows it even if it issmaller than the minimum. That one record is sent out in responseswith the smaller <SPANCLASS="acronym">TTL</SPAN>, while all other records aresent out with the <SPANCLASS="quote">"minimum"</SPAN> <SPANCLASS="acronym">TTL</SPAN> fromthe <SPANCLASS="acronym">SOA</SPAN> record.</P><PCLASS="para">You should also know that when giving out answers, a slavesupplies the same <SPANCLASS="acronym">TTL</SPAN> a primary does&nbsp;- that is,if a primary gives out a <SPANCLASS="acronym">TTL</SPAN> of 86400 for aparticular record, a slave will, too. The slave doesn't decrement the<SPANCLASS="acronym">TTL</SPAN> according to how long it has been since itloaded the zone. So, if the <SPANCLASS="acronym">TTL</SPAN> of a singleresource record is set smaller than the <SPANCLASS="acronym">SOA</SPAN>minimum, both the primary and slave name servers give out the resourcerecord with the same, smaller <SPANCLASS="acronym">TTL</SPAN>. If the slavename server has reached the expiration time for the zone, it expiresthe whole zone. It will never expire an individual resource recordwithin a zone.</P><PCLASS="para">So <SPANCLASS="acronym">BIND</SPAN> does allow you to put a small<SPANCLASS="acronym">TTL</SPAN> on an individual resource record if you knowthat the data is going to change shortly. Thus, any server cachingthat data only caches it for a brief time. Unfortunately, while<SPANCLASS="acronym">BIND</SPAN> makes tagging records with a small<SPANCLASS="acronym">TTL</SPAN> possible, most domain administrators don'tspend the time to do it. When a host changes address, you often loseconnectivity to it for a while.</P><PCLASS="para">More often than not, the host having its address changed is notone of the main hubs on the site, so the outage impacts few people. Ifone of the mail hubs or a major <KBDCLASS="command">ftp</KBD>repository&nbsp;- like the film library&nbsp;- is moving, though, aday's loss of connectivity may be unacceptable. In cases like this,the domain administrator should plan ahead and reduce the<SPANCLASS="acronym">TTL</SPAN> on the data to be changed.</P><PCLASS="para">Remember that the <SPANCLASS="acronym">TTL</SPAN> on the affected datawill need to be lowered <EMCLASS="emphasis">before</EM> the change takesplace. Reducing the <SPANCLASS="acronym">TTL</SPAN> on a workstation's addressrecord and changing the workstation's address simultaneously may doyou little or no good; the address record may have been cached minutesbefore you made the change, and may linger until the old<SPANCLASS="acronym">TTL</SPAN> times out. <EMCLASS="emphasis">And</EM> be sure tofactor in the time it'll take your slaves to load from yourprimary. For example, if your minimum <SPANCLASS="acronym">TTL</SPAN> is 12hours, and your refresh interval is 3 hours, be sure to lower the<SPANCLASS="acronym">TTL</SPAN>s at least 15 hours ahead of time, so that bythe time you move the host, all the long <SPANCLASS="acronym">TTL</SPAN>records will have timed out.  Of course, if all of your slaves are<SPANCLASS="acronym">BIND</SPAN> 8 servers that use <SPANCLASS="acronym">NOTIFY</SPAN>,the slaves shouldn't take the full refresh interval to synchup.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-8983">8.4.1 Changing Other <SPANCLASS="acronym">SOA</SPAN> Values</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-8987"></A>We briefly mentioned increasing the refresh interval as a way ofoffloading your primary name server.  Let's discuss refresh in alittle more detail and go over the remaining <SPANCLASS="acronym">SOA</SPAN>values, too.</P><PCLASS="para">The<ACLASS="indexterm"NAME="AUTOID-8992"></A><ACLASS="indexterm"NAME="AUTOID-8994"></A><ACLASS="indexterm"NAME="AUTOID-8996"></A><ICLASS="firstterm">refresh</I> value, you'll remember, controls howoften a slave checks whether its data is up-to-date. The<ICLASS="firstterm">retry</I> value then becomes the refresh time afterthe first failure to reach a master name server.  The<ICLASS="firstterm">expire</I> value determines how long data can beheld before it's discarded, when a master is unreachable. Finally, the<ACLASS="indexterm"NAME="AUTOID-9001"></A><ICLASS="firstterm">minimum <SPANCLASS="acronym">TTL</SPAN></I> sets how longdomain information may be cached.</P><PCLASS="para">Suppose we've decided we want the slaves to pick up newinformation every hour instead of every three hours.  We change therefresh value to 3600 in each of the db files (or with the<ICLASS="option">-o</I> option to <KBDCLASS="command">h2n</KBD>).  Since theretry is related to refresh, we should probably reduce retry,too&nbsp;- to every 15 minutes or so. Typically, the retry is less thanthe refresh, but that's not required.[10] Although lowering the refresh value will speed up thedistribution of data, it will also increase the load on the serverbeing loaded from since the slaves will check more often. The addedload isn't much, though; each slave makes a single<SPANCLASS="acronym">SOA</SPAN> query during each zone's refresh interval tocheck its master's copy of the zone. So with two slave name servers,changing the refresh time from three hours to one hour will onlygenerate four more queries (per zone) to the primary in any three-hourspan.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Actually, <SPANCLASS="acronym">BIND</SPAN> 8 servers will warn you ifrefresh is set to less than ten times the retry interval.</P></BLOCKQUOTE><PCLASS="para">If all of your slaves run <SPANCLASS="acronym">BIND</SPAN> 8 and you use<SPANCLASS="acronym">NOTIFY</SPAN>, of course, refresh doesn't mean as much.But if you have even one <SPANCLASS="acronym">BIND</SPAN> 4 slave, your zonedata will take up to the refresh interval to reach it.</P><PCLASS="para">Some older versions of <SPANCLASS="acronym">BIND</SPAN> slaves stoppedanswering queries during a zone load. As a result,<SPANCLASS="acronym">BIND</SPAN> was modified to spread out the zone loads,reducing the periods of unavailability. So, even if you set a lowrefresh interval, your slaves may not check exactly as often as yourequest. <SPANCLASS="acronym">BIND</SPAN> name servers attempt a certain numberof zone loads and then wait 15 minutes before trying another batch.On the other hand, <SPANCLASS="acronym">BIND</SPAN> 4.9 and later may alsorefresh <EMCLASS="emphasis">more often</EM> than the refreshinterval. These newer <SPANCLASS="acronym">BIND</SPAN>s will wait a randomnumber of seconds between one-half the refresh interval and the fullrefresh interval to check serial numbers.</P><PCLASS="para">Expiration times on the order of a week are common&nbsp;- longerif you frequently have problems reaching your updating source. Theexpiration time should always be much larger than the retry andrefresh interval; if the expire time is smaller than the refreshinterval, your slaves will expire their data before trying to load newdata.  <SPANCLASS="acronym">BIND</SPAN> 8 will complain if you set an expiretime less than refresh plus retry, less than twice retry, less thanseven days or greater than six months.  Choosing an expire time thatmeets all <SPANCLASS="acronym">BIND</SPAN> 8's criteria is a good idea in mostsituations.</P><PCLASS="para">If your data don't change much, you might consider raising theminimum <SPANCLASS="acronym">TTL</SPAN>. The <SPANCLASS="acronym">SOA</SPAN>'s minimum<SPANCLASS="acronym">TTL</SPAN> value is typically one day (86400 seconds), butyou can make it longer. One week is about the longest value that makessense for a <SPANCLASS="acronym">TTL</SPAN>. Longer than that and you may findyourself unable to change bad, cached data in a reasonable amount oftime.<ACLASS="indexterm"NAME="AUTOID-9031"></A><ACLASS="indexterm"NAME="AUTOID-9032"></A><ACLASS="indexterm"NAME="AUTOID-9033"></A><ACLASS="indexterm"NAME="AUTOID-9034"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_03.htm"TITLE="8.3 Registering Name Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.3 Registering Name Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="DNS &amp; BIND"><IMGSRC="../gifs/txthome.gif"ALT="DNS &amp; BIND"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_05.htm"TITLE="8.5 Planning for Disasters"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.5 Planning for Disasters"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.3 Registering Name Servers</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.5 Planning for Disasters</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>