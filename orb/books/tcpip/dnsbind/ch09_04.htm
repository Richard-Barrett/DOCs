<HTML><HEAD><TITLE>[Chapter 9] 9.4 How to Become a Parent: Creating Subdomains</TITLE><METANAME="DC.title"CONTENT="DNS &amp; BIND"><METANAME="DC.creator"CONTENT="Cricket Liu &amp; Paul Albitz"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:34:31Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-512-2"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch09_01.htm"TITLE="9. Parenting"><LINKREL="prev"HREF="ch09_03.htm"TITLE="9.3 What to Name Your Children"><LINKREL="next"HREF="ch09_05.htm"TITLE="9.5 Subdomains of in-addr.arpa Domains"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="DNS &amp; BIND"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="DNS &amp; BIND"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/dsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_03.htm"TITLE="9.3 What to Name Your Children"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.3 What to Name Your Children"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9<BR>Parenting</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_05.htm"TITLE="9.5 Subdomains of in-addr.arpa Domains"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.5 Subdomains of in-addr.arpa Domains"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="AUTOID-9419">9.4 How to Become a Parent: Creating Subdomains</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-9-PARENTING-CREATING-SUBDOMAINS"></A><ACLASS="indexterm"NAME="DNS3-IDX-9-DOMAINS-PARENTING-CREATING-SUBDOMAINS"></A><ACLASS="indexterm"NAME="DNS3-IDX-9-ADDING-SUBDOMAINS"></A><ACLASS="indexterm"NAME="AUTOID-9432"></A>Once you've decided on names, creating child domains is easy. Butfirst, you've got to decide how much autonomy you're going to giveyour subdomains. Odd that you have to decide that before you actuallycreate them....</P><PCLASS="para">Thus far, we've assumed that if you create a subdomain, you'llwant to delegate it to another organization, thereby making it aseparate zone from the parent. Is this always true, though? Notnecessarily.</P><PCLASS="para">Think carefully about how the computers and networks within asubdomain are managed when choosing whether or not to delegate it. Itdoesn't make sense to delegate a subdomain to an entity that doesn'tmanage its own hosts or nets.  For example, in a large corporation,the personnel department probably doesn't run its own computers: the<SPANCLASS="acronym">MIS</SPAN> (Management Information Systems) or<SPANCLASS="acronym">IT</SPAN> (Information Technology&nbsp;- same animal as<SPANCLASS="acronym">MIS</SPAN>) department manages them. So while you may wantto create a subdomain for personnel, delegating management for thatsubdomain to them is probably wasted effort.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9440">9.4.1 Creating a Subdomain in the Parent's Zone</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-9-ZONES-CREATING-SUBDOMAINS-IN"></A>You can <EMCLASS="emphasis">create</EM> a subdomain without delegating it,however. How? By creating resource records that refer to the subdomainwithin the parent's zone. For example, <ICLASS="systemitem.sitename">movie.edu</I> has a host that stores itscomplete database of employee and student records, <ICLASS="systemitem.sitename">brazil</I>. To put <ICLASS="systemitem.sitename">brazil</I> in the <ICLASS="systemitem.sitename">personnel.movie.edu</I> domain, we could addrecords to <ICLASS="filename">db.movie</I>.</P><PCLASS="para">Partial contents of file<ICLASS="filename">db.movie</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">brazil.personnel      IN  A      192.253.253.10                      IN  MX     10 brazil.personnel.movie.edu.                      IN  MX     100 postmanrings2x.movie.edu.employeedb.personnel  IN  CNAME  brazil.personnel.movie.edu.db.personnel          IN  CNAME  brazil.personnel.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">Now users can log into <ICLASS="systemitem.sitename">db.personnel.movie.edu</I> to get to theemployee database. We could make this setup especially convenient forpersonnel department employees by adding <ICLASS="systemitem.sitename">personnel.movie.edu</I> to their<SPANCLASS="acronym">PC</SPAN>s' or workstations' search lists; they'd onlyneed to type <KBDCLASS="command">telnet db</KBD> to get to the righthost.</P><PCLASS="para">We can make this more convenient for ourselves by using the<ICLASS="structfield">$ORIGIN</I> directive to change the origin to<ICLASS="systemitem.sitename">personnel.movie.edu</I> so thatwe can use shorter names.</P><PCLASS="para">Partial contents of file <ICLASS="filename">db.movie</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ORIGIN personnel.movie.edu.brazil     IN A     192.253.253.10           IN MX    10 brazil.personnel.movie.edu.           IN MX    100 postmanrings2x.movie.edu.employeedb IN CNAME brazil.personnel.movie.edu.db         IN CNAME brazil.personnel.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">If we had a few more records, we could create a separate filefor them and use <ICLASS="structfield">$INCLUDE</I> to include itinto <ICLASS="filename">db.movie</I> and change the origin at the sametime.</P><PCLASS="para">Notice there's no <SPANCLASS="acronym">SOA</SPAN> record for <ICLASS="systemitem.sitename">personnel.movie.edu</I>?  There's no need forone, since the <ICLASS="systemitem.sitename">movie.edu</I><SPANCLASS="acronym">SOA</SPAN> record indicates the start of authority for theentire <ICLASS="systemitem.sitename">movie.edu</I> zone.  Sincethere's no delegation to <ICLASS="systemitem.sitename">personnel.movie.edu</I>, it's part of the<ICLASS="systemitem.sitename">movie.edu</I> zone.<ACLASS="indexterm"NAME="AUTOID-9477"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9478">9.4.2 Creating and Delegating a Subdomain</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-9-DELEGATION-SUBDOMAINS"></A>If you decide to delegate your subdomains, to send your children outinto the world, as it were, you'll need to do things a littledifferently.  We're in the process of doing it now, so you can followalong with us.</P><PCLASS="para">We need to create a new subdomain of <ICLASS="systemitem.sitename">movie.edu</I> for our special effectslab. We've chosen the name <ICLASS="systemitem.sitename">fx.movie.edu</I>&nbsp;- short, recognizable,unambiguous. Because we're delegating <ICLASS="systemitem.sitename">fx.movie.edu</I> to administrators in thelab, it'll be a separate zone.  The hosts <ICLASS="systemitem.sitename">bladerunner</I> and <ICLASS="systemitem.sitename">outland</I>, both within the special effectslab, will serve as the zone's name servers (<ICLASS="systemitem.sitename">bladerunner</I> will serve as the primarymaster). We've chosen to run two name servers for the domain forredundancy&nbsp;- a single <ICLASS="systemitem.sitename">fx.movie.edu</I> name server would be asingle point of failure that could effectively isolate the entirespecial effects lab. Since there aren't many hosts in the lab, though,we feel two name servers should be enough.</P><PCLASS="para">The special effects lab is on <ICLASS="systemitem.sitename">movie.edu</I>'s new 192.253.254subnet.</P><PCLASS="para">Partial contents of<ICLASS="filename">/etc/hosts</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">192.253.254.1 movie-gw.movie.edu movie-gw# fx primary192.253.254.2 bladerunner.fx.movie.edu bladerunner br# fx secondary192.253.254.3 outland.fx.movie.edu outland192.253.254.4 starwars.fx.movie.edu starwars192.253.254.5 empire.fx.movie.edu empire192.253.254.6 jedi.fx.movie.edu jedi</PRE></BLOCKQUOTE><PCLASS="para">First, we create a data file that includes records for all thehosts that will live in <ICLASS="systemitem.sitename">fx.movie.edu</I>.</P><PCLASS="para">Contents of file <ICLASS="filename">db.fx</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">@  IN  SOA  bladerunner.fx.movie.edu. hostmaster.fx.movie.edu. (            1       ; serial            10800   ; refresh every 3 hours            3600    ; retry every hour            604800  ; expire after a week            86400 ) ; minimum TTL of 1 day    IN  NS  bladerunner    IN  NS  outland; MX records for fx.movie.edu    IN  MX  10 starwars    IN  MX  100 wormhole.movie.edu.; starwars handles bladerunner's mail; wormhole is the movie.edu mail hubbladerunner  IN  A   192.253.254.2             IN  MX  10 starwars             IN  MX  100 wormhole.movie.edu.br           IN    CNAME    bladerunneroutland      IN  A   192.253.254.3             IN  MX  10 starwars             IN  MX  100 wormhole.movie.edu.starwars     IN  A   192.253.254.4             IN  MX  10 starwars             IN  MX  100 wormhole.movie.edu.empire       IN  A   192.253.254.5             IN  MX  10 starwars             IN  MX  100 wormhole.movie.edu.jedi         IN  A   192.253.254.6             IN  MX  10 starwars             IN  MX  100 wormhole.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">Then we create the <ICLASS="filename">db.192.253.254</I>file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">@  IN  SOA  bladerunner.fx.movie.edu. hostmaster.fx.movie.edu. (            1       ; serial            10800   ; refresh every 3 hours            3600    ; retry every hour            604800  ; expire after a week            86400 ) ; minimum TTL of 1 day       IN    NS    bladerunner.fx.movie.edu.       IN    NS    outland.fx.movie.edu.1      IN    PTR   movie-gw.movie.edu.2      IN    PTR   bladerunner.fx.movie.edu.3      IN    PTR   outland.fx.movie.edu.4      IN    PTR   starwars.fx.movie.edu.5      IN    PTR   empire.fx.movie.edu.6      IN    PTR   jedi.fx.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">Notice that the <SPANCLASS="acronym">PTR</SPAN> record for <ICLASS="systemitem.sitename">1.254.253.192.in-addr.arpa</I> points to<ICLASS="systemitem.sitename">movie-gw.movie.edu</I>. That'sintentional.  The router connects to the other <ICLASS="systemitem.sitename">movie.edu</I> networks, so it really doesn'tbelong in the <ICLASS="systemitem.sitename">fx.movie.edu</I>domain, and there's no requirement that all the <SPANCLASS="acronym">PTR</SPAN>records in <ICLASS="systemitem.sitename">254.253.192.in-addr.arpa</I> map into asingle domain&nbsp;- though they should correspond to the canonicalnames for those hosts.</P><PCLASS="para">Next, we create an appropriate <ICLASS="filename">named.conf</I>file for the primary master:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options {                directory &quot;/usr/local/named&quot;;};zone &quot;0.0.127.in-addr.arpa&quot; {                type master;                file &quot;db.127.0.0&quot;;};zone &quot;fx.movie.edu&quot; {                type master;                file &quot;db.fx&quot;;};zone &quot;254.253.192.in-addr.arpa&quot; {                type master;                file &quot;db.192.253.254&quot;;};zone &quot;.&quot; {                type hint;                file &quot;db.cache&quot;;};</PRE></BLOCKQUOTE><PCLASS="para">Here are the contents of the corresponding<ICLASS="filename">named.boot</I> file for BIND 4:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">directory     /usr/local/namedprimary       0.0.127.in-addr.arpa      db.127.0.0  ; loopbackprimary       fx.movie.edu              db.fxprimary       254.253.192.in-addr.arpa  db.192.253.254cache         .                         db.cache</PRE></BLOCKQUOTE><PCLASS="para">Of course, if we'd used <KBDCLASS="command">h2n</KBD>, we could havejust run:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>h2n -d fx.movie.edu -n 192.253.254 -s bladerunner -s outland \</B></CODE><CODECLASS="userinput"><B>-u hostmaster.fx.movie.edu -m 10:starwars -m 100:wormhole.movie.edu</B></CODE></PRE></BLOCKQUOTE><PCLASS="para">and saved ourselves some typing. <KBDCLASS="command">h2n</KBD> wouldhave created essentially the same <ICLASS="filename">db.fx</I>,<ICLASS="filename">db.192.253.254</I>, and<ICLASS="filename">named.boot</I> files.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9530"></A><ACLASS="indexterm"NAME="AUTOID-9533"></A>Now we need to configure <ICLASS="systemitem.sitename">bladerunner</I>'s resolver.  Actually, thismay not require creating <ICLASS="filename">resolv.conf</I>. If we set<ICLASS="systemitem.sitename">bladerunner</I>'s<KBDCLASS="command">hostname</KBD> to its new domain name, <ICLASS="systemitem.sitename">bladerunner.fx.movie.edu</I>, the resolvercan derive the local domain from the fully qualified domainname.</P><PCLASS="para">Next we start up the <KBDCLASS="command">named</KBD> process on<ICLASS="systemitem.sitename">bladerunner</I> and check for<KBDCLASS="command">syslog</KBD> errors.  If <KBDCLASS="command">named</KBD> startsokay, and there are no <KBDCLASS="command">syslog</KBD> errors that needtending to, we'll use <KBDCLASS="command">nslookup</KBD> to look up a fewhosts in <ICLASS="systemitem.sitename">fx.movie.edu</I> and in<ICLASS="systemitem.sitename">254.253.192.in-addr.arpa</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Default Server:  bladerunner.fx.movie.eduAddress:  192.253.254.2&gt; <CODECLASS="userinput"><B>jedi</B></CODE>Server:  bladerunner.fx.movie.eduAddress:  192.253.254.2Name:    jedi.fx.movie.eduAddress:  192.253.253.6&gt; <CODECLASS="userinput"><B>set type=mx</B></CODE>&gt; <CODECLASS="userinput"><B>empire</B></CODE>Server:  bladerunner.fx.movie.eduAddress:  192.253.254.2empire.fx.movie.edu     preference = 10,                        mail exchanger = starwars.fx.movie.eduempire.fx.movie.edu     preference = 100,                        mail exchanger = wormhole.movie.edustarwars.fx.movie.edu   internet address = 192.253.254.4 &gt; <CODECLASS="userinput"><B>ls fx.movie.edu</B></CODE>[bladerunner.fx.movie.edu]            1D IN SOA    bladerunner.fx.movie.edu.hostmaster.fx.movie.edu. (                    1               ; serial                    3H              ; refresh                    1H              ; retry                    1w1h            ; expire                    1D )            ; minimum            1D IN NS     bladerunner.fx.movie.edu.            1D IN NS     outland.fx.movie.edu.            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.br.fx.movie.edu.       1D IN CNAME bladerunner.fx.movie.edu.jedi.fx.movie.edu.     1D IN A     192.253.254.6            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.outland.fx.movie.edu.  1D IN A     192.253.254.3            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.starwars.fx.movie.edu. 1D IN A     192.253.254.4            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.bladerunner.fx.movie.edu.  1D IN A  192.253.254.2            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.empire.fx.movie.edu.     1D IN A     192.253.254.5            1D IN MX     10 starwars.fx.movie.edu.            1D IN MX     100 wormhole.movie.edu.fx.movie.edu.       1D IN SOA    bladerunner.fx.movie.edu.hostmaster.fx.movie.edu. (                    1               ; serial                    3H              ; refresh                    1H              ; retry                    1w1h            ; expire                    1D )            ; minimum &gt; <CODECLASS="userinput"><B>set type=ptr</B></CODE> &gt; <CODECLASS="userinput"><B>192.253.254.3</B></CODE>Server:  bladerunner.fx.movie.eduAddress:  192.253.254.23.254.253.192.in-addr.arpa      name = outland.fx.movie.edu&gt; <CODECLASS="userinput"><B>ls 254.253.192.in-addr.arpa.</B></CODE>[bladerunner.fx.movie.edu]            1D IN SOA   bladerunner.fx.movie.edu.hostmaster.fx.movie.edu. (                    1               ; serial                    3H              ; refresh                    1H              ; retry                    1w1h            ; expire                    1D )            ; minimum            1D IN NS    bladerunner.fx.movie.edu.            1D IN NS    outland.fx.movie.edu.6.254.253.192.in-addr.arpa.  1D IN PTR  jedi.fx.movie.edu.1.254.253.192.in-addr.arpa.  1D IN PTR  movie-gw.movie.edu.2.254.253.192.in-addr.arpa.  1D IN PTR  bladerunner.fx.movie.edu.3.254.253.192.in-addr.arpa.  1D IN PTR  outland.fx.movie.edu.4.254.253.192.in-addr.arpa.  1D IN PTR  starwars.fx.movie.edu.5.254.253.192.in-addr.arpa.  1D IN PTR  empire.fx.movie.edu.254.253.192.in-addr.arpa.  1D IN SOA  bladerunner.fx.movie.edu.hostmaster.fx.movie.edu. (                    1               ; serial                    3H              ; refresh                    1H              ; retry                    1w1h            ; expire                    1D )            ; minimum &gt; <CODECLASS="userinput"><B>^D</B></CODE></PRE></BLOCKQUOTE><PCLASS="para">The output looks reasonable, so it's safe to set up a slave nameserver for <ICLASS="systemitem.sitename">fx.movie.edu</I> andto delegate <ICLASS="systemitem.sitename">fx.movie.edu</I> from<ICLASS="systemitem.sitename">movie.edu</I>.<ACLASS="indexterm"NAME="AUTOID-9563"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9564">9.4.3 An fx.movie.edu Slave</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9567"></A><ACLASS="indexterm"NAME="AUTOID-9570"></A>Setting up the slave name server for <ICLASS="systemitem.sitename">fx.movie.edu</I> is simple: copy<ICLASS="filename">named.conf</I>, <ICLASS="filename">db.127.0.0</I>, and<ICLASS="filename">db.cache</I> over from <ICLASS="systemitem.sitename">bladerunner</I>, and edit<ICLASS="filename">named.conf</I> and <ICLASS="filename">db.127.0.0</I>according to the instructions in <ACLASS="xref"HREF="ch04_01.htm"TITLE="Setting Up BIND">Chapter 4, <CITECLASS="chapter">Setting Up <SPANCLASS="acronym">BIND</SPAN></CITE></A>.</P><PCLASS="para">Contents of file <ICLASS="filename">named.conf</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options {                directory &quot;/usr/local/named&quot;;};zone &quot;0.0.127.in-addr.arpa&quot; {                type slave;                file &quot;db.127.0.0&quot;;                masters { 192.253.254.2; };};zone &quot;fx.movie.edu&quot; {                type slave;                file &quot;db.fx&quot;;                masters { 192.253.254.2; };};zone &quot;254.253.192.in-addr.arpa&quot; {                type slave;                file &quot;db.192.253.254&quot;;                masters { 192.253.254.2; };};zone &quot;.&quot; {                type hint;                file &quot;db.cache&quot;;};</PRE></BLOCKQUOTE><PCLASS="para">Or, the equivalent <ICLASS="filename">named.boot</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">directory  /usr/local/namedprimary    0.0.127.in-addr.arpa      db.127.0.0secondary  fx.movie.edu              192.253.254.2  db.fxsecondary  254.253.192.in-addr.arpa  192.253.254.2  db.192.253.254cache      .                         db.cache</PRE></BLOCKQUOTE><PCLASS="para">Like <ICLASS="systemitem.sitename">bladerunner</I>,<ICLASS="systemitem.sitename">outland</I> really doesn't need a<ICLASS="filename">resolv.conf</I> file, as long as its<KBDCLASS="command">hostname</KBD> is set to <ICLASS="systemitem.sitename">outland.fx.movie.edu</I>.</P><PCLASS="para">Again, we start <KBDCLASS="command">named</KBD> and check for errors inthe <KBDCLASS="command">syslog</KBD> output. If the <KBDCLASS="command">syslog</KBD>output is clean, we'll look up a few records in <ICLASS="systemitem.sitename">fx.movie.edu</I>.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9598">9.4.4 On the movie.edu Primary Master</A></H3><PCLASS="para">All that's left now is to delegate the <ICLASS="systemitem.sitename">fx.movie.edu</I> domain to the new<ICLASS="systemitem.sitename">fx.movie.edu</I> name servers on<ICLASS="systemitem.sitename">bladerunner</I> and <ICLASS="systemitem.sitename">outland</I>.  We add the appropriate<SPANCLASS="acronym">NS</SPAN> records to<ICLASS="filename">db.movie</I>.</P><PCLASS="para">Partial contents of file<ICLASS="filename">db.movie</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">fx    86400    IN    NS    bladerunner.fx.movie.edu.      86400    IN    NS    outland.fx.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">According to <SPANCLASS="acronym">RFC</SPAN> 1034, the domain names in theresource record-specific portion of these two lines(<KBDCLASS="command">bladerunner.fx.movie.edu</KBD> and<KBDCLASS="command">outland.fx.movie.edu</KBD>) must be the canonical domainnames for the name servers. A remote name server following delegationexpects to find one or more address records attached to that domainname, not an alias (<SPANCLASS="acronym">CNAME</SPAN>) record.  Actually, the<SPANCLASS="acronym">RFC</SPAN> extends this restriction to any type ofresource record that includes a domain name as its value&nbsp;- allmust specify the canonical domain name.</P><PCLASS="para">These two records alone aren't enough, though. Do you see theproblem? How can a name server outside of <ICLASS="systemitem.sitename">fx.movie.edu</I> look up information within<ICLASS="systemitem.sitename">fx.movie.edu</I>?  Well, a<ICLASS="systemitem.sitename">movie.edu</I> name server wouldrefer it to the name servers authoritative for <ICLASS="systemitem.sitename">fx.movie.edu</I>, right? That's true, but the<SPANCLASS="acronym">NS</SPAN> records in <ICLASS="filename">db.movie</I> onlygive the <EMCLASS="emphasis">names</EM> of the <ICLASS="systemitem.sitename">fx.movie.edu</I> name servers. The foreignname server needs the <SPANCLASS="acronym">IP</SPAN> addresses of the<ICLASS="systemitem.sitename">fx.movie.edu</I> name servers inorder to send queries to them. Who can give it those addresses?  Onlythe <ICLASS="systemitem.sitename">fx.movie.edu</I> nameservers. A real chicken-and-egg problem!</P><PCLASS="para">The solution is to include the addresses of the <ICLASS="systemitem.sitename">fx.movie.edu</I> name servers in the<ICLASS="filename">db.movie</I> file. While these aren't strictly partof the <ICLASS="systemitem.sitename">movie.edu</I> zone,they're necessary for delegation to <ICLASS="systemitem.sitename">fx.movie.edu</I> to work. Of course, if thename servers for <ICLASS="systemitem.sitename">fx.movie.edu</I>weren't within <ICLASS="systemitem.sitename">fx.movie.edu</I>,these addresses&nbsp;- called<ACLASS="indexterm"NAME="AUTOID-9635"></A><ICLASS="firstterm">glue records</I>&nbsp;- wouldn't be necessary. Aforeign name server would be able to find the address it needed byquerying other name servers.</P><PCLASS="para">So, with the glue records, the records added look like thefollowing partial contents of file<ICLASS="filename">db.movie</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">fx    86400    IN    NS    bladerunner.fx.movie.edu.      86400    IN    NS    outland.fx.movie.edu.bladerunner.fx.movie.edu.  86400  IN  A  192.253.254.2outland.fx.movie.edu.      86400  IN  A  192.253.254.3</PRE></BLOCKQUOTE><PCLASS="para">Be sure you don't include unnecessary glue records in thefile. Older <SPANCLASS="acronym">BIND</SPAN> name servers (pre-4.9) load theserecords into their cache and give them out in referrals to other nameservers.  If the name server listed in the address record changes<SPANCLASS="acronym">IP</SPAN> addresses and you forget to update the glue,your name server will continue giving out the outdated addressinformation, resulting in poor resolution performance for name serverslooking for data in the delegated zone, or even rendering them unableto resolve names in the delegated zone.</P><PCLASS="para"><SPANCLASS="acronym">BIND</SPAN> 4.9 and <SPANCLASS="acronym">BIND</SPAN> 8 willautomatically ignore any glue you include that isn't strictlynecessary, and will log the fact that it's ignored the record(s) tothe slave's backup copy of the zone data. For example, if we had an<SPANCLASS="acronym">NS</SPAN> record for <ICLASS="systemitem.sitename">movie.edu</I> pointing to an off-site nameserver, <ICLASS="systemitem.sitename">ns-1.isp.net</I>, and wemade the mistake of including its address in <ICLASS="systemitem.sitename">db.movie</I> on the <ICLASS="systemitem.sitename">movie.edu</I> primary, we'd see:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; Ignoring info about ns-1.isp.net, not in zone movie.edu; ns-1.isp.net 258983  IN      A       10.1.2.3</PRE></BLOCKQUOTE><PCLASS="para">in <ICLASS="filename">db.movie</I> on a <ICLASS="systemitem.sitename">movie.edu</I> slave.  Note that theextraneous A record has been commented out.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9657"></A>Also, remember to keep the glue up to date. If <ICLASS="systemitem.sitename">bladerunner</I> gets a new network interface,and hence another <SPANCLASS="acronym">IP</SPAN> address, then you should addanother A record to the glue data.</P><PCLASS="para">We might also want to include aliases for any hosts moving into<ICLASS="systemitem.sitename">fx.movie.edu</I> from <ICLASS="systemitem.sitename">movie.edu</I>.  For example, if we were tomove <ICLASS="systemitem.sitename">plan9.movie.edu</I>, aserver with an important library of public domain special effectsalgorithms, into <ICLASS="systemitem.sitename">fx.movie.edu</I>, we should create an aliasunder <ICLASS="systemitem.sitename">movie.edu</I> pointing theold name to the new one:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">plan9           IN      CNAME   plan9.fx.movie.edu.</PRE></BLOCKQUOTE><PCLASS="para">This will allow people outside of <ICLASS="systemitem.sitename">movie.edu</I> to reach <ICLASS="systemitem.sitename">plan9</I> even though they're using its olddomain name, <ICLASS="systemitem.sitename">plan9.movie.edu</I>.</P><PCLASS="para">You shouldn't put any information about domain names in<ICLASS="systemitem.sitename">fx.movie.edu</I> into the<ICLASS="filename">db.movie</I> file. The <ICLASS="systemitem.sitename">plan9</I> alias is actually in the<ICLASS="systemitem.sitename">movie.edu</I> zone, so it belongsin <ICLASS="filename">db.movie</I>. An alias pointing <ICLASS="systemitem.sitename">p9.fx.movie.edu</I> to <ICLASS="systemitem.sitename">plan9.fx.movie.edu</I>, on the other hand, isin the <ICLASS="systemitem.sitename">fx.movie.edu</I> zone, andbelongs in <ICLASS="filename">db.fx</I>. If you were to put a record inthe db file that was outside of the zone the file described, a<SPANCLASS="acronym">BIND</SPAN> 4.9 name server would ignore it. Older nameservers might load it into the cache or even into authoritative data,but since the behavior is unpredictable and is eliminated in newerversions of <SPANCLASS="acronym">BIND</SPAN>, it's best to do it the right wayeven if the software doesn't force you to.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9685">9.4.5 Delegating an in-addr.arpa Zone</A></H3><PCLASS="para">We almost forgot to delegate the <ICLASS="systemitem.sitename">254.253.192.in-addr.arpa</I><ACLASS="indexterm"NAME="DNS3-IDX-9-IN-ADDR.ARPA-DOMAIN-DELEGATING"></A><ACLASS="indexterm"NAME="DNS3-IDX-9-DOMAINS-IN-ADDR.ARPA-DELEGATING"></A>zone!  This is a little trickier than delegating <ICLASS="systemitem.sitename">fx.movie.edu</I>, because we don't manage theparent zone.</P><PCLASS="para">First, we need to figure out what <ICLASS="systemitem.sitename">254.253.192.in-addr.arpa</I>'s parent zoneis, and who runs it.  To figure this out may take some sleuthing; wecovered how to do this in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Where Do I Start?">Chapter 3, <CITECLASS="chapter">Where Do I Start?</CITE></A>.</P><PCLASS="para">As it turns out, the <ICLASS="systemitem.sitename">in-addr.arpa</I><ACLASS="indexterm"NAME="AUTOID-9702"></A>zone is <ICLASS="systemitem.sitename">254.253.192.in-addr.arpa</I>'s parent. And,if you think about it, that makes some sense. There's no reason forthe administrators of <ICLASS="systemitem.sitename">in-addr.arpa</I> to delegate <ICLASS="systemitem.sitename">253.192.in-addr.arpa</I> or <ICLASS="systemitem.sitename">192.in-addr.arpa</I> to a separate authority,because unless 192.0.0.0 or 192.253.0.0 is all one big<SPANCLASS="acronym">CIDR</SPAN> block, networks like 192.253.253 and192.253.254 don't have anything in common with each other. They may bemanaged by totally unrelated organizations.</P><PCLASS="para">You might have remembered (from <ACLASS="xref"HREF="ch03_01.htm"TITLE="Where Do I Start?">Chapter 3</A>)that the <ICLASS="systemitem.sitename">in-addr.arpa</I> zone ismanaged by <SPANCLASS="acronym">ARIN</SPAN>, the American Registry of InternetNumbers. (Of course, if you didn't remember, you could always use<KBDCLASS="command">nslookup</KBD> to find the contact address in <ICLASS="systemitem.sitename">in-addr.arpa</I>'s <SPANCLASS="acronym">SOA</SPAN>record, like we showed you in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Where Do I Start?">Chapter 3</A>.) All that'sleft is for us to fill out <ICLASS="filename">inaddrtemplate.txt</I>(there's a copy in <ACLASS="xref"HREF="appe_01.htm"TITLE="in-addr.arpa Registration Form">Appendix E, <CITECLASS="appendix">in-addr.arpa Registration Form</CITE></A>, or you can find itonline at <ACLASS="systemitem.url"HREF="http://www.arin.net/templates/inaddrtemplate.txt">http://www.arin.net/templates/inaddrtemplate.txt</A>),and send it to the email address<ACLASS="email"HREF="mailto:hostmaster@arin.net"TITLE="hostmaster@arin.net">hostmaster@arin.net</A>.<ACLASS="indexterm"NAME="AUTOID-9721"></A><ACLASS="indexterm"NAME="AUTOID-9722"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="AUTOID-9723">9.4.6 Adding a movie.edu Slave</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="DNS3-IDX-9-SLAVE-SECONDARY-NAME-SERVERS-ADDING"></A><ACLASS="indexterm"NAME="DNS3-IDX-9-ADDING-SECONDARY-NAME-SERVERS"></A>If the special effects lab gets big enough, it may make sense to put a<ICLASS="systemitem.sitename">movie.edu</I> slave somewhere onthe 192.253.254 network. That way, a larger proportion of<SPANCLASS="acronym">DNS</SPAN> queries from <ICLASS="systemitem.sitename">fx.movie.edu</I> hosts can be answeredlocally. It seems logical to make one of the existing <ICLASS="systemitem.sitename">fx.movie.edu</I> name servers into a<ICLASS="systemitem.sitename">movie.edu</I> slave,too&nbsp;- that way, we can make better use of an existing name server,instead of setting up a brand-new name server.</P><PCLASS="para">We've decided to make <ICLASS="systemitem.sitename">bladerunner</I> a slave for <ICLASS="systemitem.sitename">movie.edu</I>.  This won't interfere with<ICLASS="systemitem.sitename">bladerunner</I>'s primarymission: the primary master for <ICLASS="systemitem.sitename">fx.movie.edu</I>, that is. A single nameserver, given enough memory, can be authoritative for literallythousands of zones. One name server can load some zones as a primarymaster and others as a slave.[2]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Clearly, though, a name server can't be both the primary masterand a slave for a single zone. Either the name server gets the datafor a given zone from a local file (and is a primary master for thezone) or from another name server (and is a slave for thezone).</P></BLOCKQUOTE><PCLASS="para">The configuration change is simple: we add one line to<ICLASS="systemitem.sitename">bladerunner</I>'s<ICLASS="filename">named.conf</I> file to tell <KBDCLASS="command">named</KBD>to load the <ICLASS="systemitem.sitename">movie.edu</I> zonefrom the <SPANCLASS="acronym">IP</SPAN> address of the <ICLASS="systemitem.sitename">movie.edu</I> primary master name server,<ICLASS="systemitem.sitename">terminator.movie.edu</I>.</P><PCLASS="para">Contents of file <ICLASS="filename">named.conf</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options {                directory &quot;/usr/local/named&quot;;};zone &quot;0.0.127.in-addr.arpa&quot; {                type master;                file &quot;db.127.0.0&quot;;};zone &quot;fx.movie.edu&quot; {                type master;                file &quot;db.fx&quot;;};zone &quot;254.253.192.in-addr.arpa&quot; {                type master;                file &quot;db.192.253.254&quot;;};zone &quot;movie.edu&quot; {                type slave;                file &quot;db.movie&quot;;};zone &quot;.&quot; {                type hint;                file &quot;db.cache&quot;;};</PRE></BLOCKQUOTE><PCLASS="para">Or, if you're using a <SPANCLASS="acronym">BIND</SPAN> 4 name server,here are the contents of the <ICLASS="filename">named.boot</I>file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">directory     /usr/local/namedprimary       0.0.127.in-addr.arpa      db.127.0.0  ; loopbackprimary       fx.movie.edu              db.fxprimary       254.253.192.in-addr.arpa  db.192.253.254secondary     movie.edu                 192.249.249.3     db.movie<ACLASS="indexterm"NAME="AUTOID-9759"></A><ACLASS="indexterm"NAME="AUTOID-9760"></A>cache         .                         db.cache<ACLASS="indexterm"NAME="AUTOID-9761"></A><ACLASS="indexterm"NAME="AUTOID-9762"></A><ACLASS="indexterm"NAME="AUTOID-9763"></A></PRE></BLOCKQUOTE></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_03.htm"TITLE="9.3 What to Name Your Children"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.3 What to Name Your Children"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="DNS &amp; BIND"><IMGSRC="../gifs/txthome.gif"ALT="DNS &amp; BIND"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_05.htm"TITLE="9.5 Subdomains of in-addr.arpa Domains"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.5 Subdomains of in-addr.arpa Domains"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">9.3 What to Name Your Children</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.5 Subdomains of in-addr.arpa Domains</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>