<HTML><HEAD><TITLE>[Chapter 10] 10.12 Load Sharing Between Mirrored Servers</TITLE><METANAME="DC.title"CONTENT="DNS &amp; BIND"><METANAME="DC.creator"CONTENT="Cricket Liu &amp; Paul Albitz"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:37:15Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-512-2"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. Advanced Features and Security"><LINKREL="prev"HREF="ch10_11.htm"TITLE="10.11 Securing Your Name Server"><LINKREL="next"HREF="ch11_01.htm"TITLE="11. nslookup"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="DNS &amp; BIND"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="DNS &amp; BIND"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/dsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_11.htm"TITLE="10.11 Securing Your Name Server"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.11 Securing Your Name Server"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>Advanced Features and Security</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch11_01.htm"TITLE="11. nslookup"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 11. nslookup"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="AUTOID-11746">10.12 Load Sharing Between Mirrored Servers</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11749"></A><ACLASS="indexterm"NAME="AUTOID-11752"></A><ACLASS="indexterm"NAME="AUTOID-11755"></A><ACLASS="indexterm"NAME="AUTOID-11758"></A><ACLASS="indexterm"NAME="AUTOID-11760"></A><ACLASS="indexterm"NAME="AUTOID-11762"></A><ACLASS="indexterm"NAME="AUTOID-11765"></A>Name servers released since <SPANCLASS="acronym">BIND</SPAN> 4.9 haveformalized some load-sharing functionality that has existed in patchesto <SPANCLASS="acronym">BIND</SPAN> for some time.  Bryan Beecher wrote patchesto <SPANCLASS="acronym">BIND</SPAN> 4.8.3 to implement what he called<SPANCLASS="quote">"shuffle address records."</SPAN> These were address records ofa special type that the name server rotated between responses. Forexample, if the domain name <ICLASS="systemitem.sitename">foo.bar.baz</I> had three<SPANCLASS="quote">"shuffled"</SPAN> <SPANCLASS="acronym">IP</SPAN> addresses, 192.1.1.1,192.1.1.2, and 192.1.1.3, an appropriately patched name server wouldgive them out first in the order:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">192.1.1.1 192.1.1.2 192.1.1.3</PRE></BLOCKQUOTE><PCLASS="para">then in the order:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">192.1.1.2 192.1.1.3 192.1.1.1</PRE></BLOCKQUOTE><PCLASS="para">and then in the order:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">192.1.1.3 192.1.1.1 192.1.1.2</PRE></BLOCKQUOTE><PCLASS="para">before starting over again with the first order, and repeatingthe rotation <ICLASS="foreignphrase">ad infinitum</I>.</P><PCLASS="para">The functionality is enormously useful if you have a number ofequivalent network resources, like mirrored <SPANCLASS="acronym">FTP</SPAN>servers, Web servers, or terminal servers, and you'd like to spreadthe load among them. You establish one domain name that refers to thegroup of resources, configure clients to access that domain name, andthe name server inverse-multiplexes the accesses between the<SPANCLASS="acronym">IP</SPAN> addresses you list.</P><PCLASS="para"><SPANCLASS="acronym">BIND</SPAN> 4.9 and later versions do away with theshuffle address record as a separate record type, subject to specialhandling. Instead, a modern name server rotates addresses for anydomain name that has more than one A record. (In fact, the name serverwill rotate any type of record, except <SPANCLASS="acronym">PTR</SPAN> records,as long as a given domain name has more than one of them.) So therecords:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">foo.bar.baz.    60    IN    A    192.1.1.1foo.bar.baz.    60    IN    A    192.1.1.2foo.bar.baz.    60    IN    A    192.1.1.3</PRE></BLOCKQUOTE><PCLASS="para">accomplish on a 4.9 or later name server just what the shuffleaddress records did on a patched 4.8.3 server. The<SPANCLASS="acronym">BIND</SPAN> documentation calls this process<ACLASS="indexterm"NAME="AUTOID-11790"></A><ICLASS="firstterm">round robin</I>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11794"></A><ACLASS="indexterm"NAME="AUTOID-11797"></A><ACLASS="indexterm"NAME="AUTOID-11800"></A><ACLASS="indexterm"NAME="AUTOID-11803"></A>It's a good idea to reduce the records' time-to-live, too, as wedid in this example.  This ensures that if the addresses are cached onan intermediate name server that doesn't support round robin, they'lltime out of the cache quickly. If the intermediate name server looksup the name again, your authoritative name server can round robin theaddresses again.</P><PCLASS="para">Note that this is really load sharing, not load balancing, sincethe name server gives out the addresses in a completely deterministicway, without regard to the actual load or capacity of the serversservicing the requests. In our example, the server at address192.1.1.3 could be a 486<SPANCLASS="acronym">DX</SPAN>33 running Linux, and theother two servers <SPANCLASS="acronym">HP</SPAN>9000 K420s, and the Linux boxwould still get a third of the queries. Listing a higher-capacityserver's address multiple times won't help, because<SPANCLASS="acronym">BIND</SPAN> eliminates duplicate records.</P></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_11.htm"TITLE="10.11 Securing Your Name Server"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.11 Securing Your Name Server"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="DNS &amp; BIND"><IMGSRC="../gifs/txthome.gif"ALT="DNS &amp; BIND"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch11_01.htm"TITLE="11. nslookup"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 11. nslookup"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.11 Securing Your Name Server</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">11. nslookup</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>