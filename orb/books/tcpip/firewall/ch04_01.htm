<HTML><HEAD><TITLE>[Chapter 4] Firewall Design</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:12:51Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part02.htm"TITLE="II. Building Firewalls"><LINKREL="prev"HREF="part02.htm"TITLE="II. Building Firewalls"><LINKREL="next"HREF="ch04_02.htm"TITLE="4.2 Firewall Architectures"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="PART"HREF="part02.htm"TITLE="II. Building Firewalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: II. Building Firewalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 4</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_02.htm"TITLE="4.2 Firewall Architectures"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.2 Firewall Architectures"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="FIRE-04-CHP">4. Firewall Design</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="SECT1"HREF="#FIRE-04-S1-1"TITLE="4.1 Some Firewall Definitions">Some Firewall Definitions</A><BR><ACLASS="SECT1"HREF="ch04_02.htm"TITLE="4.2 Firewall Architectures">Firewall Architectures</A><BR><ACLASS="SECT1"HREF="ch04_03.htm"TITLE="4.3 Variations on Firewall Architectures">Variations on FirewallArchitectures</A><BR><ACLASS="SECT1"HREF="ch04_04.htm"TITLE="4.4 Internal Firewalls">Internal Firewalls</A><BR><ACLASS="SECT1"HREF="ch04_05.htm"TITLE="4.5 What the Future Holds">What the Future Holds</A></P><P></P></DIV><PCLASS="para"><ACLASS="indexterm"NAME="CH04FWDESIGN"></A>In <ACLASS="xref"HREF="ch01_01.htm"TITLE="Why Internet Firewalls?">Chapter 1, <CITECLASS="chapter">Why Internet Firewalls?</CITE></A>, we introduced Internet firewalls andsummarized what they can and cannot do to improve networksecurity. In this chapter, we present major firewalls concepts. Whatare the terms you will hear in discussions of Internet firewalls? Whattypes of firewall architectures are used at sites today? What are thecomponents that can be put together to build these common firewallarchitectures? In the remaining chapters of this book, we'll describethese components and architectures in detail.</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-04-S1-1">4.1 Some Firewall Definitions</A></H2><PCLASS="para">You may be familiar with some of the firewall terms listed below, andsome may be new to you. Some may seem familiar, but they may be used ina way that is slightly different from what you're accustomed to (thoughwe try to use terms that are as standard as possible). Unfortunately, there is no completely consistent terminology forfirewall architectures and components. Different people use terms indifferent&nbsp;- or, worse still, conflicting&nbsp;- ways. Also, these sameterms sometimes have other meanings in other networking fields; thedefinitions below are for a firewalls context.</P><PCLASS="para">These are very basic definitions; we describe these terms ingreater detail elsewhere.<DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">Firewall</EM></DT><DDCLASS="listitem"><PCLASS="para">A component or set of components thatrestricts access between a protected network and the Internet, orbetween other sets of networks.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Host</EM></DT><DDCLASS="listitem"><PCLASS="para">A computer system attached to a network.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Bastion host</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1640"></A><ACLASS="indexterm"NAME="AUTOID-1642"></A>A computer system that must behighly secured because it is vulnerable to attack, usually because itis exposed to the Internet and is a main point of contact for users ofinternal networks. It gets its name from the highly fortifiedprojections on the outer walls of medieval castles.[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Marcus Ranum, who is generally held responsible for the popularity ofthis term in the firewalls professional community, says,&quot;Bastions...overlook critical areas of defense, usually havingstronger walls, room for extra troops, and the occasional useful tubof boiling hot oil for discouraging attackers.&quot;</P></BLOCKQUOTE></DD><DTCLASS="term"><EMCLASS="emphasis">Dual-homed host</EM></DT><DDCLASS="listitem"><PCLASS="para">A general-purpose computer system that has at least two networkinterfaces (or homes)</P></DD><DTCLASS="term"><EMCLASS="emphasis">Packet</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1658"></A>The fundamental unit of communication on the Internet.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Packet filtering</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1665"></A><ACLASS="indexterm"NAME="AUTOID-1667"></A>The action a device takes to selectively control the flow of data toand from a network. Packet filters allow or block packets, usuallywhile routing them from one network to another (most often from theInternet to an internal network, and vice versa). To accomplish packetfiltering, you set up a set of rules that specify what types ofpackets (e.g., those to or from a particular <SPANCLASS="acronym">IP</SPAN>address or port) are to be allowed and what types are to beblocked. Packet filtering may occur in a router, in a bridge, or on anindividual host. It is sometimes known as<EMCLASS="emphasis">screening</EM>.[2]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Some networking literature (in particular, the <SPANCLASS="acronym">BSD UNIX</SPAN> release from Berkeley) uses the term &quot;packetfiltering&quot; to refer to something else entirely (selectingcertain packets off a network for analysis, as is done by the<EMCLASS="emphasis">etherfind</EM> or <EMCLASS="emphasis">tcpdump</EM> programs).</P></BLOCKQUOTE></DD><DTCLASS="term"><EMCLASS="emphasis">Perimeter network</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1682"></A><ACLASS="indexterm"NAME="AUTOID-1684"></A><ACLASS="indexterm"NAME="AUTOID-1687"></A><ACLASS="indexterm"NAME="AUTOID-1689"></A>A network added between aprotected network and an external network, in order to provide anadditional layer of security. A perimeter network is sometimes calleda <EMCLASS="emphasis">DMZ</EM>, which stands for <EMCLASS="emphasis">De-MilitarizedZone</EM> (named after the zone separating North and SouthKorea).</P></DD><DTCLASS="term"><EMCLASS="emphasis">Proxy server</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1698"></A>A program that deals with externalservers on behalf of internal clients. Proxy clients talk to proxyservers, which relay approved client requests on to real servers, andrelay answers back to clients.</P></DD></DL></P><PCLASS="para">The next few sections briefly describe packet filtering and proxyservices, two major approaches used to build firewalls today.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-04-S2-2">4.1.1 Packet Filtering</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="CH04PACKFILT"></A>Packet filtering systems route packets betweeen internal and externalhosts, but they do it selectively. They allow or block certain typesof packets in a way that reflects a site's own security policy asshown in <ACLASS="xref"HREF="ch04_01.htm#FIRE-04-FIG-1"TITLE="Using a screening router to do packet filtering">Figure 4.1</A>. The type of router used in apacket filtering firewall is known as a <EMCLASS="emphasis">screeningrouter</EM>.<ACLASS="indexterm"NAME="CH04SCREENROUTE"></A></P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-04-FIG-1">Figure 4.1: Using a screening router to do packet filtering</A></H4><IMGCLASS="graphic"SRC="figs/fire0401.gif"ALT="Figure 4.1"><PCLASS="para">As we discuss in <ACLASS="xref"HREF="ch06_01.htm"TITLE="Packet Filtering">Chapter 6, <CITECLASS="chapter">Packet Filtering</CITE></A>, every packet has a setof headers containing certain information. The main information is:<ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">IP</SPAN> source address</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">IP</SPAN> destination address</P></LI><LICLASS="listitem"><PCLASS="para">Protocol (whether the packet is a <SPANCLASS="acronym">TCP</SPAN>,<SPANCLASS="acronym">UDP</SPAN>, or <SPANCLASS="acronym">ICMP</SPAN> packet)</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN> or <SPANCLASS="acronym">UDP</SPAN> source port</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN> or <SPANCLASS="acronym">UDP</SPAN> destination port</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">ICMP</SPAN> message type</P></LI></UL></P><PCLASS="para">In addition, the router knows things about the packet that aren'treflected in the packet headers, such as:<ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The interface the packet arrives on</P></LI><LICLASS="listitem"><PCLASS="para">The interface the packet will go out on</P></LI></UL></P><PCLASS="para">The fact that servers for particular Internet services reside atcertain port numbers lets the router block or allow certain types ofconnections simply by specifying the appropriate port number (e.g.,<SPANCLASS="acronym">TCP</SPAN> port 23 for Telnet connections) in the set ofrules specified for packet filtering. (<ACLASS="xref"HREF="ch06_01.htm"TITLE="Packet Filtering">Chapter 6</A>describes in detail how you construct these rules.)</P><PCLASS="para">Here are some examples of ways in which you might program a screeningrouter to selectively route packets to or from your site:<ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Block all incoming connections from systems outsidethe internal network, except for incoming <SPANCLASS="acronym">SMTP</SPAN>connections (so that you can receive email).</P></LI><LICLASS="listitem"><PCLASS="para">Block all connections to or from certain systems you distrust.</P></LI><LICLASS="listitem"><PCLASS="para">Allow email and <SPANCLASS="acronym">FTP</SPAN> services, but block dangerousservices like <SPANCLASS="acronym">TFTP</SPAN>, the X Window System,<SPANCLASS="acronym">RPC</SPAN>, and the &quot;r&quot; services(<EMCLASS="emphasis">rlogin</EM>, <EMCLASS="emphasis">rsh</EM>,<EMCLASS="emphasis">rcp</EM>, etc.).</P></LI></UL></P><PCLASS="para">To understand how packet filtering works, let's look at the differencebetween an ordinary router and a screening router.</P><PCLASS="para">An ordinary router simply looks at the destination address of eachpacket and picks the best way it knows to send that packet towards thatdestination. The decision about how to handle the packet is basedsolely on its destination. There are two possibilities: therouter knows how to send the packet towards its destination, and itdoes so; or the router does not know how to send the packet towards itsdestination, and it returns the packet, via an ICMP &quot;destinationunreachable&quot; message, to its source.</P><PCLASS="para">A screening router, on the other hand, looks at packets more closely. In addition to determining whether or not it <EMCLASS="emphasis">can</EM>route a packet towards its destination, a screening router alsodetermines whether or not it <EMCLASS="emphasis">should</EM>. &quot;Should&quot; or &quot;should not&quot; are determined by thesite's security policy, which the screening router has been configuredto enforce.</P><PCLASS="para">Although it is possible for only a screening router to sit between aninternal network and the Internet, as shown in <ACLASS="xref"HREF="ch04_01.htm#FIRE-04-FIG-1"TITLE="Using a screening router to do packet filtering">Figure 4.1</A>, this places an enormous responsibility on thescreening router. Not only does it need to perform all routing androuting decision-making, but it is the only protecting system; if itssecurity fails (or crumbles under attack), the internal network isexposed. Furthermore, a straightforward screening router can't modifyservices. A screening router can permit or deny a service, but it can'tprotect individual operations within a service. If a desirable servicehas insecure operations, or if the service is normally provided with aninsecure server, packet filtering alone can't protect it.</P><PCLASS="para">A number of other architectures have evolved to provide additionalsecurity in packet filtering firewall implementations. Later in thischapter, we show the way that additional routers, bastion hosts, andperimeter networks may be added to the firewall implementations in thescreened host and screened subnet architectures.<ACLASS="indexterm"NAME="AUTOID-1770"></A><ACLASS="indexterm"NAME="AUTOID-1771"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-04-S2-1">4.1.2 Proxy Services</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="CH04PROXY"></A><ACLASS="indexterm"NAME="AUTOID-1777"></A><ACLASS="indexterm"NAME="AUTOID-1781"></A>Proxy services are specialized application or server programs that runon a firewall host: either a dual-homed host with an interface on theinternal network and one on the external network, or some otherbastion host that has access to the Internet and is accessible fromthe internal machines. These programs take users' requests forInternet services (such as <SPANCLASS="acronym">FTP</SPAN> and Telnet) andforward them, as appropriate according to the site's security policy,to the actual services. The proxies provide replacementconnections and act as gateways to the services. For this reason,proxies are sometimes known as <EMCLASS="emphasis">application-levelgateways</EM>.[3]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] Firewall terminologies differ. Whereas we use the term <EMCLASS="emphasis">proxyservice</EM> to encompass the entire proxy approach, otherauthors refer to <EMCLASS="emphasis">application-level gateways</EM> and<EMCLASS="emphasis">circuit-level gateways</EM>. Although there are smalldifferences between the meanings of these various terms, which we'llexplore in <ACLASS="xref"HREF="ch07_01.htm"TITLE="Proxy Systems">Chapter 7, <CITECLASS="chapter">Proxy Systems</CITE></A>, in general our discussion ofproxies refers to the same type of technology other authors mean whenthey refer to these gateway systems.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1794"></A>Proxy services sit, more or less transparently, between a user on theinside (on the internal network) and a service on the outside (on theInternet).  Instead of talking to each other directly, each talks to aproxy. Proxies handle all the communication between users and Internetservices behind the scenes.</P><PCLASS="para">Transparency is the major benefit of proxy services. It's essentiallysmoke and mirrors. To the user, a proxy server presents the illusionthat the user is dealing directly with the real server. To the realserver, the proxy server presents the illusion that the real server isdealing directly with a user on the proxy host (as opposed to the user'sreal host).</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Proxy services are effective only when they're used in conjunction witha mechanism that restricts direct communications between the internaland external hosts. Dual-homed hosts and packet filtering are two suchmechanisms. If internal hosts are able to communicate directly withexternal hosts, there's no need for users to use proxy services, and so(in general) they won't. Such a bypass probably isn't in accordancewith your security policy.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1800"></A>How do proxy services work? Let's look at the simplest case, where weadd proxy services to a dual-homed host. (We'll describe these hostsin some detail in &quot;Dual-Homed Host Architectures&quot; later in this chapter.)</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1805"></A><ACLASS="indexterm"NAME="AUTOID-1808"></A>As <ACLASS="xref"HREF="ch04_01.htm#FIRE-04-FIG-2"TITLE="Using proxy services with a dual-homed host">Figure 4.2</A> shows, a proxy service requires twocomponents: a proxy server and a proxy client. In this situation, the<EMCLASS="emphasis">proxy server</EM> runs on the dual-homed host. A<EMCLASS="emphasis">proxy client</EM> is a special version of a normalclient program (i.e., a Telnet or <SPANCLASS="acronym">FTP</SPAN> client) thattalks to the proxy server rather than to the &quot;real&quot; serverout on the Internet; in addition, if users are taught specialprocedures to follow, normal client programs can often beused as proxy clients.  The proxy server evaluates requests from theproxy client, and decides which to approve and which to deny. If arequest is approved, the proxy server contacts the real server onbehalf of the client (thus the term &quot;proxy&quot;), and proceedsto relay requests from the proxy client to the real server, andresponses from the real server to the proxy client.</P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-04-FIG-2">Figure 4.2: Using proxy services with a dual-homed host</A></H4><IMGCLASS="graphic"SRC="figs/fire0402.gif"ALT="Figure 4.2"><PCLASS="para">In some proxy systems, instead of installing custom client proxysoftware, you'll use standard software, but set up custom userprocedures for using it. (We'll describe how this works in <ACLASS="xref"HREF="ch07_01.htm"TITLE="Proxy Systems">Chapter 7</A>.)</P><PCLASS="para">A proxy service is a software solution, not a firewall architecture perse. You can use proxy services in conjunction with any of the firewallarchitectures described in the section called &quot;Firewall Architectures&quot;below.</P><PCLASS="para">The proxy server doesn't always just forward users' requests on to thereal Internet services. The proxy server can control what users do,because it can make decisions about the requests it processes.Depending on your site's security policy, requests might be allowed orrefused. For example, the <SPANCLASS="acronym">FTP</SPAN> proxy might refuse tolet users export files, or it might allow users to import files onlyfrom certain sites.  More sophisticated proxy services might allowdifferent capabilities to different hosts, rather than enforcing thesame restrictions on all hosts.</P><PCLASS="para">There is some excellent software available forproxying. <SPANCLASS="acronym">SOCKS</SPAN> is a proxy construction toolkit,designed to make it easy to convert existing client/serverapplications into proxy versions of those same applications. TheTrusted Information Systems Internet Firewall Toolkit (<SPANCLASS="acronym">TIS FWTK</SPAN>) includes proxy servers for a number of common Internetprotocols, including Telnet, <SPANCLASS="acronym">FTP</SPAN>,<SPANCLASS="acronym">HTTP</SPAN>, <EMCLASS="emphasis">rlogin</EM>, X11, and others;these proxy servers are designed to be used in conjunction with customuser procedures. See the discussion of these packages in <ACLASS="xref"HREF="ch07_01.htm"TITLE="Proxy Systems">Chapter 7</A>.</P><PCLASS="para">Many standard client and server programs, both commercial and freelyavailable, now come equipped with their own proxying capabilities, orwith support for generic proxy systems like <SPANCLASS="acronym">SOCKS</SPAN>.These capabilities can be enabled at run time or compile time.<ACLASS="indexterm"NAME="AUTOID-1832"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-04-S2-3">4.1.3 Using a Combination of Techniques andTechnologies</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1836"></A>The &quot;right solution&quot; to building a firewall is seldom asingle technique; it's usually a carefully crafted combination oftechniques to solve different problems. Which problems you need tosolve depend on what services you want to provide your users and whatlevel of risk you're willing to accept. Which techniques you use tosolve those problems depend on how much time, money, and expertise youhave available.</P><PCLASS="para">Some protocols (e.g., Telnet and <SPANCLASS="acronym">SMTP</SPAN>) can be moreeffectively handled with packet filtering. Others (e.g.,<SPANCLASS="acronym">FTP</SPAN>, Archie, Gopher, and <SPANCLASS="acronym">WWW</SPAN>)are more effectively handled with proxies. (<ACLASS="xref"HREF="ch08_01.htm"TITLE="Configuring Internet Services">Chapter 8, <CITECLASS="chapter">Configuring Internet Services</CITE></A>describes how to handle specific services in a firewall environment.)Most firewalls use a combination of proxying and packetfiltering.</P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="PART"HREF="part02.htm"TITLE="II. Building Firewalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: II. Building Firewalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_02.htm"TITLE="4.2 Firewall Architectures"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.2 Firewall Architectures"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">II. Building Firewalls</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">4.2 Firewall Architectures</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>