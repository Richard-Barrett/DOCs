<HTML><HEAD><TITLE>[Chapter 7] 7.4 Using Proxying with Internet Services</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:18:55Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Proxy Systems"><LINKREL="prev"HREF="ch07_03.htm"TITLE="7.3 Proxy Server Terminology "><LINKREL="next"HREF="ch07_05.htm"TITLE="7.5 Proxying Without a Proxy Server"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 Proxy Server Terminology "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 Proxy Server Terminology "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Proxy Systems</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_05.htm"TITLE="7.5 Proxying Without a Proxy Server"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.5 Proxying Without a Proxy Server"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-07-S1-4">7.4 Using Proxying with InternetServices</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="CH07PSINT"></A><ACLASS="indexterm"NAME="CH07SERVINTPROX"></A>Because proxying interferes with communications between a client and aserver, it has to be adapted separately to each service. Some thingsthat are easy to do normally become much more difficult when a proxyis involved.</P><PCLASS="para">The ideal service for proxying makes a <SPANCLASS="acronym">TCP</SPAN>connection in one direction; has only secure commands; has some pieceof variable-length, user-specified data that's passed to the server;and is being used from an internal client to an external server. Thefollowing sections look at these ideal situations, and some thataren't so ideal.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-07-S2-8">7.4.1 <SPANCLASS="acronym">TCP</SPAN> Versus OtherProtocols</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7316"></A>Because <SPANCLASS="acronym">TCP</SPAN> is a connection-oriented protocol, youonly go through the overhead of setting up the proxy once, and thenyou continue to use that connection. <SPANCLASS="acronym">UDP</SPAN> has noconcept of connections; every packet is a separate transactionrequiring a separate decision from the proxyserver. <SPANCLASS="acronym">TCP</SPAN> is therefore easier to proxy (althoughthe <SPANCLASS="acronym">UDP</SPAN> Packet Relayer package is a generic<SPANCLASS="acronym">UDP</SPAN> proxy server). <SPANCLASS="acronym">ICMP</SPAN> is solow-level, it's almost impossible to proxy.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-07-S2-9">7.4.2 Unidirectional Versus MultidirectionalConnections</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7328"></A><ACLASS="indexterm"NAME="AUTOID-7331"></A><ACLASS="indexterm"NAME="AUTOID-7333"></A>It's easy for a proxy server to intercept the initial connection froma client to a server. It's harder for it to intercept a returnconnection. Either both ends of the conversation have to be aware ofthe existence of the proxy server, or the server needs to be able tointerpret and modify the protcol to make certain the return connectionis made correctly. For example, normal-mode <SPANCLASS="acronym">FTP</SPAN>requires the proxy server to intercept the <SPANCLASS="acronym">PORT</SPAN>command the client sends to the server, open a connection from theproxy to the client at that port, and send a different<SPANCLASS="acronym">PORT</SPAN> command (for a port on the proxy) to the realserver. It's not enough for the proxy server to simply read the<SPANCLASS="acronym">PORT</SPAN> command on the way past, because that port mayalready be in use. Similar problems are going to arise in any protocolrequiring a return connection.</P><PCLASS="para">Anything more complex than an outbound connection and a return is evenworse. The <EMCLASS="emphasis">talk </EM>service is an example; see thediscussion in <ACLASS="xref"HREF="ch08_01.htm"TITLE="Configuring Internet Services">Chapter 8</A> for an example of a servicewith a tangled web of connections that's almost impossible toproxy. (It doesn't help any that <EMCLASS="emphasis">talk</EM> is partly<SPANCLASS="acronym">UDP</SPAN>-based, but even if it were all<SPANCLASS="acronym">TCP</SPAN>, it would still be a proxy-writer's nightmare.)</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-07-S2-10">7.4.3 Protocol Security</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7348"></A><ACLASS="indexterm"NAME="AUTOID-7351"></A><ACLASS="indexterm"NAME="AUTOID-7354"></A>For some services, proxying may be technically easy, but pointlessfrom a security point of view. If a protocol is inherently unsafe,proxying it without doing anything else will not make it anysafer. For example, X11 is mildly tricky to proxy, for reasonsdiscussed at length in <ACLASS="xref"HREF="ch08_01.htm"TITLE="Configuring Internet Services">Chapter 8</A>, but the realreason it's not widely proxied through firewalls has nothing to dowith technical issues (proxy X servers are not uncommon as ways toextend X capabilities). The real reason is that X provides a number ofhighly insecure abilities to a client, and a proxy system for afirewall needs to catch unsafe operations and at least offer the userthe ability to prevent them. This is reasonably possible with X (andthe <SPANCLASS="acronym">TIS FWTK</SPAN> provides a proxy called  <EMCLASS="emphasis">x-gw</EM> that does this), but it requires more applicationknowledge than would be necessary for a safer protocol.</P><PCLASS="para">If it's difficult to distinguish between safe and unsafe operations in aprotocol or impossible to use the service at all if unsafe operationsare prevented, proxying may not be a viable solution. In that case,there may be no good solution, and you may be reduced to using a victimhost, as discussed in <ACLASS="xref"HREF="ch05_01.htm"TITLE="Bastion Hosts">Chapter 5, <CITECLASS="chapter">Bastion Hosts</CITE></A>. Some people consider <SPANCLASS="acronym">HTTP</SPAN> to be such a protocol (because it may end up transferring programsthat are executed transparently by the client).</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-07-S2-11">7.4.4 User-Specified Data </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7366"></A>If you're going to use modified-procedure proxying, you need amodifiable part of the procedure. Programs like <SPANCLASS="acronym">FTP</SPAN>and <SPANCLASS="acronym">HTTP</SPAN> clients in which the client passes a nicelong user-specified string to the server, areperfect. (<SPANCLASS="acronym">FTP</SPAN> clients pass a user name to theserver; <SPANCLASS="acronym">HTTP</SPAN> clients pass a<SPANCLASS="acronym">URL</SPAN>.) A program like <EMCLASS="emphasis">ping</EM> inwhich the client passes absolutely no data to the server isfundamentally impossible to proxy using an unmodified client.[1] </P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] People have been known to claim that forcing users to log into abastion host to use <EMCLASS="emphasis">ping</EM> is an extreme version ofmodified-procedure proxying. It's clearly a modified procedure, butthe &quot;proxy&quot; part is hard to detect.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-07-S2-12">7.4.5 Internal Versus External Clients</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7381"></A><ACLASS="indexterm"NAME="AUTOID-7384"></A><ACLASS="indexterm"NAME="AUTOID-7387"></A><ACLASS="indexterm"NAME="AUTOID-7390"></A>Most proxy servers are designed for situations in which the client ison the inside and the server on the outside, of the firewall. This isbecause most proxy servers require some cooperation at the client'send, and the modifiable clients and the trainable users are probablyboth inside the firewall. Proxying for external clients works only ina few situations:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Using modified procedures to provide inbound services for your ownusers. (See <ACLASS="xref"HREF="ch10_01.htm"TITLE="Authentication and Inbound Services">Chapter 10, <CITECLASS="chapter">Authentication and InboundServices</CITE></A> for more information aboutthis situation.)</P></LI><LICLASS="listitem"><PCLASS="para">Using something like <EMCLASS="emphasis">plug-gw</EM> to redirectconnections from the proxy server to an internal machine. A program ofthis kind will support any number of clients, as long as they all wantto connect to the same internal server.</P></LI><LICLASS="listitem"><PCLASS="para">Providing a special service for which you distribute clients.If you write your own Internet service, you can easily design theclients to include proxy support.</P></LI></UL><ACLASS="indexterm"NAME="AUTOID-7402"></A><ACLASS="indexterm"NAME="AUTOID-7403"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 Proxy Server Terminology "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 Proxy Server Terminology "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_05.htm"TITLE="7.5 Proxying Without a Proxy Server"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.5 Proxying Without a Proxy Server"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.3 Proxy Server Terminology </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.5 Proxying Without a Proxy Server</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>