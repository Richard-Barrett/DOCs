<HTML><HEAD><TITLE>[Chapter 8] 8.10 Domain Name System (DNS)</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:25:24Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Configuring Internet Services"><LINKREL="prev"HREF="ch08_09.htm"TITLE="8.9 Real-Time Conferencing Services"><LINKREL="next"HREF="ch08_11.htm"TITLE="8.11 syslog"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_09.htm"TITLE="8.9 Real-Time Conferencing Services"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.9 Real-Time Conferencing Services"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Configuring Internet Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_11.htm"TITLE="8.11 syslog"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.11 syslog"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-08-S1-10">8.10 Domain Name System(<SPANCLASS="acronym">DNS</SPAN>)</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="CH08DNS"></A><ACLASS="indexterm"NAME="CH08CONFDNS"></A><SPANCLASS="acronym">DNS</SPAN> is a distributed database system thattranslates hostnames to <SPANCLASS="acronym">IP</SPAN> addresses and<SPANCLASS="acronym">IP</SPAN> addresses to hostnames (e.g., it translateshostname <EMCLASS="emphasis">miles.somewhere.net</EM> to<SPANCLASS="acronym">IP</SPAN> address 192.168.244.34). <SPANCLASS="acronym">DNS</SPAN>is also the standard Internet mechanism for storing and accessingseveral other kinds of information about hosts; it providesinformation about a particular host to the world at large. Forexample, if a host cannot receive mail directly, but another machinewill receive mail for it and pass it on, that information iscommunicated with an <SPANCLASS="acronym">MX</SPAN> record in<SPANCLASS="acronym">DNS</SPAN>.</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> clients include any program that needs to doany of the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Translate a hostname to an <SPANCLASS="acronym">IP</SPAN> address</P></LI><LICLASS="listitem"><PCLASS="para">Translate an <SPANCLASS="acronym">IP</SPAN> address to a hostname</P></LI><LICLASS="listitem"><PCLASS="para">Obtain other published information about a host (such as its <SPANCLASS="acronym">MX</SPAN>record)</P></LI></UL><PCLASS="para">Fundamentally, any program that uses hostnames can be a<SPANCLASS="acronym">DNS</SPAN> client. This includes essentially every programthat has anything to do with networking, including both client andserver programs for Telnet, <SPANCLASS="acronym">SMTP</SPAN>,<SPANCLASS="acronym">FTP</SPAN>, and almost any other networkservice. <SPANCLASS="acronym">DNS</SPAN> is thus a fundamental networkingservice, upon which other network services rely.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13148"></A>Other protocols may be used to provide this kind of information. Forexample, <SPANCLASS="acronym">NIS/YP</SPAN> is used to provide host informationwithin a network. However, <SPANCLASS="acronym">DNS</SPAN> is the service used for thispurpose across the Internet, and clients that need to access Internethosts will have to use <SPANCLASS="acronym">DNS</SPAN>, directly orindirectly. On networks that use <SPANCLASS="acronym">NIS/YP</SPAN> or othermethods internally, the server for the other protocol usually acts asa <SPANCLASS="acronym">DNS</SPAN> proxy for the client. Many clients can alsobe configured to use multiple services, so that if a host lookupfails, it will retry using another method. Thus, it might start bylooking in <SPANCLASS="acronym">NIS/YP</SPAN>, which will show only localhosts, but try <SPANCLASS="acronym">DNS</SPAN> if that fails, or it might startby looking in <SPANCLASS="acronym">DNS</SPAN>, and then try a file on its owndisk if that fails (so that you can put in personal favorite names,for example).</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13159"></A>In <SPANCLASS="acronym">UNIX</SPAN>, <SPANCLASS="acronym">DNS</SPAN> is implemented bythe Berkeley Internet Name Domain (<SPANCLASS="acronym">BIND</SPAN>). On theclient side is the resolver, a library of routines called by networkprocesses. On the server side is a daemon called <EMCLASS="emphasis">named</EM> (also known as <EMCLASS="emphasis">in.named</EM> on somesystems).</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> is designed to forward queries and responsesbetween clients and servers, so that servers may act on behalf ofclients or other servers. This capability is very important to yourability to build a firewall that handles <SPANCLASS="acronym">DNS</SPAN>services securely.</P><PCLASS="para">How does <SPANCLASS="acronym">DNS</SPAN> work? Essentially, when a client needsa particular piece of information (e.g., the<SPANCLASS="acronym">IP</SPAN> address of host<EMCLASS="emphasis">ftp.somewhere.net</EM>), it asks its local<SPANCLASS="acronym">DNS</SPAN> server for that information. The local<SPANCLASS="acronym">DNS</SPAN> server first examines its own cache to see ifit already knows the answer to the client's query. If not, thelocal <SPANCLASS="acronym">DNS</SPAN> server asks other <SPANCLASS="acronym">DNS</SPAN>servers, in turn, to discover the answer to the client's query. Whenthe local <SPANCLASS="acronym">DNS</SPAN> server gets the answer (or decidesthat it can't for some reason), it caches any information itgot[34] and answers the client. For example, to find the <SPANCLASS="acronym">IP</SPAN>address for <EMCLASS="emphasis">ftp.somewhere.net</EM>, the local<SPANCLASS="acronym">DNS</SPAN> server first asks one of the public rootnameservers which machines are nameservers for the<EMCLASS="emphasis">net</EM> domain. It then asks one of those <EMCLASS="emphasis">net</EM> nameserverswhichmachines are nameservers for the <EMCLASS="emphasis">somewhere.net</EM>domain, and then it asks one of those nameserversfor the <SPANCLASS="acronym">IP</SPAN>address of <EMCLASS="emphasis">ftp.somewhere.net</EM>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[34] Some servers will cache the fact that the query failed, on some typesof failures; others cache only information retrieved on a successfulquery.</P></BLOCKQUOTE><PCLASS="para">This asking and answering is all transparent to the client. As far asthe client is concerned, it has communicated only with the local server. It doesn't know or care that the local server may have contactedseveral other servers in the process of answering the original question.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-32">8.10.1 Packet Filtering Characteristics of<SPANCLASS="acronym">DNS</SPAN></A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13193"></A><ACLASS="indexterm"NAME="AUTOID-13195"></A><ACLASS="indexterm"NAME="AUTOID-13197"></A>There are two types of <SPANCLASS="acronym">DNS</SPAN> network activities:lookups and zone transfers. <EMCLASS="emphasis">Lookups</EM> occur when a<SPANCLASS="acronym">DNS</SPAN> client (or a <SPANCLASS="acronym">DNS</SPAN> serveracting on behalf of a client) queries a <SPANCLASS="acronym">DNS</SPAN> serverfor information, e.g., the <SPANCLASS="acronym">IP</SPAN> address for a givenhostname, the hostname for a given IP address, the name server for agiven domain, or the mail exchanger for a given host. <EMCLASS="emphasis">Zone transfers</EM>occur when a <SPANCLASS="acronym">DNS</SPAN> server (the secondary server)requests from another <SPANCLASS="acronym">DNS</SPAN> server (the primaryserver) everything the primary server knows about a given piece of the<SPANCLASS="acronym">DNS</SPAN> naming tree (the zone). Zone transfers happenonly among servers that are supposed to be providing the sameinformation; a server won't try to do a zone transfer from a randomother server under normal circumstances. People occasionally do zonetransfers in order to gather information (this is<SPANCLASS="acronym">OK</SPAN> when they're calculating what the most popularhostname on the Internet is, but bad when they're trying to find outwhat hosts to attack at your site).</P><PCLASS="para">For performance reasons, <SPANCLASS="acronym">DNS</SPAN> lookups are usuallyexecuted using <SPANCLASS="acronym">UDP</SPAN>. If some of the data is lost intransit by <SPANCLASS="acronym">UDP</SPAN> (remember that<SPANCLASS="acronym">UDP</SPAN> doesn't guarantee delivery), the lookup will beredone using <SPANCLASS="acronym">TCP</SPAN>. There may be other exceptions. <ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-13"TITLE="DNS name lookup">Figure 8.13</A> shows a <SPANCLASS="acronym">DNS</SPAN> name lookup.</P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-13">Figure 8.13: <SPANCLASS="acronym">DNS</SPAN> name lookup</A></H4><IMGCLASS="graphic"SRC="figs/fire0813.gif"ALT="Figure 8.13"><PCLASS="para">A <SPANCLASS="acronym">DNS</SPAN> server uses well-known port 53 for all its<SPANCLASS="acronym">UDP</SPAN> activities and as its server port for<SPANCLASS="acronym">TCP</SPAN>. It uses a random port above 1023 for<SPANCLASS="acronym">TCP</SPAN> requests. A <SPANCLASS="acronym">DNS</SPAN> client usesa random port above 1023 for both <SPANCLASS="acronym">UDP</SPAN> and<SPANCLASS="acronym">TCP</SPAN>. You can thus differentiate between thefollowing:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">A client-to-server query&nbsp;- source port is above 1023, destinationport is 53.</P></LI><LICLASS="listitem"><PCLASS="para">A server-to-client response&nbsp;- source port is 53, destination portis above 1023.</P></LI><LICLASS="listitem"><PCLASS="para">A server-to-server query or response&nbsp;- at least with<SPANCLASS="acronym">UDP</SPAN>, where both source and destination port are 53;with <SPANCLASS="acronym">TCP</SPAN>, the requesting server will use a portabove 1023.</P></LI></UL><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> zone transfers are performed using<SPANCLASS="acronym">TCP</SPAN>. The connection is initiated from a random portabove 1023 on the secondary server (which requests the data) to port53 on the primary server (which sends the data requested by thesecondary). A secondary server must also do a regular<SPANCLASS="acronym">DNS</SPAN> query of a primary server to decide when to doa zone transfer. <ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-14"TITLE="DNS zone transfer">Figure 8.14</A> shows a<SPANCLASS="acronym">DNS</SPAN> zone transfer.</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Direc-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Pro-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">ACK</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tion</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tocol</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Set</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Notes</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Incoming query via <SPANCLASS="acronym">UDP</SPAN>, client to server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer to incoming <SPANCLASS="acronym">UDP</SPAN> query, server to client</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[36]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Incoming query via <SPANCLASS="acronym">TCP</SPAN>, client to server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer to incoming <SPANCLASS="acronym">TCP</SPAN> query, server to client</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Outgoing query via <SPANCLASS="acronym">UDP</SPAN>, client to server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer to outgoing <SPANCLASS="acronym">UDP</SPAN> query, server to client</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[36]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Outgoing query via <SPANCLASS="acronym">TCP</SPAN>, client to server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer to outgoing <SPANCLASS="acronym">TCP</SPAN> query, server to client</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Query or response between two servers via <SPANCLASS="acronym">UDP</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[35]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Query or response between two servers via <SPANCLASS="acronym">UDP</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[36]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Query from external server to internal server via <SPANCLASS="acronym">TCP</SPAN>;also zone transfer request from external secondary server via <SPANCLASS="acronym">TCP</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer from internal server to external server via <SPANCLASS="acronym">TCP</SPAN>;also zone transfer response to external secondary server via <SPANCLASS="acronym">TCP</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[36]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Query from internal server to external server via <SPANCLASS="acronym">TCP</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Answer from external server to internal server via <SPANCLASS="acronym">TCP</SPAN></P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[35] <SPANCLASS="acronym">UDP</SPAN> packets do not have <SPANCLASS="acronym">ACK</SPAN> bits.</P><PCLASS="para">[36] <SPANCLASS="acronym">ACK</SPAN> is not set on the first packet of this type(establishing connection) but will be set on the rest.</P></BLOCKQUOTE><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-14">Figure 8.14: <SPANCLASS="acronym">DNS</SPAN> zone transfer</A></H4><IMGCLASS="graphic"SRC="figs/fire0814.gif"ALT="Figure 8.14"></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-33">8.10.2 Proxying Characteristics of<SPANCLASS="acronym">DNS</SPAN></A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13568"></A><SPANCLASS="acronym">DNS</SPAN> is structured so that servers always act asproxies for clients. It's also possible to use a<SPANCLASS="acronym">DNS</SPAN> feature called <EMCLASS="emphasis">forwarding</EM> so thata <SPANCLASS="acronym">DNS</SPAN> server is effectively a proxy for anotherserver. The remainder of this <SPANCLASS="acronym">DNS</SPAN>discussion describes the use of thesebuilt-in proxying features of <SPANCLASS="acronym">DNS</SPAN>.</P><PCLASS="para">In most implementations, it would be possible to modify the<SPANCLASS="acronym">DNS</SPAN> libraries to use a modified-client proxy. Onmachines that do not support dynamic linking, using a modified-clientproxy for <SPANCLASS="acronym">DNS</SPAN> would require recompiling everynetwork-aware program. Because users don't directly specify serverinformation for <SPANCLASS="acronym">DNS</SPAN>, modified-procedure proxiesseem nearly impossible.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-34">8.10.3 <SPANCLASS="acronym">DNS</SPAN> Data</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13586"></A><ACLASS="indexterm"NAME="AUTOID-13589"></A><ACLASS="indexterm"NAME="AUTOID-13592"></A>The <SPANCLASS="acronym">DNS</SPAN> is a tree-structured database, with serversfor various subtrees scattered throughout the Internet. There are anumber of defined record types in the tree, including:[37]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[37] For detailed information about <SPANCLASS="acronym">DNS</SPAN> record types,what they mean, and how to use them, see <EMCLASS="emphasis"><SPANCLASS="acronym">DNS</SPAN> and <SPANCLASS="acronym">BIND</SPAN></EM>, referenced earlier in this chapter.</P></BLOCKQUOTE><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Record Type</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Usage</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">A</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Translates hostname to <SPANCLASS="acronym">IP</SPAN> address</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PTR</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Translates <SPANCLASS="acronym">IP</SPAN> address to hostname</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">CNAME</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Translates host alias to hostname (&quot;canonical&quot; name)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HINFO</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Gives hardware/software information about a host</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">NS</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Delegates a zone of the <SPANCLASS="acronym">DNS</SPAN> tree to some other server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOA</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Denotes start of authority for a zone of the <SPANCLASS="acronym">DNS</SPAN> tree</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">TXT</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Unstructured text records</P></TD></TR></TBODY></TABLE><PCLASS="para">In fact, there are two separate <SPANCLASS="acronym">DNS</SPAN> data trees: onefor obtaining information by hostname (such as the<SPANCLASS="acronym">IP</SPAN> address, <SPANCLASS="acronym">CNAME</SPAN> record,<SPANCLASS="acronym">HINFO</SPAN> record, or <SPANCLASS="acronym">TXT</SPAN> record thatcorresponds to a given hostname), and one for obtaining information by<SPANCLASS="acronym">IP</SPAN> address (the hostname for a given address).</P><PCLASS="para">For example, here is a sample of the <SPANCLASS="acronym">DNS</SPAN> data for afake domain <EMCLASS="emphasis">somebody.net</EM>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">somebody.net. IN SOA tiger.somebody.net. root.tiger.somebody.net. (                        1001      ; serial number                        36000       ; refresh (10 hr)                        3600        ; retry (1 hr)                        3600000     ; expire (1000 hr)                        36000       ; default ttl (10 hr)                        )               IN  NS       tiger.somebody.net.               IN  NS       lion.somebody.net.tiger          IN  A        192.168.2.34               IN  MX       5 tiger.somebody.net.               IN  MX       10 lion.somebody.net.               IN  HINFO    INTEL-486 BSDIftp            IN  CNAME    tiger.somebody.net.lion           IN  A        192.168.2.35               IN  MX       5 lion.somebody.net.               IN  MX       10 tiger.somebody.net.               IN  HINFO    SUN-3 SUNOSwww            IN  CNAME    lion.somebody.net.wais           IN  CNAME    lion.somebody.net.alaska         IN  NS       bear.alaska.somebody.net.bear.alaska    IN  A        192.168.2.81&#13;</PRE></BLOCKQUOTE><PCLASS="para"></P><PCLASS="para">This domain would also need a corresponding set of<SPANCLASS="acronym">PTR</SPAN> records to map <SPANCLASS="acronym">IP</SPAN> addressesback to hostnames. To translate an <SPANCLASS="acronym">IP</SPAN> address to ahostname, you reverse the components of the <SPANCLASS="acronym">IP</SPAN>address, append <EMCLASS="emphasis">.IN-ADDR.ARPA</EM>, and look up the<SPANCLASS="acronym">DNS PTR</SPAN> record for that name. For example, totranslate <SPANCLASS="acronym">IP</SPAN> address 1.2.3.4, you would look up the<SPANCLASS="acronym">PTR</SPAN> record for<EMCLASS="emphasis">4.3.2.1.IN-ADDR.ARPA</EM>.</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">2.168.192.IN-ADDR.ARPA. IN  SOA tiger.somebody.net.root.tiger.somebody.net. (                                  1001     ; serial number                                 36000    ; refresh (10 hr)                                 3600     ; retry (1 hr)                                 3600000  ; expire (1000 hr)                                 36000    ; default ttl (10 hr)                                  )                         IN  NS  tiger.somebody.net.                         IN  NS  lion.somebody.net.34                       IN  PTR tiger.somebody.net.35                       IN  PTR lion.somebody.net.81                       IN  PTR bear.alaska.somebody.net.&#13;</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-35">8.10.4 <SPANCLASS="acronym">DNS</SPAN> Security Problems</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13676"></A>There are some security problems with <SPANCLASS="acronym">DNS</SPAN> thatare described below.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-67">8.10.4.1 Bogus answers to <SPANCLASS="acronym">DNS</SPAN> queries</A></H4><PCLASS="para">The first security problem with <SPANCLASS="acronym">DNS</SPAN> is that many<SPANCLASS="acronym">DNS</SPAN> servers and clients can be tricked by anattacker into believing bogus information. Many clients and serversdon't check to see whether all the answers they get relate toquestions they actually asked, or whether the answers they get arecoming from the server they asked. Servers, in particular, may cachethese &quot;extra&quot; answers without really thinking about it,and answer later queries with this bogus cached data. This lack ofchecking can allow an attacker to give false data to your clients andservers. For example, an attacker could use this capability to loadyour server's cache with information that says that his<SPANCLASS="acronym">IP</SPAN> address maps to the hostname of a host you trustfor password-less access via <EMCLASS="emphasis">rlogin</EM>. (This isonly one of several reasons you shouldn't allow the <SPANCLASS="acronym">BSD</SPAN>&quot;r&quot; commands across your firewall; see the full discussionof these commands earlier in this chapter.)</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Later versions of <SPANCLASS="acronym">DNS</SPAN> for <SPANCLASS="acronym">UNIX</SPAN>(<SPANCLASS="acronym">BIND</SPAN> 4.9 and later) check for bogus answersand are less susceptible to these problems. Earlier versions, and<SPANCLASS="acronym">DNS</SPAN> clients and servers for other platforms, maystill be susceptible.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-68">8.10.4.2 Mismatched data between the hostnameand <SPANCLASS="acronym">IP</SPAN> address <SPANCLASS="acronym">DNS</SPAN> trees</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13700"></A><ACLASS="indexterm"NAME="AUTOID-13704"></A><ACLASS="indexterm"NAME="AUTOID-13706"></A><ACLASS="indexterm"NAME="AUTOID-13708"></A>The attack described in the previous section points out the problem ofmismatched data between the hostname and <SPANCLASS="acronym">IP</SPAN> addresstrees in the <SPANCLASS="acronym">DNS</SPAN>. In a case like the one we'vedescribed, if you look up the hostname corresponding to the attacker's<SPANCLASS="acronym">IP</SPAN> address (this is called a <EMCLASS="emphasis">reverselookup</EM>), you get back the name of a host you trust. If you thenlook up the <SPANCLASS="acronym">IP</SPAN> address of this hostname (which iscalled a <EMCLASS="emphasis">double-reverse lookup</EM>), you should see that theIP address doesn't match the one the attacker is using. This shouldalert you that something suspicious is going on. Reverse and double-reverse lookups are described in more detail in the section called&quot;Set up a `fake' <SPANCLASS="acronym">DNS</SPAN> server onthe bastion host for the outside world to use&quot; later in this<SPANCLASS="acronym">DNS</SPAN> discussion. </P><PCLASS="para">Any program that makes authentication or authorization decisions basedon the hostname information it gets from <SPANCLASS="acronym">DNS</SPAN> shouldbe very careful to validate the data with this reverse lookup/double-reverse lookup method. In some operating systems (for example, SunOS4.x and later), this check is automatically done for you by the<EMCLASS="emphasis">gethostbyaddr()</EM> library function. In mostother operating systems, you have to do the check yourself. Make surethat you know which approach your own operating system takes and makesure that the daemons that are making such decisions in your system dothe appropriate validation. (And be sure you're preserving thisfunctionality if you modify or replace the vendor's<EMCLASS="emphasis">libc</EM>.) Better yet, don't do any authentication orauthorization based solely on hostname or even on<SPANCLASS="acronym">IP</SPAN> address; there is no way to be sure that apacket comes from the <SPANCLASS="acronym">IP</SPAN> address it claims to comefrom, unless there is some kind of cryptographic authentication withinthe packet that only the true source could have generated.</P><PCLASS="para">Some implementations of double-reverse lookup fail on hosts withmultiple addresses, e.g., dual-homed hosts used for proxying. If bothaddresses are registered at the same name, a <SPANCLASS="acronym">DNS</SPAN>lookup by name will return both of them, but many programs will readonly the first. If the connection happened to come from the secondaddress, the double-reverse will incorrectly fail even though the hostis correctly registered. Although you should avoid using double-reverse implementations that have this flaw, you may also want toensure that on your externally visible multi-homed hosts, lookup byaddress returns a different name for each address, and that thosenames have only one address returned when it is looked up. Forexample, for a host named &quot;foo&quot; with two interfaces named&quot;e0&quot; and &quot;e1&quot;, have lookups of &quot;foo&quot; return bothaddresses, lookups of &quot;foo-e0&quot; and &quot;foo-e1&quot;return only the address of that interface, and lookups by<SPANCLASS="acronym">IP</SPAN> address return &quot;foo-e0&quot; or&quot;foo-e1&quot; (but not simply &quot;foo&quot;) as appropriate.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> For internal multi-homed hosts, you probably don't want to set thingsup in the way we've described; ifyou do, you may end up needing to list them by multiple names anywhereyou want to give them permissions, such as in<EMCLASS="emphasis">/etc/exports</EM> files.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-69">8.10.4.3 Revealing too much information toattackers</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13733"></A><ACLASS="indexterm"NAME="AUTOID-13736"></A>Another problem you may encounter when supporting<SPANCLASS="acronym">DNS</SPAN> with a firewall is that it may revealinformation that you don't want revealed. Someorganizations view internal hostnames (as well as other informationabout internal hosts) as confidential information. They want toprotect these host names much as they do their internal telephonedirectories. They're nervous because internal hostnames may revealproject names or other product intelligence, or because these namesmay reveal the type of the hosts (which may make an attackeasier). For example, it's easy to guess what kind of systemsomething is if its name is &quot;lab-sun&quot; or&quot;cisco-gw&quot;.</P><PCLASS="para">Even the simplest hostname information can be helpful to an attackerwho wants to bluff his way into your site, physically orelectronically. Using information in this way is an example of what iscommonly called a <EMCLASS="emphasis">social engineering</EM> attack. Theattacker first examines the <SPANCLASS="acronym">DNS</SPAN> data to determinethe name of a key host or hosts at your site. Such hosts will often belisted as <SPANCLASS="acronym">DNS</SPAN> servers for the domain, or as<SPANCLASS="acronym">MX</SPAN> gateways for lots of other hosts. Next, theattacker calls or visits your site, posing as a service technician,and says he needs to work on these hosts. He'll ask for the passwordsfor the hosts (if he calls on the telephone), or ask to be shown tothe machine room (if he visits the site). Because the attacker seemslegitimate, and seems to have inside information about the site&nbsp;- afterall, he knows the names of your key hosts&nbsp;- he'll often gainaccess. Social engineering attacks like this takes a lot of brazennesson the part of the attacker, particularly if he actually visits yoursite, but you'd be amazed at how often such attacks succeed.</P><PCLASS="para">Besides internal hostnames, other information is often placed withinthe <SPANCLASS="acronym">DNS</SPAN>; information which is useful locally, butwhich you'd really rather an attacker not have accessto. <SPANCLASS="acronym">DNS</SPAN> <SPANCLASS="acronym">HINFO</SPAN> and<SPANCLASS="acronym">TXT</SPAN> resource records are particularly revealing:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis"><SPANCLASS="acronym">HINFO</SPAN>: Host information records</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13757"></A>These name the hardware and operating system release that a machine isrunning: it's very useful information for system and networkadministrators, but also tells an attacker exactly which list ofbugs to try on that machine.  </P></DD><DTCLASS="term"><EMCLASS="emphasis"><SPANCLASS="acronym">TXT</SPAN>: Textual information records</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13765"></A>These are essentially short unformattedtext records used by a variety of different services to provide variousinformation. For example, some versions of Kerberos and related toolsuse these records to store information that, at another site, might behandled by <SPANCLASS="acronym">NIS/YP</SPAN>.</P></DD></DL><PCLASS="para">Attackers will often obtain <SPANCLASS="acronym">DNS</SPAN> information aboutyour site wholesale by contacting your <SPANCLASS="acronym">DNS</SPAN> serverand asking for a zone transfer, as if they were a secondary server foryour site. You can either prevent this with packet filtering (byblocking <SPANCLASS="acronym">TCP</SPAN>-based<SPANCLASS="acronym">DNS</SPAN> queries, which will unfortunately block morethan just zone transfers) or through the <EMCLASS="emphasis">xfernets</EM>directive of current implementations of <SPANCLASS="acronym">BIND</SPAN> (seethe <SPANCLASS="acronym">BIND</SPAN> documentation for more information).</P><PCLASS="para">The question to keep in mind when considering what<SPANCLASS="acronym">DNS</SPAN> data to reveal is, &quot;Why give attackersany more information than necessary?&quot; The following sectionsprovide some suggestions to help you reveal only the data you wantpeople to have.</P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-36">8.10.5 Setting Up <SPANCLASS="acronym">DNS</SPAN> to HideInformation</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="CH08DNSHIDE"></A><ACLASS="indexterm"NAME="CH08HIDING"></A>We've mentioned that <SPANCLASS="acronym">DNS</SPAN> has a query-forwardingcapability.[38] By taking advantage of this capability, you can giveinternal hosts an unrestricted view of both internal and external<SPANCLASS="acronym">DNS</SPAN> data, while restricting external hosts to avery limited (&quot;sanitized&quot;) view of internal<SPANCLASS="acronym">DNS</SPAN> data. You might want to do this for suchreasons as:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[38] Cricket Liu has pointed out that the strategies described in this section do not work for subdomains. If you are using subdomains, refer to <ACLASS="systemitem.url"HREF="http://www.greatcircle.com/firewalls-book/errata.html">http://www.greatcircle.com/firewalls-book/errata.html</A> or to the second edition of <EMCLASS="emphasis"><SPANCLASS="acronym">DNS</SPAN> and <SPANCLASS="acronym">BIND</SPAN></EM>.</P></BLOCKQUOTE><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Because your internal <SPANCLASS="acronym">DNS</SPAN> data is toosensitive to show to everybody.</P></LI><LICLASS="listitem"><PCLASS="para">Because you know that your internal <SPANCLASS="acronym">DNS</SPAN> serversdon't all work perfectly and you want a better-maintained view for theoutside world.</P></LI><LICLASS="listitem"><PCLASS="para">Because you want to give certain information to external hosts anddifferent information to internal hosts (for example, you want internal hosts to send maildirectly to internal machines, but external hosts to see an<SPANCLASS="acronym">MX</SPAN> record directing the mail to a bastion host).</P></LI></UL><PCLASS="para"><ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-15"TITLE="A firewall can be used to hide DNS information">Figure 8.15</A> shows how to set up<SPANCLASS="acronym">DNS</SPAN> to hide information; the following sectionsdescribe all the details.</P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-15">Figure 8.15: A firewall can be used to hide <SPANCLASS="acronym">DNS</SPAN> information</A></H4><IMGCLASS="graphic"SRC="figs/fire0815.gif"ALT="Figure 8.15"><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-70">8.10.5.1 Set up a `fake'<SPANCLASS="acronym">DNS</SPAN> server on the bastion host for the outsideworld to use</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="CH08DNSFAKE"></A><ACLASS="indexterm"NAME="CH08BHFAKE"></A><ACLASS="indexterm"NAME="CH08SERVERFAKE"></A>The first step in hiding <SPANCLASS="acronym">DNS</SPAN> information from theexternal world is to set up a fake <SPANCLASS="acronym">DNS</SPAN> server on abastion host. This server claims to be authoritative for yourdomain. Make it the server for your domain that is named by the NameServer records maintained by your parent domain. If you have multiplesuch servers for the outside world to talk to (which you should&nbsp;- someor all of the rest may belong to your service provider), make yourfake server the primary server of the set of authoritative servers;make the others secondaries of this primary server.</P><PCLASS="para">As far as this fake server on the bastion host is aware, it knowseverything about your domain. In fact, though, all it knows about iswhatever information you want revealed to the outside world. Thisinformation typically includes only basic hostname and<SPANCLASS="acronym">IP</SPAN> address information about the following hosts:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The machines on your perimeter network (i.e., the machines that makeup your firewall).</P></LI><LICLASS="listitem"><PCLASS="para">Any machines that somebody in the outside world needs to be able tocontact directly. One example of such a machine is an internal Usenetnews (<SPANCLASS="acronym">NNTP</SPAN>) server that is reachable from yourservice provider. (See the section on <SPANCLASS="acronym">NNTP</SPAN>elsewhere in this chapter for an example of why you might want toallow this.) Another example is any host reachable over the Internetfrom trusted affiliates. External machines need an externally visiblename for such an internal machine; it need not be the internalmachine's real name, however, if you feel that the real name issomehow sensitive information, or you just want to be able to changeit on a whim.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13839"></A>In addition, you'll need to publish <SPANCLASS="acronym">MX</SPAN> records forany host or domain names that are used as part of email addresses inemail messages and Usenet news postings, so that people can reply tothese messages. Keep in mind that people may reply to messages days,weeks, months, or even years after they were sent. If a given host ordomain name has been widely used as part of an email address, you mayneed to preserve an <SPANCLASS="acronym">MX</SPAN> record for that host ordomain forever, or at least until well after it's dead and gone, sothat people can still reply to old messages. If it has appeared inprint, &quot;forever&quot; may be all too accurate; sites stillreceive electronic mail for machines decommissioned five and 10 yearsago.</P><PCLASS="para">You will also need to publish fake information for any machines thatcan contact the outside world directly. Many servers on the Internet(for example, most major anonymous <SPANCLASS="acronym">FTP</SPAN> servers)insist on knowing the hostname (not just the <SPANCLASS="acronym">IP</SPAN>address) of any machines that contact them, even if they do nothingwith the hostname but log it. In the <SPANCLASS="acronym">DNS</SPAN> resourcerecords, A (name-to-address mapping) records and<SPANCLASS="acronym">PTR</SPAN> (address-to-name mapping) records handlelookups for names and addresses.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13849"></A>As we've mentioned earlier, machines that have <SPANCLASS="acronym">IP</SPAN>addresses and need hostnames do reverse lookups. With a reverselookup, the server starts with the remote <SPANCLASS="acronym">IP</SPAN>address of the incoming connection, and looks up the hostname that theconnection is coming from. It takes the <SPANCLASS="acronym">IP</SPAN> address(for example, 172.16.19.67), permutes it in a particular way (reversesthe parts and adds <EMCLASS="emphasis">.IN-ADDR.ARPA</EM> to get<EMCLASS="emphasis">67.19.16.172.IN-ADDR.ARPA</EM>, and looks up a<SPANCLASS="acronym">PTR</SPAN> record for that name. The<SPANCLASS="acronym">PTR</SPAN> record should return the hostname for the hostwith that address (e.g., <EMCLASS="emphasis">mycroft.somewhere.net</EM>),which the server then uses for its logs or whatever.</P><PCLASS="para">How can you deal with these reverse lookups? If all these serverswanted was a name to log, you could simply create a wildcard<SPANCLASS="acronym">PTR</SPAN> record. That record would indicate that a wholerange of addresses belongs to an unknown host in a particulardomain. For example, you might have a lookup for<EMCLASS="emphasis">*.19.16.172.IN-ADDR.ARPA</EM> return<EMCLASS="emphasis">unknown.somewhere.net</EM>). Returning thisinformation would be fairly helpful; it would at least tell the serveradministrator whose machine it was(<EMCLASS="emphasis">somewhere.net</EM>'s). Anyone who had a problem withthe machine could pursue it through the published contacts for the<EMCLASS="emphasis">somewhere.net</EM> domain.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13866"></A>There is a problem with doing only this, however. In an effort tovalidate the data returned by the <SPANCLASS="acronym">DNS</SPAN>, more andmore servers (particularly anonymous <SPANCLASS="acronym">FTP</SPAN> servers)are now doing a double-reverse lookup, and won't talk to you unlessthe double-reverse lookup succeeds. This is the same kind of lookup wementioned above; it's certainly necessary for people who provide aservice where they need any degree of authentication of the requestinghost. Whether or not anonymous <SPANCLASS="acronym">FTP</SPAN> is such aservice is another question. Some people believe that once you put afile up for anonymous <SPANCLASS="acronym">FTP</SPAN>, you no longer havereason to try to authenticate hosts; after all, you're trying to giveinformation away. People running anonymous <SPANCLASS="acronym">FTP</SPAN>servers that do double-reverse lookup argue that people who wantservices have a responsibility to be members of the network communityand that requires being identifiable. Whichever side of the argumentyou're on, it is certainly true that the maintainers of several of thelargest and best-known anonymous <SPANCLASS="acronym">FTP</SPAN> servers are onthe side that favors double-reverse lookup, and will not provideservice to you unless double-reverse lookup succeeds.</P><PCLASS="para">In a double-reverse lookup, a <SPANCLASS="acronym">DNS</SPAN> client:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Performs a reverse lookup to translate an <SPANCLASS="acronym">IP</SPAN>address to a hostname.</P></LI><LICLASS="listitem"><PCLASS="para">Does a regular lookup on that hostname to determine its nominal <SPANCLASS="acronym">IP</SPAN>address.</P></LI><LICLASS="listitem"><PCLASS="para">Compares this nominal <SPANCLASS="acronym">IP</SPAN> address to the original<SPANCLASS="acronym">IP</SPAN> address.</P></LI></UL><PCLASS="para">Your fake server needs to provide consistent fake data for all hostsin your domain whose <SPANCLASS="acronym">IP</SPAN> addresses are going to beseen by the outside world. For every <SPANCLASS="acronym">IP</SPAN> address youown, the fake server must publish a <SPANCLASS="acronym">PTR</SPAN> record witha fake hostname, as well as a corresponding A record that maps thefake hostname back to the <SPANCLASS="acronym">IP</SPAN> address. For example,for address 172.16.1.2, you might publish a <SPANCLASS="acronym">PTR</SPAN>record with the name<EMCLASS="emphasis">host-172-16-1-2.somewhere.net</EM> and a correspondingA record which maps <EMCLASS="emphasis">host-172-16-1-2.somewhere.net</EM>back to the corresponding <SPANCLASS="acronym">IP</SPAN> address(172.16.1.2). When you connect to some remote system that attempts todo a reverse lookup of your <SPANCLASS="acronym">IP</SPAN> address (e.g.,172.16.1.2) to determine your hostname, that system will get back thefake hostname (e.g., <EMCLASS="emphasis">host-172-16-1-2</EM>). If thesystem then attempts to do a double-reverse lookup to translate thathostname to an <SPANCLASS="acronym">IP</SPAN> address, it will get back172.16.1.2, which matches the original <SPANCLASS="acronym">IP</SPAN> addressand satisfies the consistency check.</P><PCLASS="para">If you are strictly using proxying to connect internal hosts to theexternal world, you don't need to set up the fake information for yourinternal hosts; you simply need to put up information for the host orhosts running the proxy server. The external world will see only theproxy server's address. For a large network, this by itself may makeusing proxy service for <SPANCLASS="acronym">FTP</SPAN> worthwhile.<ACLASS="indexterm"NAME="AUTOID-13902"></A><ACLASS="indexterm"NAME="AUTOID-13903"></A><ACLASS="indexterm"NAME="AUTOID-13904"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-71">8.10.5.2 Set up a real <SPANCLASS="acronym">DNS</SPAN>server on an internal system for internal hosts to use</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13909"></A><ACLASS="indexterm"NAME="AUTOID-13912"></A>Your internal machines need to use the real <SPANCLASS="acronym">DNS</SPAN>information about your hosts, not the fake information presented tothe outside world. You do this through a standard<SPANCLASS="acronym">DNS</SPAN> server setup on some internal system. Yourinternal machines may also want to find out about external machines,though, e.g., to translate the hostname of a remote anonymous<SPANCLASS="acronym">FTP</SPAN> site to an IP address.</P><PCLASS="para">One way to accomplish this is to provide access to external<SPANCLASS="acronym">DNS</SPAN> information by configuring your internal<SPANCLASS="acronym">DNS</SPAN> server to query remote <SPANCLASS="acronym">DNS</SPAN>servers directly, as appropriate, to resolve queries from internalclients about external hosts. Such a configuration, however, wouldrequire opening your packet filtering to allow your internal<SPANCLASS="acronym">DNS</SPAN> server to talk to these remote<SPANCLASS="acronym">DNS</SPAN> servers (which might be on any host on theInternet). This is a problem because <SPANCLASS="acronym">DNS</SPAN> is<SPANCLASS="acronym">UDP</SPAN>-based, and as we discuss in <ACLASS="xref"HREF="ch06_01.htm"TITLE="Packet Filtering">Chapter 6</A>, you need to block<SPANCLASS="acronym">UDP</SPAN> altogether in order to block outside access tovulnerable <SPANCLASS="acronym">RPC</SPAN>-based services like<SPANCLASS="acronym">NFS</SPAN> and <SPANCLASS="acronym">NIS/YP</SPAN>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13933"></A>Fortunately, the most common <SPANCLASS="acronym">DNS</SPAN> server (the<SPANCLASS="acronym">UNIX</SPAN> <EMCLASS="emphasis">named</EM> program) provides asolution to this dilemma: the <EMCLASS="emphasis">forwarders</EM>directive in the <EMCLASS="emphasis">/etc/named.boot</EM> serverconfiguration file. The <EMCLASS="emphasis">forwarders</EM> directivetells the server that, if it doesn't know the information itselfalready (either from its own zone information or from its cache),it should forward the query to a specific server and let this otherserver figure out the answer, rather than try to contact servers allover the Internet in an attempt to determine the answer itself. In the<EMCLASS="emphasis">/etc/named.boot </EM> configuration file, you set upthe <EMCLASS="emphasis">forwarders</EM> line to point to the fake serveron the bastion host; the file also needs to contain a&quot;slave&quot; line, to tell it to only use the servers on the<EMCLASS="emphasis">forwarders</EM> line, even if the <EMCLASS="emphasis">forwarders</EM> are slow in answering.</P><PCLASS="para">The use of the <EMCLASS="emphasis">forwarders</EM> mechanism doesn't really haveanything to do with hiding the information in the internal<SPANCLASS="acronym">DNS</SPAN> server; it has everything to do with making thepacket filtering as strict as possible (i.e., applying the principleof least privilege), by making it so that the internal<SPANCLASS="acronym">DNS</SPAN> server need only be able to talk to thebastion host <SPANCLASS="acronym">DNS</SPAN> server, not to<SPANCLASS="acronym">DNS</SPAN> servers throughout the whole Internet.</P><PCLASS="para">If internal hosts can't contact external hosts, you may not want tobother setting things up so that they can resolve external host names.<SPANCLASS="acronym">SOCKS</SPAN> proxy clients can be set up to use theexternal name server directly. This simplifies your name serviceconfiguration somewhat, but it complicates your proxyingconfiguration, and some users may want to resolve hostnameseven though they can't reach them (for example, they may beinterested in knowing whether the hostname in an email address isvalid).</P><PCLASS="para"><ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-16"TITLE="DNS with forwarding">Figure 8.16</A> shows how <SPANCLASS="acronym">DNS</SPAN> workswith forwarding; <ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-17"TITLE="DNS without forwarding">Figure 8.17</A> shows how itworks without forwarding.</P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-16">Figure 8.16: <SPANCLASS="acronym">DNS</SPAN> with forwarding</A></H4><IMGCLASS="graphic"SRC="figs/fire0816.gif"ALT="Figure 8.16"><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-17">Figure 8.17: <SPANCLASS="acronym">DNS</SPAN> without forwarding</A></H4><IMGCLASS="graphic"SRC="figs/fire0817.gif"ALT="Figure 8.17"></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-72">8.10.5.3 Internal <SPANCLASS="acronym">DNS</SPAN>clients query the internal server</A></H4><PCLASS="para">The next step is to configure your internal <SPANCLASS="acronym">DNS</SPAN>clients to ask all their queries of the internal server. On<SPANCLASS="acronym">UNIX</SPAN> systems, you do this through the<EMCLASS="emphasis">/etc/resolv.conf</EM> file. There are two cases:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">When the internal server receives a query about an internal system, orabout an external system which is in its cache, it answers directly andimmediately because it already knows the answers to such queries. </P></LI><LICLASS="listitem"><PCLASS="para">When the internal server receives a query about an external systemthat isn't in its cache, the internal server forwards this query tothe bastion host server (because of the <EMCLASS="emphasis">forwarders</EM> linedescribed above). The bastion host server obtains the answer from theappropriate <SPANCLASS="acronym">DNS</SPAN> servers on the Internet and relaysthe answer back to the internal server. The internal server thenanswers the original client and caches the answer.</P></LI></UL><PCLASS="para">In either case, as far as the client is concerned, it asked a questionof the internal server and got an answer from the internalserver. The client doesn't know whether the internal server alreadyknew the answer or had to obtain the answer from other servers(indirectly, via the bastion server). Therefore, the<EMCLASS="emphasis">/etc/resolv.conf</EM> file will look perfectlystandard on internal clients.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-73">8.10.5.4 Bastion <SPANCLASS="acronym">DNS</SPAN>clients also query the internal server</A></H4><PCLASS="para">The key to this whole information-hiding configuration is that<SPANCLASS="acronym">DNS</SPAN> clients on the bastion host must query theinternal server for information, not the server on the bastionhost. This way, <SPANCLASS="acronym">DNS</SPAN> clients on the bastion host(such as Sendmail, for example) can use the real hostnames and so onfor internal hosts, but clients in the outside world can't access theinternal data.</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> server and client configurations are completelyseparate. Many people assume that they must have configuration filesin common, that the clients will automatically know about thelocal server, and that pointing them elsewhere will also point the serverelsewhere. In fact, there is no overlap. Clients never read<EMCLASS="emphasis">/etc/named.boot</EM>, which tells the server what todo, and the server never reads <EMCLASS="emphasis">/etc/resolv.conf</EM>,which tells the clients what to do.</P><PCLASS="para">Again, there are two cases:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">When a <SPANCLASS="acronym">DNS</SPAN> client on the bastion host asks aboutan internal system, it gets the real answer directly from the internalserver.</P></LI><LICLASS="listitem"><PCLASS="para">When a <SPANCLASS="acronym">DNS</SPAN> client on the bastion host asks aboutan external system, the internal <SPANCLASS="acronym">DNS</SPAN> serverforwards the query to the bastion <SPANCLASS="acronym">DNS</SPAN> server. Thebastion server obtains the answer from the appropriate<SPANCLASS="acronym">DNS</SPAN> servers on the Internet, and then relays theanswer back to the internal server. The internal server, in turn,answers the original client on the bastion host.</P></LI></UL><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> clients on the bastion host could obtaininformation about external hosts more directly by asking the<SPANCLASS="acronym">DNS</SPAN> server on the bastion host instead of the oneon the internal host. However, if they did that, they'd be unable toget the &quot;real&quot; internal information, which only the serveron the internal host has. They're going to need that information,because they're talking to the internal hosts as well as the externalhosts.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="FIRE-08-S3-74">8.10.5.5 What your packet filtering systemneeds to allow</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-14008"></A>In order for this <SPANCLASS="acronym">DNS</SPAN> forwarding scheme to work,any packet filtering system between the bastion host and the internalsystems has to allow all of the following (see the tablebelow for details):</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> queries from the internal server to the bastionhost server: <SPANCLASS="acronym">UDP</SPAN> packets from port 53 onthe internal server to port 53 on the bastion host (rule A), and<SPANCLASS="acronym">TCP</SPAN> packets from ports above 1023 on the internalserver to port 53 on the bastion host (rule B).</P></LI><LICLASS="listitem"><PCLASS="para">Responses to those queries from the bastion host to the internalserver: <SPANCLASS="acronym">UDP</SPAN> packets from port 53 on thebastion host to port 53 on the internal server (rule C), and<SPANCLASS="acronym">TCP</SPAN> packets with the ACK bit set from port 53 onthe bastion host to ports above 1023 on the internal server (rule D).</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> queries from the bastion host<SPANCLASS="acronym">DNS</SPAN> clients to the internal server:<SPANCLASS="acronym">UDP</SPAN> and <SPANCLASS="acronym">TCP</SPAN> packets from portsabove 1023 on the bastion host to port 53 on the internal server(rules E and F).</P></LI><LICLASS="listitem"><PCLASS="para">Responses from the internal server to those bastion host<SPANCLASS="acronym">DNS</SPAN> clients: <SPANCLASS="acronym">UDP</SPAN>packets and <SPANCLASS="acronym">TCP</SPAN> packets with the ACK bit set fromport 53 on the internal server to ports above 1023 on the bastion host(Rules G and H).</P></LI></UL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Direc-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Pro-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">ACK</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Rule</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tion</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tocol</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Set</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Action</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">A</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[39]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">B</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">C</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[39]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">D</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">E</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[39]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">F</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">G</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[39]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">H</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[39] <SPANCLASS="acronym">UDP</SPAN> packets do not have <SPANCLASS="acronym">ACK</SPAN> bits.</P></BLOCKQUOTE><ACLASS="indexterm"NAME="AUTOID-14232"></A><ACLASS="indexterm"NAME="AUTOID-14233"></A></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-37">8.10.6 Setting up <SPANCLASS="acronym">DNS</SPAN> Without HidingInformation</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-14238"></A>The approach we've described above is not the only option. Supposethat you don't feel it's necessary to hide your internal<SPANCLASS="acronym">DNS</SPAN> data from the world. In this case, your<SPANCLASS="acronym">DNS</SPAN> configuration is similar to the one we'vedescribed above, but it's somewhat simpler. <ACLASS="xref"HREF="ch08_10.htm#FIRE-08-FIG-18"TITLE="DNS without information hiding">Figure 8.18</A> shows how <SPANCLASS="acronym">DNS</SPAN> workswithout information hiding.</P><H4CLASS="figure"><ACLASS="title"NAME="FIRE-08-FIG-18">Figure 8.18: <SPANCLASS="acronym">DNS</SPAN> without information hiding</A></H4><IMGCLASS="graphic"SRC="figs/fire0818.gif"ALT="Figure 8.18"><PCLASS="para">With this alternate approach, you should still have a bastionhost <SPANCLASS="acronym">DNS</SPAN> server and an internal<SPANCLASS="acronym">DNS</SPAN> server; however, one of these can be asecondary server of the other. Generally, it's easier to make thebastion <SPANCLASS="acronym">DNS</SPAN> server a secondary of the internal<SPANCLASS="acronym">DNS</SPAN> server, and to maintain your<SPANCLASS="acronym">DNS</SPAN> data on the internal server. You should stillconfigure the internal <SPANCLASS="acronym">DNS</SPAN> server to forwardqueries to the bastion host <SPANCLASS="acronym">DNS</SPAN> server, but thebastion host <SPANCLASS="acronym">DNS</SPAN> clients can be configured to querythe bastion host server instead of the internal server.</P><PCLASS="para">You need to configure any packet filtering system between the bastionhost and the internal server to allow the following (see thetable below for details):</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> queries from the internal<SPANCLASS="acronym">DNS</SPAN> server to the bastion <SPANCLASS="acronym">DNS</SPAN>server: <SPANCLASS="acronym">UDP</SPAN> packets from port 53 on theinternal server to port 53 on the bastion host (rule A) and<SPANCLASS="acronym">TCP</SPAN> packets from ports above 1023 on the internalserver to port 53 on the bastion host (rule B).</P></LI><LICLASS="listitem"><PCLASS="para">Responses from the bastion <SPANCLASS="acronym">DNS</SPAN> server to theinternal <SPANCLASS="acronym">DNS</SPAN> server:<SPANCLASS="acronym">UDP</SPAN> packets from port 53 on the bastion host toport 53 on the internal server (rule C) and <SPANCLASS="acronym">TCP</SPAN>packets with the ACK bit set from port 53 on the bastion host to portsabove 1023 on the internal server (rule D).</P></LI></UL><PCLASS="para">If the bastion host is also a <SPANCLASS="acronym">DNS</SPAN> secondary serverand the internal host is the corresponding <SPANCLASS="acronym">DNS</SPAN>primary server, you also have to allow the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> queries from the bastion host<SPANCLASS="acronym">DNS</SPAN> server to the internal <SPANCLASS="acronym">DNS</SPAN>server: <SPANCLASS="acronym">UDP</SPAN> packets from port 53 on thebastion host to port 53 on the internal server (note that this is thesame as rule C), and <SPANCLASS="acronym">TCP</SPAN> packets from ports above1023 on the bastion host to port 53 on the internal server (rule E).</P></LI><LICLASS="listitem"><PCLASS="para">Responses from the internal <SPANCLASS="acronym">DNS</SPAN> server back to thebastion <SPANCLASS="acronym">DNS</SPAN> server: <SPANCLASS="acronym">UDP</SPAN>packets from port 53 on the internal server to port 53 on the bastionhost (note that this is the same as rule A), and<SPANCLASS="acronym">TCP</SPAN> packets with the ACK bit set from port 53 onthe internal server to ports above 1023 on the bastion host (rule F).</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> zone transfer requests from the bastion host tothe internal server: <SPANCLASS="acronym">TCP</SPAN> packets fromports above 1023 on the bastion host to port 53 on the internal server(note that this is the same as rule E).</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> zone transfer responses from the internalserver to the bastion host: <SPANCLASS="acronym">TCP</SPAN> packetswith the ACK bit set from port 53 on the internal server to portsabove 1023 on the bastion host (note that this is the same as rule F).</P></LI></UL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Direc-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Pro-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">ACK</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Rule</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tion</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tocol</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Set</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Action</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">A</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[40]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">B</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">C</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[40]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">D</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">E</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">F</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal Server</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Bastion Host</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permit</P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[40] <SPANCLASS="acronym">UDP</SPAN> packets do not have <SPANCLASS="acronym">ACK</SPAN> bits.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-38">8.10.7 Summary of <SPANCLASS="acronym">DNS</SPAN>Recommendations</A></H3><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Set up an external <SPANCLASS="acronym">DNS</SPAN> server on a bastion host forthe outside world to access.</P></LI><LICLASS="listitem"><PCLASS="para">Do not make <SPANCLASS="acronym">HINFO</SPAN> records visible to the outsideworld; either don't use them, or configure <SPANCLASS="acronym">DNS</SPAN>for information hiding as described above.</P></LI><LICLASS="listitem"><PCLASS="para">Use an up-to-date <SPANCLASS="acronym">BIND</SPAN> implementation and double-reverse lookups to avoid spoofing.</P></LI><LICLASS="listitem"><PCLASS="para">Consider hiding all internal <SPANCLASS="acronym">DNS</SPAN> data and usingforwarding and fake records; this doesn't make sense for all sites,but it might for yours.</P></LI><LICLASS="listitem"><PCLASS="para">Disable zone transfers to anyone but your secondaries, using packetfiltering or the <EMCLASS="emphasis">xfernets</EM> directive. Even if you've chosen not to hideyour <SPANCLASS="acronym">DNS</SPAN> information, there's probably no validreason for anyone but your secondaries to do a zone transfer, anddisallowing zone transfers makes life a bit harder forattackers.</P></LI></UL><ACLASS="indexterm"NAME="AUTOID-14476"></A><ACLASS="indexterm"NAME="AUTOID-14477"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_09.htm"TITLE="8.9 Real-Time Conferencing Services"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.9 Real-Time Conferencing Services"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_11.htm"TITLE="8.11 syslog"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.11 syslog"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.9 Real-Time Conferencing Services</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.11 syslog</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>