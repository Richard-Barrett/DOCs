<HTML><HEAD><TITLE>[Chapter 8] 8.14 Network File System (NFS)</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:26:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Configuring Internet Services"><LINKREL="prev"HREF="ch08_13.htm"TITLE="8.13 Network Time Protocol (NTP)"><LINKREL="next"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_13.htm"TITLE="8.13 Network Time Protocol (NTP)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.13 Network Time Protocol (NTP)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Configuring Internet Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.15 Network Information Service/Yellow Pages (NIS/YP)"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-08-S1-14">8.14 Network File System(<SPANCLASS="acronym">NFS</SPAN>)</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="CH08NFS"></A><ACLASS="indexterm"NAME="CH08CONFNFS"></A><ACLASS="indexterm"NAME="AUTOID-16145"></A>The <SPANCLASS="acronym">NFS</SPAN> protocol is designed to allow systems to accessfiles across the network on a remote system, as conveniently as if thefiles were on directly attached disks. Machines may be<SPANCLASS="acronym">NFS</SPAN> servers (exporting their disks for access byother machines), <SPANCLASS="acronym">NFS</SPAN> clients (accessing disksexported by <SPANCLASS="acronym">NFS</SPAN> servers), orboth. <SPANCLASS="acronym">NFS</SPAN> is heavily used within<SPANCLASS="acronym">LAN</SPAN>s, but it is unsafe to allow across a firewallfor a variety of reasons.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16156"></A>The primary problem with <SPANCLASS="acronym">NFS</SPAN> is its weakauthentication of requests. Access to a given<SPANCLASS="acronym">NFS</SPAN>-exported filesystem is all or nothing; a givenclient machine is either trusted to access the filesystem, or itisn't. If the server trusts a given client machine, the serverbelieves whatever the client tells it about whois trying to access which files. It then uses that information forauthorization according to the standard <SPANCLASS="acronym">UNIX</SPAN> fileprotection mechanisms (i.e., user, group, and otherpermissions). There are a few extra protections some<SPANCLASS="acronym">NFS</SPAN> servers can optionally apply.</P><PCLASS="para">The server's trust in the client is established when the client mountsthe filesystem from the server. The client contacts the server andtells the server what filesystem it wants to access. The server checkswhether or not the client (based on <SPANCLASS="acronym">IP</SPAN> address) isallowed to access that filesystem. If it is, the server gives theclient a &quot;file handle&quot; (basically a magic set ofcredentials for the client), which the client uses for all furtheraccess to the filesystem.</P><PCLASS="para">Once the client has mounted the filesystem (and received a file handlefrom the server) the client sends a request to the server each time itwants to act on a file on that filesystem. The request describes theaction the client wants to take and includes the file handle obtainedfrom the server, so the server assumes that the client isauthorized to request that action.</P><PCLASS="para"><SPANCLASS="acronym">NFS</SPAN>'s main security problems are:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The <SPANCLASS="acronym">NFS</SPAN> server relies on <SPANCLASS="acronym">IP</SPAN>address to authenticate client hosts, making it vulnerable to addressforgery.</P></LI><LICLASS="listitem"><PCLASS="para">The <SPANCLASS="acronym">NFS</SPAN> server relies on the client to authenticatethe user, making it vulnerable to any user who has compromised aclient machine.</P></LI><LICLASS="listitem"><PCLASS="para">The <SPANCLASS="acronym">NFS</SPAN> server doesn't recheck the clientauthentication on every request. The server assumes that if the clientuses a valid file handle, the client is authorized to access thatfilesystem. An attacker with a forged or captured file handle canaccess the filesystem just as easily as a legitimate client can.</P></LI></UL><PCLASS="para">The file handle for a given filesystem is established when thefilesystem is created on the server or when it is mounted for thefirst time on a new server mount point or from a new disk/controllerpair. Unfortunately, the method for generating file handles is fairlypredictable, and an attacker can probably guess the file handle ifhe can guess when the filesystem was created. Most <SPANCLASS="acronym">NFS</SPAN> servers will allow any number of bad guesses withoutcomplaining or shutting down. If the attacker can somehow guess atleast the day the filesystem was created&nbsp;- which is especially easy ifthe attack is against a newly installed machine&nbsp;- he canprobably guess the file handle without too much difficulty, by tryingthe range of file handles that would have been assigned to filesystemscreated that day.</P><PCLASS="para"><SPANCLASS="acronym">NFS</SPAN> servers have no mechanism forcanceling file handles; once a file handle has beenissued, it's good until the server filesystem is reinitialized ormounted elsewhere (even if only temporarily; when it is remounted inits original location again, it will have a new file handle). A clientwhich had access at one time can keep using the file handle itobtained, even if the access controls (the<EMCLASS="emphasis">/etc/exports</EM> file on most <SPANCLASS="acronym">UNIX</SPAN><SPANCLASS="acronym">NFS</SPAN> servers) are later changed to deny access tothat client.</P><PCLASS="para">Under <SPANCLASS="acronym">NFS</SPAN>, root may be treated differently fromnormal users. Some <SPANCLASS="acronym">UNIX</SPAN> <SPANCLASS="acronym">NFS</SPAN>servers always treat root the same way they treat normal users: theclient's root user gets the same access that the server's root userwould have. Some of them always translate the client's root user to a<SPANCLASS="acronym">UID</SPAN> known as &quot;nobody&quot; that is neverused as a regular user; thus, this user will only have the permissionsgranted to the world. This &quot;nobody&quot; <SPANCLASS="acronym">UID</SPAN> may be eitherthe highest possible <SPANCLASS="acronym">UID</SPAN>, or a<SPANCLASS="acronym">UID</SPAN> which translates to -1 (which might be writtenas -1, or as the highest possible <SPANCLASS="acronym">UID</SPAN> plus 1). Onsome <SPANCLASS="acronym">UNIX</SPAN> machines, all three of these numbers (-1,65535, and 65536) are listed in the password file as&quot;nobody.&quot; Most <SPANCLASS="acronym">UNIX</SPAN><SPANCLASS="acronym">NFS</SPAN> servers allow you to choose whether you wish toallow root access or translate it to &quot;nobody&quot; via anoption in the <EMCLASS="emphasis">/etc/exports</EM>file. Non-<SPANCLASS="acronym">UNIX</SPAN> servers normally treat root as if itwere any other user, but because that user is unlikely to have specialprivileges on the server, this isn't a problem.</P><PCLASS="para">Translating root to &quot;nobody&quot; is an extremelyminor security improvement. Anybody who is capable of beingroot on the client is capable of pretending to be anyuser whatsoever on the client, and can therefore see and do anythingany user can do. The translation hides only those files on theserver restricted to access by root itself. You will still probablywant to use translation wherever you can for the minimal protectionit does give you, but you should not feel that it makes it safe toexport filesystems to possibly hostile clients.</P><PCLASS="para">Better protection for the server is available by exporting thefilesystem read-only. If the filesystem is exported purely read-only(no host is allowed to write it) you can be reasonably certain thedata cannot be modified via <SPANCLASS="acronym">NFS</SPAN>. If you allow anyhost to write it, you're vulnerable to forgery.</P><PCLASS="para"><SPANCLASS="acronym">NFS</SPAN> clients may also be in danger from<SPANCLASS="acronym">NFS</SPAN> servers. For example, an<SPANCLASS="acronym">NFS</SPAN>-mounted filesystem may contain <EMCLASS="emphasis">setuid</EM>programs; users on the client would be able to use those programs tobecome root. Device entries on an <SPANCLASS="acronym">NFS</SPAN>-mountedpartition are considered to apply to the client's devices, not theserver's devices. Somebody with an account on an<SPANCLASS="acronym">NFS</SPAN> client and root permission on an<SPANCLASS="acronym">NFS</SPAN> server, can use this to get unlimited, ifinconvenient, read-write access to all data on the client.&#13;</P><PCLASS="para">Some <SPANCLASS="acronym">NFS</SPAN> clients provide options to<EMCLASS="emphasis">mount</EM> that can be used to disable devices and<EMCLASS="emphasis">setuid/setgid</EM> on mounted filesystems. If <EMCLASS="emphasis">mount</EM> is notavailable to users other than root, or if it always uses these optionsfor users other than root, this will protect the client from theserver. If these options are not available, even if only root canmount filesystems, you should consider mounting a filesystem to beequivalent to granting root access to the server machine.</P><PCLASS="para">Some vendors also support a version of <SPANCLASS="acronym">NFS</SPAN> based onSecure <SPANCLASS="acronym">RPC</SPAN>. Secure<SPANCLASS="acronym">RPC</SPAN> has several problems that also apply to<SPANCLASS="acronym">NFS</SPAN> implemented on top of it:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">It is not widely supported; it is available almost exclusively onSuns.</P></LI><LICLASS="listitem"><PCLASS="para">The process of exchanging keys between machines is difficult.</P></LI><LICLASS="listitem"><PCLASS="para">It doesn't perform as well as standard <SPANCLASS="acronym">RPC</SPAN>.(<SPANCLASS="acronym">NFS</SPAN> is particularly performance-sensitive.)</P></LI></UL><PCLASS="para">If you have an immutable requirement to run <SPANCLASS="acronym">NFS</SPAN>across your firewall to some other site, you should investigate eithera private connection to that site or network-level encryption(described in <ACLASS="xref"HREF="ch10_01.htm"TITLE="Authentication and Inbound Services">Chapter 10</A>). Be aware that<SPANCLASS="acronym">NFS</SPAN> generally doesn't perform well over networksrunning at anything less than Ethernet speed anyway. You might want toinvestigate alternatives such as <SPANCLASS="acronym">FTP</SPAN> for yourparticular situation or alternate network filesystems such as theAndrew File System (<SPANCLASS="acronym">AFS</SPAN>) (see <ACLASS="xref"HREF="appb_01.htm"TITLE="Tools">Appendix B</A> for more information).</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-53">8.14.1 Packet Filtering Characteristics of<SPANCLASS="acronym">NFS</SPAN></A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16241"></A><SPANCLASS="acronym">NFS</SPAN> is an <SPANCLASS="acronym">RPC</SPAN>-based service. Asmentioned in <ACLASS="xref"HREF="ch06_01.htm"TITLE="Packet Filtering">Chapter 6</A>, it's very difficult tohandle <SPANCLASS="acronym">RPC</SPAN>-based services with a packet filteringsystem, because the servers normally don't use predictable portnumbers. While the port numbers to be used are too unpredictable for apacket filtering system to cope with, they're not so unpredictable anattacker can't find them. (If nothing else, the attacker could trysending <SPANCLASS="acronym">NFS</SPAN> requests to all ports to see whichrespond as he would expect an <SPANCLASS="acronym">NFS</SPAN> server torespond.)</P><PCLASS="para"><SPANCLASS="acronym">NFS</SPAN> is generally provided over<SPANCLASS="acronym">UDP</SPAN>; there are <SPANCLASS="acronym">TCP</SPAN>-based<SPANCLASS="acronym">NFS</SPAN> servers and clients available, but they arerare and seldom used. <SPANCLASS="acronym">NFS</SPAN> is somewhatunusual for an <SPANCLASS="acronym">RPC</SPAN>-based service in that it normallyuses a predictable port number (port 2049)&nbsp;- apparently for obscurereasons related to how <SPANCLASS="acronym">NFS</SPAN> servers interact withthe kernel on most <SPANCLASS="acronym">UNIX</SPAN> systems. We wouldn'trecommend depending on <SPANCLASS="acronym">NFS</SPAN> servers to always windup on port 2049, however. <SPANCLASS="acronym">RFC</SPAN> 1094, the<SPANCLASS="acronym">NFS</SPAN> protocol specification, says &quot;The<SPANCLASS="acronym">NFS</SPAN> protocol currently uses the<SPANCLASS="acronym">UDP</SPAN> port number 2049. This is not an officiallyassigned port, so later versions of the protocol use the`Portmapping' facility of <SPANCLASS="acronym">RPC</SPAN>.&quot;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-52">8.14.2 Proxying Characteristics of<SPANCLASS="acronym">NFS</SPAN></A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16270"></A><SPANCLASS="acronym">RPC</SPAN>-based protocols are almost as unpleasant toproxy as they are to allow with packet filtering; they cannot beadequately handled with generic proxies. A dedicated<SPANCLASS="acronym">NFS</SPAN> proxy server would be possible, but we do notknow of one. <SPANCLASS="acronym">NFS</SPAN> is particularly problematic forproxying, because it is data-intense, exchanging large volumes of datain situations where delay is very noticeable to the user. A host doing<SPANCLASS="acronym">NFS</SPAN> proxying is going to need to deal with multipleconnections transferring large packets at high speeds.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-54">8.14.3 Summary of <SPANCLASS="acronym">NFS</SPAN>Recommendations </A></H3><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Don't allow <SPANCLASS="acronym">NFS</SPAN> across your firewall. </P></LI></UL><ACLASS="indexterm"NAME="AUTOID-16285"></A><ACLASS="indexterm"NAME="AUTOID-16286"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_13.htm"TITLE="8.13 Network Time Protocol (NTP)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.13 Network Time Protocol (NTP)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.15 Network Information Service/Yellow Pages (NIS/YP)"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.13 Network Time Protocol (NTP)</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.15 Network Information Service/Yellow Pages (NIS/YP)</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>