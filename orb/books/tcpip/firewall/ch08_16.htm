<HTML><HEAD><TITLE>[Chapter 8] 8.16 X11 Window System</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:26:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Configuring Internet Services"><LINKREL="prev"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"><LINKREL="next"HREF="ch08_17.htm"TITLE="8.17 Printing Protocols (lpr and lp)"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.15 Network Information Service/Yellow Pages (NIS/YP)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Configuring Internet Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_17.htm"TITLE="8.17 Printing Protocols (lpr and lp)"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.17 Printing Protocols (lpr and lp)"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-08-S1-16">8.16 X11 Window System</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="CH08X11"></A><ACLASS="indexterm"NAME="CH08CONFX11"></A><ACLASS="indexterm"NAME="CH08FWX11"></A><ACLASS="indexterm"NAME="AUTOID-16382"></A>The X11 window system poses a number of problems for a firewallsystem. (Note that most window systems supplied by <SPANCLASS="acronym">UNIX</SPAN>vendors are either based on or very similar to X11&nbsp;- from a firewallspoint of view, most of the considerations are the same&nbsp;- so thisdiscussion of X11 applies to other window systems as well.)</P><PCLASS="para">The first problem with X11 is that the client/server relationship isbackwards from most other protocols. The X11&quot;server&quot; is the display/mouse/keyboard unit, and the&quot;clients&quot; are the application programs driving windows orinteracting with the mouse and keyboard on that server. Thus, theserver is typically inside the firewall (sitting on theuser's desk), and the clients are outside (running onwhatever remote computers the user has accessed).</P><PCLASS="para">X11 servers have certain capabilities that make them a very temptingtarget for attackers. There are a number of things an attacker can dowith access to an X11 server, including:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Getting screen dumps&nbsp;- obtaining a copy of whatever informationis being displayed on the screen at any given time.</P></LI><LICLASS="listitem"><PCLASS="para">Reading keystrokes&nbsp;- for example, reading a user's password as heor she types it at the keyboard.</P></LI><LICLASS="listitem"><PCLASS="para">Injecting keystrokes as if they were typed by the user; thispotentially allows the attacker to do all kinds of mean and nastythings, especially in a window where the user happens to be running aroot shell.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16397"></A>X11 has certain security mechanisms, but to date they've proven eithertoo weak or too cumbersome to be truly useful against determinedattack. One, commonly referred to as the &quot;magic cookie&quot;mechanism, relies on a secret shared between the server and legitimateclients; clients are allowed to access the server only if they canprove they know the secret. The problem is, even though the secret isnever passed directly between the X11 client and server, most waysthat users make the secret available to both the server and theclient (via an <SPANCLASS="acronym">NFS</SPAN>-accessible file in their homedirectory that's accessible to both server and client, for example)compromise the secret to anybody who is snooping on the network. Whilethe magic cookie mechanism is theoretically secure, inpractice it is undermined by the way that it is commonly andincorrectly used; unfortunately, there's no easy way to use itcorrectly.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16402"></A>Another of X11's security mechanisms, called the<EMCLASS="emphasis">xhost</EM> mechanism, allows the user to tell theserver which remote <SPANCLASS="acronym">IP</SPAN> addresses the server shouldaccept connections from. Users are supposed to authorize onlyspecific hosts where they intend to run X11 clients. Theproblem is, users forget to preauthorize the hosts before startingthe clients, and the clients are refused access; after this happens afew times, many users disable the controls altogether. For example,they issue an <EMCLASS="emphasis">xhost +</EM> command toallow connections from any and all hosts in the name of convenience(so they can easily run programs on remote systems), without givingany thought to the security implications of their actions. Even ifusers don't disable <EMCLASS="emphasis">xhost</EM> altogether, they'restill vulnerable to any connections from the machines they'veapproved; there's no way for the <EMCLASS="emphasis">xhost</EM> mechanismto determine whether or not any given connection from one of thosemachines is legitimate.</P><PCLASS="para">Few sites need to run X11 across their firewalls from theInternet. There are occasional <SPANCLASS="acronym">WWW</SPAN> sites thatprovide X clients as a way to provide real-time displays, but they arefew and far between. If you need to allow X11 from theInternet, consider using one of the X11 proxies discussed in <ACLASS="xref"HREF="ch07_01.htm"TITLE="Proxy Systems">Chapter 7</A>, for example, <EMCLASS="emphasis">x-gw</EM> in the TIS Firewall Toolkit.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-57">8.16.1 Packet Filtering Characteristics ofX11</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="CH08PFX11"></A>X11 uses <SPANCLASS="acronym">TCP</SPAN>. X11 uses port 6000 for the firstserver on a machine. This choice of ports presents another problem forpacket filtering systems: the X11 ports are in the middle of the&quot;above 1023&quot; range of ports that most applications use forrandom client-side ports. Thus, any packet filtering scheme thatallows packets in to ports above 1023 (in order to allow packets fromremote servers to local clients) needs to be very careful not to allowconnections in to X11 servers. It can do this either by totally blocking access tothe range of ports used by these servers (which can be a trickyproposition because of the possibility of multiple servers permachine, per the discussion below) or by using &quot;start-of-connection&quot; filtering (looking at the <SPANCLASS="acronym">TCP ACK</SPAN>bit) to disallow inbound <SPANCLASS="acronym">TCP</SPAN> connections to anyports.</P><PCLASS="para">Some machines run multiple X11 servers. The first server is at port6000, the second at 6001, and so on. On a <SPANCLASS="acronym">UNIX</SPAN>system, the DISPLAY environment variable tells clientswhat X11 server to contact. This variable is of the form<EMCLASS="emphasis">hostname:n</EM>; this tells clients tocontact the server on port 6000+<EMCLASS="emphasis">n</EM> on machine<EMCLASS="emphasis">hostname</EM>.</P><PCLASS="para">Sometimes such machines actually have multiple display/keyboard/mousesetups, but more often the multiple servers are<EMCLASS="emphasis">virtual</EM> servers for some remote X terminal. X11is a very verbose, high-bandwidth protocol; it doesn't run well overdial-up links. One of the solutions that's been adopted (for example,by <SPANCLASS="acronym">NCD</SPAN>'s <EMCLASS="emphasis">XRemote</EM> package) isto run a virtual X11 server on a well-connected machine (for example,linked by Ethernet to the machines the client programs are runningon), and then to speak some other, more frugal protocol over the slowlink between this virtual server and the real X terminal. Everymachine running X11 will have a server at port 6000. A few will haveservers at 6000 and 6001. Only a very few machines will have more thanthat.</P><PCLASS="para">Thus, to block access to all these servers, assuming that you can't dostart-of-connection filtering, you need to block access to ports 6000through 6000+<EMCLASS="emphasis">n</EM>, where <EMCLASS="emphasis">n</EM> issome undetermined number. You don't want to make<EMCLASS="emphasis">n</EM> too small, because that might expose some ofthe virtual X11 servers to attack. On the other hand, you don't wantto make it too big, either, because you're blocking ports in the rangeof random ports that could be used by other application clients. Youdon't want to keep another protocol's client (e.g., Telnet or<SPANCLASS="acronym">FTP</SPAN>) from working simply because it happened topick as its random client port a port blocked to prevent X11 access.</P><PCLASS="para">You do have one thing going for you: the way most operating systemsallocate such random ports. Generally, when a clientapplication asks the operating system to allocate a random port for itsuse, the kernel allocates the next available port after the last oneallocated (wrapping around to the beginning of the port number spacewhen necessary). If a client happens to grab a port blocked because ofX11, the client will fail. If the user tries to run the client again afew times, the client will get a new port each time, and will eventuallysucceed when the port allocated moves beyond the blocked range.</P><PCLASS="para">A common approach (again, assuming that you can't do start-of-connection filtering to block external connections to internalservers) is to block, say, four ports (ports 6000 through 6003) on allhosts, and more ports on hosts where you know or suspect people will runlots of virtual X11 servers, e.g., the hosts people dial in tofrom their X terminals at home. A more straightforward approach is touse proxying to direct connections to a bastion host that is not runninga window system. It can make outbound connections on any port withoutworrying about hitting the blocked range, because it doesn't need ablocked range.</P><PCLASS="para">What should you do on a machine where you've blocked a large range ofports (because of the potential for many X11 servers on that machine)? If you have problems with clients of other protocols because of theblocked ports, you could run a simple program to keep the kernel's&quot;next port&quot; assignment out of the blocked range. Theprogram would simply need to ask the kernel for a random port, and ifthe port it was assigned was in the blocked range, keep asking for morerandom ports until the ports being assigned were no longer in theblocked range. The program would then need to perform this check everyminute or so. Most sites will choose to either avoid the problemaltogether with proxying, or ignore the problem, rather than going tothis length to deal with it, but if you have a server that must provideheavily used Internet client access and multiple X servers, it may beworth it to you.</P><PCLASS="para">Some vendors provide modified or enhanced X11 servers with somewhatdifferent characteristics; for example, Sun's OpenWindows server listensat both port 6000 (for X11) and port 2000 (for Sun's olderNeWS window system protocol), with second servers at ports6001 and 2001, and so on.</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Direc-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Pro-</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Source</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Dest.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">ACK</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tion</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Addr.</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">tocol</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Port</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Set</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Notes</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">6000+<EMCLASS="emphasis">n</EM></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[52]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Incoming X11 connection to <EMCLASS="emphasis">n</EM>th server, client toserver</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">6000+<EMCLASS="emphasis">n</EM></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Incoming X11 connection to <EMCLASS="emphasis">n</EM>th server, server toclient</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Out</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">6000+<EMCLASS="emphasis">n</EM></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[52]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Outgoing X11 connection to <EMCLASS="emphasis">n</EM>th server, client toserver</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">In</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Ext</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Int</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">6000+<EMCLASS="emphasis">n</EM></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt;1023</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Outgoing X11 connection to <EMCLASS="emphasis">n</EM>th server, server toclient</P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[52] <SPANCLASS="acronym">ACK</SPAN> is not set on the first packet of this type(establishing connection) but will be set on the rest.</P></BLOCKQUOTE><ACLASS="indexterm"NAME="AUTOID-16555"></A></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-08-S2-58">8.16.2 Summary of X11 Recommendations</A></H3><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Do not allow clients on the Internet to connect to X11 servers onyour internal network. If you have to, use an X11 proxy server (such asthe one in the <SPANCLASS="acronym">TIS FWTK</SPAN>) running on a bastion host.</P></LI><LICLASS="listitem"><PCLASS="para">If you cannot use start-of-connection filters, blocking X11 mayblock other connections. You will need to use proxying or specialprograms if you have large numbers of X11 servers on the same machine.</P></LI></UL><ACLASS="indexterm"NAME="AUTOID-16564"></A><ACLASS="indexterm"NAME="AUTOID-16565"></A><ACLASS="indexterm"NAME="AUTOID-16566"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_15.htm"TITLE="8.15 Network Information Service/Yellow Pages (NIS/YP)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.15 Network Information Service/Yellow Pages (NIS/YP)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_17.htm"TITLE="8.17 Printing Protocols (lpr and lp)"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.17 Printing Protocols (lpr and lp)"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.15 Network Information Service/Yellow Pages (NIS/YP)</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.17 Printing Protocols (lpr and lp)</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>