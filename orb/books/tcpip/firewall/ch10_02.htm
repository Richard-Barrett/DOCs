<HTML><HEAD><TITLE>[Chapter 10] 10.2 What Is Authentication?</TITLE><METANAME="DC.title"CONTENT="Building Internet Firewalls"><METANAME="DC.creator"CONTENT="D. Brent Chapman &amp; Elizabeth D. Zwicky"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:28:40Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-124-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. Authentication and Inbound Services"><LINKREL="prev"HREF="ch10_01.htm"TITLE="10.1 Risks of Using Inbound Services"><LINKREL="next"HREF="ch10_03.htm"TITLE="10.3 Authentication Mechanisms"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Building Internet Firewalls"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Building Internet Firewalls"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/fsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_01.htm"TITLE="10.1 Risks of Using Inbound Services"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.1 Risks of Using Inbound Services"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>Authentication and InboundServices</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_03.htm"TITLE="10.3 Authentication Mechanisms"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.3 Authentication Mechanisms"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="FIRE-10-S1-2">10.2 What Is Authentication?</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20310"></A><ACLASS="indexterm"NAME="CH10AUTHTYPES"></A>Usually, people think of authentication in terms of passwords. Althoughpasswords are frequently used for authentication, there are actually avariety of authentication mechanisms. These mechanisms can generally becategorized as verifying one or more of the following:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">Something you are</EM></DT><DDCLASS="listitem"><PCLASS="para">This is the field of biometrics, including techniques such asfingerprint scans, retina scans, voiceprint analysis, and so on.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Something you know</EM></DT><DDCLASS="listitem"><PCLASS="para">This is a traditional password system.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Something you have</EM></DT><DDCLASS="listitem"><PCLASS="para">This includes mechanisms such as challenge-response lists, one-timepads, smart cards, and so on.</P></DD></DL><PCLASS="para">Some systems combine these approaches. For example, a smart card thatrequires the user to enter a personal identification number(<SPANCLASS="acronym">PIN</SPAN>) to unlock it is a combination of somethingyou have (the card) and something you know (the<SPANCLASS="acronym">PIN</SPAN>). In theory, it is considered a good idea tocombine at least two mechanisms, because people can steal either one: the thing you have is susceptible to ordinary theft, andthe thing you know is compromised by sniffing if it passes overthe Internet; but it's rare for somebody to be able to get both atonce. Automatic teller machines use this combination; however,<SPANCLASS="acronym">ATM</SPAN>s also demonstrate the flaw in the theory: whenyou are authenticating (standing at the <SPANCLASS="acronym">ATM</SPAN>), youreveal what you have (your card) and what you know (your<SPANCLASS="acronym">PIN</SPAN>) simultaneously, making yourself vulnerable toa thief who watches you use the machine to capture your<SPANCLASS="acronym">PIN</SPAN>, then steals your card as you leave.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-10-S2-4">10.2.1 Something You Are</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20342"></A><ACLASS="indexterm"NAME="AUTOID-20344"></A>There are many types of biometric systems in use or under developmenttoday; they test such diverse personal characteristics as your voice,your fingerprint or handprint, your retina, your signature, and yourtyping patterns. Biometric systems are extremely attractive, becausethey get around the problems associated with using things that can bestolen or revealed. (Even the horror movie scenario of hacking offsomebody's thumb to use in the fingerprint scanner is taken intoaccount; most scanners insist that a pulse be present.) Unfortunately,biometric systems are not practical for normal Internet applications. </P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20347"></A>Commonly available computer hardware is not capable of readingfingerprints, much less retinas. Voiceprint technology is more tempting;it's not unusual for machines these days to have microphones. But it'snot universal, either, and you can't guarantee that every machine you'llwant to log in from has a microphone, much less the client applicationto digitize and transmit your voice. Moreover, every machine may nothave the disk space and network bandwidth needed for this approach. Finally, if the biometric information has to be communicated from whereyou are to where it can be checked, you run the risk of anattacker's capturing it and replaying it later, unless you have some wayof encrypting or otherwise protecting it.</P><PCLASS="para">Even if every machine had all the capabilities it needed, reliablevoiceprint identification is surprisingly hard to accomplish. Manypeople wish to use their computers even when they have head colds, whichthrow off many voice-recognition systems. You can't use a fixed phraseas a password, or you would be vulnerable to a literal playback attackinvolving a tape recorder. (These problems have been addressed indedicated systems, but there are no widely available authenticationsystems for general-purpose computers that can deal with them, and it'snot at all trivial to develop one.) You can't use a different phraseevery time, because voiceprint comparison on arbitrary text is not areal-time operation&nbsp;- unless you have a spare supercomputer lyingaround to do it with. Almost everybody wants to log in with a delaymeasured in seconds, at worst; getting back to the user with an answerin a few hours is not going to work.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20351"></A>Keystroke timing, used to characterize someone's typing pattern, is asurprisingly reliable biometric identification system and requires nospecial hardware. The computer provides a phrase to type, and then timesthe gaps between characters as you type it. On a phrase of reasonablelength, people type in an identifiable pattern, and imitating it is muchharder than it looks. Like voiceprints, keystroke timings may change forenvironmental reasons; in the case of keystroke timings, colds aren'ta problem, but people have great difficulty authenticating while drunk.(This is not necessarily a disadvantage, of course.) The genuinedisadvantage is that keystroke timings can be gathered only at themachine to which the keyboard is attached. That means that use of thismethod across the Internet requires modified clients. In addition,there are some people, mostly poor typists, who have trouble everauthenticating because their typing patterns are inconsistent.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-10-S2-5">10.2.2 Something You Know</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="CH10PASS"></A>If the long-lost heir to a fortune turns up in a novel, you can betthat fingerprints aren't going to be available to do biometricauthentication. Instead, the claimant is probably going to try toprove that she is who she says she is because she knows the name ofthe stuffed animal she slept with at age three. This is authenticationby knowledge, just like the traditional <SPANCLASS="acronym">UNIX</SPAN>password system. (And, just like traditional <SPANCLASS="acronym">UNIX</SPAN>passwords, the claimant's answers can be faked if she's a good guesserand gets enough tries.)</P><PCLASS="para">Authentication that depends on something you know relies on thatsomething's being both hard to guess and secret. In order for you toauthenticate reliably, you have to know the secret reliably, too. Thisisn't as easy as it sounds. Most people are bad at making up andremembering unguessable things, and they're worse at keeping secrets.If you use short keys, it's easy to guess them; if you use long keys,it's hard to remember them. If you write them down, you're basicallyconverting to a different type of authentication; now, it's somethingyou have.</P><PCLASS="para">System administrators who unblushingly tell their users never to writedown passwords probably have a few stashed in their wallets anyway; thisis a combination of &quot;what you know&quot; and &quot;what youhave.&quot; &quot;What you know&quot; is how to read your ownhandwriting, and which slip of paper contains the passwords, rather thanlast week's lunch order. &quot;What you have&quot; is the slip ofpaper itself.</P><PCLASS="para">Despite all of the risks of &quot;what you know&quot; systems, it isstill practical to use such systems, as long as you aren't revealing thesecret to everybody in the near vicinity every time you authenticate.There is a reason why passwords are so popular: they're fast, they'recheap, and, in practice, people don't forget them or lose the pieces ofpaper all that often. However, it is absolutely impractical to pass themacross the Internet in any form that can be used safely. </P><PCLASS="para">Is there any way to use a &quot;what you know&quot; system safely onthe Internet? Yes. Use passwords, but make sure that they arenonreusable (one-time) passwords.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20365"></A><ACLASS="indexterm"NAME="AUTOID-20368"></A>There are two ways to make traditional, memorized passwords nonreusable.One is to include an <EMCLASS="emphasis">encrypted time-stamp</EM>&nbsp;- thisis the method that Kerberos uses. As long as you can't modify thetime-stamp without knowing the password, this prevents playback.Unfortunately, it requires two things:<ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Special client software that knows how to time-stamp the password.</P></LI><LICLASS="listitem"><PCLASS="para">Synchronized time between the client and the server. If the serverand the client have different times, the password will be either invalidalready or not yet valid when it arrives. </P></LI></UL></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20377"></A>The other way to make traditional, memorized passwords nonreusable is touse a <EMCLASS="emphasis">challenge-response system</EM>. With such asystem, the password you give depends on a prompt that the server givesyou. Challenge-response is the traditional method for identifyingyourself at a speakeasy, entering a military camp, or meetingfellow spies in art museums. It may seem to be an impractical approach,because in order to be reasonably safe from playback attacks you need awide variety of challenges, each with a separate response. If you havetrouble remembering one password, you certainly aren't going to remember47 of them. </P><PCLASS="para">In fact, however, challenge-response systems for computers are designedso that instead of memorizing the response to each challenge, youmemorize a rule for converting the challenge into a response. Thisconcept has yet to become popular as a pure &quot;what you know&quot;option, because it's difficult to apply to a large number of people. Arule like &quot;reverse the first three letters, capitalize the fourth,delete the fifth, and uppercase the rest of them&quot; is easy toprogram, but it's not necessarily easy to represent so that you can havea different rule for each user. Even if you can remember your own rule,you're apt to follow along the challenge with a finger, muttering therule to yourself while you try to implement it; someone watching overyour shoulder can pretty easily determine the rule. </P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="FIRE-10-S2-6">10.2.3 Something You Have</A></H3><PCLASS="para">In practice, the most successful authentication systems forInternet use today are based on the third type of authentication:&quot;something you have.&quot; What you have may be a printed list ofsingle-use passwords or an electronic card; it's usually, but notalways, combined with &quot;something you know.&quot;</P><PCLASS="para">The use of electronic cards makes it practical to use challenge-responseor time-based encryption. For challenge-response, you encode in the carditself the rule that converts the challenge to the response. Fortime-based encryption, you encode in the card both the time source andthe encryption smarts. Either way, you can do authentication withoutneeding modified clients or users with trick memories. </P><PCLASS="para">Using printed lists of passwords is generally referred to as using<EMCLASS="emphasis">one-time passwords</EM>. This confuses people becauseall nonreusable passwords are good only one time, by definition.Printed password lists are called that because they resemble a spydevice called a <EMCLASS="emphasis">one-time pad</EM> that consists of a padof paper with different instructions on each page. You encrypt onemessage with each page, so that the opposite side doesn't get multiplechances to break the code.[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] In fact, printed one-time password lists resemble one-time pads soclosely that it's inadvisable to bring one to the attention of a customsagent when travelling internationally.</P></BLOCKQUOTE><ACLASS="indexterm"NAME="AUTOID-20390"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_01.htm"TITLE="10.1 Risks of Using Inbound Services"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.1 Risks of Using Inbound Services"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Building Internet Firewalls"><IMGSRC="../gifs/txthome.gif"ALT="Building Internet Firewalls"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_03.htm"TITLE="10.3 Authentication Mechanisms"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.3 Authentication Mechanisms"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.1 Risks of Using Inbound Services</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_a.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">10.3 Authentication Mechanisms</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>