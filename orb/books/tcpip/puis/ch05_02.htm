<HTML><HEAD><TITLE>[Chapter 5] 5.2 Using File Permissions</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:01:36Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch05_01.htm"TITLE="5. The UNIX Filesystem"><LINKREL="prev"HREF="ch05_01.htm"TITLE="5.1 Files"><LINKREL="next"HREF="ch05_03.htm"TITLE="5.3 The umask"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_01.htm"TITLE="5.1 Files"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.1 Files"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 5<BR>The UNIX Filesystem</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 The umask"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.3 The umask"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2">5.2 Using File Permissions</A></H2><PCLASS="para">Because file permissions determine who can read and modifythe information stored in your files, they are your primary methodfor protecting the data that you store on your <SPANCLASS="acronym">UNIX</SPAN>system.</P><PCLASS="para">Consider the directory listing presented earlier in this chapter:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">ls -lF </B>total 161 -rw-r--r-- 1 sian     user        505 Feb  9 13:19 instructions -rw-r--r-- 1 sian     user       3159 Feb  9 13:14 invoice -rw-r--r-- 1 sian     user       6318 Feb  9 13:14 letter -rw------- 1 sian     user      15897 Feb  9 13:20 more-stuff -rw-r----- 1 sian     biochem    4320 Feb  9 13:20 notes -rwxr-xr-x 1 sian     user     122880 Feb  9 13:26 stats* -------r-x 1 sian     user     989987 Mar  6 08:13 weird-file %</PRE></BLOCKQUOTE><PCLASS="para">In this example, any user on the system can read the files<ICLASS="filename">instructions</I>, <ICLASS="filename">invoice</I>,<ICLASS="filename">letter</I>, or <ICLASS="filename">stats</I> becausethey all have the letter r in the &quot;other&quot; columnof the permissions field. The file <ICLASS="filename">notes</I> canbe read only by user sian or by users who are in the <ICLASS="systemitem.username">biochem</I> group. And only <ICLASS="systemitem.username">sian</I> can read the informationin the file <ICLASS="filename">more-stuff</I>.</P><PCLASS="para">A more interesting set of permissions is present on <ICLASS="filename">weird-file</I>.User <ICLASS="filename">sian</I> owns the file but cannot access it.Members of group <ICLASS="filename">user</I> also are not allowedaccess. However, any user except <ICLASS="filename">sian</I> who isalso <EMCLASS="emphasis">not</EM> in the group <ICLASS="filename">user</I>can read and execute the file. Some variant of these permissionsare useful in some cases where you want to make a file readableor executable by others, but you don't want to accidentallyoverwrite or execute it yourself. If you are the owner of the fileand the permissions deny you access, it does not matter if you arein the group, or if other bits are set to allow the access.</P><PCLASS="para">Of course, the superuser can read any file on the system,and anybody who knows Sian's password can log in as <ICLASS="systemitem.username">sian</I> and read her files (including<ICLASS="filename">weird-file</I>, if the permissions are changedfirst).</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.1">5.2.1 chmod: Changing a File's Permissions</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-4278"></A><ACLASS="indexterm"NAME="AUTOID-4280"></A>Youcan change a file's permissions with the <KBDCLASS="command">chmod</KBD> commandor the <KBDCLASS="command">chmod()</KBD> system call. You can change afile's permissions only if you are the file'sowner. The one exception to this rule is the superuser: if you arelogged in as superuser, you can change the permissions of any file.[12]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] Any file that is not mounted using <SPANCLASS="acronym">NFS</SPAN>,that is. See <ACLASS="xref"HREF="ch20_01.htm"TITLE="NFS">Chapter 20</A> for details.</P></BLOCKQUOTE><PCLASS="para">In its simplest form, the <KBDCLASS="command">chmod</KBD> command lets you specify whichof a file's permissions you wish to change. This usageis called <ICLASS="firstterm">symbolic mode</I>. The symbolic formof the <KBDCLASS="command">chmod</KBD> command[13] has theform:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] The <SPANCLASS="acronym">UNIX</SPAN>kernel actually supports two system calls for changing a file'smode: <KBDCLASS="command">chmod()</KBD>, which changes the mode of a file,and <KBDCLASS="command">fchmod()</KBD>, which changes the mode of a fileassociated with an open file descriptor.</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen">chmod [-Rfh] [agou][+-=][rwxXstugol] <ICLASS="filename">filelist</I></PRE></BLOCKQUOTE><PCLASS="para">This command changes the permissions of filelist, which canbe either a single file or a group of files. The letters agou specifywhose privileges are being modified. You may provide none, one,or more, as shown in <ACLASS="xref"HREF="ch05_02.htm#PUIS-CHP-5-TAB-5"TITLE="Whose Privileges Are Being Modified?">Table 5.5</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-5-TAB-5">Table 5.5: Whose PrivilegesAre Being Modified?</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Letter</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Meaning</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">a</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Modifies privileges for all users</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">g</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Modifies group privileges</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">o</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Modifies others' privileges</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">u</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Modifies the owner's privileges</P></TD></TR></TBODY></TABLE><PCLASS="para">The symbols specify what is supposed to be done with the privilege.You must type only one symbol, as shown in <ACLASS="xref"HREF="ch05_02.htm#PUIS-CHP-5-TAB-6"TITLE="What to Do with Privilege">Table 5.6</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-5-TAB-6">Table 5.6: What to Do withPrivilege</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Symbol</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Meaning</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">+</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Adds to the current privilege</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">-</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Removes from the current privilege</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">=</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Replaces the current privilege</P></TD></TR></TBODY></TABLE><PCLASS="para">The last letters specify which privilege is to be added, asshown in <ACLASS="xref"HREF="ch05_02.htm#PUIS-CHP-5-TAB-7"TITLE="What Privileges Are Being Changed?">Table 5.7</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-5-TAB-7">Table 5.7: What PrivilegesAre Being Changed?</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Letter</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Meaning</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="2"><PCLASS="para"><EMCLASS="emphasis">Options for all versions of <SPANCLASS="acronym">UNIX</SPAN></EM></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">r</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read access</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">w</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write access</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">x</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute access</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">s</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><SPANCLASS="acronym">SUID</SPAN> or <SPANCLASS="acronym">SGID</SPAN></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">t</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Sticky bit[14]</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="2"><PCLASS="para"><EMCLASS="emphasis">Options for <SPANCLASS="acronym">BSD</SPAN>-derived versions of <SPANCLASS="acronym">UNIX</SPAN> only:</EM></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">X</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Sets execute only if the file is a directoryor already has some other execute bit set.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">u</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Takes permissions from the user permissions.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">g</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Takes permissions from the group permissions.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">o</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Takes permissions from other permissions.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="2"><PCLASS="para"><EMCLASS="emphasis">Options for System V-derived versions of <SPANCLASS="acronym">UNIX</SPAN> only:</EM></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">l</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Enables mandatory locking on file.</P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] On most systems, only the superuser can set the sticky bit on a non-directory filesystementry.</P></BLOCKQUOTE><PCLASS="para">If the <ACLASS="indexterm"NAME="AUTOID-4449"></A><KBDCLASS="command">-R</KBD>option is specified for versions that support it, the <KBDCLASS="command">chmod</KBD> commandruns recursively. If you specify a directory in <ICLASS="filename">filelist</I>,that directory has its permission changed, as do all of the filescontained in that directory. If the directory contains any subdirectories,the process is repeated.</P><PCLASS="para">If the <ACLASS="indexterm"NAME="AUTOID-4456"></A><KBDCLASS="command">-f</KBD>option is specified for versions that support it, <KBDCLASS="command">chmod</KBD> does notreport any errors encountered. This processing is sometimes usefulin shell scripts if you don't know whether the <ICLASS="filename">filelist</I>exists or not and if you don't want to generate an errormessage.</P><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-4463"></A><KBDCLASS="command">-h</KBD>option is specified in some systems to change how <KBDCLASS="command">chmod</KBD> works withsymbolic links. If the <KBDCLASS="command">-h</KBD> option is specified and one ofthe arguments is a symbolic link, the permissions of the file ordirectory pointed to by the link are <EMCLASS="emphasis">not</EM> changed.</P><PCLASS="para">The symbolic form of the <KBDCLASS="command">chmod</KBD> command is useful if you onlywant to add or remove a specific privilege from a file. For example,if Sian wanted to give everybody in her group write permission tothe file <ICLASS="filename">notes</I>, she could issue the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">ls -l notes </B>-rw-r--r-- 1 sian     biochem    4320 Feb  9 13:20 notes % <BCLASS="emphasis.bold">chmod g+w notes </B>% <BCLASS="emphasis.bold">ls -l notes </B>-rw-rw-r-- 1 sian     biochem    4320 Feb  9 13:20 notes %</PRE></BLOCKQUOTE><PCLASS="para">To change this file further so people who aren'tin her group can't read it, she could use the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">chmod o-r notes </B>% <BCLASS="emphasis.bold">ls -l notes</B> -rw-rw---- 1 sian     biochem    4320 Feb  9 13:20 notes %</PRE></BLOCKQUOTE><PCLASS="para">To change the permissions of the <ICLASS="filename">invoice</I>file so nobody else on the system can read or write it, Sian coulduse the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">chmod go= invoice</B> % <BCLASS="emphasis.bold">ls -l invoice</B> -rw------- 1 sian     user    4320 Feb  9 13:20 invoice % <BCLASS="emphasis.bold">date</B> Sun Feb 10 00:32:55 EST 1991 % </PRE></BLOCKQUOTE><PCLASS="para">Notice that changing a file's permissions does <EMCLASS="emphasis">not</EM>change its modification time (although it will alter the inode's<ACLASS="indexterm"NAME="AUTOID-4489"></A>ctime).</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.2">5.2.2 Changing a File's Permissions</A></H3><PCLASS="para">You can also use the <KBDCLASS="command">chmod</KBD> command to set a file'spermissions, without regard to the settings that existed beforethe command was executed. This format is called the <EMCLASS="emphasis">absolute</EM>form of the <KBDCLASS="command">chmod</KBD> command.</P><PCLASS="para">The absolute form of <KBDCLASS="command">chmod</KBD> has the syntax:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% chmod [-Rfh] <KBDCLASS="command">mode</KBD> <ICLASS="filename">filelist</I></PRE></BLOCKQUOTE><PCLASS="para">where options have the following meanings:</P><DLCLASS="variablelist"><DTCLASS="term">-R</DT><DDCLASS="listitem"><PCLASS="para">As described earlier</P></DD><DTCLASS="term">-f</DT><DDCLASS="listitem"><PCLASS="para">As described earlier</P></DD><DTCLASS="term">-h</DT><DDCLASS="listitem"><PCLASS="para">As described earlier</P></DD><DTCLASS="term">mode</DT><DDCLASS="listitem"><PCLASS="para">The mode to which you wish to set the file, expressedas an octal[15] value</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[15] Octal means &quot;base 8.&quot;Normally, we use base 10, which uses the digits 0, 1, 2, 3, 4, 5,6, 7, 8, and 9. The octal system uses the digitals 0, 1, 2, 3, 4,5, 6, and 7. If you are confused, don't be: for most purposes,you can pretend that the numbers are in decimal notation and neverknow the difference.</P></BLOCKQUOTE></DD><DTCLASS="term"><ICLASS="filename">filelist</I></DT><DDCLASS="listitem"><PCLASS="para">The list of the files whose modes you wish to set</P></DD></DL><PCLASS="para">To use this form of the <KBDCLASS="command">chmod</KBD> command, you must calculatethe octal value of the file permissions that you want. The nextsection describes how to do this.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.3">5.2.3 Calculating Octal File Permissions</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-4532"></A><ACLASS="indexterm"NAME="AUTOID-4534"></A><KBDCLASS="command">chmod</KBD>allows you to specify a file's permissions with a four-digitoctal number. You calculate the number by adding[16]the permissions. Use <ACLASS="xref"HREF="ch05_02.htm#PUIS-CHP-5-TAB-8"TITLE="Octal Numbers and Permissions">Table 5.8</A>to determine the octal number that corresponds to each file permission.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[16] Technically,we are ORing the values together, but as there is no carry, it'sthe same as adding.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-5-TAB-8">Table 5.8: Octal Numbersand Permissions</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Octal Number</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permission</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">4000</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set user ID on execution (<SPANCLASS="acronym">SUID</SPAN>)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">2000</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set group ID on execution (<SPANCLASS="acronym">SGID</SPAN>)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">1000</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&quot;Sticky bit&quot;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0400</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read by owner</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0200</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write by owner</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0100</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute by owner</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0040</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read by group</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0020</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write by group</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0010</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute by group</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0004</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read by other</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0002</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write by other</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0001</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute by other</P></TD></TR></TBODY></TABLE><PCLASS="para">Thus, a file with the permissions &quot;-rwxr-x---&quot;has a mode of 0750, calculated as follows:</P><PCLASS="para">0400	Read by owner</P><PCLASS="para">0200	Write by owner</P><PCLASS="para">0100	Execute by owner</P><PCLASS="para">0040	Read by group</P><PCLASS="para">0010	Execute by group   0750	Result</P><PCLASS="para"><ACLASS="xref"HREF="ch05_02.htm#PUIS-CHP-5-TAB-9"TITLE="Common File Permissions">Table 5.9</A> contains some common file permissionsand their uses.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-5-TAB-9">Table 5.9: Common File Permissions</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Octal Number</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">File</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Permission</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0755</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">/bin/ls</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Anybody can copy or run the program;the file's owner can modify it.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0711</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$<SPANCLASS="acronym">HOME</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Locks a user's home directoryso that no other users on the system can display its contents, butallows other users to access files or subdirectories contained withinthe directory if they know the names of the files or directories.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0700</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$<SPANCLASS="acronym">HOME</SPAN></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Locks a user's home directoryso that no other users on the system can access its contents, orthe contents of any subdirectory.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0600</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">/usr/mail/$USER</I>and other mailboxes</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The user can read or write the contentsof the mailbox, but no other users (except the superuser) may accessit.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0644</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">any file</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The file's owner can read ormodify the file; everybody else can only read it.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0664</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">groupfile</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The file's owner or anybodyin the group can modify the file; everybody else can only read it.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0666</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">writable</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Anybody can read or modify the file.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0444</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">readable</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Anybody can read the file; only the superusercan modify it without changing the permissions.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.4">5.2.4 Using Octal File Permissions</A></H3><PCLASS="para">After you have calculated the octal file permission that youwant, you can use the <KBDCLASS="command">chmod</KBD> command to set the permissions of filesyou own.</P><PCLASS="para">For example, to make all of the C language source files ina directory writable by the owner and readable by everybody else,type the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">chmod 644 *.c</B> % <BCLASS="emphasis.bold">ls -l *.c</B> -rw-r--r-- 1 kevin     okisrc   28092 Aug  9 9:52 cdrom.c -rw-r--r-- 1 kevin     okisrc    5496 Aug  9 9:52 cfs_subr.c -rw-r--r-- 1 kevin     okisrc    5752 Aug  9 9:52 cfs_vfsops.c -rw-r--r-- 1 kevin     okisrc   11998 Aug  9 9:53 cfs_vnodeops.c -rw-r--r-- 1 kevin     okisrc    3031 Aug  9 9:53 load_unld.c -rw-r--r-- 1 kevin     okisrc    1928 Aug  9 9:54 Unix_rw.c -rw-r--r-- 1 kevin     okisrc     153 Aug  9 9:54 vers.c %</PRE></BLOCKQUOTE><PCLASS="para">To change the permissions of a file so it can be read or modifiedby anybody in your group, but can't be read or writtenby anybody else in the system, type the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% c<BCLASS="emphasis.bold">hmod 660 memberlist</B> % l<BCLASS="emphasis.bold">s -l memberlist</B> -rw-rw---- 1 kevin    okisrc     153 Aug 10 8:32 memberlist <ACLASS="indexterm"NAME="AUTOID-4710"></A><ACLASS="indexterm"NAME="AUTOID-4713"></A><ACLASS="indexterm"NAME="AUTOID-4715"></A><ACLASS="indexterm"NAME="AUTOID-4717"></A><ACLASS="indexterm"NAME="AUTOID-4720"></A>  %</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.5">5.2.5 Access Control Lists[17]</A></H3><BLOCKQUOTECLASS="footnote"><PCLASS="para">[17] This section islargely based on &AElig;leen Frisch's <EMCLASS="emphasis">EssentialSystem Administration, Second Edition </EM>(O'Reilly&amp; Associates, 1995), Chapter 6, and is used here with permission.</P></BLOCKQUOTE><PCLASS="para">Some <ACLASS="indexterm"NAME="AUTOID-4728"></A><ACLASS="indexterm"NAME="AUTOID-4731"></A><ACLASS="indexterm"NAME="AUTOID-4733"></A>versionsof <SPANCLASS="acronym">UNIX</SPAN> support Access Control Lists, or <SPANCLASS="acronym">ACLS</SPAN>.These are normally provided as an extension to standard <SPANCLASS="acronym">UNIX</SPAN>file permission modes. With <SPANCLASS="acronym">ACLS</SPAN>, you can specifyadditional access rights to each file and directory for many individualusers rather than lumping them all into the category &quot;other.&quot;You can also set different permissions for members of differentgroups. We think they are a wonderful feature, and something wewill see more of in future years. Unfortunately, every vendor hasimplemented them differently, and this makes describing them somewhatcomplex.</P><PCLASS="para"><SPANCLASS="acronym">ACLS</SPAN> offer a further refinement to thestandard <SPANCLASS="acronym">UNIX</SPAN> file permissions capabilities.<SPANCLASS="acronym">ACLS</SPAN> enable you to specify file access for completelyarbitrary subsets of users and/or groups. Both <SPANCLASS="acronym">AIX</SPAN>and HP-UX provide access control lists. Solaris and Linux are supposedto have them in future releases. Also, the Open Software Foundation'sDistributed Computing Environment has a form of <SPANCLASS="acronym">ACLS</SPAN>.</P><PCLASS="para">For many purposes, <SPANCLASS="acronym">ACLS</SPAN> are superior tothe <SPANCLASS="acronym">UNIX</SPAN> group mechanism for small collaborativeprojects. If Hana wants to give Miria&nbsp;- and only Miria&nbsp;- accessto a particular file, Hana can modify the file's <SPANCLASS="acronym">ACL</SPAN>to give Miria access. Without <SPANCLASS="acronym">ACLS</SPAN>, Hana wouldhave to go to the system administrator, have a new group createdthat contains both Hana and Miria (and only Hana and Miria) as groupmembers, and then change the group of the file to the newly createdgroup.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Because <SPANCLASS="acronym">ACLS</SPAN> are not standard across<SPANCLASS="acronym">UNIX</SPAN> versions, you should not expect them towork in a network filesystem environment. In particular, Sun plansto support <SPANCLASS="acronym">ACLS</SPAN> through the use of private extensionsto the <SPANCLASS="acronym">NFS3</SPAN> filesystem, rather than building<SPANCLASS="acronym">ACLS</SPAN> into the specification. Therefore, be surethat anything you export via <SPANCLASS="acronym">NFS</SPAN> is adequatelyprotected by the default <SPANCLASS="acronym">UNIX</SPAN> file permissionsand ownership settings.</P></BLOCKQUOTE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.5.1">5.2.5.1 AIX Access Control Lists</A></H4><PCLASS="para">An <SPANCLASS="acronym">AIX</SPAN> <SPANCLASS="acronym">ACL</SPAN> <ACLASS="indexterm"NAME="AUTOID-4765"></A>contains these fields (the text in italicsto the right describes the line contents):</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">attributes:	<EMCLASS="emphasis">	  Special modes like SUID.</EM>base permissions		  Normal UNIX file modes:    owner(chavez): rw-		<EMCLASS="emphasis">   User access.</EM>    group(chem): rw-		<EMCLASS="emphasis">   Group access.</EM>    others: r--		<EMCLASS="emphasis">   Other access.</EM>extended permissions		  More specific permissions entries:    enabled		<EMCLASS="emphasis">   Whether they're used or not.</EM>    specify  r-- u:harvey		<EMCLASS="emphasis">   Permissions for user harvey.</EM>    deny     -w- g:organic		<EMCLASS="emphasis">   Permissions for group organic.</EM>    permit   rw- u:hill, g:bio<EMCLASS="emphasis">	 	   Permissions for user hill when in group bio</EM>.</PRE></BLOCKQUOTE><PCLASS="para">The first line specifies any special attributes on the file(or directory). The possible attribute keywords are <SPANCLASS="acronym">SETUID, SETGID</SPAN>, and <SPANCLASS="acronym">SVTX</SPAN> (sticky bit is set).Multiple attributes are all placed on one line, separated by commas.</P><PCLASS="para">The next section of the <SPANCLASS="acronym">ACL</SPAN> lists the <EMCLASS="emphasis">basepermissions </EM>for the file or directory. These correspondexactly to the <SPANCLASS="acronym">UNIX</SPAN> file modes. Thus, for thefile we&quot;re looking at, the owner (who is <EMCLASS="emphasis">chavez</EM>)has read and write access, members of the group <EMCLASS="emphasis">chem</EM>(which is the group owner of the file) also have read and writeaccess, and all others have read access.</P><PCLASS="para">The final section specifies <EMCLASS="emphasis">extended permissions</EM>for the file: access information specified by user and group name.The first line in this section is either the word <EMCLASS="emphasis">enabled</EM>or <EMCLASS="emphasis">disabled</EM>, indicating whether the extendedpermissions that follow are actually used to determine file accessor not. In our example, extended permissions are in use.</P><PCLASS="para">The rest of the lines in the <SPANCLASS="acronym">ACL</SPAN> are <EMCLASS="emphasis">accesscontrol entrie</EM>s (<SPANCLASS="acronym">ACES</SPAN>), which havethe following format:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">operation  access-types  user-and-group-info</PRE></BLOCKQUOTE><PCLASS="para">where the <EMCLASS="emphasis">operation</EM> is one of the keywords<EMCLASS="emphasis">permit</EM>, <EMCLASS="emphasis">deny</EM>, or <EMCLASS="emphasis">specify</EM>,which correspond to <KBDCLASS="command">chmod</KBD>'s +, -, and= operators, respectively. <EMCLASS="emphasis">permit</EM>adds the specified permissions to the ones the user already has,based on the base permissions; <EMCLASS="emphasis">deny</EM> takes awaythe specified access; and <EMCLASS="emphasis">specify</EM> sets theaccess for the user to the listed value. The <EMCLASS="emphasis">access-types</EM>are the same as those for normal <SPANCLASS="acronym">UNIX</SPAN> file modes.The <EMCLASS="emphasis">user-and-group-info</EM> consists of a username (preceded by <EMCLASS="emphasis">u:</EM>) or one or more groupnames (each preceded by <EMCLASS="emphasis">g:</EM>) or both. Multipleitems are separated by commas.</P><PCLASS="para">Let&quot;s look again at the <SPANCLASS="acronym">ACES</SPAN> inour sample <SPANCLASS="acronym">ACL</SPAN>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">specify  r--     u:harveydeny     r--     g:organicpermit   rw-     u:hill, g:bio</PRE></BLOCKQUOTE><PCLASS="para">The first line grants read-only access to user <EMCLASS="emphasis">harvey</EM>on this file. The second line removes read access for the <EMCLASS="emphasis">organic</EM>group from whatever permissions a user in that group already has.The final line adds read and write access to user <EMCLASS="emphasis">hill</EM>while group <EMCLASS="emphasis">bio</EM> is part of the current groupset. By default, the current group set is all of the groups to whichthe user belongs.</P><PCLASS="para"><SPANCLASS="acronym">ACLS</SPAN> that specify a username and groupare useful mostly for accounting purposes; the <SPANCLASS="acronym">ACL</SPAN>shown earlier ensures that user <EMCLASS="emphasis">hill</EM> has group<EMCLASS="emphasis">bio</EM> active when working with this file. Theyare also useful if you add a user to a group on a temporary basis,ensuring that the added file access goes away if the user is laterremoved from the group. In the previous example, user <EMCLASS="emphasis">hill</EM>would no longer have access to the file if she were removed fromthe <EMCLASS="emphasis">bio</EM> group (unless, of course, the file'sbase permissions grant it to her).</P><PCLASS="para">If more than one item is included in the <EMCLASS="emphasis">user-and-group-info</EM>,then all of the items must be true for the entry to be applied toa process (<SPANCLASS="acronym">AND</SPAN> logic). For example, the first<SPANCLASS="acronym">ACE</SPAN> below is applied only to users who &quot;haveboth <EMCLASS="emphasis">bio</EM> and <EMCLASS="emphasis">chem</EM> in theirgroup sets&quot; (which is often equivalent to &quot;aremembers of both the <EMCLASS="emphasis">chem</EM> and <EMCLASS="emphasis">bio</EM>groups&quot;):</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">permit   rw-    g:chem, g:biopermit   rw-    u:hill, g:chem, g:bio</PRE></BLOCKQUOTE><PCLASS="para">The second <SPANCLASS="acronym">ACE</SPAN> applies to user <EMCLASS="emphasis">hill</EM>only when both groups are in the current group set. If you wantedto grant write access to anyone who was a member of either group<EMCLASS="emphasis">chem</EM> or group <EMCLASS="emphasis">bio</EM>, youwould specify two separate entries:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">permit   rw-    g:chempermit   rw-    g:bio</PRE></BLOCKQUOTE><PCLASS="para">At this point, you might wonder what happens when more thanone entry applies. When a process requests access to a file withextended permissions, the permitted accesses from the base permissionsand <EMCLASS="emphasis">all</EM> applicable <SPANCLASS="acronym">ACES</SPAN>&nbsp;- all<SPANCLASS="acronym">ACES</SPAN> which match the user and group identityof the process&nbsp;- are combined via a union operation. Thedenied accesses from the base permissions and all applicable <SPANCLASS="acronym">ACES</SPAN>are also combined. If the requested access is permitted <EMCLASS="emphasis">and</EM>it is not denied, then it is granted. Thus, contradictions among<SPANCLASS="acronym">ACES</SPAN> are resolved in the most conservative way:access is denied unless it is both permitted and not denied.</P><PCLASS="para">For example, consider the <SPANCLASS="acronym">ACL</SPAN> below:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">attributes:  base permissions    owner(chavez): rw-    group(chem): r--    others:         ---extended permissions    enabled    specify         r--   u:stein    permit          rw-   g:organic, g:bio    deny            rwx   g:physics</PRE></BLOCKQUOTE><PCLASS="para">Now suppose that the user <EMCLASS="emphasis">stein</EM>, whois a member of both the <EMCLASS="emphasis">organic</EM> and <EMCLASS="emphasis">bio</EM>groups (and not a member of the <EMCLASS="emphasis">chem</EM> group),wants write access to this file. The base permissions clearly grant<EMCLASS="emphasis">stein</EM> no access at all to the file. The <SPANCLASS="acronym">ACES</SPAN>in lines one and two of the extended permissions apply to <EMCLASS="emphasis">stein</EM>.These <SPANCLASS="acronym">ACES</SPAN> grant him read access (lines one andtwo) and write access (line two). They also deny him write and executeaccess (implicit in line one). Thus, <EMCLASS="emphasis">stein</EM>will not be given write access because while the combined <SPANCLASS="acronym">ACES</SPAN>do grant it to him, they also deny write access, and so the requestwill fail.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> The base permissions on a file with an extended accesscontrol list may be changed with <KBDCLASS="command">chmod</KBD>'s symbolic mode,and any changes made in this way will be reflected in the base permissionssection of the <SPANCLASS="acronym">ACL</SPAN>. However, <KBDCLASS="command">chmod</KBD>'snumeric mode must not be used for files with extended permissions,because using it automatically disables them.</P></BLOCKQUOTE><PCLASS="para"><SPANCLASS="acronym">ACLS</SPAN> may be applied and modified with the<ACLASS="indexterm"NAME="AUTOID-4868"></A>acledit command. acledit retrievesthe current <SPANCLASS="acronym">ACL</SPAN> for the file specified as itsargument and opens it for editing, using the text editor specifiedby the <SPANCLASS="acronym">EDITOR</SPAN> environment variable. The use ofthis variable under <SPANCLASS="acronym">AIX</SPAN> is different from itsuse in other <SPANCLASS="acronym">UNIX</SPAN> systems.[18]For one thing, no default exists(most <SPANCLASS="acronym">UNIX</SPAN> implementations use vi when <SPANCLASS="acronym">EDITOR</SPAN>is unset). For another, <SPANCLASS="acronym">AIX</SPAN> requires that thefull pathname to the editor be supplied, rather than only the filename.[19]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[18] As are many thingsin <SPANCLASS="acronym">AIX</SPAN>.</P><PCLASS="para">[19] E.g., <ICLASS="filename">/bin/vi</I>, not <ICLASS="filename">vi</I>.</P></BLOCKQUOTE><PCLASS="para">Once in the editor, make any changes to the <SPANCLASS="acronym">ACL</SPAN>that you wish. If you are adding extended permission <SPANCLASS="acronym">ACES</SPAN>,be sure to change <EMCLASS="emphasis">disabled</EM> to <EMCLASS="emphasis">enabled</EM>in the first line of that section. When you are finished, exit fromthe editor normally. <SPANCLASS="acronym">AIX</SPAN> will then print themessage:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Should the modified <SPANCLASS="acronym">ACL</SPAN> be applied? (y)</PRE></BLOCKQUOTE><PCLASS="para">If <ACLASS="indexterm"NAME="AUTOID-4893"></A><ACLASS="indexterm"NAME="AUTOID-4896"></A>you wish to discard your changes tothe <SPANCLASS="acronym">ACL</SPAN>, enter &quot;n&quot;; otherwise,you should enter a carriage return. <SPANCLASS="acronym">AIX</SPAN> willthen check the new <SPANCLASS="acronym">ACL</SPAN>, and if it has no errors,apply it to the file. If there are errors in the <SPANCLASS="acronym">ACL</SPAN>(misspelled keywords or usernames are the most common), you willbe placed back in the editor where you can correct the errors andtry again. <SPANCLASS="acronym">AIX</SPAN> will put error messages like thefollowing example at the bottom of the file, describing the errorsit found:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">* line number  9: unknown keyword: spceify* line number 10: unknown user: chavze</PRE></BLOCKQUOTE><PCLASS="para">You don't need to delete the error messages themselvesfrom the <SPANCLASS="acronym">ACL</SPAN>.</P><PCLASS="para">However, this is the slow way of applying an <SPANCLASS="acronym">ACL</SPAN>.The <KBDCLASS="command">aclget</KBD> and <KBDCLASS="command">aclput</KBD> commands offer alternative ways to displayand apply <SPANCLASS="acronym">ACLS</SPAN> to files.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-4913"></A><KBDCLASS="command">aclget</KBD> takesa filename as its argument, and displays the corresponding <SPANCLASS="acronym">ACL</SPAN>on standard output (or to the file specified in its <KBDCLASS="command">-o</KBD>option).</P><PCLASS="para">The <KBDCLASS="command">aclput</KBD> command is used to read an <SPANCLASS="acronym">ACL</SPAN>from a text file. By default, it takes its input from standard input,or from an input file specified with the<ICLASS="filename"> -i </I>option.Thus, to set the <SPANCLASS="acronym">ACL</SPAN> for the file <EMCLASS="emphasis">gold</EM>to the one stored in the file <EMCLASS="emphasis">metal.acl</EM>, youcould use this command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ aclput -i metal.acl gold</PRE></BLOCKQUOTE><PCLASS="para">This form of aclput is useful if you use only a few different<SPANCLASS="acronym">ACLS</SPAN>, all of which are saved as separate filesto be applied as needed.</P><PCLASS="para">To copy an <SPANCLASS="acronym">ACL</SPAN> from one file to another,put <KBDCLASS="command">aclget</KBD> and <KBDCLASS="command">aclput</KBD> together in a pipe. For example, the commandbelow copies the <SPANCLASS="acronym">ACL</SPAN> from the file <EMCLASS="emphasis">silver</EM>to the file <EMCLASS="emphasis">emerald</EM>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ aclget silver | aclput emerald</PRE></BLOCKQUOTE><PCLASS="para">To copy an <SPANCLASS="acronym">ACL</SPAN> from one file to a groupof files, use <ACLASS="indexterm"NAME="AUTOID-4938"></A><KBDCLASS="command">xargs</KBD>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ ls *.dat *.old | xargs -i /bin/sh -c &quot;aclget silver | aclput {}&quot;</PRE></BLOCKQUOTE><PCLASS="para">These commands copy the <SPANCLASS="acronym">ACL</SPAN> in <EMCLASS="emphasis">silver</EM>to all the files ending in <EMCLASS="emphasis">.dat</EM> and <EMCLASS="emphasis">.old</EM>in the current directory.</P><PCLASS="para">You can use the <ACLASS="indexterm"NAME="AUTOID-4948"></A><ACLASS="indexterm"NAME="AUTOID-4951"></A><KBDCLASS="command">ls -le</KBD> command to quickly determine whethera file has an extended permissions set or not:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ ls -le *_acl-rw-r-----+   1 chavez  chem           51 Mar 20 13:27  has_acl-rwxrws----   2 chavez  chem          512 Feb 08 17:58  no_acl</PRE></BLOCKQUOTE><PCLASS="para">The plus sign appended to the normal mode string indicatesthe presence of extended permissions; the minus sign is presentotherwise.<ACLASS="indexterm"NAME="AUTOID-4957"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-5-SECT-2.5.2">5.2.5.2 HP-UX access control lists</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-4963"></A><ACLASS="indexterm"NAME="AUTOID-4965"></A><KBDCLASS="command">lsacl</KBD> command can be used to view the access controllist for a file. For a file having only normal <SPANCLASS="acronym">UNIX</SPAN>file modes set, the output looks like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">(chavez.%,rw-)(%.chem,r--)(%.%,---)  bronze</PRE></BLOCKQUOTE><PCLASS="para">This example shows the format an <SPANCLASS="acronym">ACL</SPAN> takesunder HP-UX. Each parenthesized item is known as an <EMCLASS="emphasis">accesscontrol list entry</EM>, although we're going tocall them &quot;entries.&quot; The percent sign character(&quot;%&quot;) is a wildcard within an entry,and the three entries in the previous listing specify the accessfor user <EMCLASS="emphasis">chavez</EM> as a member of any group, forany user in group <EMCLASS="emphasis">chem</EM>, and for all other usersand groups, respectively.</P><PCLASS="para">A file can have up to 16 access control list entries: threebase entries corresponding to normal file modes and up to 13 optionalentries. Here is the access control list for another file (generatedthis time by lsacl -l):</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">silver:rwx chavez.%r-x %.chemr-x %.physr-x hill.biorwx harvey.%--- %.%</PRE></BLOCKQUOTE><PCLASS="para">This <SPANCLASS="acronym">ACL</SPAN> grants every access to user <EMCLASS="emphasis">chavez</EM>with any current group membership (she is the file owner). It grantsread and execute access to members of the <EMCLASS="emphasis">chem</EM>and <EMCLASS="emphasis">phys</EM> groups; it grants read and executeaccess to user <EMCLASS="emphasis">hill, </EM>if hill is a member ofgroup <EMCLASS="emphasis">bio</EM>; it grants user <EMCLASS="emphasis">harvey</EM>read, write, and execute access regardless of his group membership;and it grants no access to any other user or group.</P><PCLASS="para">Entries within an HP-UX access control list are examinedin order of decreasing specificity: entries with a specific userand group are considered first; those with only a specific userfollow; ones with only a specific group are next; and the otherentries are last of all. Within a class, entries are examined inorder. When determining whether or not to permit file access, thefirst applicable entry is used. Thus, user <ICLASS="filename">harvey</I>will be given write access to the file <ICLASS="filename">silver</I>even if he is a member of the <ICLASS="filename">chem</I> or <EMCLASS="emphasis">phys</EM>group.</P><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-4992"></A><KBDCLASS="command">chacl</KBD> command is usedto modify the access control list for a file. <SPANCLASS="acronym">ACLS</SPAN>can be specified to <KBDCLASS="command">chacl</KBD> in two distinct forms:as a list of entries or via a <KBDCLASS="command">chmod</KBD>-like syntax. By default, <KBDCLASS="command">chacl</KBD>adds entries to the current <SPANCLASS="acronym">ACL</SPAN>. For example,these two commands add to the file server's <SPANCLASS="acronym">ACL</SPAN>read access for the <ICLASS="systemitem.username">bio</I> group and read andexecute access for user <ICLASS="systemitem.username">hill</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ chacl &quot;(%.bio,r--) (hill.%,r-x)&quot; silver$ chacl &quot;%.bio = r, hill.% = rx&quot; silver</PRE></BLOCKQUOTE><PCLASS="para">In either format, the access control list must be passed to<KBDCLASS="command">chacl</KBD> as a single argument. The second format also includes +and - operators as in <KBDCLASS="command">chmod</KBD>. For example, this commandadds read access for group <EMCLASS="emphasis">chem</EM> and user <EMCLASS="emphasis">harvey,</EM>and removes write access for group <EMCLASS="emphasis">chem</EM>, addingor modifying <SPANCLASS="acronym">ACL</SPAN> entries as needed:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ chacl &quot;%.chem -w+r, harvey.% +r&quot; silver</PRE></BLOCKQUOTE><PCLASS="para">chacl's <ACLASS="indexterm"NAME="AUTOID-5013"></A><ACLASS="indexterm"NAME="AUTOID-5016"></A>-<ICLASS="filename">r</I> optioncan be used to replace the current <SPANCLASS="acronym">ACL</SPAN>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ chacl -r &quot;@.% = 7, %.@ = rx, %.bio = r, %.% = &quot; *.dat</PRE></BLOCKQUOTE><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-5023"></A>@ sign is a shorthand for the currentuser or group owner as appropriate, and also enables user-independent<SPANCLASS="acronym">ACLS</SPAN> to be constructed. <KBDCLASS="command">chacl</KBD>'s <ICLASS="filename">-f</I> option can be used to copy an <SPANCLASS="acronym">ACL</SPAN>from one file to another file or group of files. This command appliesthe <SPANCLASS="acronym">ACL</SPAN> from the file <EMCLASS="emphasis">silver</EM>to all files in the current directory having the extension <EMCLASS="emphasis">.dat</EM> :</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ chacl -f silver *.dat</PRE></BLOCKQUOTE><PCLASS="para">Be careful with this option as it will change the ownershipof target files if necessary so that the <SPANCLASS="acronym">ACL</SPAN>exactly matches that of the specified file. If you merely want toapply a standard <SPANCLASS="acronym">ACL</SPAN> to a set of files, you'rebetter off creating a file containing the desired <SPANCLASS="acronym">ACL</SPAN>,using @ characters as appropriate, and then applying itto files in this way:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ chacl -r `cat acl.metal` *.dat</PRE></BLOCKQUOTE><PCLASS="para">You can create the initial template file by using <KBDCLASS="command">lsacl</KBD> onan existing file and capturing the output.</P><PCLASS="para">You can still use <ACLASS="indexterm"NAME="AUTOID-5042"></A><KBDCLASS="command">chmod</KBD>to change the base entries of a file with an <SPANCLASS="acronym">ACL</SPAN>if you include the -A option. Files with optional entriesare marked by a plus sign appended to the mode string in long directorylistings:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">-rw-------+  1 chavez   chem        8684 Jun 20 16:08 has_one-rw-r--r--   1 chavez   chem      648205 Jun 20 11:12 none_here <ACLASS="indexterm"NAME="AUTOID-5048"></A><ACLASS="indexterm"NAME="AUTOID-5051"></A><ACLASS="indexterm"NAME="AUTOID-5053"></A><ACLASS="indexterm"NAME="AUTOID-5056"></A> </PRE></BLOCKQUOTE></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_01.htm"TITLE="5.1 Files"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.1 Files"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 The umask"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.3 The umask"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">5.1 Files</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">5.3 The umask</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>