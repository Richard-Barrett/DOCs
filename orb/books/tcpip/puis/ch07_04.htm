<HTML><HEAD><TITLE>[Chapter 7] 7.4 Software for Backups</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:05:27Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Backups"><LINKREL="prev"HREF="ch07_03.htm"TITLE="7.3 Backing Up System Files"><LINKREL="next"HREF="ch08_01.htm"TITLE="8. Defending  Your Accounts"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 Backing Up System Files"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 Backing Up System Files"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Backups</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch08_01.htm"TITLE="8. Defending  Your Accounts"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8. Defending  Your Accounts"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4">7.4 Software for Backups</A></H2><PCLASS="para">There <ACLASS="indexterm"NAME="AUTOID-9710"></A><ACLASS="indexterm"NAME="AUTOID-9713"></A>are a number of software packages that allow youto perform backups. Some are vendor specific, and others are quitecommonly available. Each may have particular benefits in a particularenvironment. We'll outline a few of the more common oneshere, including a few that you might not otherwise consider. Youshould consult your local documentation to see if there are specialprograms available with your system.</P><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-9716">Beware Backing up Files withHoles</A></H4><PCLASS="para">Standard <SPANCLASS="acronym">UNIX</SPAN> <ACLASS="indexterm"NAME="AUTOID-9720"></A><ACLASS="indexterm"NAME="AUTOID-9723"></A><ACLASS="indexterm"NAME="AUTOID-9726"></A>filesare direct-access files; in other words, you can specify an offsetfrom the beginning of the file, and then read and write from thatlocation. If you ever had experience with older mainframe systemsthat only allowed files to be accessed sequentially, you know howimportant random access is for many things, including building random-accessdatabases.</P><PCLASS="para">An interesting case occurs when a program references beyondthe &quot;end&quot; of the file and then writes. What goesinto the space between the old end-of-file and the data just nowwritten? Zero-filled bytes would seem to be appropriate, as thereis really nothing there.</P><PCLASS="para">Now, consider that the span could be millions of bytes long,and there is really nothing there. If <SPANCLASS="acronym">UNIX</SPAN> wereto allocate disk blocks for all that space, it could possibly exhaustthe free space available. Instead, values are set internal to theinode and file data pointers so that only blocks needed to holdwritten data are allocated. The remaining span represents a <ICLASS="filename">hole</I>that <SPANCLASS="acronym">UNIX</SPAN> remembers. Attempts to read any ofthose blocks simply return zero values. Attempts to write any locationin the hole results in a real disk block being allocated and written,so everything continues to appear normal. (One way to identify thesefiles is to compare the size reported by <KBDCLASS="command">ls -l</KBD> with the size reportedby <KBDCLASS="command">ls -s</KBD>.)</P><PCLASS="para">Small files with large holes can be a serious concern to backupsoftware, depending on how your software handles them. Simple copyprograms will try to read the file sequentially, and the resultis a stream with lots of zero bytes. When copied into a new file,blocks are actually allocated for the whole span and lots of spacemay be wasted. More intelligent programs, like dump, bypass thenormal file system and read the actual inode and set of data pointers.Such programs only save and restore the actual blocks allocated,thus saving both tape and file storage.</P><PCLASS="para">Keep these comments in mind if you try to copy or archivea file that appears to be larger in size than the disk it residesin. Copying a file with holes to another device can cause you tosuddenly run out of disk space.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.1">7.4.1 Simple Local Copies</A></H3><PCLASS="para">The simplest form of backup is to make simple copies of yourfiles and directories. You might make those copies to local disk,to removable disk, to tape, or to some other media. Some file copyprograms will properly duplicate modification and access times,and copy owner and protection information, if you are super-useror the files belong to you. They seldom recreate links, however.Examples include:</P><DLCLASS="variablelist"><DTCLASS="term">cp</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9745"></A>The standard commandfor copying individual files. Some versions support a <ICLASS="filename">-r</I> optionto copy an entire directory tree.</P></DD><DTCLASS="term">dd</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9752"></A>This command canbe used to copy a whole disk partition at one time by specifyingthe names of partition device files as arguments. This process shouldbe done with great care if the source partition is mounted: in sucha case, the device should be for the <EMCLASS="emphasis">block</EM>version of the disk rather than the <EMCLASS="emphasis">character</EM>version. <EMCLASS="emphasis">Never</EM> copy onto a mounted partition&nbsp;- unlessyou want to destroy the partition and cause an abrupt system halt!</P></DD></DL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.2">7.4.2 Simple Archives</A></H3><PCLASS="para">There <ACLASS="indexterm"NAME="AUTOID-9760"></A>areseveral programs that are available to make simple archives packedinto disk files or onto tape. These are usually capable of storingall directory information about a file, and restoring much of itif the correct options are used. Running these programs may resultin a change of either (or both) the atime and the ctime of itemsarchived, however.[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] See <ACLASS="xref"HREF="ch05_01.htm"TITLE="The UNIX Filesystem">Chapter 5, <CITECLASS="chapter">The UNIX Filesystem</CITE></A>, for information about these file characteristics.</P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term">ar</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9771"></A>Simple file archiver.Largely obsolete for backups (although still used for creating <SPANCLASS="acronym">UNIX</SPAN>libraries).</P></DD><DTCLASS="term">tar</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9778"></A>Simple tape archiver.Can create archives to files, tapes, or elsewhere. This choice seemsto be the most widely used simple archive program.</P></DD><DTCLASS="term">cpio</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9784"></A>Another simplearchive program. This program can create portable archives in plain<SPANCLASS="acronym">ASCII</SPAN> of even binary files, if invoked with thecorrect options. (<KBDCLASS="command">cpio</KBD> does record empty directories.)</P></DD><DTCLASS="term">pax</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9792"></A>The portable archiver/exchangetool, which is defined in the <SPANCLASS="acronym">POSIX</SPAN> standard.This program combines <KBDCLASS="command">tar</KBD> and <KBDCLASS="command">cpio</KBD> functionality. This program usestar as its default file format.</P></DD></DL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.3">7.4.3 Specialized Backup Programs</A></H3><PCLASS="para">There <ACLASS="indexterm"NAME="AUTOID-9800"></A>areseveral dedicated backup programs.</P><DLCLASS="variablelist"><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9806"></A>dump/restore	</DT><DDCLASS="listitem"><PCLASS="para">This program is the &quot;classic&quot;one for archiving a whole partition at once, and for the associatedfile restorations. Many versions of this program exist, but allback up from the raw disk device, thus bypassing calls that wouldchange any of the times present in inodes for files and directories.This program can also make the backups quite fast.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9812"></A><ACLASS="indexterm"NAME="AUTOID-9814"></A>backup	</DT><DDCLASS="listitem"><PCLASS="para">Some <SPANCLASS="acronym">SVR4</SPAN> systems have a suiteof programs named, collectively, backup. These are also designedspecifically to do backups of files and whole filesystems.</P></DD></DL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.4">7.4.4 Encrypting Your Backups</A></H3><PCLASS="para">You <ACLASS="indexterm"NAME="AUTOID-9823"></A><ACLASS="indexterm"NAME="AUTOID-9826"></A>canimprovise your own backup encryption if you have an encryption programthat can be used as a filter and you use a backup program that canwrite to a file, such as the <KBDCLASS="command">dump</KBD>, <KBDCLASS="command">cpio</KBD>, or <KBDCLASS="command">tar</KBD> commands. For example,to make an encrypted tape archive using the tar command and thedes encryption program, you might use the following command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># tar cf - dirs and files | des -ef | dd bs=10240 of=/dev/rm8</PRE></BLOCKQUOTE><PCLASS="para">Although software encryption has potential drawbacks (forexample, the software encryption program can be compromised so itrecords all passwords), this method is certainly preferable to storingsensitive information on unencrypted backup.</P><PCLASS="para">Here is an example: suppose you have a <KBDCLASS="command">des</KBD> encryption programcalled <ACLASS="indexterm"NAME="AUTOID-9836"></A><KBDCLASS="command">des</KBD> which prompts the userfor a key and then encrypts its standard input to standard output.[9] Youcould use this program with the <ICLASS="filename"><ACLASS="indexterm"NAME="AUTOID-9844"></A><ACLASS="indexterm"NAME="AUTOID-9846"></A>dump</I> (called <ICLASS="filename">ufsdump</I>under Solaris) program to back up the file system <ICLASS="filename">/u</I> tothe device <ICLASS="filename">/dev/rmt8</I> with the command:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] Some versions of the <ICLASS="filename">des</I> command requirethat you specify the &quot;<ICLASS="filename">-f</I> -&quot;option to make the program run as a filter.</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># dump f - /u | des -e | dd bs=10240 of=/dev/rmt8</B>Enter key: </PRE></BLOCKQUOTE><PCLASS="para">If you wanted to back up the filesystem with <ACLASS="indexterm"NAME="AUTOID-9855"></A><KBDCLASS="command">tar</KBD>, you would instead use the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># tar cf - /u | des -e | dd bs=10240 of=/dev/rmt8 </B>Enter key:</PRE></BLOCKQUOTE><PCLASS="para">To read these files back, you would use the following commandsequences:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># dd bs=10240 if=/dev/rmt8 | des -d | restore fi - </B>Enter key:</PRE></BLOCKQUOTE><PCLASS="para">and:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># dd bs=10240 if=/dev/rmt8 | des -d | tar xpBfv - </B>Enter key:</PRE></BLOCKQUOTE><PCLASS="para">In both of these examples, the backup programs are instructedto send the backup of file systems to standard output. The outputis then encrypted and written to the tape drive.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> If you encrypt the backup of a filesystem and you forgetthe encryption key, the information stored on the backup will beunusable.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.5">7.4.5 Backups Across the Net</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9872"></A><ACLASS="indexterm"NAME="AUTOID-9875"></A>Afew programs can be used to do backups across a network link. Thus,you can do backups on one machine, and write the results to another.An obvious example would be using a program that can write to stdout,and then piping the output to a remote shell. Some programs arebetter integrated with networks, however.</P><DLCLASS="variablelist"><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9881"></A>rdump/rrestore			</DT><DDCLASS="listitem"><PCLASS="para">This is a network version of the <KBDCLASS="command">dump</KBD> and <KBDCLASS="command">restore</KBD>commands. It uses a dedicated process on a machine that has a tapedrive, and sends the data to that process. Thus, it allows a tapedrive to be shared by a whole network of machines.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9889"></A>rcp	</DT><DDCLASS="listitem"><PCLASS="para">This command enables you to copy a file or a wholedirectory tree to a remote machine.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9895"></A>ftp	</DT><DDCLASS="listitem"><PCLASS="para">Although the venerable <KBDCLASS="command">ftp</KBD> command can be used tocopy files, it is slow and cumbersome to use for many files, andit does not work well with directories. In addition, the standard<KBDCLASS="command">ftp</KBD> does not understand <SPANCLASS="acronym">UNIX</SPAN> device files, sockets,[10]symbolic links, or other items that one might wish to backup.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Why back up sockets? Because some programs depend upon them.</P></BLOCKQUOTE></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-9907"></A>rdist	 </DT><DDCLASS="listitem"><PCLASS="para">This program is often used to keep multiple machinesin synchronization by copying files from a master machine to a setof slaves. However, the program primarily works by copying onlyfiles that have changed from a master set, and can therefore updatea backup set of files from a working version. Thus, instead of distributingnew files, the program archives them. <KBDCLASS="command">rdist</KBD> can also be run in amode to simply print the names of files that differ between an oldset and a destination machine.</P></DD></DL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.6">7.4.6 Commercial Offerings</A></H3><PCLASS="para">There <ACLASS="indexterm"NAME="AUTOID-9915"></A>areseveral commercial backup and restore utilities. Several of themfeature special options that make indexing files or staging little-usedfiles to slower storage (such as write-once optical media) easier.Unfortunately, lack of portability across multiple platforms, andcompatibility with sites that may not have the software installed,might be drawbacks for many users. Be sure to fully evaluate theconditions under which you'll need to use the program anddecide on a backup strategy before purchasing the software.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-7-SECT-4.7">7.4.7 inode Modification Times</A></H3><PCLASS="para">Most <ACLASS="indexterm"NAME="AUTOID-9922"></A><ACLASS="indexterm"NAME="AUTOID-9925"></A><ACLASS="indexterm"NAME="AUTOID-9928"></A>backup programs check the accessand modification times on files and directories to determine whichentries need to be stored to the archive. Thus, you can force anentry to be included (or not included) by altering these times.The <KBDCLASS="command">touch</KBD> command enables you to do so quickly and efficiently.</P><PCLASS="para">However, many programs that do backups will cause the accesstime on files and directories to be updated when they are read forthe backup. As this behavior might break other software that dependson the access times, these programs sometimes use the <KBDCLASS="command">utime</KBD> systemcall to reset the access time back to the value it had prior tothe backup.</P><PCLASS="para">Unfortunately, using the <ICLASS="filename">ctime </I>()system call will cause the inode change time, the <ACLASS="indexterm"NAME="AUTOID-9935"></A><ACLASS="indexterm"NAME="AUTOID-9937"></A>ctime, to be altered. There is no filesystemcall to set the ctime back to what it was, so the ctime remainsaltered. This is a bane to system security investigations, becauseit wipes out an important piece of information about files thatmay have been altered by an intruder.</P><PCLASS="para">For this reason, we suggest that you determine the behaviorin this regard by any candidate backup program and choose one thatdoes not alter file times. When considering a commercial backupsystem (or when designing your own), it is wise to avoid a systemthat changes the ctime or atime stored in the inode.</P><PCLASS="para">If you cannot use a backup system that directly accesses theraw disk partitions, you have two other choices:<ACLASS="indexterm"NAME="AUTOID-9943"></A><ACLASS="indexterm"NAME="AUTOID-9946"></A><ACLASS="indexterm"NAME="AUTOID-9949"></A><ACLASS="indexterm"NAME="AUTOID-9951"></A></P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">You can unmount your disks and remountthem read-only before backing them up. This procedure will allowyou to use programs such as <KBDCLASS="command">cpio</KBD> or <KBDCLASS="command">tar</KBD> without changing the atime.</P></LI><LICLASS="listitem"><PCLASS="para">If your system supports <SPANCLASS="acronym">NFS</SPAN> loopbackmounts (such as Solaris or SunOS), you can create a read-only <SPANCLASS="acronym">NFS</SPAN>loopback mount for each disk. Then you can back up the <SPANCLASS="acronym">NFS</SPAN>-mounteddisk, rather than the real device.</P></LI></OL></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 Backing Up System Files"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 Backing Up System Files"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch08_01.htm"TITLE="8. Defending  Your Accounts"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8. Defending  Your Accounts"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.3 Backing Up System Files</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8. Defending  Your Accounts</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>