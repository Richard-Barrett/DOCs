<HTML><HEAD><TITLE>[Chapter 16] 16.2 IPv4: The Internet Protocol Version 4</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:12:19Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch16_01.htm"TITLE="16. TCP/IP Networks"><LINKREL="prev"HREF="ch16_01.htm"TITLE="16.1 Networking"><LINKREL="next"HREF="ch16_03.htm"TITLE="16.3 IP Security"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_01.htm"TITLE="16.1 Networking"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.1 Networking"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 16<BR>TCP/IP Networks</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_03.htm"TITLE="16.3 IP Security"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 16.3 IP Security"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2">16.2 IPv4: The Internet Protocol Version 4</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20000"></A>The Internet Protocol is the glue thatholds together modern computer networks. IP specifies the way thatmessages are sent from computer to computer; it essentially definesa common &quot;language&quot; that is spoken by every computerstationed on the Internet.</P><PCLASS="para">This section describes IPv4,the fourth version of the Internet Protocol, which has been usedon the Internet since 1982. As this book is going to press, workis continuing on IPv6, previously called &quot;IP: The NextGeneration,&quot; or IPng. (IPv5 was an experimental protocolthat was never widely used.) We do not know when (or if) IPv6 willbe widely used on the network.</P><PCLASS="para">As we said earlier, ata very abstract level the Internet is similar to the phone network.However, as we look more closely at the underlying protocols, wefind that it is quite different. On the telephone network, eachconversation is assigned a circuit (either a pair of wires or achannel on a multiplexed connection) that it uses for the durationof the telephone call. Whether you talk or not, the channel remainsopen until you hang up the phone.</P><PCLASS="para">On the Internet,the connections between computers are shared by all of the conversations.Data is sent in blocks of characters called datagrams, or more colloquially,<ACLASS="indexterm"NAME="AUTOID-20005"></A>packets. Each packet has a smallblock of bytes called the <ACLASS="indexterm"NAME="AUTOID-20007"></A>header,which identifies its sender and intended destination on each computer.The header is followed by another, usually larger, block of charactersof data called the packet's <EMCLASS="emphasis">contents</EM>.(See <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-FIG-3"TITLE="IP header and packet">Figure 16.3</A>.) After the packets reach theirdestination, they are often reassembled into a continuous streamof data; this fragmentation and reassembly process is usually invisibleto the user. As there are often many different routes from one systemto another, each packet may take a slightly different path fromsource to destination. Because the Internet switches packets, insteadof circuits, it is called a <ACLASS="indexterm"NAME="AUTOID-20011"></A><ACLASS="indexterm"NAME="AUTOID-20013"></A>packet-switchingnetwork.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-16-FIG-3">Figure 16.3: IP header and packet</A></H4><IMGCLASS="graphic"SRC="figs/puis_1603.gif"ALT="Figure 16.3"><PCLASS="para">We'll borrow an analogy from Vint<ACLASS="indexterm"NAME="AUTOID-20020"></A>Cerf, one of the original architectsof the <SPANCLASS="acronym">ARPANET</SPAN>: think of the IP protocol as sendinga novel a page at a time, numbered and glued to the back of postcards.All the postcards from every user get thrown together and carriedby the same trucks to their destinations, where they get sortedout. Sometimes, the postcards get delivered out of order. Sometimes,a postcard may not get delivered at all, but you can use the pagenumbers to request another copy. And, key for security, anyone inthe postal service who handles the post cards can read the contentswithout the recipient or sender knowing about it.</P><PCLASS="para">Thereare three distinct ways to directly connect two computers togetherusing IP:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The computers can all be connectedto the same <ACLASS="indexterm"NAME="AUTOID-20027"></A><ACLASS="indexterm"NAME="AUTOID-20030"></A>local area network. Two common <SPANCLASS="acronym">LANS</SPAN>are Ethernet and token ring. Internet packets are then encapsulatedwithin the packets used by the local area network.[4]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] LANs and token rings can also carry protocols other than IP(including Novell IPX and Appletalk), often at the same time asIP network traffic.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Two computers can be directly connected to eachother with a serial line. IP packets are then sent using either<ACLASS="indexterm"NAME="AUTOID-20037"></A><ACLASS="indexterm"NAME="AUTOID-20039"></A><ACLASS="indexterm"NAME="AUTOID-20041"></A><ACLASS="indexterm"NAME="AUTOID-20043"></A><SPANCLASS="acronym">SLIP</SPAN>(Serial Line Internet Protocol), <SPANCLASS="acronym">CSLIP</SPAN> (Compressed<SPANCLASS="acronym">SLIP</SPAN>), or <SPANCLASS="acronym">PPP</SPAN> (Point-to-PointProtocol). If both computers are each in turn connected to a localarea network, the telephone link will bridge together the two <SPANCLASS="acronym">LANS</SPAN>.(See <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-FIG-4"TITLE="Bridging two local area networks">Figure 16.4</A>.)</P></LI><LICLASS="listitem"><PCLASS="para">The IP packets can themselves be encapsulated withinpackets used by other network protocols. Today, many 56K &quot;leasedlines&quot; are actually built by encapsulating IP packets withinFrame Relay packets. Within a few years, IP may be commonly encapsulatedwithin <ACLASS="indexterm"NAME="AUTOID-20053"></A><ACLASS="indexterm"NAME="AUTOID-20055"></A><SPANCLASS="acronym">ATM</SPAN> (AsynchronousTransfer Mode) networks.[5]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] If our use of all these network termsis causing your eyes to roll back into your head and a loud buzzingsound to fill your ears, take a break and several deep breaths.Then consult a book on IP and networks for a more complete explanation.We recommend the excellent <EMCLASS="emphasis">Internetworking with TCP/IP</EM>by Doug Comer (Prentice Hall, 1991).</P></BLOCKQUOTE></LI></UL><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-16-FIG-4">Figure 16.4: Bridging two local area networks</A></H4><IMGCLASS="graphic"SRC="figs/puis_1604.gif"ALT="Figure 16.4"><PCLASS="para">IP is a scalable network protocol: it worksas well with a small office network of ten workstations as it doeswith a university-sized network supporting a few hundred workstations,or with the national (and international) networks that support tensof thousands of computers. IP scales because it views these largenetworks merely as collections of smaller ones. Computers connectedto a network are called hosts. Computers that are connected to twoor more networks can be programmed to forward packets automaticallyfrom one network to another; today, these computers are called <ICLASS="firstterm">routers</I>(originally they were called <ICLASS="firstterm">gateways</I>). Routersuse routing tables to determine where to send packets next.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.1">16.2.1 Internet Addresses</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20070"></A><ACLASS="indexterm"NAME="AUTOID-20073"></A>Everyinterface that a computer has on an IP network is assigned a unique32-bit address. These addresses are often expressed as a set offour 8-bit numbers, called <ACLASS="indexterm"NAME="AUTOID-20076"></A>octets.A sample address is 18.70.0.224. Think of an IP address as if itwere a telephone number: if you know a computer's IP address,you can connect to it and exchange information.</P><PCLASS="para">Theoretically,the 32-bit IP address allows a maximum of 232&nbsp;=&nbsp;4,294,967,296computers to be attached to the Internet at a given time. In practice,the total number of computers that can be connected is much less,because of the way that IP addresses are assigned. Organizationsare usually assigned blocks of addresses, not all of which are used.This approach is similar to the method by which the phone companyassigns area codes to a region. The approach has led to a problemwith IP addresses similar to that faced by the telephone company:we're running out of numbers.</P><PCLASS="para">Here are somemore sample Internet addresses:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">18.85.0.2198.3.5.1204.17.195.100</PRE></BLOCKQUOTE><PCLASS="para">IP addresses are typically abbreviated ii.jj.kk.ll, wherethe numbers ii, jj, kk, and ll are between 0 and 255. Each decimalnumber represents an 8-bit octet. Together, they represent the 32-bitIP address.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.1.1">16.2.1.1 IP networks</A></H4><PCLASS="para">The Internet is a networkof networks. Although most people think of these networks as majornetworks, such as those belonging to companies like AT&amp;T,<SPANCLASS="acronym">MCI</SPAN>, and Sprint, the networks that make up theInternet are actually local area networks, such as the network inyour office building or the network in a small research laboratory.Each of these small networks is given its own network number.</P><PCLASS="para">There are two methods of looking at network numbers. The &quot;classical&quot;network numbers were distinguished by a unique prefix of bits inthe address of each host in the network. This approach partitionedthe address space into a well-defined set of different size networks.However, several of these networks had large &quot;holes&quot;&nbsp;- setsof host addresses that were never used. With the explosion of siteson the Internet, a somewhat different interpretation of networkaddresses has been proposed, to result in some additional addressesthat can be assigned to networks and hosts. This approach is the<ACLASS="indexterm"NAME="AUTOID-20087"></A><ACLASS="indexterm"NAME="AUTOID-20089"></A><SPANCLASS="acronym">CIDR</SPAN> (<ICLASS="firstterm">ClasslessInterDomain Routing</I>) scheme. We briefly describe bothschemes below.</P><PCLASS="para">The <SPANCLASS="acronym">CIDR</SPAN> method maynot be adequate to provide addresses for all the expected hostson the network; therefore, as we've mentioned, a new protocol,IPv6, is being developed. This new protocol will provide a biggeraddress space for hosts and networks, and will provide some additionalsecurity features. Host addresses will be 128 bits long in IPv6.As this book goes to press, the features of IPv6 are not completelyfinalized, so we won't try to detail them here.[6]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] But you can be sure we'll cover them in the nextedition!</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.1.2">16.2.1.2 Classical network addresses</A></H4><PCLASS="para">There arefive primary kinds of IP addresses in the &quot;classical&quot;address scheme; the first few bits of the address (the<ICLASS="firstterm">most significant</I> bits) define the class of network towhich the address belongs. The remaining bits are divided into anetwork part and a host part:</P><DLCLASS="variablelist"><DTCLASS="term">Class A addresses	 </DT><DDCLASS="listitem"><PCLASS="para">Hosts on Class A networks have addresses in theform <ICLASS="filename">N.a.b.c</I>, where <ICLASS="filename">N</I> is the network number and <ICLASS="filename">a.b.c</I> is the hostnumber; the most significant bit of <ICLASS="filename">N</I> must be zero. There are notmany Class A networks, as they are quite wasteful: unless your networkhas 16,777,216 separate hosts, you don't need a Class Anetwork. Nevertheless, many early pioneers of the Internet, suchas <SPANCLASS="acronym">MIT</SPAN> and Bolt Beranek and Newman (<SPANCLASS="acronym">BBN</SPAN>),have been assigned Class A networks. Of course, these organizationsdon't really put all of their computers on the same pieceof network. Instead, most of them divide their internal networksas (effectively) Class B or Class C networks. This approach is knownas <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-20113"></A>subnetting</I>.</P></DD><DTCLASS="term">Class B addresses</DT><DDCLASS="listitem"><PCLASS="para">Hosts on Class B networks have addresses in theform <ICLASS="filename">N.M.a.b</I>, where <ICLASS="filename">N.M</I> is the network number and <ICLASS="filename">a.b</I> is the hostnumber; the most significant two bits of <ICLASS="filename">N</I> must be 10. Class B networksare commonly found at large universities and major commercial organizations.</P></DD><DTCLASS="term">Class C addresses</DT><DDCLASS="listitem"><PCLASS="para">Hosts on Class C networks have addresses in theform <ICLASS="filename">N.M.O.a</I>, where <ICLASS="filename">N.M.O</I> is the network number and <ICLASS="filename">a</I> is the hostnumber; the most significant three bits of <ICLASS="filename">N</I> must be 110. Thesenetworks can only accommodate a maximum of 254 hosts. (Flaws andincompatibilities between various <SPANCLASS="acronym">UNIX IP</SPAN> implementationsmake it unwise to assign IP addresses ending in 0 or 255.) Mostorganizations have one or more Class C networks.</P></DD><DTCLASS="term">Class D addresses</DT><DDCLASS="listitem"><PCLASS="para">A Class D address is of the form <ICLASS="filename">N.M.O.a</I>, wherethe most significant four bits of <ICLASS="filename">N</I> are 1110. These addresses arenot actually of networks, but of <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-20139"></A>multicast</I> groups&nbsp;- sets ofhosts that listen on a common address to receive broadcast addresses.</P></DD><DTCLASS="term">Class E addresses</DT><DDCLASS="listitem"><PCLASS="para">A Class E address is of the form <ICLASS="filename">N.M.O.P</I>, wherethe most significant four bits of <ICLASS="filename">N</I> are 1111. These addresses arecurrently reserved for experimental use.</P></DD></DL></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.1.3">16.2.1.3 CIDR addresses</A></H4><PCLASS="para">In recent years, a newform of address assignment has been developed. This assignment isthe <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-20151"></A><ACLASS="indexterm"NAME="AUTOID-20153"></A><ACLASS="indexterm"NAME="AUTOID-20155"></A>CIDR</I>,or <ICLASS="firstterm">Classless InterDomain Routing</I>, method.As the name implies, there are no &quot;classes&quot; ofaddresses as in the classical scheme. Instead, networks are definedas being the most significant k bits of each address, with the remaining32-k bits being used for the host part of the address.Thus, a service provider could be given a range of addresses wherebythe first 12 bits of the address are fixed at a particular value(the network address), and the remaining 20 bits represent the hostportion of the address. This method allows the service providerto allocate up to 220 distinct addresses to customers.</P><PCLASS="para">Inreality, the host portion of an address is further divided intosubnets. This subdivision is done by fixing the first j<KBDCLASS="command"></KBD>bits of the host portion of the address to some set value,and using the remaining bits for host addresses. And those can befurther divided into subnets, and so on. A <SPANCLASS="acronym">CIDR</SPAN>-formataddress is of the form k.j.l.(m...n), where each of the fields isof variable length. Thus, the fictional service-provider networkaddress described above could be subdivided into 1024 subnets, onefor each customer. Each customer would have 210 bits of host address,which they could further subdivide into local subnets.</P><PCLASS="para">The<SPANCLASS="acronym">CIDR</SPAN> scheme is compatible with the classicaladdress format, with Class A addresses using an 8-bit network field,Class B networks using a 16-bit network address, and so on. <SPANCLASS="acronym">CIDR</SPAN>is being adopted as this book goes to press. Combined with new developmentsin IP address rewriting, there is the potential to spread out theuseful life of IPv4 for many years to come.<ACLASS="indexterm"NAME="AUTOID-20165"></A><ACLASS="indexterm"NAME="AUTOID-20168"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.2">16.2.2 Routing</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20174"></A><ACLASS="indexterm"NAME="AUTOID-20176"></A>Despitethe complexity of the Internet and addressing, computers can easilysend each other messages across the global network. To send a packet,most computers simply set the packet's destination addressand then send the packet to a computer on their local network calleda gateway. If the gateway makes a determination of where to sendthe packet next, the gateway is a router. The router takes careof sending the packet to its final destination by forwarding thepacket on to a directly connected gateway that is one step closerto the destination host.</P><PCLASS="para">Many organizations configuretheir internal networks as a large tree. At the root of the treeis the organization's connection to the Internet. Whena gateway receives a packet, it decides whether to send it to oneof its own subnetworks, or to direct it towards the root.</P><PCLASS="para">Outon the Internet, major IP providers such as <SPANCLASS="acronym">AT&T</SPAN>,<SPANCLASS="acronym">BBN</SPAN> Planet, <SPANCLASS="acronym">MCI</SPAN>, and Sprinthave far more complicated networks with sophisticated routing algorithms.Many of these providers have redundant networks, so that if onelink malfunctions other links can take over.</P><PCLASS="para">Nevertheless,from the point of view of any computer on the Internet, routingis transparent, regardless of whether packets are being sent acrossthe room or across the world. The only information that you needto know to make a connection to another computer on the Internetis the computer's 32-bit IP address&nbsp;- you do notneed to know the route to the host, or on what type of network thehost resides. You do not even need to know if the host is connectedby a high-speed local area network, or if it is at the other endof a modem-based <SPANCLASS="acronym">SLIP</SPAN> connection. All you needto know is its address, and your packets are on their way.</P><PCLASS="para">Ofcourse, if you are the site administrator and you are configuringthe routing on your system, you <EMCLASS="emphasis">do</EM> need tobe concerned with a little more than the IP number of a destinationmachine. You must know at least the addresses of gateways out ofyour network so you can configure your routing tables. We'llassume you know how to do that,[7]but we will point out that if your routes are fairly stable andsimple, you would be safer by statically setting the routes ratherthan allowing them to be set dynamically with a mechanism such asthe <KBDCLASS="command">routed</KBD> daemon.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] If not, you shouldconsult your vendor manual, or one of the references in <ACLASS="xref"HREF="appd_01.htm"TITLE="Paper Sources">Appendix D, <CITECLASS="appendix">Paper Sources</CITE></A>.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.3">16.2.3 Hostnames</A></H3><PCLASS="para">A <ICLASS="firstterm">hostname</I> is the name of<ACLASS="indexterm"NAME="AUTOID-20195"></A><ACLASS="indexterm"NAME="AUTOID-20197"></A><ACLASS="indexterm"NAME="AUTOID-20200"></A>a computer on the Internet. Hostnames make life easier for users:they are easier to remember than IP addresses. You can change acomputer's IP address but keep its hostname the same. Ifyou think of an IP address as a computer's phone number,think of its hostname as the name under which it is listed in thetelephone book. Some hosts can also have more than one address onmore than one network. Rather than needing to remember each one,you can remember a single hostname and let the underlying networkmechanisms pick the most appropriate addresses to use.</P><PCLASS="para">Letus repeat that: a single hostname can have more than one IP address,and a single IP address can be associated with more than one hostname.Both of these facts have profound implications for people who areattempting to write secure network programs.</P><PCLASS="para">Hostnamesmust begin with a letter or number and may contain letters, numbers,and a few symbols, such as the dash (-). Case is ignored.A sample hostname is <ICLASS="filename">arthur.cs.purdue.edu</I>.For more information on host names, see <SPANCLASS="acronym">RFC</SPAN> 1122and <SPANCLASS="acronym">RFC</SPAN> 1123.</P><PCLASS="para">Each hostname has twoparts: the computer's <ACLASS="indexterm"NAME="AUTOID-20209"></A><ACLASS="indexterm"NAME="AUTOID-20211"></A>machine<ICLASS="firstterm">name</I> and its <ICLASS="firstterm">domain</I>.The computer's machine name is the name to the left ofthe first period; the domain name is everything to the right ofthe first period. In our example above, the machine name is <ICLASS="filename">arthur</I>and the domain is <ICLASS="filename">cs.purdue.edu</I>. The domainname may represent further hierarchical domains if there is a periodin the name. For instance, <ICLASS="filename">cs.purdue.edu</I> representsthe Computer Sciences department domain, which is part of the PurdueUniversity domain, which is, in turn, part of the Educational Institutionsdomain.</P><PCLASS="para">Here are some other examples:</P><PCLASS="para"><ICLASS="filename">whitehouse.gov next.cambridge.ma.us jade.tufts.edu</I></P><PCLASS="para">If you specify a machine name, but do not specify a domain,then your computer might append a <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-20223"></A>defaultdomain</I> when it tries to resolve the name'sIP address. Alternatively, your computer might simply return an&quot;unknown host&quot; error message.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.3.1">16.2.3.1 The /etc/hosts file</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20229"></A><ACLASS="indexterm"NAME="AUTOID-20232"></A>Early <SPANCLASS="acronym">UNIX</SPAN> systems used asingle file called /etc/hosts to keep track ofthe network address for each host on the Internet. Many systemsstill use this file today to keep track of the IP addresses of computerson the organization's <SPANCLASS="acronym">LAN</SPAN>.</P><PCLASS="para">Asample /etc/hosts file for a small organizationmight look like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># /etc/hosts # 192.42.0.1 server 192.42.0.2 art 192.42.0.3 science sci 192.42.0.4 engineering eng </PRE></BLOCKQUOTE><PCLASS="para">In this example, thecomputer called <ICLASS="filename">server</I> has the network address192.42.0.1. The computer called <ICLASS="filename">engineering</I>has the address 192.42.0.4. The hostname<ICLASS="filename"> sci</I>following the computer called <ICLASS="filename">science</I> meansthat <ICLASS="filename">sci </I>can be used as a second name, or alias,for that computer.</P><PCLASS="para">In the early 1980s, the number ofhosts on the Internet started to jump from thousands to tens ofthousands and more. Maintaining a single file of host names andaddresses soon proved to be impossible. Instead, the Internet adopteda distributed system for hostname resolution known as the DomainName System (<SPANCLASS="acronym">DNS</SPAN>). For more information, seethe &quot;Name Service&quot; section later in this chapter.<ACLASS="indexterm"NAME="AUTOID-20246"></A><ACLASS="indexterm"NAME="AUTOID-20248"></A><ACLASS="indexterm"NAME="AUTOID-20251"></A><ACLASS="indexterm"NAME="AUTOID-20254"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.4">16.2.4 Packets and Protocols</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20260"></A><ACLASS="indexterm"NAME="AUTOID-20262"></A><ACLASS="indexterm"NAME="AUTOID-20264"></A><ACLASS="indexterm"NAME="AUTOID-20268"></A>Today thereare four main kinds of IP packets that are sent on the Internetthat will be seen by typical hosts. Each is associated with a particularprotocol:[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] There may be some special routing or maintenanceprotocols in use on the Internet backbone or other major networktrunks. However, we won't discuss them here as you areunlikely to ever encounter them.</P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term"><SPANCLASS="acronym">ICMP</SPAN> </DT><DDCLASS="listitem"><PCLASS="para">Internet Control Message Protocol. This protocolis used for low-level operation of the IP protocol. There are severalsubtypes, for example, for the exchange of routing and traffic information.</P></DD><DTCLASS="term"><SPANCLASS="acronym">TCP</SPAN></DT><DDCLASS="listitem"><PCLASS="para">Transmission Control Protocol. This protocol isused to create a two-way stream connection between two computers.It is a &quot;connected&quot; protocol, and includes time-outsand retransmission to ensure reliable delivery of information.</P></DD><DTCLASS="term"><SPANCLASS="acronym">UDP</SPAN> </DT><DDCLASS="listitem"><PCLASS="para">User Datagram Protocol.[9] This protocol is used to send packetsfrom host to host. The protocol is &quot;connectionless&quot;and makes a best-effort attempt at delivery.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] UDP <EMCLASS="emphasis">doesnot</EM> stand for Unreliable Datagram Protocol, even thoughthe protocol is technically unreliable because it does not guaranteethat information sent will be delivered. We use the term <ICLASS="firstterm">best-effort</I>because the underlying network infrastructure is expectedto make its best effort to get the packets to their destination.In fact, most UDP packets reach their destination under normal operatingcircumstances.</P></BLOCKQUOTE></DD><DTCLASS="term"><SPANCLASS="acronym">IGMP</SPAN></DT><DDCLASS="listitem"><PCLASS="para">Internet Group Management Protocol. This protocolis used to control multicasting&nbsp;- the process of purposelydirecting a packet to more than one host. Multicasting is the basisof the Internet's multimedia backbone, the <SPANCLASS="acronym">MBONE</SPAN>.(Currently, <SPANCLASS="acronym">IGMP</SPAN> is not used inside the <SPANCLASS="acronym">MBONE</SPAN>,but is used on the edge.)</P></DD></DL><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.4.1">16.2.4.1 <SPANCLASS="acronym">ICMP</SPAN></A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-20305"></A><ACLASS="indexterm"NAME="AUTOID-20307"></A>InternetControl Message Protocol is used to send messages between gatewaysand hosts regarding the low-level operation of the Internet. Forexample, <SPANCLASS="acronym">ICMP</SPAN> Echo packets are commonly usedto test for network connectivity; the response is usually eitheran <SPANCLASS="acronym">ICMP</SPAN> Echo Reply or an <SPANCLASS="acronym">ICMP</SPAN>Destination Unreachable message type. <SPANCLASS="acronym">ICMP</SPAN> packetsare identified by an 8-bit <SPANCLASS="acronym">TYPE</SPAN> field (see <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-TAB-1"TITLE="ICMP Packet Types">Table 16.1</A>):</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-16-TAB-1">Table 16.1: ICMP Packet Types</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">TYPE Field</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">ICMP Message Type</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Echo Reply (used by <KBDCLASS="command">ping</KBD>)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">3</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Destination Unreachable</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">4</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Source Quench</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">5</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Redirect (change a route)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">8</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Echo Request (used by <KBDCLASS="command">ping</KBD>)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">9</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Router Advertisement</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">10</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Router Solicitation</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">11</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Time Exceeded for a Datagram</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">12</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Parameter Problem on a Datagram</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">13</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Timestamp Request</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">14</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Timestamp Reply</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">15</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Information Request (obsolete)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">16</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Information Reply (obsolete)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">17</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Address-Mask Request</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">18</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Address-Mask Reply</P></TD></TR></TBODY></TABLE><PCLASS="para">Although we have included all types for completeness,the most important types for our purposes are types 3, 4, and 5.An attacker can craft <SPANCLASS="acronym">ICMP</SPAN> packets with thesefields to redirect your network traffic away, or to perform a denialof service. If you use a firewall (discussed in <ACLASS="xref"HREF="ch21_01.htm"TITLE="Firewalls">Chapter 21, <CITECLASS="chapter">Firewalls</CITE></A>),you will want to be sure that these types are blocked or monitored.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.4.2">16.2.4.2 TCP</A></H4><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN><ACLASS="indexterm"NAME="AUTOID-20411"></A><ACLASS="indexterm"NAME="AUTOID-20413"></A>provides a reliable, ordered, two-way transmission stream betweentwo programs that are running on the same or different computers.&quot;Reliable&quot; means that every byte transmitted isguaranteed to reach its destination (or you are notified that thetransmission failed), and that each byte arrives in the order inwhich it is sent. Of course, if the connection is physically broken,bytes that have not yet been transmitted will not reach their destinationunless an alternate route can be found. In such an event, the computer's<SPANCLASS="acronym">TCP</SPAN> implementation will send an error messageto the process that is trying to send or receive characters, ratherthan give the impression that the link is still operational.</P><PCLASS="para">Each <SPANCLASS="acronym">TCP</SPAN> connection is attached at eachend to a <ACLASS="indexterm"NAME="AUTOID-20418"></A><KBDCLASS="command">port</KBD>. Ports are identifiedby 16-bit numbers. Indeed, at any instant, every connection on theInternet can be identified by a set of two 32-bit numbers and two16-bit numbers:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Host address of the connection'soriginator</P></LI><LICLASS="listitem"><PCLASS="para">Port number of the connection's originator</P></LI><LICLASS="listitem"><PCLASS="para">Host address of the connection's target</P></LI><LICLASS="listitem"><PCLASS="para">Port number of the connection's target</P></LI></UL><PCLASS="para">For example, <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-FIG-5"TITLE="A few Internet connections with port numbers">Figure 16.5</A>shows three people on three separate workstations logged into aserver using the <KBDCLASS="command">rlogin</KBD> program. Each process's <SPANCLASS="acronym">TCP</SPAN>connection starts on a different host and at a different originatingport number, but each connection terminates on the same host (theserver) and the same port (513).</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-16-FIG-5">Figure 16.5: A few Internet connections with port numbers</A></H4><IMGCLASS="graphic"SRC="figs/puis_1605.gif"ALT="Figure 16.5"><PCLASS="para">The idea that the workstations are all connectingto port number 513 can be confusing. Nevertheless, these are alldistinct connections, because each one is coming from a differentoriginating host-port pair, and the server moves each connectionto a separate, higher-numbered port.</P><PCLASS="para">The <SPANCLASS="acronym">TCP</SPAN>protocol uses two special bits in the packet header, <ACLASS="indexterm"NAME="AUTOID-20440"></A><ACLASS="indexterm"NAME="AUTOID-20442"></A><SPANCLASS="acronym">SYN</SPAN> and <SPANCLASS="acronym">ACK</SPAN>,to negotiate the creation of new connections. To open a <SPANCLASS="acronym">TCP</SPAN>connection, the requesting host sends a packet that has the <SPANCLASS="acronym">SYN</SPAN>bit set but does not have the <SPANCLASS="acronym">ACK</SPAN> bit set. Thereceiving host acknowledges the request by sending back a packetthat has both the <SPANCLASS="acronym">SYN</SPAN> and the <SPANCLASS="acronym">ACK</SPAN>bits set. Finally, the originating host sends a third packet, againwith the <SPANCLASS="acronym">ACK</SPAN> bit set, but this time with the<SPANCLASS="acronym">SYN</SPAN> bit unset. This process is called the <SPANCLASS="acronym">TCP</SPAN>&quot;<ACLASS="indexterm"NAME="AUTOID-20454"></A>three-wayhandshake,&quot; and is shown in <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-FIG-6"TITLE='The TCP/IP "three-way handshake&quot;'>Figure 16.6</A>.By looking for packets that have the <SPANCLASS="acronym">ACK</SPAN> bitunset, one can distinguish packets requesting new connections fromthose which are being sent in response to connections that havealready been created. This distinction is useful when constructingpacket filtering firewalls, as we shall see in <ACLASS="xref"HREF="ch21_01.htm"TITLE="Firewalls">Chapter 21</A>.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-16-FIG-6">Figure 16.6: The TCP/IP &quot;three-way handshake&quot;</A></H4><IMGCLASS="graphic"SRC="figs/puis_1606.gif"ALT="Figure 16.6"><PCLASS="para"><SPANCLASS="acronym">TCP</SPAN> is usedfor most Internet services which require the sustained synchronoustransmission of a stream of data in one or two directions. For example,<SPANCLASS="acronym">TCP</SPAN> is used for remote terminal service, filetransfer, and electronic mail. <SPANCLASS="acronym">TCP</SPAN> is also usedfor sending commands to displays using the X Window System.</P><PCLASS="para"><ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-TAB-2"TITLE="Some Common TCP Services and Ports">Table 16.2</A> identifies some <SPANCLASS="acronym">TCP</SPAN>services commonly enabled on <SPANCLASS="acronym">UNIX</SPAN> machines. Theseservices and port numbers are usually found in the <ICLASS="filename">/etc/services</I>file.[10](Note thatnon<SPANCLASS="acronym">-UNIX</SPAN> hosts can run most of these services;the protocols are usually specified independent of any particularimplementation.)</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] A more extensive list of TCP and UDP ports and servicesmay be found in <ACLASS="xref"HREF="appg_01.htm"TITLE="Table of IP Services">Appendix G, <CITECLASS="appendix">Table of IP Services</CITE></A>.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-16-TAB-2">Table 16.2: Some Common TCP Services and Ports</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">TCP Port</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Service Name</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Function</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">7</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">echo</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Echoes characters (for testing)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">9</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">discard</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Discards characters (for testing)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">13</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">daytime</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Time of day</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">19</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">chargen</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Character generator</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">21</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">ftp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">File Transfer Protocol (FTP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">23</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">telnet</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Virtual terminal</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">25</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">smtp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Electronic mail</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">37</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">time</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Time of day</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">42</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">nameserver</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">TCP nameservice</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">43</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">whois</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">NIC <ICLASS="filename">whois </I>service</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">domain</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Domain Name Service (DNS)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">79</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">finger</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">User information</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">80</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">http</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">World Wide Web (WWW)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">109</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">pop2</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Post Office Protocol (POP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">110</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">pop3</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Post Office Protocol (POP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">111</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">sunrpc</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Sun Microsystem's Remote ProcedureCall (RPC)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">113</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">auth</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Authentication Service</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">119</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">nntp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Network News Transfer Protocol (NNTP)(Usenet)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">178</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">nsws</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">NeXTSTEP Window Server</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">512</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">exec</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Executes commands on a remote UNIX host</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">513</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">login</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Logs in to a remote UNIX host</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">514</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">shell</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Retrieves a shell on a remote UNIX host</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">515</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">printer</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Remote printing</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">540</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">uucp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Runs UUCP over TCP/IP (primarilyused for transporting netnews)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">2049</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">NFS</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">NFS over TCP</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">6000+</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">X</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">X Window System<ACLASS="indexterm"NAME="AUTOID-20698"></A><ACLASS="indexterm"NAME="AUTOID-20700"></A></P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.4.3">16.2.4.3 UDP</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-20705"></A><ACLASS="indexterm"NAME="AUTOID-20707"></A>User Datagram Protocolprovides a simple, unreliable system for sending packets of databetween two or more programs running on the same or different computers.&quot;Unreliable&quot; means that the operating system doesnot guarantee that every packet sent will be delivered, or thatpackets will be delivered in order. <SPANCLASS="acronym">UDP</SPAN> doesmake its best effort to deliver the packets, however. On a <SPANCLASS="acronym">LAN</SPAN>,<SPANCLASS="acronym">UDP</SPAN> often approaches 100% reliability.</P><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN>'s advantage is that it hasless overhead than <SPANCLASS="acronym">TCP</SPAN>&nbsp;- less overheadlets <SPANCLASS="acronym">UDP</SPAN>-based services transmit informationwith as much as 10 times the throughput. <SPANCLASS="acronym">UDP</SPAN>is used primarily for Sun's Network Filesystem, for <ACLASS="indexterm"NAME="AUTOID-20717"></A><SPANCLASS="acronym">NIS</SPAN>,for resolving hostnames, and for transmitting routing information.It is also used for services that aren't affected negativelyif they miss an occasional packet because they will get anotherperiodic update later, or because the information isn'treally that important. This includes services such as rwho, talk,and some time services.</P><PCLASS="para"><SPANCLASS="acronym">UDP</SPAN> packetsare often broadcast to a given port on every host that resides onthe same local area network. Broadcast packets are used frequentlyfor services such as time of day.</P><PCLASS="para">As with <SPANCLASS="acronym">TCP</SPAN>,<SPANCLASS="acronym">UDP</SPAN> packets are also sent from a port<ICLASS="firstterm"></I>on the sending host to another port on the receivinghost. Each <SPANCLASS="acronym">UDP</SPAN> packet also contains user data.If a program is listening to the particular port and is ready forthe packet, it will be received. Otherwise, the packet will be ignored.</P><PCLASS="para">Ports are identified by 16-bit numbers. Table 0-71lists some common <SPANCLASS="acronym">UDP</SPAN> ports.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-16-TAB-3">Table 16.3: Some Common UDP Services and Ports</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">UDP Port</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Service Name</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Function</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">7</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">echo</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Returns the user's data in anotherdatagram</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">9</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">discard</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Does nothing</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">13</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">daytime</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Returns time of day</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">19</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">chargen</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Character Generator</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">37</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">time</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Returns time of day</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">53</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">domain</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Domain Name Service (DNS)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">69</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">tftp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Trivial File Transfer Protocol (TFTP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">111</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">sunrpc</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Sun Microsystem's Remote ProcedureCall (RPC) portmapper</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">123</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">ntp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Network Time Protocol (NTP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">161</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">snmp</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Simple Network Management Protocol (SNMP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">512</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">biff</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Alerts you to incoming mail (Biff wasthe name of a dog who barked when the mailman came)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">513</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">who</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Returns who is logged into the system</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">514</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">syslog</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">System logging facility</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">517</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">talk</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Initiates a talk request</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">518</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">ntalk</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The &quot;new&quot; talk request</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">520</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">route</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Routing Information Protocol (RIP)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">533</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">netwall</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write on every user's terminal</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">2049</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">NFS</I> (usually)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Network Filesystem (NFS)<ACLASS="indexterm"NAME="AUTOID-20889"></A><ACLASS="indexterm"NAME="AUTOID-20891"></A></P></TD></TR></TBODY></TABLE></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.5">16.2.5 Clients and Servers</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20896"></A><ACLASS="indexterm"NAME="AUTOID-20898"></A>The Internet Protocol is based on the <ICLASS="filename">client/server</I>model. Programs called clients initiate connections over the networkto other programs called servers, which wait for the connectionsto be made. One example of a client/server pair is thenetwork time system. The client program is the program that asksthe network server for the time. The server program is the programthat listens for these requests and transmits the correct time.In <SPANCLASS="acronym">UNIX</SPAN> parlance, server programs that run inthe background and wait for user requests are often known as <ICLASS="filename">daemons</I>.</P><PCLASS="para">Clients and servers are normally different programs.For example, if you wish to log onto another machine, you can usethe <ACLASS="indexterm"NAME="AUTOID-20904"></A>telnet program:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet athens.com</B>Trying... Connected to ATHENS.COM Escape character is '^]'.  4.4 BSD Unix (ATHENS.COM)  login:</PRE></BLOCKQUOTE><PCLASS="para">Whenyou type telnet, the client telnet program on your computer (usuallythe program <ICLASS="filename">/usr/bin/telnet</I>, or possibly <ICLASS="filename">/usr/ucb/telnet</I>)connects to the <KBDCLASS="command">telnet</KBD> server (in this case, named <ICLASS="filename">/usr/etc/in.telnetd)</I>running on the computer <ICLASS="filename">athens.com</I>. As stated, clients and serversnormally reside in different programs. One exception to this ruleis the <KBDCLASS="command">sendmail</KBD> program, which includes the code for both the serverand a client, bundled together in a single application.</P><PCLASS="para">The<KBDCLASS="command">telnet</KBD> program can also be used to connect to any other <SPANCLASS="acronym">TCP</SPAN>port that has a process listening. For instance, you might connectto port 25 (the <SPANCLASS="acronym">SMTP</SPAN> port) to fake some mailwithout going through the normal mailer:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet control.mil 25</B>Trying 45.1.12.2 ...Connected to hq.control.mil.Escape character is '^]'.220-hq.control.mil Sendmail 8.6.10 ready at Tue, 17 Oct 1995 20:00:09 -0500220 ESMTP spoken here<BCLASS="emphasis.bold">HELO kaos.org</B>250 hq.control.mil Hello kaos.org, pleased to meet you<BCLASS="emphasis.bold">MAIL FROM:&lt;agent86@control.gov&gt;</B>250 &lt;agent86&gt;... Sender ok<BCLASS="emphasis.bold">RCPT TO:&lt;agent99@control.mil&gt;</B>550 &lt;agent99&gt;... Recipient ok<BCLASS="emphasis.bold">DATA</B>354 Enter mail, end with &quot;.&quot; on a line by itself<BCLASS="emphasis.bold">To: agent99From: Max &lt;agent86&gt;Subject: tonight99,I know I was supposed to take you out to dinner tonight, but I havebeen captured by KAOS agents, and they won't let me out until theyfinish torturing me. I hope you understand. Love, Max</B>.250 UAA01441 Message accepted for delivery<BCLASS="emphasis.bold">quit</B>221 hq.control.mil closing connectionConnection closed by foreign host.%</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.6">16.2.6 Name Service</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20930"></A><ACLASS="indexterm"NAME="AUTOID-20932"></A><ACLASS="indexterm"NAME="AUTOID-20935"></A>Aswe mentioned, in the early days of the Internet, a single <ICLASS="filename">/etc/hosts</I>file contained the address and name of each computer on the Internet.But as the file grew to contain thousands of lines, and as changesto the list of names (or the namespace) started being made on adaily basis, a single <ICLASS="filename">/etc/hosts</I> file soon becameimpossible to maintain. Instead, the Internet developed a distributednetworked-based naming service called the <ACLASS="indexterm"NAME="AUTOID-20940"></A><ACLASS="indexterm"NAME="AUTOID-20943"></A>DomainName Service (<SPANCLASS="acronym">DNS</SPAN>).</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN>implements a large-scale distributed database for translating hostnamesinto IP addresses and vice-versa, and performing related name functions.The software performs this function by using the network to resolveeach part of the hostname distinctly. For example, if a computeris trying to resolve the name <ICLASS="filename">girigiri.gbrmpa.gov.au</I>,it would first get the address of the root domain server (usuallystored in a file) and ask that machine for the address of the <ICLASS="filename">au</I>domain server. The computer would then ask the <ICLASS="filename">au </I>domainserver for the address of the gov.au domain server, and then wouldask that machine for the address of the <ICLASS="filename">gbrmpa.gov.au</I>domain server. Finally, the computer would then ask the <ICLASS="filename">gbrmpa.gov.au</I>domain server the address for the computer called <ICLASS="filename">girigiri.gbrmpa.gov.au</I>.(Name resolution is shown in <ACLASS="xref"HREF="ch16_02.htm#PUIS-CHP-16-FIG-7"TITLE="The DNS tree hierarchy for name resolution">Figure 16.7</A>.) A varietyof caching techniques are employed to minimize overall network traffic.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-16-FIG-7">Figure 16.7: The DNS tree hierarchy for name resolution</A></H4><IMGCLASS="graphic"SRC="figs/puis_1607.gif"ALT="Figure 16.7"><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> is based on <SPANCLASS="acronym">UDP</SPAN>,but can also use a <SPANCLASS="acronym">TCP</SPAN> connection for some operations.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.6.1">16.2.6.1 DNS under UNIX</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20965"></A><ACLASS="indexterm"NAME="AUTOID-20968"></A>The standard <SPANCLASS="acronym">UNIX</SPAN>implementation of <SPANCLASS="acronym">DNS</SPAN> is called <KBDCLASS="command">bind</KBD> and wasoriginally written at the University of California at Berkeley.This implementation is based on three parts: a library for the clientside, and two programs for the server:</P><DLCLASS="variablelist"><DTCLASS="term">Resolver</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20978"></A><ACLASS="indexterm"NAME="AUTOID-20980"></A><ACLASS="indexterm"NAME="AUTOID-20982"></A>The resolver libraryuses <SPANCLASS="acronym">DNS</SPAN> to implement the <KBDCLASS="command">gethostbyname()</KBD>and <KBDCLASS="command">gethost-byaddress()</KBD> library calls.It is linked into any program that needs to perform name resolutionusing <SPANCLASS="acronym">DNS</SPAN>. The first time that a program linkedwith the resolver attempts to resolve a hostname, the library readsthe <ICLASS="filename">/etc/resolv.conf</I> file to determine the IPaddress of the nameserver to be used for name resolution. The <ICLASS="filename">resolv.conf</I>file can also contain the program's default domain, whichis used to resolve unqualified hostnames (such as <ICLASS="filename">girigiri</I>,as opposed to <ICLASS="filename">girigiri.gbrmpa.gov.au</I>).</P></DD><DTCLASS="term">named (or in.named) </DT><DDCLASS="listitem"><PCLASS="para">The <ICLASS="filename"><ACLASS="indexterm"NAME="AUTOID-20997"></A><ACLASS="indexterm"NAME="AUTOID-20999"></A>named</I>daemon is the program which implements the server side of the <SPANCLASS="acronym">DNS</SPAN>system. When <KBDCLASS="command">named</KBD> is started, it reads a <ICLASS="filename">boot file</I> (usually <ICLASS="filename">/etc/named.boot)</I>that directs the program to the location of its auxiliary files.These files then initialize the<ICLASS="filename"> named</I> daemonwith the location of the root domain servers. If the <ICLASS="filename">named</I>daemon is the nameserver for a domain or a subdomain (which is usuallythe case), the configuration file instructs the program to readin the domain's host tables or get them from a &quot;master&quot;server.</P></DD><DTCLASS="term">named-xfer</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21011"></A><ACLASS="indexterm"NAME="AUTOID-21013"></A>Programused to transfer zones from primary to secondary servers. This programis usually installed as <ICLASS="filename">/etc/named-xfer.</I> It isrun by the secondary server to perform a zone transfer. The <KBDCLASS="command">named-xfer</KBD>program connects to the named program running on the primary serverand performs the transfer using <SPANCLASS="acronym">TCP</SPAN>.</P></DD></DL><PCLASS="para">More details about <SPANCLASS="acronym">DNS</SPAN> and the <SPANCLASS="acronym">BIND</SPAN>name server may be found in the O'Reilly &amp; Associatesbook <EMCLASS="emphasis">DNS and BIND</EM> by Paul Albitz and Cricket Liu.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-16-SECT-2.6.2">16.2.6.2 Other naming services</A></H4><PCLASS="para">In addition to<SPANCLASS="acronym">DNS</SPAN>, there are at least four vendor-specificsystems for providing nameservice and other information to networkedworkstations. They are:</P><DLCLASS="variablelist"><DTCLASS="term"><SPANCLASS="acronym">NIS</SPAN> (Sun Microsystems)</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21032"></A><ACLASS="indexterm"NAME="AUTOID-21035"></A>Originally called &quot;YellowPages,&quot; Sun's Network Information System (<SPANCLASS="acronym">NIS</SPAN>)creates a simple mechanism whereby files such as <ICLASS="filename">/etc/passwd</I>and <ICLASS="filename">/etc/hosts</I> from one computer can be sharedby another. Although <SPANCLASS="acronym">NIS</SPAN> has numerous securityproblems, it is widely used. [11]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] We describeNIS and NIS+ in more detail in <ACLASS="xref"HREF="ch19_01.htm"TITLE="RPC, NIS, NIS+,  and Kerberos">Chapter 19, <CITECLASS="chapter">RPC, NIS, NIS+,  and Kerberos</CITE></A>.</P></BLOCKQUOTE></DD><DTCLASS="term"><SPANCLASS="acronym">NIS</SPAN>+ (Sun Microsystems)</DT><DDCLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">NIS</SPAN>+<ACLASS="indexterm"NAME="AUTOID-21050"></A>is a total rewrite of <SPANCLASS="acronym">NIS</SPAN>, and it dramaticallyincreases both security and flexibility. Nevertheless, <SPANCLASS="acronym">NIS</SPAN>+is not used as widely as <SPANCLASS="acronym">NIS</SPAN>.</P></DD><DTCLASS="term">NetInfo (NeXT, Inc.)</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21059"></A>NetInfo is a distributeddatabase similar to <SPANCLASS="acronym">NIS</SPAN>+. NetInfo istightly integrated in NeXT's <SPANCLASS="acronym">NEXTSTEP</SPAN>operating system and is available for other operating systems froma third party.</P></DD><DTCLASS="term"><SPANCLASS="acronym">DCE</SPAN> (Open Software Foundation)</DT><DDCLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">OSF</SPAN>'s <ACLASS="indexterm"NAME="AUTOID-21069"></A>Distributed Computing Environmentoffers yet another system for distributing a database of information,such as usernames and hosts addresses, to networked workstations.</P></DD></DL><PCLASS="para">All of these systems are designed to distribute a varietyof administrative information throughout a network. All of thesesystems must also use <SPANCLASS="acronym">DNS</SPAN> to resolve hostnamesoutside the local organization. <ACLASS="indexterm"NAME="AUTOID-21073"></A><ACLASS="indexterm"NAME="AUTOID-21075"></A><ACLASS="indexterm"NAME="AUTOID-21078"></A><ACLASS="indexterm"NAME="AUTOID-21081"></A><ACLASS="indexterm"NAME="AUTOID-21083"></A></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_01.htm"TITLE="16.1 Networking"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.1 Networking"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_03.htm"TITLE="16.3 IP Security"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 16.3 IP Security"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">16.1 Networking</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">16.3 IP Security</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>