<HTML><HEAD><TITLE>[Chapter 17] TCP/IP Services</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:12:50Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part04.htm"TITLE="IV. Network and Internet Security"><LINKREL="prev"HREF="ch16_05.htm"TITLE="16.5 Summary"><LINKREL="next"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_05.htm"TITLE="16.5 Summary"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.5 Summary"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.2 Controlling Access to Servers"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="PUIS-CHP-17">17. TCP/IP Services</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="SECT1"HREF="#PUIS-CHP-17-SECT-1"TITLE="17.1 Understanding UNIX Internet Servers">Understanding UNIX Internet Servers</A><BR><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers">Controlling Access to Servers</A><BR><ACLASS="SECT1"HREF="ch17_03.htm"TITLE="17.3 Primary UNIX Network Services">Primary UNIX Network Services</A><BR><ACLASS="SECT1"HREF="ch17_04.htm"TITLE="17.4 Security Implications of Network Services">Security Implications of Network Services</A><BR><ACLASS="SECT1"HREF="ch17_05.htm"TITLE="17.5 Monitoring Your Network with netstat">Monitoring Your Network with netstat</A><BR><ACLASS="SECT1"HREF="ch17_06.htm"TITLE="17.6 Network Scanning">Network Scanning</A><BR><ACLASS="SECT1"HREF="ch17_07.htm"TITLE="17.7 Summary">Summary</A></P><P></P></DIV><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21431"></A>Connectinga <SPANCLASS="acronym">UNIX</SPAN> computer to the Internet is not an actionthat should be taken lightly. Although the <SPANCLASS="acronym">TCP/IP</SPAN>protocol suite and the <SPANCLASS="acronym">UNIX</SPAN> operating systemthemselves have few inherent security problems, many of the problemsthat do exist have a strange way of showing themselves when computersrunning the <SPANCLASS="acronym">UNIX</SPAN> operating system are put onthe global network.</P><PCLASS="para">The reason for caution has a lot to do with the flexibilityof both <SPANCLASS="acronym">UNIX</SPAN> and the Internet. A network connectiongives users on the network dozens of different ways to form connectionswith your computer: they can send it mail, they can access a <SPANCLASS="acronym">WWW</SPAN>server, and they can look up the names and addresses of your users.Unfortunately, each of these services can contain potential securityholes, both as the result of bugs, and because of fundamental shortcomingsin the services themselves.</P><PCLASS="para">Over the years many security problems have been discoveredin network services, and workable solutions have been found. Unfortunately,some <SPANCLASS="acronym">UNIX</SPAN> vendors have been slow to incorporatethese security-related fixes into their standard offerings. If youare the system manager of any <SPANCLASS="acronym">UNIX</SPAN> computer thatis connected to a network, you must therefore be aware of the securityfailings of your own computer, and take appropriate measures tocounteract them. To do so, you first need to understand how the<SPANCLASS="acronym">UNIX</SPAN> operating system works with the Internet.</P><PCLASS="para">This chapter is not a definitive description of the <SPANCLASS="acronym">TCP/IP</SPAN>services offered by <SPANCLASS="acronym">UNIX</SPAN>. Instead, it presentsa brief introduction to the various services, and describes security-relatedconcerns of each. For a more definitive discussion, we recommendthe following books:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">Building Internet Firewalls,</EM> by D.Brent Chapman and Elizabeth D. Zwicky (O'Reilly &amp;Associates, 1995).</P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">Managing Internet Information Services,</EM>by Cricket Liu, Jerry Peek, Russ Jones, Bryan Buus, andAdrian Nye (O'Reilly &amp; Associates, 1994).</P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">DNS and BIND,</EM> by Paul Albitzand Cricket Liu (O'Reilly &amp; Associates, 1992).</P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">sendmail,</EM> by Bryan Costales,with Eric Allman and Neil Rickert (O'Reilly &amp;Associates, 1993).</P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">UNIX Network Programming</EM>, by W. Richard Stevens(Prentice Hall, 1990).</P></LI></UL><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-17-SECT-1">17.1 Understanding UNIX Internet Servers</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21466"></A>Most <SPANCLASS="acronym">UNIX</SPAN>network services are provided by individual programs called <ICLASS="firstterm">servers</I>.For a server to operate, it must be assigned a protocol (<SPANCLASS="acronym">TCP</SPAN>or <SPANCLASS="acronym">UDP</SPAN>), be assigned a port number, and be startedwhen the system boots or as needed, as we'll describe in&quot;Starting the Servers&quot; below.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-1.1">17.1.1 The /etc/services File</A></H3><PCLASS="para">The <EMCLASS="emphasis">/etc/services</EM><ACLASS="indexterm"NAME="AUTOID-21476"></A><ACLASS="indexterm"NAME="AUTOID-21479"></A>file is a relational database file. Each line of the <EMCLASS="emphasis">/etc/services</EM>file consists of a service name, a network port number, a protocolname, and a list of aliases. A rather extensive list of Internetservices, including their uses on <SPANCLASS="acronym">UNIX</SPAN> systems,their security implications, and our recommendations as to whetheror not you should run them, appears in <ACLASS="xref"HREF="appg_01.htm"TITLE="Table of IP Services">Appendix G, <CITECLASS="appendix">Table of IP Services</CITE></A>.</P><PCLASS="para">The <EMCLASS="emphasis">/etc/services</EM> file is referencedby both Internet client programs and servers. The information inthe <EMCLASS="emphasis">/etc/services</EM> file comes from Internet<SPANCLASS="acronym">RFC</SPAN>s[1]and other sources. Some of the services listed in the <EMCLASS="emphasis">/etc/services</EM>file are no longer in widespread use; nevertheless, their namesstill appear in the file to prevent the accidental reassignmentof their ports in the event that the services are still used somewhereon the global network.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] RFC stands for Request ForComment. The RFCs describe many of the actual standards, proposedstandards, and operational characteristics of the Internet. Thereare many online sources for obtaining the RFCs.</P></BLOCKQUOTE><PCLASS="para">The following is an excerpt from the <EMCLASS="emphasis">/etc/services</EM>file that specifies the Telnet, <SPANCLASS="acronym">SMTP</SPAN>, and NetworkTime Protocol (<SPANCLASS="acronym">NTP</SPAN>) services:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># /etc/services # telnet 23 /tcp smtp   25 /tcp mail time   37 /udp timeserver...</PRE></BLOCKQUOTE><PCLASS="para"><SPANCLASS="acronym">UNIX</SPAN> servers should determine their portnumbers by looking up each port in the <ICLASS="filename">/etc/services</I>file using the <SPANCLASS="acronym">UNIX</SPAN> system call <ACLASS="indexterm"NAME="AUTOID-21500"></A><ICLASS="filename">getservicebyname().</I>The <EMCLASS="emphasis">/etc/services</EM> file can be supplementedor replaced by distributed database systems such as <SPANCLASS="acronym">NIS</SPAN>,<SPANCLASS="acronym">NIS</SPAN>+, Netinfo, or <SPANCLASS="acronym">DCE</SPAN>Most of these systems patch the system's <ICLASS="filename">getservicebyname()</I>system call, so that they are transparent to the application.</P><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-21508">Trusted Ports</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21511"></A><ACLASS="indexterm"NAME="AUTOID-21513"></A><ACLASS="indexterm"NAME="AUTOID-21515"></A>Ports in the range 0 to 1023 aresometimes referred to as <ICLASS="firstterm">trusted ports</I>. On<SPANCLASS="acronym">UNIX</SPAN>, these ports are restricted to the superuser;a program must be running as <EMCLASS="emphasis">root</EM> to listento a trusted port or to originate a connection from any of theseport numbers. (Note that any user can connect to a trusted port.)</P><PCLASS="para">Theconcept of trusted ports is intended to prevent a regular user fromobtaining privileged information. For example, if a regular usercould write a program that listened to port 23, that program couldmasquerade as a Telnet server, receiving connections from unsuspectingusers, and obtain their passwords.</P><PCLASS="para">This idea of trustedports is a <SPANCLASS="acronym">UNIX</SPAN> convention. It is not part ofthe Internet standard, and manufacturers are not bound to observethis protocol. It is simply the way that the designers of <SPANCLASS="acronym">UNIX</SPAN>network services decided to approach the problem.</P><PCLASS="para">Thus,trusted ports are not very trustworthy. <EMCLASS="emphasis">Using a non</EM><SPANCLASS="acronym">-UNIX</SPAN><EMCLASS="emphasis">machine, such as an IBM PC with an Ethernet board in place, it ispossible to spoof </EM><SPANCLASS="acronym">UNIX</SPAN><EMCLASS="emphasis"> networksoftware by sending packets from, or listening to, low-numberedtrusted ports. </EM></P></DIV><PCLASS="para">Some programmers bypass this system call and simply hard-codethe service number into their programs. Thus, if you make a changeto a program's port number in the <EMCLASS="emphasis">/etc/services</EM>file, the server may or may not change the port to which it is listening.This can result in significant problems if a change is necessary,although well-known services seldom change their ports.<ACLASS="indexterm"NAME="AUTOID-21534"></A><ACLASS="indexterm"NAME="AUTOID-21537"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-1.2">17.1.2 Starting the Servers</A></H3><PCLASS="para">There are fundamentally two kinds of <SPANCLASS="acronym">UNIX</SPAN>servers:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Servers that are always running. Theseservers are started automatically from the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21547"></A>/etc/rc*</EM>files when the operating system starts up.[2] Servers started at boot time are usuallythe servers that should provide rapid responses to user requests,must handle many network requests from a single server process,or both. Servers in this category include <ICLASS="systemitem">nfsd</I>(Network Filesystem daemon) and <EMCLASS="emphasis">sendmail</EM>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] On SystemV-derived operating systems, such as Solaris 2.x, these serversare usually started by an entry in a file located inside the <EMCLASS="emphasis">/etc/rc2.d/</EM>directory.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Servers that are run only when needed. These serversare usually started from <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21558"></A><ACLASS="indexterm"NAME="AUTOID-21560"></A>inetd</EM>,the <SPANCLASS="acronym">UNIX</SPAN> &quot;Internet&quot; daemon.<EMCLASS="emphasis">inetd</EM> is a flexible program that can listento dozens of Internet ports and automatically start the appropriatedaemon as needed. Servers started by <EMCLASS="emphasis">inetd</EM>include <EMCLASS="emphasis">popper</EM> (Post Office Protocol daemon)and <EMCLASS="emphasis">fingerd</EM> (the <ICLASS="filename">finger</I>daemon).</P></LI></UL><PCLASS="para">Servers that are always running are usually started by a commandin the <EMCLASS="emphasis">/etc/rc*</EM> files. For example, the linesin the <ICLASS="filename">/etc/rc</I> file that start up the SimpleMail Transfer Protocol (<SPANCLASS="acronym">SMTP</SPAN>) server looks likethis:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">if [ -f /usr/lib/sendmail -a -f /etc/sendmail/sendmail.cf ]; then  /usr/lib/sendmail -bd -q1h &amp;&amp; (echo -n ' sendmail') &gt; /dev/console fi</PRE></BLOCKQUOTE><PCLASS="para">This example checks for the existence of <EMCLASS="emphasis">/usr/lib/sendmail</EM>and the program's control file, <EMCLASS="emphasis">/etc/sendmail/sendmail.cf.</EM>If the two files exist, <EMCLASS="emphasis">/etc/rc</EM> runs the <EMCLASS="emphasis">sendmail</EM>program and prints the word &quot;<KBDCLASS="command">sendmail</KBD>&quot;on the system console. After the program is running, <EMCLASS="emphasis">sendmail</EM>will bind to <SPANCLASS="acronym">TCP/IP</SPAN> port number 25 and listenfor connections.[3]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] The option <EMCLASS="emphasis">-bd</EM>makes the <ICLASS="filename">sendmail </I>program &quot;be a daemon&quot;while the option <EMCLASS="emphasis">-q1h</EM> causes the program toprocess the mail queue every hour.</P></BLOCKQUOTE><PCLASS="para">Each time the <EMCLASS="emphasis">sendmail</EM> program receivesa connection, it uses the <EMCLASS="emphasis">fork</EM>()<EMCLASS="emphasis"></EM>system call to create a new process to handle that connection.The original <EMCLASS="emphasis">sendmail</EM> process then continueslistening for new connections.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-1.3">17.1.3 The /etc/inetd Program</A></H3><ACLASS="indexterm"NAME="AUTOID-21595"></A><PCLASS="para">The first version of <SPANCLASS="acronym">UNIX</SPAN> to support theInternet, <SPANCLASS="acronym">BSD</SPAN> 4.2, set a different server programrunning for every network service.[4] As the number of servicesgrew in the mid-1980s, <SPANCLASS="acronym">UNIX</SPAN> systems started havingmore and more server programs sleeping in the background, waitingfor network connections. Although the servers were sleeping, theynevertheless consumed valuable system resources such as processtable entries and swap space. Eventually, a single program called<EMCLASS="emphasis">/etc/inetd</EM> (the Internet daemon) was developed,which listened on many network ports at a time and ran the appropriate<SPANCLASS="acronym">TCP</SPAN>-based or <SPANCLASS="acronym">UDP</SPAN>-based serveron demand when a connection was received.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] BSD 4.1a was anearly test release of UNIX with TCP/IP support. BSD 4.2,released in September 1983, was the first non-test release withTCP/IP support.</P></BLOCKQUOTE><PCLASS="para"><EMCLASS="emphasis">inetd</EM> is run at boot time as part ofthe start-up procedure. When it starts execution, it examines thecontents of the <EMCLASS="emphasis">/etc/inetd.conf</EM> file to determinewhich network services it is supposed to manage. <EMCLASS="emphasis">inetd</EM>uses the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21613"></A>bind</EM>()call to attach itself to many network ports and then uses the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21616"></A><ACLASS="indexterm"NAME="AUTOID-21618"></A><ACLASS="indexterm"NAME="AUTOID-21621"></A>select</EM>()call to cause notification when a connection is made on any of theports.</P><PCLASS="para">A sample <EMCLASS="emphasis">inetd.conf</EM> file might look likethis:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># @(#)inetd.conf 1.1 87/08/12 3.2/4.3NFSSRC # # Internet server configuration database # ftp      stream tcp nowait root    /usr/etc/ftpd ftpd telnet   stream tcp nowait root    /usr/etc/telnetd telnetd shell    stream tcp nowait root    /usr/etc/rshd rshd login    stream tcp nowait root    /usr/etc/rlogind rlogind exec     stream tcp nowait root    /usr/etc/rexecd rexecd uucp     stream tcp nowait uucp    /usr/etc/uucpd uucpd finger   stream tcp nowait nobody  /usr/etc/fingerd fingerd tftp     dgram  udp wait   nobody  /usr/etc/tftpd tftpd comsat   dgram  udp wait   root    /usr/etc/comsat comsat talk     dgram  udp wait   root    /usr/etc/talkd talkd ntalk    dgram  udp wait   root    /usr/etc/ntalkd ntalkd echo     stream tcp nowait root    internal discard  stream tcp nowait root    internal chargen  stream tcp nowait root    internal daytime  stream tcp nowait root    internal time     stream tcp nowait root    internal echo     dgram  udp wait   root    internal discard  dgram  udp wait   root    internal chargen  dgram  udp wait   root    internal daytime  dgram  udp wait   root    internal time     dgram  udp wait   root    internal</PRE></BLOCKQUOTE><PCLASS="para">Each line contains at least six fields, separated by spacesor tabs:</P><DLCLASS="variablelist"><DTCLASS="term">Service name</DT><DDCLASS="listitem"><PCLASS="para">The service name that appears in the <EMCLASS="emphasis">/etc/services</EM>file. <EMCLASS="emphasis">inetd</EM> uses this name to determine whichport number it should listen to.</P></DD><DTCLASS="term">Socket type</DT><DDCLASS="listitem"><PCLASS="para">Whether the service expects to communicate via astream or on a datagram basis.</P></DD><DTCLASS="term">Protocol type</DT><DDCLASS="listitem"><PCLASS="para">Whether the service expects to use <SPANCLASS="acronym">TCP</SPAN>-or <SPANCLASS="acronym">UDP</SPAN>-based communications. <SPANCLASS="acronym">TCP</SPAN>is used with <EMCLASS="emphasis">stream</EM> sockets, while <SPANCLASS="acronym">UDP</SPAN>is used with <EMCLASS="emphasis">dgram</EM>, or datagrams.</P></DD><DTCLASS="term">Wait/nowait</DT><DDCLASS="listitem"><PCLASS="para">If the entry is &quot;wait,&quot; the serveris expected to process all subsequent connections received on thesocket. If &quot;nowait&quot; is specified, <EMCLASS="emphasis">inetd</EM>will <EMCLASS="emphasis">fork</EM>()and <EMCLASS="emphasis">exec</EM>()<EMCLASS="emphasis"></EM>a new server process for each additional datagram orconnection request received. Most <SPANCLASS="acronym">UDP</SPAN> servicesare wait, while most <SPANCLASS="acronym">TCP</SPAN> services are nowait,although this is not a firm rule. Although some <ICLASS="systemitem">man</I> pages indicate that thisfield is only used with datagram sockets, the field is actuallyinterpreted for all services.</P></DD><DTCLASS="term">User</DT><DDCLASS="listitem"><PCLASS="para">Specifies the <SPANCLASS="acronym">UID</SPAN> that the serverprocess is to be run as. This can be <EMCLASS="emphasis">root </EM>(<SPANCLASS="acronym">UID</SPAN>0), <EMCLASS="emphasis">daemon</EM> (<SPANCLASS="acronym">UID</SPAN> 1), <EMCLASS="emphasis">nobody</EM>(often <SPANCLASS="acronym">UID</SPAN> -2 or 65534), or an actualuser of your system. This field allows server processes to be runwith fewer permissions than <EMCLASS="emphasis">root</EM>, to minimizethe damage that could be done if a security hole is discovered ina server program.</P></DD><DTCLASS="term">Command name and arguments</DT><DDCLASS="listitem"><PCLASS="para">The remaining arguments specify the command nameto execute and the arguments that the command is passed, startingwith <EMCLASS="emphasis">argv[0]</EM>.</P></DD></DL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21678"></A><ACLASS="indexterm"NAME="AUTOID-21681"></A><ACLASS="indexterm"NAME="AUTOID-21684"></A>Some services,like <EMCLASS="emphasis">echo</EM>, <EMCLASS="emphasis">time</EM>, and <EMCLASS="emphasis">discard</EM>,are listed as &quot;internal.&quot; These services are fairlytrivial, and they are handled internally by <EMCLASS="emphasis">inetd</EM>rather than requiring a special program to be run. Although theseservices are useful for testing, they can also be used for denialof service attacks. You should disable them.</P><PCLASS="para">You should routinely check the entries in the <ICLASS="filename">/etc/inetd.conf</I>file and verify that you understand why each of the services inthe file is being offered to the Internet. Sometimes, when attackersbreak into systems, they create new services to make future break-inseasier. If you cannot explain why a service is being offered atyour site, you may wish to disable it until you know what purposeit serves. <ACLASS="indexterm"NAME="AUTOID-21693"></A><ACLASS="indexterm"NAME="AUTOID-21695"></A></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_05.htm"TITLE="16.5 Summary"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.5 Summary"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.2 Controlling Access to Servers"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">16.5 Summary</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.2 Controlling Access to Servers</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>