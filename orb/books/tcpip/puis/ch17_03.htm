<HTML><HEAD><TITLE>[Chapter 17] 17.3 Primary UNIX Network Services</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:13:07Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch17_01.htm"TITLE="17. TCP/IP Services"><LINKREL="prev"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"><LINKREL="next"HREF="ch17_04.htm"TITLE="17.4 Security Implications of Network Services"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.2 Controlling Access to Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17<BR>TCP/IP Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_04.htm"TITLE="17.4 Security Implications of Network Services"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.4 Security Implications of Network Services"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3">17.3 Primary UNIX Network Services</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21760"></A>Thissection describes selected network services that are usually providedas part of the standard <SPANCLASS="acronym">UNIX</SPAN> network package.It further discusses some of the major security implications ofeach of these services.</P><PCLASS="para">Every network service carries both known and unknown securityrisks. Some services have relatively small known risks, while othershave substantial ones. And with every network service there is thepossibility that a security flaw in the protocol or the server willbe discovered at some point in the future. Thus, a conservativesecurity policy would remove every service for which there is nodemonstrated need.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21766"></A><ACLASS="indexterm"NAME="AUTOID-21768"></A><ACLASS="indexterm"NAME="AUTOID-21770"></A>If you think that therisk of a service outweighs its benefit, then you can disable theservice simply by placing a hash mark (#) at the beginningof the lines in the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21773"></A><ACLASS="indexterm"NAME="AUTOID-21777"></A><ACLASS="indexterm"NAME="AUTOID-21779"></A>/etc/rc*</EM>file(s) or the <EMCLASS="emphasis">/etc/inetd.conf</EM> file that causethe server program to be executed. This will serve to comment outthose lines. Of course, if you turn off a needed service, peoplewho wish to use it are likely to complain! Remember, too, that disablingthe ability to receive network connections does not prevent peopleon your computer from initiating outbound network connections.</P><PCLASS="para">Note that the <EMCLASS="emphasis">inetd</EM> program may not takenotice of any changes to its configuration until it is restartedor sent a signal (usually the <SPANCLASS="acronym">HUP</SPAN> signal; consultthe <EMCLASS="emphasis">inetd</EM> man page for your system). Changesin the <ICLASS="filename">/etc/rc*</I> file(s) may not take effectuntil you change the run level or restart your system. Thus, ifyou disable a service, the change may not cause a currently runninginvocation of the server to terminate&nbsp;- you may need to takesome other action before you can verify that you have properly disabledthe service.</P><PCLASS="para">We recommend that you save a copy of any configuration files<EMCLASS="emphasis">before</EM> you begin to edit them. That way, ifyou make a mistake or if something doesn't work as expected,you can roll back to an earlier version of the files to determinewhat happened. You might consider using the <ACLASS="indexterm"NAME="AUTOID-21790"></A><ACLASS="indexterm"NAME="AUTOID-21792"></A><ACLASS="indexterm"NAME="AUTOID-21794"></A><SPANCLASS="acronym">RCS</SPAN> or <SPANCLASS="acronym">SCCS</SPAN>revision-control systems to manage these files. These systems allowyou to put date stamps and comments on each set of changes, forfuture reference. Such markings may also be useful for comparisonpurposes if you believe that the files have been changed by an intruder,although this isn't a particularly strong form of detection.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.1">17.3.1 systat (TCP Port 11)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21801"></A><ACLASS="indexterm"NAME="AUTOID-21803"></A>The<EMCLASS="emphasis">systat</EM> service is designed to provide statusinformation about your computer to other computers on the network.</P><PCLASS="para">Many sites have configured their <ICLASS="filename">/etc/inetd.conf</I>file so that connections to <SPANCLASS="acronym">TCP</SPAN> port11 are answered with the output of the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21811"></A><ACLASS="indexterm"NAME="AUTOID-21813"></A>who</EM> or <EMCLASS="emphasis">w</EM>command. You can verify if your system is configured in this mannerwith the <EMCLASS="emphasis">telnet</EM><KBDCLASS="command"> </KBD>command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">unix% telnet media.mit.edu 11Trying 18.85.0.2... Connected to media.mit.edu.Escape character is '^]'.lieber   ttyp0   Aug 12 19:01   (liebernardo.medi)cahn     ttyp1   Aug 13 14:47   (remedios:0.0)foner    ttyp2   Aug 11 16:25   (18.85.3.35:0.2)jrs      ttyp3   Aug 13 17:12   (pu.media.mit.edu)ereidell ttyp4   Aug 14 08:47   (ISAAC.MIT.EDU)felice   ttyp5   Aug 14 09:40   (gaudy.media.mit.)das      ttyp6   Aug 10 19:00   (18.85.4.207:0.0)...</PRE></BLOCKQUOTE><PCLASS="para">Although providing this information is certainly a friendlything to do, usernames, login times, and origination hosts can beused to target specific attacks against your system. We thereforerecommend against running this service.</P><PCLASS="para">To disable the service, simply comment or remove the linebeginning with the word &quot;systat&quot; from your <ICLASS="filename">/etc/inetd.conf</I>file. You can also verify that the service has been disabledby using the <EMCLASS="emphasis">telnet</EM> command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">unix% telnet media.mit.edu 11Trying 18.85.0.2... Connection refused.unix% </PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2">17.3.2 (FTP) File Transfer Protocol (TCP Ports 20 and 21)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-21827"></A><ACLASS="indexterm"NAME="AUTOID-21830"></A>File Transfer Protocol (<SPANCLASS="acronym">FTP</SPAN>)allows you to transfer complete files between systems. Its <SPANCLASS="acronym">UNIX</SPAN>implementation consists of two programs: <EMCLASS="emphasis">ftp</EM>is the client program; <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21836"></A><ACLASS="indexterm"NAME="AUTOID-21838"></A>/etc/ftpd</EM>(sometimes called <EMCLASS="emphasis">/usr/etc/in.ftpd</EM>) is theserver. <SPANCLASS="acronym">TCP</SPAN> port 21 is used for sending commands;port 20 is occasionally used for the data stream, although it ismore common for the client and server to mutually negotiate a setof port numbers greater than 1024.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21845"></A><ACLASS="indexterm"NAME="AUTOID-21848"></A>When youuse <SPANCLASS="acronym">FTP</SPAN> to contact a remote machine, the remotecomputer requires that you log in by providing your username andpassword; <SPANCLASS="acronym">FTP</SPAN> logins are usually recorded onthe remote machine in the <EMCLASS="emphasis">/usr/adm/wtmp</EM> file.Because the passwords typed to <SPANCLASS="acronym">FTP</SPAN> are transmittedunencrypted over the network, they can be intercepted (as with the<EMCLASS="emphasis">telnet</EM> and <EMCLASS="emphasis">rexec</EM> commands);for this reason, some sites may wish to disable the <EMCLASS="emphasis">ftp</EM>and <EMCLASS="emphasis">ftpd</EM> programs, or modify them to use alternativeauthentication protocols.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.1">17.3.2.1 Using anonymous FTP</A></H4><PCLASS="para"><SPANCLASS="acronym">FTP</SPAN><ACLASS="indexterm"NAME="AUTOID-21863"></A><ACLASS="indexterm"NAME="AUTOID-21865"></A><ACLASS="indexterm"NAME="AUTOID-21868"></A><ACLASS="indexterm"NAME="AUTOID-21871"></A>can be set up for anonymous access,which allows people on the network who do not have an account onyour machine to deposit or retrieve files from a special directory.Many institutions use anonymous <SPANCLASS="acronym">FTP</SPAN> as a low-costmethod to distribute software and databases to the public.</P><PCLASS="para">To use anonymous <SPANCLASS="acronym">FTP</SPAN>, simply specify <EMCLASS="emphasis">ftp</EM>[6]as your username, and your real identity&nbsp;- your email address&nbsp;- asthe password.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] Some older servers require that you specify &quot;anonymous&quot;for anonymous FTP; most servers accept either username.</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">ftp athena-dist.mit.edu </B>Connected to AENEAS.MIT.EDU. 220 aeneas FTP server (Version 4.136 Mon Oct 31 23:18:38 EST 1988) ready. Name (athena-dist.mit.edu:fred): <KBDCLASS="command">ftp</KBD> 331 Guest login ok, send ident as password. password: <ICLASS="systemitem.password">Rachel@ora.com</I>230 Guest login ok, access restrictions apply. ftp&gt;</PRE></BLOCKQUOTE><PCLASS="para">Increasingly, systems on the Internet require that you specifyan email address as your &quot;password.&quot; However,few of these systems verify that the email address you type is youractual email address.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.2">17.3.2.2 Passive vs. active FTP</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21889"></A><ACLASS="indexterm"NAME="AUTOID-21891"></A><ACLASS="indexterm"NAME="AUTOID-21893"></A>The <SPANCLASS="acronym">FTP</SPAN> protocolsupports two modes of operations, <ICLASS="firstterm">active</I>(often called <EMCLASS="emphasis">normal)</EM> and <ICLASS="firstterm">passive</I>.These modes determine whether the <SPANCLASS="acronym">FTP</SPAN> serveror the client initiates the <SPANCLASS="acronym">TCP</SPAN> connections thatare used to send information from the server to the host.</P><PCLASS="para">Active mode is the default. In active mode, the server opensa connection to the client, as illustrated in <ACLASS="xref"HREF="ch17_03.htm#PUIS-CHP-17-FIG-1"TITLE="Active-mode FTP connection">Figure 17.1</A>. Activemode complicates the construction of firewalls, because the firewallmust anticipate the connection from the <SPANCLASS="acronym">FTP</SPAN> serverback to the <SPANCLASS="acronym">FTP</SPAN> client program and permit thatconnection through the firewall.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-17-FIG-1">Figure 17.1: Active-mode FTP connection</A></H4><IMGCLASS="graphic"SRC="figs/puis_1701.gif"ALT="Figure 17.1"><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-17-FIG-2">Figure 17.2:  Passive-mode FTP connection</A></H4><IMGCLASS="graphic"SRC="figs/puis_1702.gif"ALT="Figure 17.2"></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.3">17.3.2.3 FTP passive mode</A></H4><PCLASS="para">Under normal circumstances, the <SPANCLASS="acronym">FTP</SPAN> serverinitiates the data connection back to the <SPANCLASS="acronym">FTP</SPAN>client. Many <SPANCLASS="acronym">FTP</SPAN> servers and clients supportan alternative mode of operation called passive mode. In passivemode, the <SPANCLASS="acronym">FTP</SPAN> client initiates the connectionthat the server uses to send data back to client. Passive mode isshown in <ACLASS="xref"HREF="ch17_03.htm#PUIS-CHP-17-FIG-2"TITLE=" Passive-mode FTP connection">Figure 17.2</A>. Passive mode is desirable, because it simplifiesthe task of building a firewall: the firewall simply allows internalconnections to pass through to the outside world, but it does notneed to allow outside connections to come back in. Not all <SPANCLASS="acronym">FTP</SPAN>clients support passive mode, but many do, including the <SPANCLASS="acronym">FTP</SPAN>clients that are built in to most popular <SPANCLASS="acronym">WWW</SPAN>browsers. If your software does not yet include it, you should upgradeto software that does.<ACLASS="indexterm"NAME="AUTOID-21923"></A><ACLASS="indexterm"NAME="AUTOID-21925"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.4">17.3.2.4 Setting up an FTP server</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21931"></A><ACLASS="indexterm"NAME="AUTOID-21934"></A>If you wish to provide<SPANCLASS="acronym">FTP</SPAN> service, you have three choices for <SPANCLASS="acronym">FTP</SPAN>servers:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">You can use the standard <SPANCLASS="acronym">UNIX</SPAN><EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21944"></A>ftpd</EM> thatcomes with your system. Depending on your <SPANCLASS="acronym">UNIX</SPAN>vendor, this version may or may not be secure and bug free. Overthe years, many security problems have been found with <EMCLASS="emphasis">ftpd</EM>.Some vendors have been quick to implement the necessary bug fixes;others have not.</P></LI><LICLASS="listitem"><PCLASS="para">You can run <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-21951"></A>wuftpd</EM>,an excellent <SPANCLASS="acronym">FTP</SPAN> server originally written atWashington University in Saint Louis. The <EMCLASS="emphasis">wuftpd </EM>serverhas many useful options that allow you to create different categoriesof <SPANCLASS="acronym">FTP</SPAN> users, allow you to set limits on thenumber of simultaneous file transfers, and allow you to save networkbandwidth by automatically compressing and archiving files as theyare transferred. Unfortunately, the program itself is quite complex,is somewhat difficult to configure, and has had security problemsin the past. Nevertheless, <EMCLASS="emphasis">wuftpd</EM> is the <SPANCLASS="acronym">FTP</SPAN>server of choice for many major archive sites.</P></LI><LICLASS="listitem"><PCLASS="para">If you only want to provide anonymous <SPANCLASS="acronym">FTP</SPAN>access, you can use one of several stripped-down, minimal implementationsof <SPANCLASS="acronym">FTP</SPAN> servers. One such version is the <ICLASS="filename"><ACLASS="indexterm"NAME="AUTOID-21963"></A>aftpd </I>server, written by Marcus Ranumwhen he was at Trusted Information Systems. The <ICLASS="filename">aftp</I>server is designed to be as simple as possible so as to minimizepotential security problems; therefore, it has far fewer featuresand options than other servers. In particular, it will only servefiles in anonymous transfer mode. We suggest that you consider gettinga copy of <ICLASS="filename">aftp</I> (or something like it) if youonly want to offer anonymous access.[7]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] This is <EMCLASS="emphasis">not</EM> the same FTP server as the one included in the TIS FirewallToolkit. <ICLASS="filename">aftp</I> is available from the TIS FTPsite, <ACLASS="systemitem.ftpserver"HREF="ftp://ftp.tis.com">ftp.tis.com</A>.</P></BLOCKQUOTE></LI></OL><PCLASS="para">All of these servers are started by the <ICLASS="filename">inetd</I>daemon, and thus require an entry in the <ICLASS="filename">/etc/inetd.conf</I>file. You can either have the <SPANCLASS="acronym">FTP</SPAN>server run directly or run through a wrapper such as <ICLASS="filename">tcpwrapper.</I>Our discussion of <SPANCLASS="acronym">FTP</SPAN> services in the followingsections applies to the standard <SPANCLASS="acronym">UNIX</SPAN> <ICLASS="filename">ftpd</I> server.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.5">17.3.2.5 Restricting FTP with the standard UNIX FTP server</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-21983"></A><ACLASS="indexterm"NAME="AUTOID-21985"></A><ACLASS="indexterm"NAME="AUTOID-21988"></A><ACLASS="indexterm"NAME="AUTOID-21991"></A><EMCLASS="emphasis">/etc/ftpusers</EM>file contains a list of the accounts that are<EMCLASS="emphasis"> not </EM>allowedto use <SPANCLASS="acronym">FTP</SPAN> to transfer files. This file shouldcontain all accounts that do not belong to actual human beings:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">cat /etc/ftpusers </B>root uucp news bin ingres nobody daemon</PRE></BLOCKQUOTE><PCLASS="para">In this example, we specifically block access to the <EMCLASS="emphasis">root</EM>,<EMCLASS="emphasis">uucp</EM>, <EMCLASS="emphasis">news</EM>, <EMCLASS="emphasis">bin</EM>,and other accounts so that attackers on the Internet will not beable to break into these accounts using the <SPANCLASS="acronym">FTP</SPAN>program. Blocking system accounts in this manner also prevents thesystem manager from transferring files to these accounts using <SPANCLASS="acronym">FTP</SPAN>,which is a risk because the passwords can be intercepted with apacket sniffer.</P><PCLASS="para">Additionally, most versions of <SPANCLASS="acronym">FTP</SPAN> willnot allow a user to transfer files if the account's shell,as given in the <EMCLASS="emphasis">/etc/passwd</EM> file of the system,is not also listed in the <EMCLASS="emphasis">/etc/shells</EM>[8] file. This is to prevent users who have hadaccounts disabled, or who are using restricted shells, from using<SPANCLASS="acronym">FTP</SPAN>. You should test this feature with your ownserver to determine if it works correctly.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] Note that <EMCLASS="emphasis">/etc/shells</EM> is also used by<EMCLASS="emphasis">chfn</EM> as a list of allowable shells to changeto.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.6">17.3.2.6 Setting up anonymous FTP with the standard UNIX FTPserver</A></H4><PCLASS="para">Setting up <ACLASS="indexterm"NAME="AUTOID-22018"></A><ACLASS="indexterm"NAME="AUTOID-22020"></A><ACLASS="indexterm"NAME="AUTOID-22023"></A>anonymous <SPANCLASS="acronym">FTP</SPAN>on a server is relatively easy, but you must do it correctly, becauseyou are potentially giving access to your system to everybody onthe network.</P><PCLASS="para">To set up anonymous <SPANCLASS="acronym">FTP</SPAN>, you must createa special account with the name <EMCLASS="emphasis">ftp</EM>. For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ftp:*:400:400:Anonymous FTP:/var/spool/ftp:/bin/false</PRE></BLOCKQUOTE><PCLASS="para">Files that are available by anonymous <SPANCLASS="acronym">FTP</SPAN>will be placed in the <EMCLASS="emphasis">ftp</EM> home directory; youshould therefore put the directory in a special place, such as <EMCLASS="emphasis">/var/spool/ftp</EM>.</P><PCLASS="para">When it is used for anonymous <SPANCLASS="acronym">FTP</SPAN>, <EMCLASS="emphasis">ftpd</EM>uses the <EMCLASS="emphasis"><ACLASS="indexterm"NAME="AUTOID-22039"></A>chroot</EM>()function call to change the root of the perceived filesystem tothe home directory of the <EMCLASS="emphasis">ftp</EM> account. Forthis reason, you must set up that account's home directoryas a mini filesystem. Three directories go into this mini filesystem:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">bin</EM></DT><DDCLASS="listitem"><PCLASS="para">This <ACLASS="indexterm"NAME="AUTOID-22049"></A>directoryholds a copy of the <ICLASS="filename">/bin/ls</I> program, which<EMCLASS="emphasis">ftpd</EM> uses to list files. If your system usesdynamic linking and shared libraries, you must either install programsthat are statically linked or install the dynamic libraries in theappropriate directory (for example, <ICLASS="systemitem">/var/spool/ftp/lib</I>).</P></DD><DTCLASS="term"><EMCLASS="emphasis">etc</EM></DT><DDCLASS="listitem"><PCLASS="para">This <ACLASS="indexterm"NAME="AUTOID-22060"></A>directoryholds a version of the <EMCLASS="emphasis">/etc/passwd</EM> and <EMCLASS="emphasis">/etc/group</EM>files, which are put there so the <EMCLASS="emphasis">/bin/ls</EM> commandwill print usernames and groupnames when it lists files. Replacethe encrypted passwords in this file with asterisks. Some security-conscioussites may wish to delete some or all account names from the <EMCLASS="emphasis">passwd</EM>file; the only one that needs to be present is <EMCLASS="emphasis">ftp</EM>.(Actually, if neither file exists, most <SPANCLASS="acronym">FTP</SPAN> serverswill still work normally.)</P></DD><DTCLASS="term"><EMCLASS="emphasis">pub</EM></DT><DDCLASS="listitem"><PCLASS="para">This <ACLASS="indexterm"NAME="AUTOID-22074"></A>directory,short for public, holds the files that are actually made availablefor anonymous <SPANCLASS="acronym">FTP</SPAN> transfer. You can have as manysubdirectories as you wish in the <ICLASS="filename">pub </I>directory.</P></DD></DL><PCLASS="para">Be sure to place the actual files in these directories, ratherthan using symbolic links pointing to other places on your system.Because the <EMCLASS="emphasis">ftpd</EM> program uses the <EMCLASS="emphasis">chroot</EM>()<EMCLASS="emphasis"></EM>system call, symbolic links may not behave properly withanonymous <SPANCLASS="acronym">FTP</SPAN>. In general, symbolic links toinside your <EMCLASS="emphasis">chroot</EM> area will work, and theyare commonly used on anonymous <SPANCLASS="acronym">FTP</SPAN> sites. However,any symbolic link which points outside the <EMCLASS="emphasis">chroot</EM>area or is an absolute symbolic link will not work.</P><PCLASS="para">Now execute the following commands as the superuser. We assumethat you've already created <ICLASS="filename">~ftp</I>.</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">mkdir ~ftp/bin ~ftp/etc ~ftp/pub</B>			Create needed directories. </PRE></BLOCKQUOTE><PCLASS="para">Set up <EMCLASS="emphasis">~ftp/bin</EM>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">chown root ~ftp/bin/ls</B>		 		 	Make sure root owns the directory	.# <BCLASS="emphasis.bold">cp /bin/ls ~ftp/bin</B>			Make a copy of the ls program. # <BCLASS="emphasis.bold">chmod 111 ~ftp/bin/ls</B>			Make sure ls can't be changed. # <BCLASS="emphasis.bold">chmod 111 ~ftp/bin</B>			Make directory execute only. # <BCLASS="emphasis.bold">chown root ~ftp/bin</B>			Make sure root owns the directory. </PRE></BLOCKQUOTE><PCLASS="para">Set up <EMCLASS="emphasis">~ftp/etc</EM>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">cat-passwd awk -F: '{printf &quot;%s:*:%s:%s::\n&quot;,$1,$2,$3}' \	&gt; ~ftp/etc/passwd</B>			Make a copy of /etc/passwd with 			all passwords changed to asterisks.# <BCLASS="emphasis.bold">awk -F: '{printf &quot;%s::%s:%s\n&quot;,$1,$3,$4}' /etc/group &gt; ~ftp/etc/group</B>			Make a copy of /etc/group.# <BCLASS="emphasis.bold">chmod 444 ~ftp/etc/*</B>			Make sure files in etc are not writable.# <BCLASS="emphasis.bold">chmod 111 ~ftp/etc</B>			Make directory execute-only.# <BCLASS="emphasis.bold">chown root ~ftp/etc</B>			Make sure root owns the directory.</PRE></BLOCKQUOTE><PCLASS="para">Alternatively, note that most <EMCLASS="emphasis">ftp</EM> serverswill work fine if the only entries in the passwd file are for <EMCLASS="emphasis">root</EM>and <ICLASS="systemitem">ftp</I>, and the onlyentry in the group file is for group <EMCLASS="emphasis">ftp</EM>. Theonly side-effect is that files left in the <EMCLASS="emphasis">ftp</EM>directories will show numeric owner and groups when clients do adirectory listing. The advantage to having a trimmed file is thatoutsiders cannot gain any clues as to your system's userpopulation if they should obtain a copy of the file.</P><PCLASS="para">Some systems will require you to install dynamic librariesand even device files to make the <SPANCLASS="acronym">FTP</SPAN> server'sfile list command work. This is particularly a problem on Solarissystems. In general, the fewer files accessed in the anonymous <SPANCLASS="acronym">FTP</SPAN>area, the harder the system will be to compromise.</P><PCLASS="para">Set up <EMCLASS="emphasis">~ftp/pub</EM>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">chown root.wheel ~ftp/pub</B>			Make sure root owns the directory. # <BCLASS="emphasis.bold">chmod 555 ~ftp/pub</B>			Make directory writable by nobody.[9] 			(See warning.)</PRE></BLOCKQUOTE><PCLASS="para">And finally, secure the <EMCLASS="emphasis">~ftp</EM> directory:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">chmod 555 ~ftp</B># <BCLASS="emphasis.bold">chown root ~ftp</B></PRE></BLOCKQUOTE><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Note that some <EMCLASS="emphasis">man</EM> pages from somevendors state that the <ICLASS="filename">~ftp</I> directory shouldbe owned by user <EMCLASS="emphasis">ftp</EM>. <EMCLASS="emphasis">This practiceis dangerous!</EM> If user <EMCLASS="emphasis">ftp</EM> owns thehome directory, anonymous users can change the <SPANCLASS="acronym">FTP</SPAN>environment, can delete or create new files at will, and can runany program that they choose. They can also create .<ICLASS="filename">rhosts</I>files to gain direct access to your system!</P></BLOCKQUOTE><PCLASS="para">You should also set up a mail alias for the ftp user, so thatmail sent to <EMCLASS="emphasis">ftp</EM> is delivered to one of yoursystem <ACLASS="indexterm"NAME="AUTOID-22140"></A><ACLASS="indexterm"NAME="AUTOID-22143"></A>administrators.</P><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-22146">Don't Become an FTP-Software Pirate Repository!</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22149"></A><ACLASS="indexterm"NAME="AUTOID-22152"></A><ACLASS="indexterm"NAME="AUTOID-22155"></A><ACLASS="indexterm"NAME="AUTOID-22157"></A><ACLASS="indexterm"NAME="AUTOID-22160"></A>Years ago, organizations thatran <SPANCLASS="acronym">FTP</SPAN> servers would routinely create an &quot;open&quot;directory on their servers so that users on the network could leavefiles for users of the system. Unfortunately, software pirates soonstarted using those directories as repositories for illegally copiedprograms, files of stolen passwords, and pornographic pictures.Collectively, this information is sometimes known as <EMCLASS="emphasis">warez</EM>,although that name is usually reserved for the pirated softwarealone. Today, if you have a directory on an anonymous <SPANCLASS="acronym">FTP</SPAN>server that is writable by the <SPANCLASS="acronym">FTP</SPAN> user, theodds are quite high that it eventually will be discovered and usedin this manner.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22168"></A>Ofcourse, some sites still wish to create &quot;depository&quot;directories on their <SPANCLASS="acronym">FTP</SPAN> servers, so that userson the network can leave files for users of their system. The correctway to do so is to create a depository that is carefully controlledand automatically emptied:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Createa directory that is writable, but not readable, by the ftp user.The easiest way to do so is to make the directory owned by root,and give it a mode of 1733. In this manner, files can be left forusers, but other users who connect to your system using anonymous<SPANCLASS="acronym">FTP</SPAN> will not be able to list the content of thedirectory.[10]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] If you are using the wu archive server,you can configure it so that uploaded files are uploaded in mode004, so that they cannot be read by another client. If you are writingyour own server, this is a good idea to include in your code.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Put a file quota on the ftp user, to limit the totalnumber of bytes that can be received. (Alternatively, locate theanonymous <SPANCLASS="acronym">FTP</SPAN> directory on an isolated partition.)</P></LI><LICLASS="listitem"><PCLASS="para">Create a shell script that automatically moves anyfiles left in the depository that are more than 15 (or 30 or 60)minutes old into another directory that is not accessible by theanonymous <SPANCLASS="acronym">FTP</SPAN> user. You may also wish to haveyour program send you email when files are received.</P></LI><LICLASS="listitem"><PCLASS="para">Place an entry in your /usr/lib/crontabfile so this script runs automatically every 15-30 minutes.</P></LI></OL></DIV></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.2.7">17.3.2.7 Allowing only FTP access</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22189"></A>Sometimes,you may wish to give people permission to <SPANCLASS="acronym">FTP</SPAN>files to and from your computer, but you may not want to give thempermission to actually log in. One simple way to accomplish thisgoal is to set up the person's account with a special shell,such as <ICLASS="filename">/bin/ftponly</I>. Follow these directions:[11]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] If you are using wuftpd, note that there is a feature whichallows a similar configuration.</P></BLOCKQUOTE><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Create a shell script <ICLASS="filename">/bin/ftponly</I>,which prints a polite error message if the user attempts to loginto his account. Here is an example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/sh/bin/cat &lt;&lt; XXYou may use FTP to put files on this computer, but you maynot use this account to login.-The ManagementXX/usr/bin/sleep 10</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Create your user account with <ICLASS="filename">/bin/ftponly</I>as its shell:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">kelly:Mqu3lQJ41kf/E:502:20:Jim Kelly:/Users/kelly:/bin/ftponly</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Finally, add the file <ICLASS="filename">/bin/ftponly</I>to the file <ICLASS="filename">/etc/shells:</I>[12]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] On AIX,shells must be added to the /etc/security/login.cfgfile.</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># List of acceptable shells for chsh/passwd -s# Ftpd will not allow users to connect who do not have one of # these shells#/bin/sh/bin/csh/bin/ftponly <ACLASS="indexterm"NAME="AUTOID-22212"></A><ACLASS="indexterm"NAME="AUTOID-22215"></A><ACLASS="indexterm"NAME="AUTOID-22217"></A><ACLASS="indexterm"NAME="AUTOID-22221"></A><ACLASS="indexterm"NAME="AUTOID-22224"></A> </PRE></BLOCKQUOTE></LI></OL></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.3">17.3.3 TELNET (TCP Port 23)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22231"></A><ACLASS="indexterm"NAME="AUTOID-22233"></A>Telnet is a service designed to allow youto log onto a remote computer on the Internet. Telnet gives youa &quot;virtual terminal&quot; on the remote computer. The<SPANCLASS="acronym">UNIX</SPAN> version of Telnet is implemented with thetelnet client and telnetd server programs.</P><PCLASS="para">To use telnet, type the name of the command followed by thename of the computer to which you wish to connect. When you getthe prompt, simply log in as if you had called your computer usinga modem or connected via a hard-wired terminal:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet prose </B>Trying... Connected to prose Escape character is '^]'  4.3 BSD UNIX (prose.cambridge.ma.us)  login: <BCLASS="emphasis.bold">nancy </B>password: <ICLASS="systemitem.password">T wrink</I></PRE></BLOCKQUOTE><PCLASS="para">Because of the risk of <ACLASS="indexterm"NAME="AUTOID-22244"></A><ACLASS="indexterm"NAME="AUTOID-22247"></A>packet sniffing, logging into your computer withTelnet can pose a greater security risk than simply dialing intoyour computer. On many kinds of networks, such as Ethernet, thepackets sent between computers are actually delivered to every computeron the physical piece of wire. The computers on the network areprogrammed to only respond to the packets that are intended forthem. But it is possible to program a computer to force it to listento and record every packet transmitted. Special programs can capturethe first hundred characters (or more) sent in both directions ona Telnet connection and thereby capture your username and password.</P><PCLASS="para">Packet sniffing is not only a danger on your local area network,because the Telnet session packets are vulnerable throughout theirjourney. In recent years, there have been many cases of InternetService Providers who have had a single computer on their internalnetwork compromised; every Telnet connection passing through that<SPANCLASS="acronym">ISP</SPAN> had its password sniffed as a result. Thebest ways to defeat packet sniffing are through the use of one-timepasswords and encryption.</P><PCLASS="para">A second danger of Telnet is that an attacker can hijack aTelnet session that is in progress using a technique that is sometimescalled <ACLASS="indexterm"NAME="AUTOID-22253"></A><ACLASS="indexterm"NAME="AUTOID-22256"></A><ACLASS="indexterm"NAME="AUTOID-22258"></A>session hijacking. Thus, after youlog in using your password, the attacker can seize control of thesession and type whatever commands he wishes. The only way to eliminatethe possibility of Telnet hijacking is through the use of encryption.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22262"></A>Telnet alsopresents many of the same risks as dial-in modems. Unfortunately,allowing access to your computer by Telnet is significantly morerisky than allowing telephone access for a variety of reasons:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Although finding the telephone numberof a computer's modems can be difficult, one can easilyfind out the address of a computer on the Internet. Few computercenters publish the telephone numbers of their computer'smodems, but a computer's Internet address can be easilydetermined from its hostname. Although this availability makes accesseasier for authorized users, it also makes access easier for attackers.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22270"></A><ACLASS="indexterm"NAME="AUTOID-22273"></A>Becauseconnecting to a computer via Telnet is significantly faster thancalling the computer with a modem, an attacker can try to guessmore passwords in a given amount of time.</P></LI><LICLASS="listitem"><PCLASS="para">As <ACLASS="indexterm"NAME="AUTOID-22278"></A>longdistance calls cost the caller money, few attackers try to breakinto computers outside their local calling area. On the other hand,there is usually no incremental cost associated with using Telnetto break into distant machines. Somebody trying to log into yourcomputer with a stolen password might be across the street, or theymight be on the other side of the globe.</P></LI><LICLASS="listitem"><PCLASS="para">Because the Internet lacks a sophisticated technologyfor tracing calls (often available on telephone networks), the Internetgives attackers the added protection of near anonymity.</P></LI><LICLASS="listitem"><PCLASS="para">Many modems ring or produce other audible soundswhen they receive incoming calls. Telnet connections are silent,and thus less likely to attract outside attention.</P></LI><LICLASS="listitem"><PCLASS="para">A <ACLASS="indexterm"NAME="AUTOID-22286"></A>networkconnection allows an attacker to gain much more information abouta target machine, which can be used to locate additional pointsof vulnerability.</P></LI></UL><PCLASS="para">Telnet is a useful service. To make it safer, you should avoidusing reusable passwords. You can also assign users different passwordson different computers, so that if one account is compromised, otherswill not be.<ACLASS="indexterm"NAME="AUTOID-22289"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.4">17.3.4 Simple Mail Transfer Protocol (SMTP) (TCP Port 25)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22294"></A><ACLASS="indexterm"NAME="AUTOID-22296"></A><ACLASS="indexterm"NAME="AUTOID-22298"></A><ACLASS="indexterm"NAME="AUTOID-22300"></A>Simple Mail Transfer Protocol(<SPANCLASS="acronym">SMTP</SPAN>) is an Internet standard for transferringelectronic mail between computers. The <SPANCLASS="acronym">UNIX</SPAN> program<ACLASS="indexterm"NAME="AUTOID-22306"></A><ICLASS="filename">/usr/lib/sendmail</I>usually implements both the client side and the server side of theprotocol, and seems to be the predominant software used in <SPANCLASS="acronym">UNIX</SPAN>email systems. Using sendmail, mail can be:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Delivered to individual users</P></LI><LICLASS="listitem"><PCLASS="para">Distributed to mailing lists (of many users)</P></LI><LICLASS="listitem"><PCLASS="para">Sent automatically to another machine</P></LI><LICLASS="listitem"><PCLASS="para">Appended to files</P></LI><LICLASS="listitem"><PCLASS="para">Provided as standard input to programs</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22324"></A><ACLASS="indexterm"NAME="AUTOID-22327"></A>Alegitimate mail address can be a username or an entry in the aliasdatabase. The aliases are located in the aliases file, usually inthe <ICLASS="filename">/usr/lib</I>, <ICLASS="filename">/etc</I>, <ICLASS="filename">/etc/mail,</I>or <ICLASS="filename">/etc/sendmail</I> directories.</P><PCLASS="para">The <KBDCLASS="command">sendmail</KBD> program also allows individual users to set upan alias for their accounts by placing a file with the name <ICLASS="filename">.forward</I>in their home directories.</P><PCLASS="para">Another file, <ACLASS="indexterm"NAME="AUTOID-22339"></A><ACLASS="indexterm"NAME="AUTOID-22341"></A><ICLASS="filename">sendmail.cf</I>, <KBDCLASS="command">controls</KBD> sendmail'sconfiguration. The <ICLASS="filename">sendmail.cf</I> file can also be found in variousdirectories, depending on the version in use and the configurationoptions chosen.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> The <KBDCLASS="command">sendmail</KBD> program is only one of many different systemsfor delivering email over the Internet. Others include <KBDCLASS="command">smail</KBD>, <SPANCLASS="acronym">MMDF</SPAN>,and <SPANCLASS="acronym">PMDF</SPAN>. However, Berkeley's <KBDCLASS="command">sendmail</KBD>is by far the most common mailer on the Internet. It also seemsto be the mailer that is the most plagued with security problems.Whether these problems are because the design of <KBDCLASS="command">sendmail</KBD> is fundamentallyflawed, because the coding of <KBDCLASS="command">sendmail</KBD> is particularly sloppy, orsimply because more people are looking for flaws in <KBDCLASS="command">sendmail</KBD> thanin any other program remains an open question.</P></BLOCKQUOTE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.4.1">17.3.4.1 sendmail and security</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22360"></A><ACLASS="indexterm"NAME="AUTOID-22363"></A><ACLASS="indexterm"NAME="AUTOID-22366"></A><KBDCLASS="command">sendmail</KBD> has beenthe source of numerous security breaches on <SPANCLASS="acronym">UNIX</SPAN>systems. For example:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Early versions of <KBDCLASS="command">sendmail</KBD> allowedmail to be sent directly to any file on the system, including fileslike <ICLASS="filename">/etc/passwd.</I></P></LI><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">sendmail</KBD> supports a &quot;<ACLASS="indexterm"NAME="AUTOID-22379"></A><ACLASS="indexterm"NAME="AUTOID-22381"></A>wizard'spassword,&quot; set in the configuration file, that can be usedto get a shell on a remote system without logging in.</P></LI><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">sendmail</KBD> allows <ACLASS="indexterm"NAME="AUTOID-22387"></A><ACLASS="indexterm"NAME="AUTOID-22390"></A>trusted users, who are permittedto forge mail that is delivered to the local machine.</P></LI><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">sendmail</KBD> can be compiled in &quot;debug mode,&quot;a mode that in the past has been used to allow outsiders unrestrictedaccess to the system <KBDCLASS="command">sendmail</KBD> is running on.</P></LI><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">sendmail</KBD> used to accept <ACLASS="indexterm"NAME="AUTOID-22401"></A>mail with a program as the recipient, thusallowing remote users to invoke shells and other programs on thedestination host.</P></LI><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">sendmail</KBD> has done a poor job of validating its arguments,thus allowing users to overwrite arbitrary locations in memory,or provide input that results in very bad side effects.</P></LI></UL><PCLASS="para">One of the main reasons for <KBDCLASS="command">sendmail</KBD>'s problems isits all-in-one design. The program is extremely complicated, runsas superuser, freely accepts connections from any computer on theInternet, and has a rich command language. We are not surprisedthat the program has been plagued with problems, although it seemsto have had more than its share.</P><PCLASS="para">Fortunately, there are alternatives. Instead of having a largeall-in-one program receive messages from the Internet and then deliverthe mail, you could split this functionality into two differentprograms. The Firewall Toolkit from Trusted Information Systemscontains a program called <KBDCLASS="command"><ACLASS="indexterm"NAME="AUTOID-22411"></A>smap</KBD>that does exactly this. Even if you do not have a firewall, youmay wish to use smap for accepting <SPANCLASS="acronym">SMTP</SPAN> connectionsfrom outside sites. For instructions on how to do this, see &quot;Installingthe TIS smap/smapd sendmail Wrapper&quot; in <ACLASS="xref"HREF="ch22_01.htm"TITLE="Wrappers and Proxies">Chapter 22</A>.</P><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-22415">What's My sendmail Version?</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22418"></A>If you are using the version of sendmail thatwas supplied with your operating system, then you may have difficultyfiguring out which version of sendmail you are actually running.Your <ICLASS="filename">sendmail</I> program should print its versionnumber when you telnet to it (port 25). Beware: if sendmail doesnot print a version number, there is no easy way to determine whatversion number you have.</P><PCLASS="para">One way that you can determineyour sendmail version is to download a new version and install ityourself.</P><PCLASS="para">You can get the current version of sendmailfrom the following locations:</P><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><ACLASS="systemitem.url"HREF="ftp://ftp.cs.berkeley.edu/ucb/sendmail">ftp://ftp.cs.berkeley.edu/ucb/sendmail</A><BR><ACLASS="systemitem.url"HREF="ftp://info.cert.org/pub/tools/sendmail/">ftp://info.cert.org/pub/tools/sendmail/</A><BR><ACLASS="systemitem.url"HREF="ftp://auscert.org.au/pub/mirrors/ftp.cs.berkeley.edu/ucb/sendmail">ftp://auscert.org.au/pub/mirrors/ftp.cs.berkeley.edu/ucb/sendmail</A> </P></BLOCKQUOTE><PCLASS="para">Some vendors make proprietary changes tothe sendmail program, so you may not be able to use Berkeley'sunmodified version on your system. (For example, Berkeley'sunmodified sendmail will not read mail aliases from systems usingSun Microsystem's <SPANCLASS="acronym">NIS</SPAN>+ networkname service.) In these cases, your only solution is to speak withyour vendor.</P></DIV></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.4.2">17.3.4.2 Using sendmail to receive email</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22433"></A>If you mustrun <KBDCLASS="command">sendmail</KBD> to receive electronic mail, you should take extra measuresto protect your system's security.</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Make sure that your <KBDCLASS="command">sendmail</KBD> programdoes not support the <ACLASS="indexterm"NAME="AUTOID-22441"></A><ACLASS="indexterm"NAME="AUTOID-22443"></A><ACLASS="indexterm"NAME="AUTOID-22445"></A><KBDCLASS="command">debug</KBD>,<KBDCLASS="command">wiz</KBD>, or <KBDCLASS="command">kill</KBD> commands. You can test your <KBDCLASS="command">sendmail</KBD> with the followingcommand sequence:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet localhost smtp </B>Connected to localhost. Escape character is &quot;^]&quot;. 220 prose.cambridge.ma.us Sendmail 5.52 ready at Mon, 2 Jul 90 15:57:29 EDT <BCLASS="emphasis.bold">wiz </B>500 Command unrecognized <BCLASS="emphasis.bold">debug</B> 500 Command unrecognized <BCLASS="emphasis.bold">kill </B>500 Command unrecognized <BCLASS="emphasis.bold">quit </B>221 prose.cambridge.ma.us closing connection Connection closed by foreign host %</PRE></BLOCKQUOTE><PCLASS="para">The command <KBDCLASS="command">telnet localhost smtp</KBD> opens up a <SPANCLASS="acronym">TCP</SPAN>connection between your terminal and the <KBDCLASS="command">smtp</KBD> part of your localcomputer (which always has the alias <KBDCLASS="command">localhost</KBD>). You are then ableto type commands to your <KBDCLASS="command">sendmail</KBD>'s command interpreter.If your <KBDCLASS="command">sendmail</KBD> responds to the <KBDCLASS="command">debug</KBD> or <KBDCLASS="command">wiz</KBD> command with any ofthe following messages&nbsp;- or any message other than &quot;commandunrecognized&quot;&nbsp;- replace the version of <KBDCLASS="command">sendmail</KBD>that you are running (but see #4 below):</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">200 Debug set 200 Mother is dead 500 Can't kill Mom 200 Please pass, oh mighty wizard 500 You are no wizard!</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para"></P><PCLASS="para">Delete the &quot;<ACLASS="indexterm"NAME="AUTOID-22471"></A><ACLASS="indexterm"NAME="AUTOID-22473"></A><ACLASS="indexterm"NAME="AUTOID-22476"></A>decode&quot;aliases from the alias file. The decode alias is a single line thatlooks like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">decode: &quot;|/usr/bin/uudecode&quot;</PRE></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22481"></A>Thedecode alias allows mail to be sent directly to the <ACLASS="indexterm"NAME="AUTOID-22485"></A><KBDCLASS="command">uudecode</KBD> program. This ability has been shownto be a security hole. Examine carefully every alias that pointsto a file or program instead of a user account. Remember to runnewaliases after changing the <ICLASS="filename">aliases</I> file.</P></LI><LICLASS="listitem"><PCLASS="para">Make sure that your <ICLASS="filename">aliases</I>file is protected so that it cannot be modified by people who arenot system administrators. Otherwise, people might add new aliasesthat run programs, redirect email for system administrators, orplay other games. If your version of <KBDCLASS="command">sendmail</KBD> creates aliases.dirand aliases.pag <ICLASS="filename">dbm</I> files, those files shouldalso be protected.</P></LI><LICLASS="listitem"><PCLASS="para">Make sure that the &quot;wizard&quot; passwordis disabled in the <ICLASS="filename">sendmail.cf</I> file. If it is not, then a personwho knows the wizard password can connect to your computer's<KBDCLASS="command">sendmail</KBD> daemon and start up a shell without logging in! If thisfeature is enabled in your version of <KBDCLASS="command">sendmail</KBD>, you will note thatthe wizard password is a line that begins with the letters OW (uppercaseO, uppercase W). For example: <ACLASS="indexterm"NAME="AUTOID-22499"></A></P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Let the wizard do what she wants OWsitrVlWxktZ67 </PRE></BLOCKQUOTE><PCLASS="para">If you find a line like this, change it to disallow the wizard password: </P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Disallow wizard password: OW*</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Make sure that you have the most recentversion of <KBDCLASS="command">sendmail</KBD> installed on your computer. Monitor the <SPANCLASS="acronym">CERT</SPAN>mailing list for problems with <KBDCLASS="command">sendmail</KBD> and be prepared to upgradeas soon as vulnerabilities are posted.  </P></LI></OL><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-22509">Stamp Out Phantom Mail!</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22512"></A><ACLASS="indexterm"NAME="AUTOID-22514"></A><ACLASS="indexterm"NAME="AUTOID-22517"></A>The <SPANCLASS="acronym">UNIX</SPAN> operating systemuses accounts without corresponding real users to perform many systemfunctions. Examples of these accounts include <ICLASS="systemitem">uucp</I>, <ICLASS="systemitem">news</I>,and <ICLASS="systemitem">root</I>. Unfortunately,the mail system will happily receive email for these users.</P><PCLASS="para">Email delivered to one of these accounts normally goes onlyto a mail file. There, it resides in your <ICLASS="filename">/var/spool/mail</I>directory until it is finally read. On some systems, there is mailwaiting for users with the names news or ingres that is more thanfive years old.</P><PCLASS="para">Is this a problem? Absolutely:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">These mail files can grow to be megabytes long,consuming valuable system resources.</P></LI><LICLASS="listitem"><PCLASS="para">Many programs that run autonomously will send mailto an address such as news or uucp when they encounter a problem.If this mail is not monitored by the system administrator, problemscan go undiagnosed.</P></LI></UL><PCLASS="para">You canavoid the problem of phantom mail by creating mail aliases for allof your system, nonuser accounts. To make things easy for futuresystem administrators, you should put these aliases at the beginningof your aliases file. For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">## System aliases#root:           simsongPostmaster:     rootusenet:         rootnews:           rootagent:          rootsybase:         rootMAILER-DAEMON:  postmaster</PRE></BLOCKQUOTE></DIV><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> When security flaws are announced, potential intrudersare often much quicker to attack than system administrators areto upgrade. We advise you to upgrade as quickly as possible. Siteshave been attacked within six hours of the release of a <SPANCLASS="acronym">CERT</SPAN>advisory.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.4.3">17.3.4.3 Improving the security of Berkeley sendmail V8</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22540"></A>Ifyou are intent on using Berkeley <KBDCLASS="command">sendmail</KBD> for your mail server,you can still improve your security by using <KBDCLASS="command">sendmail</KBD> Version 8.If you are not running <KBDCLASS="command">sendmail</KBD> Version 8, then you are probablyrunning Version 5; Versions 6 and 7 did not make it out the door.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Be sure that you track the current version of <ICLASS="filename">sendmail</I>,and obtain new versions as necessary. New security-related bugsare (seemingly) constantly being discovered in <ICLASS="filename">sendmail</I>.If you do not keep up, your site may be compromised!</P></BLOCKQUOTE><PCLASS="para">There are well-known vulnerabilities, with exploit scripts,in most older versions of <KBDCLASS="command">sendmail</KBD>, including versions providedby many vendors. Besides containing numerous bug fixes over previousversions of <KBDCLASS="command">sendmail</KBD>, Version 8 offers a variety of &quot;securityoptions&quot; that can be enabled by inserting a statement inyour <ICLASS="filename">sendmail.cf </I>configuration file. Many ofthese options are designed to control the release of informationabout your internal organization on the Internet.[13]These options are summarized in <ACLASS="xref"HREF="ch17_03.htm#PUIS-CHP-17-TAB-1"TITLE="Security Options in Version 8 Sendmail">Table 17.1</A>:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] We recommendthat you read the security chapter in Sendmail by Bryan Costaleset al. (O'Reilly &amp; Associates, 1993) for additionalinformation.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-17-TAB-1">Table 17.1: Security Optionsin Version 8 Sendmail</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Option</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Effect</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Purpose</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22575"></A><KBDCLASS="command">novrfy</KBD></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Disables VRFY command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">VRFY can be used by outsiders to determinethe names of valid users; use <ICLASS="filename">novrfy</I> to disablethis command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22586"></A><ICLASS="filename">noexpn</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Disables EXPN command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">EXPN reveals the actual delivery addressesof mail aliases and mailing lists; <ICLASS="filename">noexpn</I> disablesthis command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22597"></A><KBDCLASS="command">needmailhelo</KBD></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Requires HELO before a MAIL command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Refuses mail unless the sending sitehas properly identified itself.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22607"></A><KBDCLASS="command">needvrfyhelo</KBD></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Requires HELO before VRFY command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Allows the use of the VRFY command, butonly after the network user has identified himself.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22617"></A><KBDCLASS="command">needexpnhelo</KBD></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Requires HELO before EXPN command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Allows use of the EXPN command, but onlyafter the network user has identified himself.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22627"></A><KBDCLASS="command">restrictmailq</KBD></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Restricts use of <ICLASS="filename">mailq </I>command.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">If set, allows only users who belongto the group that owns the mail queue directory to view the mailqueue. This restriction can prevent others from monitoring mailthat is exchanged between your computer and the outside world.</P></TD></TR></TBODY></TABLE><PCLASS="para">You can increase the logging level of sendmail to level 9by inserting the line &quot;OL9&quot; in your <ICLASS="filename">sendmail.cf</I>file, and we recommend that you do so; higher levels are used fordebugging and do not serve any obvious security purpose. This willlog lots of interesting information to <ICLASS="filename"><ACLASS="indexterm"NAME="AUTOID-22638"></A><ACLASS="indexterm"NAME="AUTOID-22640"></A>syslog</I>. Besure that your <ICLASS="filename">syslog.conf</I> file is configuredso that this information is written to a reasonable place, and besure to check the logs.</P><PCLASS="para">There have been a number of problems with addresses that sendmail to programs. This should be disabled, if not needed, by settingthe <ICLASS="filename">progmailer </I>to a program such as <ICLASS="filename">/bin/false</I>.If you do need progmailer functionality, use smrsh (bundled with8.7.x).</P><PCLASS="para">Here is an example of when you might use the security options.Suppose that you have a company-wide alias such as all or marketing,and that you wish to prevent outsiders (such as recruiters) fromlearning the email addresses of people on these mailing lists. Atthe same time, you may wish to prevent outsiders from learning thenames of valid accounts on your system, to avoid accepting emailfrom sites that do not properly identify themselves, and to preventemployees from spying on another's email correspondence.In this case, you would insert the following line into your <ICLASS="filename">sendmail.cf </I>file; note that the &quot;O&quot; is requiredat the beginning of the Option line.</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Onovrfy,noexpn,needmailhelo,restrictmailq</PRE></BLOCKQUOTE><PCLASS="para">We recommend that you use this setting unless you have a specificreason for divulging your internal account information to the Internetat large. Be aware, though, that sendmail's <ACLASS="indexterm"NAME="AUTOID-22651"></A><SPANCLASS="acronym">VERB</SPAN> (verbose)command will still be active, which may still be used by attackersto gain insight into your vulnerabilities. The <SPANCLASS="acronym">VERB</SPAN>command cannot be easily disabled.</P><PCLASS="para">Note that if you disable the <ACLASS="indexterm"NAME="AUTOID-22656"></A>fingercommand and also turn off the <ACLASS="indexterm"NAME="AUTOID-22658"></A><SPANCLASS="acronym">VRFY</SPAN>option in your mailer, you can make it difficult for someone outsideyour site to determine a valid email address for a user that maybe at your site. You should probably set up some form of modified<ICLASS="filename">finger </I>service in this case to respond withinformation about how to obtain a valid email address.<ACLASS="indexterm"NAME="AUTOID-22662"></A><ACLASS="indexterm"NAME="AUTOID-22664"></A><ACLASS="indexterm"NAME="AUTOID-22667"></A><ACLASS="indexterm"NAME="AUTOID-22669"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.5">17.3.5 TACACS (UDP Port 49)</A></H3><PCLASS="para"><SPANCLASS="acronym">TACACS</SPAN><ACLASS="indexterm"NAME="AUTOID-22675"></A><ACLASS="indexterm"NAME="AUTOID-22677"></A><ACLASS="indexterm"NAME="AUTOID-22680"></A>is the<SPANCLASS="acronym">TAC</SPAN> Access Control Server protocol. It is a protocolthat is used to authenticate logins to terminal servers.</P><PCLASS="para"><SPANCLASS="acronym">TACACS</SPAN> defines a set of packet types thatcan be sent from the terminal server to an authentication server.The <SPANCLASS="acronym">LOGIN</SPAN> packet is a query indicating that auser wishes to log in to the terminal server. The <SPANCLASS="acronym">TACACS</SPAN>server examines the username and the password that are present inthe <SPANCLASS="acronym">LOGIN</SPAN> packet and sends back an <SPANCLASS="acronym">ANSWER</SPAN>packet that either accepts the login or rejects it.</P><PCLASS="para">The <SPANCLASS="acronym">TACACS</SPAN> and <ACLASS="indexterm"NAME="AUTOID-22692"></A><SPANCLASS="acronym">XTACACS</SPAN> (Extended <SPANCLASS="acronym">TACACS</SPAN>)support a variety of additional packets, which allow the terminalserver to notify the host when users connect, hang up, log in, logout, and switch into <SPANCLASS="acronym">SLIP</SPAN> mode.</P><PCLASS="para">Passwords are not encrypted with <SPANCLASS="acronym">TACACS</SPAN>.Thus, they are susceptible to packet sniffing.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.6">17.3.6 Domain Name System (DNS) (TCP and UDP Port 53)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22703"></A><ACLASS="indexterm"NAME="AUTOID-22705"></A>Domain Name System (<SPANCLASS="acronym">DNS</SPAN>)is a distributed database that is used so that computers may determineIP addresses from hostnames, determine where to deliver mail withinan organization, and determine a hostname from an IP address. Theprocess of using this distributed system is called <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-22711"></A>resolving.</I></P><PCLASS="para">When <SPANCLASS="acronym">DNS</SPAN> looks up a hostname (or otherinformation), the computer performing the lookup contacts one ormore nameservers, seeking records that match the hostname that iscurrently being resolved.[14]One or more nameserverrecords can be returned in response to a name lookup. <ACLASS="xref"HREF="ch17_03.htm#PUIS-CHP-17-TAB-2"TITLE="DNS-supported Record Types">Table 17.2</A>lists some of the kinds of records that are supported:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] Most UNIX DNS implementations usea file called <ICLASS="filename">/etc/resolv.conf </I>to specify theIP addresses of the nameservers that should be queried. Further,a default domain can be specified.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-17-TAB-2">Table 17.2: DNS-supportedRecord Types</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Record Type</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Purpose</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">A</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Authoritative address. For the IN domain,this is an IP address.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">AAAA</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">IP version 6 authoritative address.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">CNAME</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Canonical name of an alias for a host.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PTR</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Pointer record; maps IP addresses toa hostname (for IP host).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22754"></A>MX</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Mail exchange; specifies a differentcomputer that should actually receive mail destined for this host.</P></TD></TR></TBODY></TABLE><PCLASS="para">For example, using <SPANCLASS="acronym">DNS</SPAN>, a computer on theInternet might look up the name <ICLASS="systemitem">www.cs.purdue.edu</I> and receive an A record indicating that the computer'sIP address is 128.10.19.20. An MX query about the address cs.purdue.edumight return a record indicating that mail for that address shouldactually be delivered to the machine arthur.cs.purdue.edu. You canhave multiple MX records for robustness; if the first host is unavailable,the program attempting to deliver your electronic mail will trythe second, and then the third. Of course, a program trying to deliveremail would then have to resolve each of the MX hostnames to determinethat computer's IP address.</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> also makes provision for mapping IPaddresses back to hostnames. This reverse translation is accomplishedwith a special domain called IN-ADDR.ARPA, which is populated exclusivelyby <SPANCLASS="acronym">PTR</SPAN> records. In this example, attempting toresolve the address 20.19.10.128. IN-ADDR.ARPA would return a <SPANCLASS="acronym">PTR</SPAN>record pointing to the hostname, which is lucan.cs.purdue.edu (the<SPANCLASS="acronym">CNAME</SPAN> of www.cs.purdue.edu).</P><PCLASS="para">Besides individual hostname resolutions, <SPANCLASS="acronym">DNS</SPAN>also provides a system for downloading a copy of the entire databasefrom a nameserver. This process is called a <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-22769"></A><ACLASS="indexterm"NAME="AUTOID-22771"></A>zonetransfer</I>, and it is the process that secondary serversuse to obtain a copy of the primary server's database.</P><PCLASS="para"><SPANCLASS="acronym">DNS</SPAN> communicates over both <SPANCLASS="acronym">UDP</SPAN>and <SPANCLASS="acronym">TCP</SPAN>, using the different protocols for differentpurposes. Because <SPANCLASS="acronym">UDP</SPAN> is a quick, packet-basedprotocol that allows for limited data transfer, it is used for theactual process of hostname resolution. <SPANCLASS="acronym">TCP</SPAN>, meanwhile,is used for transactions that require large, reliable, and sustaineddata transfer&nbsp;- that is, zone transfers.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.6.1">17.3.6.1 DNS zone transfers</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22783"></A>Zonetransfers can be a security risk, as they potentially give outsidersa complete list of all of an organization's computers connectedto the internal network. Many sites choose to allow <SPANCLASS="acronym">UDP</SPAN><SPANCLASS="acronym">DNS</SPAN> packets through their firewalls and routers,but explicitly block <SPANCLASS="acronym">DNS</SPAN> zone transfers originatingat external sites. This design is a compromise between safety andusability: it allows outsiders to determine the IP addresses ofeach internal computer, but only if the computer's nameis already known.</P><PCLASS="para">You can block zone transfers with a router that can screenpackets, by blocking incoming <SPANCLASS="acronym">TCP</SPAN> connectionson port 53. Some versions of the Berkeley-named nameserver allowyou to place an <ACLASS="indexterm"NAME="AUTOID-22791"></A><ICLASS="filename">xfrnets</I>directive in the <ACLASS="indexterm"NAME="AUTOID-22794"></A><ACLASS="indexterm"NAME="AUTOID-22796"></A><ICLASS="filename">/etc/named.boot</I>file. If this option is specified, zone transfers will only be permittedfrom the hosts listed on the <KBDCLASS="command">xfernets</KBD> line. This option is usefulif you wish to allow zone transfers to a secondary nameserver thatis not within your organization, but you don't want toallow zone transfers to anyone else.</P><PCLASS="para">For example, if your site operates a single domain, bigcorp.com,and you have a secondary nameserver at IP address 204.17.199.40,you might have the following <ICLASS="filename">/etc/named.boot</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; BigCorp's /etc/named.boot; directory		/var/named;primary		bigcorp.com		  named.bigcorpprimary		199.17.204.in-addr.arpa		  named.204.17.199cache		.		  root.caxfrnets		204.17.199.40 <ACLASS="indexterm"NAME="AUTOID-22804"></A><ACLASS="indexterm"NAME="AUTOID-22806"></A><ACLASS="indexterm"NAME="AUTOID-22809"></A> </PRE></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.6.2">17.3.6.2 DNS nameserver attacks</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22815"></A><ACLASS="indexterm"NAME="AUTOID-22818"></A><ACLASS="indexterm"NAME="AUTOID-22820"></A>Becausemany <SPANCLASS="acronym">UNIX</SPAN> applications use hostnames as the basisof access control lists, an attacker who can gain control of your<SPANCLASS="acronym">DNS</SPAN> nameserver or corrupt its contents can usethat to break into your systems.</P><PCLASS="para">There are two fundamental ways that an attacker can causea nameserver to serve incorrect information:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Incorrect information can be fraudulentlyloaded into your nameserver's cache over the network, asa false reply to a query.</P></LI><LICLASS="listitem"><PCLASS="para">An attacker can change the nameserver'sconfiguration files on the computer where your nameserver resides.</P></LI></OL><PCLASS="para">If your nameserver has contact with the outside network, thereis a possibility that attackers can exploit a programming bug ora configuration error to load your nameserver with erroneous information.The best way to protect your nameserver from these kinds of attacksis to isolate it from the outside network, so that no contact ismade. If you have a firewall, you can achieve this isolation byrunning two nameservers: one in front of the <ACLASS="indexterm"NAME="AUTOID-22832"></A>firewall, and one behind it. The nameserver in frontof the firewall contains only the names and IP addresses of yourgate computer; the nameserver behind the firewall contains the namesand IP addresses of all of your internal hosts. If you couple thesenameservers with static routing tables, damaging information willnot likely find its way into your nameservers.</P><PCLASS="para">To change your configuration files, an attacker must haveaccess to the filesystem of the computer on which the nameserveris running and be able to modify the files. After the files aremodified, the nameserver must be restarted (by sending it a <KBDCLASS="command">kill -HUP</KBD>signal). As the nameserver must run as superuser, an attacker wouldneed to have superuser access on the server machine to carry outthis attack. Unfortunately, by having control of your nameserver,a skillful attacker could use control over the nameserver to parlaycontrol of a single machine into control of your entire network.Furthermore, if the attacker does not have <ICLASS="filename">root</I> but can modify thenameserver files, then he can simply wait until the nameserver isrestarted by somebody else, or until the system crashes and everyprogram is restarted.</P><PCLASS="para">You can minimize the possibility of an attacker modifyingyour nameserver by following these recommendations:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Run your nameserver on a special computerthat does not have user accounts.</P></LI><LICLASS="listitem"><PCLASS="para">If you must run the nameserver on a computer thatis used by ordinary users, make sure that the nameserver'sfiles are all owned by <ICLASS="filename">root</I> and have their protection mode set to444 or 400 (depending on your site's policy). Any directoriesthat are used to store nameserver files should be owned by rootand have their protection mode set to 755 or 700 (again, dependingon your site's policy). And all parent directories of thosedirectories should be owned by root, mode 755 or 700.</P></LI><LICLASS="listitem"><PCLASS="para">Remember, there are <EMCLASS="emphasis">many</EM> filesthat are used by the nameserver. For example, the Berkeley <KBDCLASS="command"><ACLASS="indexterm"NAME="AUTOID-22849"></A><ACLASS="indexterm"NAME="AUTOID-22851"></A><ACLASS="indexterm"NAME="AUTOID-22853"></A>named</KBD> nameserver (by far the most commonon <SPANCLASS="acronym">UNIX</SPAN> systems) first looks at the file <ICLASS="filename">/etc/named.boot</I>when it starts up. This file specifies other files andother directories that may be located anywhere on your computer.Be sure that all of these files are properly protected.</P></LI><LICLASS="listitem"><PCLASS="para">If you know of a specific site that is attemptingto attack your nameserver, you can use <SPANCLASS="acronym">BIND</SPAN>'s<ACLASS="indexterm"NAME="AUTOID-22861"></A>bogusns directive to preventthe program from sending nameserver queries to that host.</P></LI></UL><PCLASS="para">You can further protect yourself from nameserver attacks byusing IP addresses in your access control lists, rather than byusing hostnames. Unfortunately, several significant programs donot allow the use of IP addresses. For example, the Solaris <ICLASS="filename">rlogind/rshd</I>does not allow you to specify an IP address in the <ICLASS="filename">/etc/hosts.equiv</I>file or the <ICLASS="filename">.rhosts</I> file. We believe that vendors should modifytheir software to permit an IP address to be specified whereverhostnames are currently allowed.<ACLASS="indexterm"NAME="AUTOID-22867"></A><ACLASS="indexterm"NAME="AUTOID-22870"></A><ACLASS="indexterm"NAME="AUTOID-22872"></A><ACLASS="indexterm"NAME="AUTOID-22875"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.7">17.3.7 Trivial File Transfer Protocol (TFTP) (UDP Port 69)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22880"></A><ACLASS="indexterm"NAME="AUTOID-22882"></A><ACLASS="indexterm"NAME="AUTOID-22884"></A>Trivial File Transfer Protocol (<SPANCLASS="acronym">TFTP</SPAN>)is a <SPANCLASS="acronym">UDP</SPAN>-based file-transfer program that providesno security. There is a set of files that the <SPANCLASS="acronym">TFTP</SPAN>program is allowed to transmit from your computer, and the programwill transmit them to anybody on the Internet who asks for them.One of the main uses of <SPANCLASS="acronym">TFTP</SPAN> is to allow workstationsto boot over the network; the <SPANCLASS="acronym">TFTP</SPAN> protocol issimple enough to be programmed into a small read-only memory chip.</P><PCLASS="para">Because <SPANCLASS="acronym">TFTP</SPAN> has no security, <ACLASS="indexterm"NAME="AUTOID-22895"></A><KBDCLASS="command">tftpd</KBD>, the <SPANCLASS="acronym">TFTP</SPAN> daemon, isnormally restricted so that it can transfer files only to or froma certain directory. Unfortunately, many early versions of <KBDCLASS="command">tftpd</KBD>had no such restriction. For example, versions of the <ACLASS="indexterm"NAME="AUTOID-22900"></A>SunOS operating systems priorto Release 4.0 did not restrict file transfer from the <SPANCLASS="acronym">TFTP</SPAN>program.</P><PCLASS="para">You can test your version of <KBDCLASS="command">tftpd</KBD> for this restriction withthe following sequence:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">tftp localhost </B>tftp&gt; <BCLASS="emphasis.bold">get /etc/passwd tmp </B>Error code 1: File not found tftp&gt; <BCLASS="emphasis.bold">quit </B>%</PRE></BLOCKQUOTE><PCLASS="para">If <KBDCLASS="command">tftp</KBD> does not respond with &quot;Error code 1: Filenot found,&quot; or simply hangs with no message, then get acurrent version of the program.</P><PCLASS="para">On <ACLASS="indexterm"NAME="AUTOID-22913"></A><ACLASS="indexterm"NAME="AUTOID-22916"></A><SPANCLASS="acronym">AIX</SPAN>, <KBDCLASS="command">tftp</KBD> accesscan be restricted through the use of the<ICLASS="filename"> /etc/tftpaccess.ctl</I>file.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.8">17.3.8 finger (TCP Port 79)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22926"></A><KBDCLASS="command">finger</KBD>program has two uses:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">If you run <KBDCLASS="command">finger</KBD> with no arguments,the program prints the username, full name, location, login time,and office telephone number of every user currently logged intoyour system (assuming that this information is stored in the <ICLASS="filename">/etc/passwd</I>file).</P></LI><LICLASS="listitem"><PCLASS="para">If you run <KBDCLASS="command">finger</KBD> with a name argument, the programsearches through the <ICLASS="filename">/etc/passwd</I> file and printsdetailed information for every user with a first name, last name,or username that matches the name you specified.</P></LI></UL><PCLASS="para">Normally, <KBDCLASS="command">finger</KBD> runs on the local machine. However, you canfind out who is logged onto a remote machine (in this case, a machineat <SPANCLASS="acronym">MIT</SPAN>) by typing:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% finger @media-lab.media.mit.edu</PRE></BLOCKQUOTE><PCLASS="para">To look up a specific user's <KBDCLASS="command">finger</KBD> entry on thismachine, you might type:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% finger gandalf@media-lab.media.mit.edu</PRE></BLOCKQUOTE><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22946"></A><ICLASS="filename">/etc/fingerd</I>program implements the network <KBDCLASS="command">finger</KBD> protocol, which makes <KBDCLASS="command">finger</KBD>service available to anybody on the network.</P><PCLASS="para"><KBDCLASS="command">finger</KBD> provides a simple, easy-to-use system for making personalinformation (like telephone numbers) available to other people.Novice users are often surprised, however, that information thatis available on their local machine is also available to anyoneon any network to which their local machine is connected. Thus,users should be cautioned to think twice about the information theystore using the <KBDCLASS="command">chfn</KBD> command, and in their files printed by <KBDCLASS="command">finger</KBD>.<KBDCLASS="command">finger</KBD> makes it easy for intruders to get a list of the users onyour system, which dramatically increases the intruders'chances of breaking into your system.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.8.1">17.3.8.1 The .plan and .project files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22961"></A><ACLASS="indexterm"NAME="AUTOID-22963"></A>Mostversions of the <SPANCLASS="acronym">UNIX</SPAN> <KBDCLASS="command">finger</KBD> program display thecontents of the <ICLASS="filename">.plan</I> and <ICLASS="filename">.project</I> files ina person's home directory when that person is &quot;fingered.&quot;On older versions of <SPANCLASS="acronym">UNIX</SPAN>, the finger daemonran as root. As a result, an intrepid user could read the contentsof any file on the system by making her .plan a symbolic link tothat file, and then running <ICLASS="filename">finger</I> againsther own account.</P><PCLASS="para">One easy way that you can check for this is to create a <ICLASS="filename">.plan</I>file and change its file mode to 000. Then run finger against yourown account. If you see the contents of your <ICLASS="filename">.plan</I> file, then yourversion of <KBDCLASS="command">fingerd</KBD> is unsecure.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.8.2">17.3.8.2 Disabling finger</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-22978"></A><ACLASS="indexterm"NAME="AUTOID-22981"></A><ACLASS="indexterm"NAME="AUTOID-22984"></A><KBDCLASS="command">finger</KBD>system reveals information that could be used as the basis for asocial engineering attack. For example, an attacker could &quot;finger&quot;a user on the system, determine their name and office number, thencall up the system operator and say &quot;Hi, this is Jack Smith.I work in office E15, but I'm at home today. I'veforgotten my password; could you please change my password to foo*barso that I can log on?&quot;</P><PCLASS="para">Many system administrators choose to disable the <KBDCLASS="command">finger</KBD> system.There are two ways that you can do this:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">You can remove (or comment out) the<KBDCLASS="command">finger</KBD> server line in the file <ICLASS="filename">/etc/inetd.conf</I>.This change will cause people trying to <KBDCLASS="command">finger</KBD> your site to receivea &quot;Connection refused&quot; error. Disabling <ICLASS="filename">finger</I>in this way can cause problems for trying to determine mail addressesor phone numbers. Outsiders may be attempting to contact you towarn you that your site has been broken into by others. Therefore,completely disabling <KBDCLASS="command">finger</KBD> in this way might actually decreaseyour overall security, in addition to causing an overall inconveniencefor everybody.</P></LI><LICLASS="listitem"><PCLASS="para">You can replace the <KBDCLASS="command">finger</KBD> server with a shell scriptthat prints a message instructing people how to contact your site.For example, you might use a script that looks like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/sh#/bin/cat &lt;&lt; 'XX'Welcome to Big Whammix Inc.For information on contacting a specific employee, please call ourcompany operator at 1-999-555-1212 or send electronic mail tothe address postmaster@whammix.comThank you.XXexit 0</PRE></BLOCKQUOTE><PCLASS="para">Store this script in an executable file, such as <ICLASS="filename">/usr/local/etc/no_finger.</I>Then in the file <ICLASS="filename">/etc/inetd.conf,</I> replace thenormal finger entry with this line:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">finger  stream  tcp   nowait  nobody /usr/local/etc/no_finger no_finger</PRE></BLOCKQUOTE><PCLASS="para">Remember to restart <KBDCLASS="command">inetd</KBD>.</P></LI></UL></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.8.3">17.3.8.3 Replacing finger</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23011"></A>As an alternativeto <KBDCLASS="command">finger</KBD>, you can use the <KBDCLASS="command">ph</KBD> (phone book) server. This server allowsyou to place information into a database, and specify which informationshould be returned for queries originating from inside and outsideyour network.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23016"></A>You can download the <KBDCLASS="command">ph</KBD> server from <ACLASS="systemitem.url"HREF="ftp://vixen.cso.uiuc.edu/pub/ph.tar.gz.">ftp://vixen.cso.uiuc.edu/pub/ph.tar.gz.</A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.9">17.3.9 HyperText Transfer Protocol (HTTP) (TCP Port 80)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23023"></A><ACLASS="indexterm"NAME="AUTOID-23025"></A><ACLASS="indexterm"NAME="AUTOID-23029"></A>Hypertext Transfer Protocol is the protocol thatis used to request and receive documents from servers on the WorldWide Web (<SPANCLASS="acronym">WWW</SPAN>). Access to the World Wide Webis one of the driving forces behind the growth of the Internet,and many sites that have Internet connectivity will be pressuredto provide both client applications and <SPANCLASS="acronym">WWW</SPAN> serversfor their users.</P><PCLASS="para">One of the reasons for the success of <SPANCLASS="acronym">HTTP</SPAN>is its simplicity. When a client contacts a <SPANCLASS="acronym">WWW</SPAN>server, the client asks for a filename; the server responds witha <SPANCLASS="acronym">MIME</SPAN> document formatted in either plain <SPANCLASS="acronym">ASCII</SPAN>or <SPANCLASS="acronym">HTML</SPAN> (HyperText Markup Language). The documentis then displayed.[15]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[15] HTML is a simple use of SGML (StandardGeneralized Markup Language).</P></BLOCKQUOTE><PCLASS="para"><SPANCLASS="acronym">WWW</SPAN> browsers can implement as much (oras little) of <SPANCLASS="acronym">HTML</SPAN> as they wish; the documentsdisplayed will still be viewable. <SPANCLASS="acronym">HTML</SPAN> documentscan have embedded tags for images (which are separately retrieved)and for hypertext links to other documents. The servers are configuredso that a specified directory on the system (for example, <ICLASS="filename">/usr/local/etc/httpd/htdocs)</I>corresponds with the root directory of the <SPANCLASS="acronym">WWW</SPAN>client (for example, <ACLASS="systemitem.url"HREF="http://www.oreilly.com/">http://www.oreilly.com/</A>).</P><PCLASS="para">Because there are many security considerations when settingup a <SPANCLASS="acronym">WWW</SPAN> server and using a <SPANCLASS="acronym">WWW</SPAN>client, we have written a whole chapter about them. See <ACLASS="xref"HREF="ch18_01.htm"TITLE="WWW Security">Chapter 18, <CITECLASS="chapter">WWW Security</CITE></A>, for the complete story.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.10">17.3.10 Post Office Protocol (POP) (TCP Ports109 and 110)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23056"></A><ACLASS="indexterm"NAME="AUTOID-23058"></A><ACLASS="indexterm"NAME="AUTOID-23062"></A>PostOffice Protocol (<SPANCLASS="acronym">POP</SPAN>) is a system that providesusers on client machines a way to retrieve their electronic mail&nbsp;- withoutmounting a shared mail-spool directory using a remote file-accessprotocol such as <SPANCLASS="acronym">NFS</SPAN>. <SPANCLASS="acronym">POP</SPAN>allows users to access individual mail messages, to set limits onthe maximum length of the message that the client wishes to retrieve,and to leave mail on the server until the message has been explicitlydeleted.</P><PCLASS="para"><SPANCLASS="acronym">POP</SPAN> requires that users authenticate themselvesbefore they can access their mail. There are at least three waysto do this:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">You can use simple <ACLASS="indexterm"NAME="AUTOID-23073"></A>passwords. This is by far the mostcommon way for <SPANCLASS="acronym">POP</SPAN> users to authenticate themselvesto <SPANCLASS="acronym">POP</SPAN> servers. Unfortunately, most <SPANCLASS="acronym">POP</SPAN>clients use the same password for retrieving mail that they do forunrestricted system access. As a result, the user's passwordis a tempting target for an attacker armed with a packet sniffer.And it's an easy target, as it is always sent properly,it is always sent to the same port, and it is sent frequently&nbsp;- typicallyevery few minutes.</P></LI><LICLASS="listitem"><PCLASS="para">You can use <SPANCLASS="acronym">POP</SPAN>'s <ACLASS="indexterm"NAME="AUTOID-23082"></A><SPANCLASS="acronym">APOP</SPAN> option. Insteadof passwords, <SPANCLASS="acronym">APOP</SPAN> uses a simple challenge/responsesystem. It is described in <SPANCLASS="acronym">RFC</SPAN> 1725, the same<SPANCLASS="acronym">RFC</SPAN> that describes <SPANCLASS="acronym">POP3</SPAN>.</P><PCLASS="para">When a client program connects to a <SPANCLASS="acronym">POP3</SPAN>server, the server sends a banner that must include a unique timestampstring located within a pair of angle-brackets. For example, the<SPANCLASS="acronym">UNIX</SPAN> <SPANCLASS="acronym">POP</SPAN> server might returnthe following:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">+OK POP3 server ready &lt;1896.697170952@dbc.mtview.ca.us&gt;</PRE></BLOCKQUOTE><PCLASS="para">When using simple passwords, the client program would nextsend through the username and the password, like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">+OK POP3 server ready &lt;1896.697170952@dbc.mtview.ca.us&gt;<BCLASS="emphasis.bold">user mrose</B>+OK Password required for mrose.<BCLASS="emphasis.bold">pass fooby$#</B>+OK maildrop has 1 message (369 octets)</PRE></BLOCKQUOTE><PCLASS="para">With <SPANCLASS="acronym">APOP</SPAN>, the client program does notsend the <SPANCLASS="acronym">USER</SPAN> and <SPANCLASS="acronym">PASS</SPAN> commands;instead, it sends an <SPANCLASS="acronym">APOP</SPAN> command that containsthe username and a 128-bit hexadecimal number that is the <ACLASS="indexterm"NAME="AUTOID-23103"></A>MD5 hash code ofthe timestamp (including the angle brackets) and a secret passphrasethat is known to both the user and the <SPANCLASS="acronym">POP</SPAN> server.For example, the user might have the password tanstaaf. To determinethe appropriate MD5 code, the user's client program wouldcompute the MD5 hash of:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;1896.697170952@dbc.mtview.ca.us&gt;tanstaaf</PRE></BLOCKQUOTE><PCLASS="para">which is:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">c4c9334bac560ecc979e58001b3e22fb</PRE></BLOCKQUOTE><PCLASS="para">Thus, the <SPANCLASS="acronym">APOP</SPAN> message sent to the serverwould be:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold">APOP mrose c4c9334bac560ecc979e58001b3e22fb</B>+OK maildrop has 1 message (369 octets)</PRE></BLOCKQUOTE><PCLASS="para">Note that because the <SPANCLASS="acronym">POP3</SPAN> server mustknow the shared secret, it should not be the same phrase as yourpassword.</P></LI><LICLASS="listitem"><PCLASS="para">You can use a version of <SPANCLASS="acronym">POP</SPAN>that has been modified to work with Kerberos. (Kerberos is describedin <ACLASS="xref"HREF="ch19_01.htm"TITLE="RPC, NIS, NIS+,  and Kerberos">Chapter 19, <CITECLASS="chapter">RPC, NIS, NIS+,  and Kerberos</CITE></A>.)</P></LI></OL><PCLASS="para">Note that both your <SPANCLASS="acronym">POP</SPAN> server and your<SPANCLASS="acronym">POP</SPAN> client must support the authentication systemthat you wish to use. For example, early popular Eudora email clientsonly support traditional passwords, but later versions include supportfor both <SPANCLASS="acronym">APOP</SPAN> and Kerberos.[16]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[16] Actually,Eudora doesn't support Kerberos directly. Instead, it usesthe Kclient application program that is available for both the Macintoshand Windows.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.11">17.3.11 Sun RPC's portmapper (UDP and TCP Ports 111)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23129"></A><ACLASS="indexterm"NAME="AUTOID-23131"></A>portmapper program is used as part of Sun Microsystem'sRemote Procedure Call (<SPANCLASS="acronym">RPC</SPAN>) system to dynamicallyassign the <SPANCLASS="acronym">TCP</SPAN> and <SPANCLASS="acronym">UDP</SPAN> portsused for remote procedure calls. portmapper is thus similar to the<KBDCLASS="command">inetd</KBD> daemon, in that it mediates communicationsbetween network clients and network servers that may have securityproblems.</P><PCLASS="para">The standard <SPANCLASS="acronym">UNIX</SPAN> portmapper assumes thatsecurity will be handled by the servers, and therefore allows anynetwork client to communicate with any <SPANCLASS="acronym">RPC</SPAN> server.You can improve security by using Wietse Venema's portmapperreplacement program, which can be obtained via anonymous <SPANCLASS="acronym">FTP</SPAN>from the site <ICLASS="filename">ftp.win.tue.nl /pub/security/portmap.shar</I>.This portmapper allows for improved logging, as well as access controllists.</P><PCLASS="para">Many sites further restrict access to their portmappers bysetting their firewalls to block packets on port 111.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.12">17.3.12 Identification Protocol (auth) (TCP Port113)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23147"></A><ACLASS="indexterm"NAME="AUTOID-23149"></A>The <SPANCLASS="acronym">TCP/IP</SPAN> protocol is asystem for creating communication channels between computers, notusers. However, it is sometimes useful to know the name of the userassociated with a particular <SPANCLASS="acronym">TCP/IP</SPAN> connection.For example, when somebody sends mail to your computer, you shouldbe able to verify that the username in the mail message's&quot;<KBDCLASS="command">From:</KBD>&quot; field is actually thename of the user who is sending the message.</P><PCLASS="para">The identification protocol gives you a way of addressingthis problem with a simple callback scheme. When a server wantsto know the &quot;real name&quot; of a person initiatinga <SPANCLASS="acronym">TCP/IP</SPAN> connection, it simply opens a connectionto the client machine's <KBDCLASS="command"><ACLASS="indexterm"NAME="AUTOID-23158"></A>identd</KBD> daemon and sends a description of the <SPANCLASS="acronym">TCP/IP</SPAN>connection in progress; the remote machine sends a human-readablerepresentation of the user who is initiating the connection&nbsp;- usuallythe user's username and the full name from the <ICLASS="filename">/etc/passwd</I>file.</P><PCLASS="para">The identification protocol is usually not a very good approachto network security, because it depends on the honesty of the computerat the other end of the <SPANCLASS="acronym">TCP/IP</SPAN> connection. Thus,if somebody is trying to break into your computer from another computerthat they have already gained control of, ident will not tell youthat person's name. On the other hand, it is useful fororganizations such as universities who want to track down the perpetratorsof simplistic, sophomoric email forgery attempts.</P><PCLASS="para">If an intruder has a normal account (no root privileges) thathe is using as a stepping stone to other hosts, running an identserver may be very useful in tracking down the intruder. Sites thathave a reasonable number of users should run ident to help trackdown accounts that have been compromised during an incident.</P><PCLASS="para">In general, the responses of ident queries are more usefulto the administrators of the site that sends the response than thesite that receives it. Thus, logging ident queries may not helpyou, but can be a courtesy to others.</P><PCLASS="para">To make use of the identification protocol, you need to havea server program that understands the protocol and knows to placethe callback. sendmail version 8 will do so, for instance, as will<ICLASS="filename">tcpwrapper</I>.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.13">17.3.13 Network News Transport Protocol (NNTP)  (TCP Port119)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23171"></A><ACLASS="indexterm"NAME="AUTOID-23173"></A><ACLASS="indexterm"NAME="AUTOID-23176"></A><ACLASS="indexterm"NAME="AUTOID-23179"></A><ACLASS="indexterm"NAME="AUTOID-23182"></A>NetworkNews Transport Protocol (<SPANCLASS="acronym">NNTP</SPAN>) is used by manylarge sites to transport Usenet articles between news servers. Theprotocol also allows users on distributed workstations to read newsand post messages to the Usenet.</P><PCLASS="para"><SPANCLASS="acronym">NNTP</SPAN> can be configured with an <ACLASS="indexterm"NAME="AUTOID-23189"></A><ACLASS="indexterm"NAME="AUTOID-23192"></A><ACLASS="indexterm"NAME="AUTOID-23195"></A>access control list (<SPANCLASS="acronym">ACL</SPAN>)to determine which computers are allowed to use which features.The access control list is based on hostname; thus <SPANCLASS="acronym">NNTP</SPAN>'ssecurity can be bypassed through IP spoofing or through <SPANCLASS="acronym">DNS</SPAN>attacks.</P><PCLASS="para">Under normal circumstances, a compromised <SPANCLASS="acronym">NNTP</SPAN>server does not represent a serious security <ACLASS="indexterm"NAME="AUTOID-23203"></A>threat&nbsp;- it simply means thatan unauthorized individual may be able to read or post Usenet articleswithout permission. However, there are two potential circumstancesin which unauthorized use of <SPANCLASS="acronym">NNTP</SPAN> could causeproblems:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">If you have special newsgroups foryour own organization's internal discussions, there isa chance that a compromised <SPANCLASS="acronym">NNTP</SPAN> server couldreveal confidential information to outsiders.</P></LI><LICLASS="listitem"><PCLASS="para">If an outsider can post from your <SPANCLASS="acronym">NNTP</SPAN>server, that outsider could post a message that is libelous, scandalous,or offensive&nbsp;- potentially causing a liability for your organization.</P></LI></UL><PCLASS="para">You can protect your <SPANCLASS="acronym">NNTP</SPAN> server from theseforms of abuse with a good firewall.</P><PCLASS="para"><SPANCLASS="acronym">INND</SPAN><ACLASS="indexterm"NAME="AUTOID-23218"></A>is an alternative Usenet news transport program written by RichSalz. If you are running <SPANCLASS="acronym">INND</SPAN>, make sure thatyou have at least version 1.4 and have applied the relevant securitypatches, or have a version higher than 1.4. Versions of <SPANCLASS="acronym">INND</SPAN>prior to and including version 1.4 had a serious problem.[17]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[17] For any software like this that you install, you should checkto be sure that you have the most current version.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.14">17.3.14 Network Time Protocol (NTP) (UDP Port 123)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23227"></A><ACLASS="indexterm"NAME="AUTOID-23229"></A><ACLASS="indexterm"NAME="AUTOID-23232"></A><ACLASS="indexterm"NAME="AUTOID-23234"></A><ACLASS="indexterm"NAME="AUTOID-23237"></A><ACLASS="indexterm"NAME="AUTOID-23241"></A>NetworkTime Protocol (<SPANCLASS="acronym">NTP</SPAN>) is the latest in a long seriesof protocols designed to let computers on a local or wide area networkfigure out the current time. <SPANCLASS="acronym">NTP</SPAN> is a sophisticatedprotocol that can take into account network delay and the existenceof different servers with different clocks. Nevertheless, <SPANCLASS="acronym">NTP</SPAN>was not designed to resist attack, and several versions of <KBDCLASS="command">ntpd</KBD>,the <SPANCLASS="acronym">NTP</SPAN> daemon, can be fooled into making significantand erroneous changes to the system's clock.</P><PCLASS="para">A variety of problems can arise if an attacker can changeyour system clock:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The attacker can attempt a <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-23255"></A><ACLASS="indexterm"NAME="AUTOID-23257"></A><ACLASS="indexterm"NAME="AUTOID-23260"></A><ACLASS="indexterm"NAME="AUTOID-23263"></A>replay attack.</I>For example, if your system uses Kerberos, old Kerberos ticketsmay work once again. If you use a time-based password system, oldpasswords may work.</P></LI><LICLASS="listitem"><PCLASS="para">Your system <ACLASS="indexterm"NAME="AUTOID-23268"></A>logfiles will no longer accurately indicate the correct time at whichevents took place. If your attacker can move the system'sclock far into the future, he or she might even be able to causeyour system to erase all of its log files as the result of a weeklyor monthly cleanup procedure.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23273"></A><ACLASS="indexterm"NAME="AUTOID-23276"></A>Batch jobs run from the <KBDCLASS="command">cron</KBD>daemon may not be executed if your system's clock jumpsover the time specified in your <ICLASS="filename">crontab</I> fileor directory. This type of failure in your system's clockmay have an impact on your security.</P></LI></UL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.15">17.3.15 Simple Network Management Protocol (SNMP) (UDP Ports161 and 162)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23284"></A><ACLASS="indexterm"NAME="AUTOID-23287"></A><ACLASS="indexterm"NAME="AUTOID-23290"></A><ACLASS="indexterm"NAME="AUTOID-23292"></A><ACLASS="indexterm"NAME="AUTOID-23295"></A>SimpleNetwork Management Protocol (<SPANCLASS="acronym">SNMP</SPAN>) is a protocoldesigned to allow the remote management of devices on your network.To be managed with <SPANCLASS="acronym">SNMP</SPAN>, a device must be ableto receive packets over a network.</P><PCLASS="para"><SPANCLASS="acronym">SNMP</SPAN> allows for two types of managementmessages:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Messages that monitor the currentstatus of the network (for example, the current load of a communicationslink)</P></LI><LICLASS="listitem"><PCLASS="para">Messages that change the status of network devices(for example, take a communications link up or down)</P></LI></UL><PCLASS="para"><SPANCLASS="acronym">SNMP</SPAN> can be of great value to attackers.With carefully constructed <SPANCLASS="acronym">SNMP</SPAN> messages, anattacker can learn the internal structure of your network, changeyour network configuration, and even shut down your operations.Although some <SPANCLASS="acronym">SNMP</SPAN> systems include provisionsfor password-based security, others don't. <SPANCLASS="acronym">SNMP</SPAN>version 2.0 was intended to include better security features, butas this book goes to press, the standards committee is unable toagree on the necessary features, so the prospects look bleak. Eachsite must therefore judge the value of each particular <SPANCLASS="acronym">SNMP</SPAN>service and weigh that value against the risk.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> If you use <SPANCLASS="acronym">SNMP</SPAN>, you should be sureto change your <SPANCLASS="acronym">SNMP</SPAN> &quot;community&quot;from &quot;public&quot; to some other value. When an <SPANCLASS="acronym">SNMP</SPAN>monitoring program queries an <SPANCLASS="acronym">SNMP</SPAN> agent forinformation, the monitoring program must provide the correct communityor the agent does not return any information. By changing your <SPANCLASS="acronym">SNMP</SPAN>community from the default (public) to some other value, you canlimit the amount of information that an unknowledgeable attackercan learn about your network.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.16">17.3.16 NEXTSTEP Window Server (NSWS) (TCP Port 178)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23324"></A><ACLASS="indexterm"NAME="AUTOID-23326"></A><ACLASS="indexterm"NAME="AUTOID-23328"></A><SPANCLASS="acronym">NEXTSTEP</SPAN> applications (don't laugh;there are still quite a few out there) use <SPANCLASS="acronym">TCP</SPAN>connections on port 178 to communicate with the <SPANCLASS="acronym">NEXTSTEP</SPAN>Display PostScript Window Server. An application that can connectto the Window Server has total control of the workstation on whichthat Window Server is running: as with X, the application can readthe contents of the screen and send events to other applications.Furthermore, the application can use the Display PostScript Serverto read or write any file on the workstation to which the logged-inuser has access.</P><PCLASS="para">Current versions of the <SPANCLASS="acronym">NEXTSTEP</SPAN> WindowServer have a simplistic approach to security. There is no authenticationof incoming connections. The Window Server either accepts connectionsfrom remote machines or it doesn't. Whether or not connectionsare accepted is set by a check box in the <SPANCLASS="acronym">NEXTSTEP</SPAN>Preference application. The preference is stored in the user's&quot;defaults database,&quot; which means that it can betoggled on by rogue applications without the user's knowledge.</P><PCLASS="para">Accept remote connections at your own risk.</P><PCLASS="para">If you place a computer running <SPANCLASS="acronym">NEXTSTEP</SPAN>on the Internet, be sure that you place it behind a firewall, orbe absolutely sure that you do not allow remote applications toconnect to your Window Server.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.17">17.3.17 rexec (TCP Port 512)</A></H3><PCLASS="para">The remote execution daemon <ACLASS="indexterm"NAME="AUTOID-23343"></A><ACLASS="indexterm"NAME="AUTOID-23346"></A><ACLASS="indexterm"NAME="AUTOID-23349"></A><ACLASS="indexterm"NAME="AUTOID-23352"></A><ACLASS="indexterm"NAME="AUTOID-23354"></A><ICLASS="filename">/usr/sbin/rexecd</I>allows users to execute commands on other computers without havingto log into them. The client opens up a connection and transmitsa message that specifies the username, the password, and the nameof the command to execute. As rexecd does not use the trusted hostmechanism, it can be issued from any host on the network. However,because <KBDCLASS="command">rexecd</KBD> requires that the password be transmitted over thenetwork, it is susceptible to the same password snooping as Telnet.</P><PCLASS="para">Unlike <KBDCLASS="command">login</KBD> and <KBDCLASS="command">telnet</KBD>, <KBDCLASS="command">rexecd</KBD> provides different error messagesfor invalid usernames and invalid passwords. If the username thatthe client program provides is invalid, <KBDCLASS="command">rexecd</KBD> returns the errormessage &quot;Login incorrect.&quot; If the username iscorrect and the password is wrong, however, <KBDCLASS="command">rexecd</KBD> returns the errormessage &quot;Password incorrect.&quot;</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23367"></A>Because of thisflaw, a cracker can use <KBDCLASS="command">rexecd</KBD> to probe your system for the namesof valid accounts and then to target those accounts for passwordguessing attacks.</P><PCLASS="para">If you do not expect to use this service, disable it in <ICLASS="filename">/etc/inetd.conf.</I></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18">17.3.18 rlogin and rsh (TCP Ports 513 and 514)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23376"></A><ACLASS="indexterm"NAME="AUTOID-23379"></A><ACLASS="indexterm"NAME="AUTOID-23382"></A><ACLASS="indexterm"NAME="AUTOID-23384"></A><ACLASS="indexterm"NAME="AUTOID-23386"></A><KBDCLASS="command">rlogin</KBD>and <KBDCLASS="command">rlogind</KBD> programs provide remote terminal service that is similarto <KBDCLASS="command">telnet</KBD>. <KBDCLASS="command">rlogin</KBD> is the client program, and <KBDCLASS="command">rlogind</KBD> is the server.There are two important differences between <KBDCLASS="command">rlogin</KBD> and <KBDCLASS="command">telnet</KBD>:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para"><KBDCLASS="command">rlogind</KBD> does not require that the usertype his or her username; the username is automatically transmittedat the start of the connection.</P></LI><LICLASS="listitem"><PCLASS="para">If the connection is coming from a &quot;trustedhost&quot; or &quot;trusted user,&quot; (described inthe next section), <EMCLASS="emphasis">the receiving computer lets the userlog in without typing a password. </EM></P></LI></OL><PCLASS="para"><ICLASS="filename">rsh/rshd</I> are similar to <ICLASS="filename">rlogin/rlogind,</I>except that instead of logging the user in, they simply allow theuser to run a single command on the remote system. <KBDCLASS="command">rsh</KBD> is the clientprogram, while <KBDCLASS="command">rshd</KBD> is the server. <ICLASS="filename">rsh/rshd</I> only worksfrom trusted hosts or trusted users (described in the next section).</P><PCLASS="para"><KBDCLASS="command">rlogin</KBD> is used both with local area networks and over theInternet. Unfortunately, it poses security problems in both environments.</P><PCLASS="para"><KBDCLASS="command">rlogin</KBD> and <KBDCLASS="command">rsh</KBD> are designed for communication only betweenBerkeley <SPANCLASS="acronym">UNIX</SPAN> systems. Users who want to communicatebetween <SPANCLASS="acronym">UNIX</SPAN> and <SPANCLASS="acronym">TOPS</SPAN>, <SPANCLASS="acronym">VMS</SPAN>,or other kinds of systems should use the <KBDCLASS="command">telnet</KBD> protocol, not the<KBDCLASS="command">rlogin</KBD> protocol.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.1">17.3.18.1 Trusted hosts and users</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23422"></A><ACLASS="indexterm"NAME="AUTOID-23425"></A><ICLASS="firstterm">Trusted host</I> is a term that was invented by the people who developed theBerkeley <SPANCLASS="acronym">UNIX</SPAN> networking software. If one hosttrusts another host, then any user who has the same username onboth hosts can log in from the trusted host to the other computerwithout typing a password.</P><PCLASS="para"><ICLASS="firstterm">Trusted</I> users are like trusted hosts, except they are users,not hosts. If you designate a user on another computer as a trusteduser for your account, then that user can log into your accountwithout typing a password.</P><PCLASS="para">The <SPANCLASS="acronym">UNIX</SPAN> system of trusted hosts allowsyou to use the network to its fullest extent. <KBDCLASS="command">rlogin</KBD> lets you easilyjump from computer to computer, and rsh lets you run a command ona remote computer without even having to log in!</P><PCLASS="para">Trust has a lot of advantages. In a small, closed environment,computers often trust each other. Trust allows a user to providea password once, the first time he logs in, and then to use anyother machine in the cluster without having to provide a passworda second time. If one user sometimes uses the network to log intoan account at another organization, then that user can set up theaccounts to trust each other, thus speeding up the process of jumpingbetween the two organizations.</P><PCLASS="para">But trust is also dangerous, because there are numerous waysthat it can be compromised.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> The trusted-host mechanism uses IP addresses for authenticationand is thus vulnerable to IP spoofing (as well as to <SPANCLASS="acronym">DNS</SPAN>attacks). Do not use trusted hosts in security-critical environments.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.2">17.3.18.2 The problem with trusted hosts</A></H4><PCLASS="para">Because you don't need to type your password whenyou use <KBDCLASS="command">rlogin</KBD> to log into a computer from another machine thatis a trusted host, <KBDCLASS="command">rlogin</KBD> is usually less susceptible to eavesdroppingthan <KBDCLASS="command">telnet</KBD>. However, trusted hosts introduce security problemsfor two reasons: you can't always trust a host, and youcan't trust the users on that host.</P><PCLASS="para">If an attacker manages to break into the account of someonewho has an account on two computers&nbsp;- and the two computerstrust each other&nbsp;- then the person's account onthe second computer is also compromised. Having an attacker breakinto the first computer is easier than it may sound. Most workstationscan be booted in single-user mode with relative ease. As the superuser,the attacker can su to any account at all. If the server truststhe workstation&nbsp;- perhaps to let users execute commands onthe server with <KBDCLASS="command">rsh</KBD>&nbsp;- then the attacker can use <KBDCLASS="command">rlogin</KBD> tolog into the server and thereby gain access to anybody'sfiles.</P><PCLASS="para">Although some workstations can be password protected againstbeing booted in single-user mode, this protection gives only anillusion of security. In theory, an attacker could simply unplugthe current workstation and plug in her own. Portable <SPANCLASS="acronym">UNIX</SPAN>workstations with Ethernet boards are available that weigh lessthan four pounds. By reconfiguring her portable workstation'snetwork address and hostname, she could program it to masqueradeas any other computer on the local area network.</P><PCLASS="para">Another problem with trusted hosts involves <ACLASS="indexterm"NAME="AUTOID-23452"></A><ACLASS="indexterm"NAME="AUTOID-23455"></A><SPANCLASS="acronym">NFS</SPAN>.Often, a user's home directory is exported with <SPANCLASS="acronym">NFS</SPAN>to other machines. Someone who is able to write to the user'shome directory on that partition on a remote machine can add arbitraryentries to the <ICLASS="filename">.rhosts</I> file. These additions then allow the attackerto log in to that account on every machine that imports the homedirectory.</P><PCLASS="para">Trusted hosts and trusted users have been responsible formany security breaches in recent years. Trust causes breaches insecurity to propagate quickly: If <ICLASS="filename">charon</I> trusts <ICLASS="filename">ringworld</I> and anintruder breaks into <ICLASS="filename">ringworld</I>, then <ICLASS="filename">charon</I> is also compromised.Nevertheless, system administrators frequently set up computersas trusted clusters to enable users to take advantage of the networkenvironment with greater ease. Although there is technically noreason to create these trusted clusters in a networked computingenvironment, at many computing facilities administrators believethat the benefits outweigh the risks.</P><PCLASS="para">Trusted hosts are also vulnerable to IP spoofing, a techniquein which one computer sends out IP packets that appear to come froma different computer. Using a form of IP spoofing, users on onehost can masquerade, and appear to come from a second host. Theycan then log into your computer, if the second host is trusted.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.3">17.3.18.3 Setting up trusted hosts</A></H4><PCLASS="para">The <ICLASS="filename">/etc/hosts.equiv</I> file contains a listof trusted hosts for your computer. Each line of the file listsa different host. If you have Sun's <SPANCLASS="acronym">NIS</SPAN>(or use another system that supports netgroups), you can also extendor remove trust from entire groups of machines.</P><PCLASS="para">Any hostname listed in <ICLASS="filename">hosts.equiv</I> is considered trusted;a user who connects with <KBDCLASS="command">rlogin</KBD> or <KBDCLASS="command">rsh</KBD> from that host will be allowedto log in or execute a command from a local account with the sameusername, without typing a password. When using Sun's <SPANCLASS="acronym">NIS</SPAN>(described in <ACLASS="xref"HREF="ch19_01.htm"TITLE="RPC, NIS, NIS+,  and Kerberos">Chapter 19</A>), a line of the form <ICLASS="filename">+@hostgroup</I>makes all of the hosts in the network group <ICLASS="filename">hostgroup</I> trusted; likewise,a line that has the form <ICLASS="filename">-@anotherhostgroup</I> makesall of the hosts in the network group <ICLASS="filename">anotherhostgroup</I> specificallynot trusted. The file is scanned from the beginning to the end;the scanning stops after the first match.[18]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[18] Bewarethat +@hostgroup and -@hostgroup featuresare broken in some NIS implementations. Check to be sure they aredoing what you intend.</P></BLOCKQUOTE><PCLASS="para">Consider this example file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">gold.acs.com silver.acs.com platinum.acs.com -@metals +@gasses</PRE></BLOCKQUOTE><PCLASS="para">This file makes your computer trust the computers <ICLASS="filename">gold</I>, <ICLASS="filename">silver</I>,and <ICLASS="filename">platinum</I> in the <ICLASS="filename">acs.com</I> domain. Furthermore, your computer willtrust all of the machines in the <ICLASS="filename">gasses</I> netgroup, except for thehosts that are also in the <ICLASS="filename">metals</I> netgroup.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.4">17.3.18.4 The ~/.rhosts file</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23497"></A>Afterscanning the <ICLASS="filename">hosts.equiv</I> file, the <KBDCLASS="command">rlogind</KBD> and <KBDCLASS="command">rshd</KBD> programs scanthe <ICLASS="filename">user's</I> home directory for a file called <ICLASS="filename">.rhosts.</I> Auser's <ICLASS="filename">.rhosts</I> file allows each user to build a set oftrusted hosts applicable only to that user.</P><PCLASS="para">For example, suppose the <ICLASS="filename">~keith/.rhosts</I> file on the<ICLASS="filename">math.harvard.edu</I> computer contains the lines:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose.cambridge.ma.us garp.mit.edu</PRE></BLOCKQUOTE><PCLASS="para">With this <ICLASS="filename">.rhosts</I> file, a user name <ICLASS="filename">keith</I> on <ICLASS="filename">prose</I> or on <ICLASS="filename">garp</I>can <KBDCLASS="command">rlogin</KBD> into <ICLASS="filename">keith</I>'s account on <ICLASS="filename">math</I> without typinga password.</P><PCLASS="para">A user's <ICLASS="filename">.rhosts</I> file can also contain hostname-usernamepairs extending trust to other usernames. For example, suppose that<ICLASS="filename">keith</I>'s <ICLASS="filename">.rhosts </I>file also contains the line:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hydra.gatech.edu lenny</PRE></BLOCKQUOTE><PCLASS="para">In this case, the user named <ICLASS="filename">lenny</I> at the host <ICLASS="filename">hydra</I> couldlog into <ICLASS="filename">keith</I>'s account without providing a password.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Only place machine names in the <ACLASS="indexterm"NAME="AUTOID-23528"></A><ACLASS="indexterm"NAME="AUTOID-23530"></A><ACLASS="indexterm"NAME="AUTOID-23534"></A><ICLASS="filename">/etc/hosts.equiv</I>file; do not place machine /username pairs! Althoughmany versions of <SPANCLASS="acronym">UNIX</SPAN> allow you to add usernamesto the file, the <SPANCLASS="acronym">UNIX</SPAN> networking utilities donot do the sensible thing by extending trust only to that particularuser on that particular machine. Instead, they allow that particularuser on that particular machine to log into <EMCLASS="emphasis">any accounton your system</EM>! If you wish to extend trust to a particularuser on a particular machine, have that user create a <ICLASS="filename">~/.rhosts</I>file, described below.</P></BLOCKQUOTE><PCLASS="para"><ICLASS="filename">.rhosts</I> files are powerful and dangerous. If a person worksat two organizations, using a <ICLASS="filename">.rhosts</I> file allows that person touse the <KBDCLASS="command">rsh</KBD> command between the two machines. It also lets you makeyour account available to your friends without telling them yourpassword. (We don't recommend this as sound policy, however!)Also, note that the superusers of each organization can make useof the entries in <ICLASS="filename">.rhosts </I>files to gain accessto your account in the other organization. This could lead to bigproblems in some situations.</P><PCLASS="para">The trust implied by the <ICLASS="filename">~/.rhosts</I> file is transitive.If you trust somebody, then you trust everybody that they trust,and so on.<ACLASS="indexterm"NAME="AUTOID-23550"></A></P><PCLASS="para"><ICLASS="filename">.rhosts</I> files are easily exploited for unintended purposes.For example, crackers who break into computer systems frequentlyadd their usernames to unsuspecting users' <ICLASS="filename">.rhosts</I> filesso that they can more easily break into the systems again in thefuture. For this reason, you may not want to allow these files onyour computer.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> <ACLASS="indexterm"NAME="AUTOID-23558"></A>The <ICLASS="filename">~/.rhosts</I> file should be set up withmode 600 so that other users on your system cannot easily determinethe hosts that you trust. Always use fully qualified domain namesin this file, and do not include any comment characters. (#or ! can create vulnerabilities.) The same restrictions apply to<ICLASS="filename">hosts.equiv</I> and <ICLASS="filename">hosts.lpd</I>.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.5">17.3.18.5 Searching for .rhosts files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23567"></A><ACLASS="indexterm"NAME="AUTOID-23570"></A>Because of the obviousrisks posted by <ICLASS="filename">.rhosts</I> files, many system administrators have chosento disallow them entirely. How do you do this? One approach is toremove (or comment out) the entries for <ICLASS="filename">rshd </I>and<ICLASS="filename">rlogind </I>in the <ICLASS="filename">inetd.conf </I>file,thus disabling the commands that might use the files. Another wayis to use Wietse Venema's <ACLASS="indexterm"NAME="AUTOID-23576"></A><ACLASS="indexterm"NAME="AUTOID-23578"></A><KBDCLASS="command">logdaemon</KBD> package.A third option is to obtain the source code for the <KBDCLASS="command">rshd</KBD> and <KBDCLASS="command">rlogind</KBD>programs and remove the feature directly.[19]This method is relatively easy to do. Another approach is to scanyour system periodically for users who have these files and to takeappropriate action when you find them. Finally, you can patch thebinary of your <KBDCLASS="command">rshd</KBD> and <KBDCLASS="command">rlogind</KBD> programs, search for the string<ICLASS="filename">/.rhosts</I>, and then change it to the empty string.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[19] Beforeyou hack the code, try checking your <KBDCLASS="command">rshd</KBD> documentation. Some vendorshave a flag to limit <ICLASS="filename">.rhosts</I> (usually to just the supervisor).</P></BLOCKQUOTE><PCLASS="para">You can find all of the .rhosts files on your system usinga simple shell script:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/ksh# Search for .rhosts files in home directoriesPATH=/usr/binfor user in $(cat-passwd | awk -F: 'length($6) &gt; 0 {print $6}'| sort -u)do    [[ -f $user/.rhosts ]] &amp;&amp; print &quot;There is a .rhosts file in $user&quot;done</PRE></BLOCKQUOTE><PCLASS="para"></P><PCLASS="para">where the <ICLASS="filename">cat-passwd</I> command is the sameone we described earlier.</P><PCLASS="para">To delete the <ICLASS="filename">.rhosts</I> files automatically, add a <KBDCLASS="command">rm</KBD> commandto the shell script after the <KBDCLASS="command">print</KBD>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/ksh# Search for .rhosts files in home directoriesPATH=/usr/binfor user in $(cat-passwd | awk -F: 'length($6) &gt; 0 {print $6}'| sort -u)do    [[ -f $user/.rhosts ]] || continue    rm -f $user/.rhosts    print &quot;$user/.rhosts has been deleted&quot;done</PRE></BLOCKQUOTE><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Many older <ACLASS="indexterm"NAME="AUTOID-23604"></A><ACLASS="indexterm"NAME="AUTOID-23607"></A><ACLASS="indexterm"NAME="AUTOID-23610"></A>SunOS systemswere distributed with a single line containing only a plus sign(+) as their <ICLASS="filename">hosts.equiv</I> file: The plus sign has the effectof making every host a trusted host, which is precisely the wrongthing to do. This line is a major security hole, because hosts outsidethe local organization (over which the system administrator hasno control) should never be trusted. If you have a plus sign inyour <ICLASS="filename">hosts.equiv</I> file, <SPANCLASS="acronym">REMOVE IT</SPAN>. This changewill disable some other features, such as the ability for othermachines to print on your printer using the remote printer system.To retain remote printing, follow the steps detailed later. <ACLASS="indexterm"NAME="AUTOID-23616"></A></P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.18.6">17.3.18.6 /etc/hosts.lpd file</A></H4><ACLASS="indexterm"NAME="AUTOID-23620"></A><ACLASS="indexterm"NAME="AUTOID-23622"></A><ACLASS="indexterm"NAME="AUTOID-23625"></A><ACLASS="indexterm"NAME="AUTOID-23628"></A><PCLASS="para">Normally, the <SPANCLASS="acronym">UNIX</SPAN> <KBDCLASS="command">lpd</KBD> system allows onlytrusted hosts to print on your local printer. However, this restrictionpresents a security problem, because you may wish to let some computersuse your printer without making them equivalent hosts.</P><PCLASS="para">The way out of this quandary is to amend the <ICLASS="filename">/etc/hosts.lpd</I>file. By placing a hostname in this file, you let that host useyour printers without making it an equivalent host. For example,if you want to let the machines dearth and black use your computer'sprinter, you can insert their names in /etc/hosts.lpd:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">cat /etc/hosts.lpd </B>dearth black %</PRE></BLOCKQUOTE><PCLASS="para">The <ICLASS="filename">hosts.lpd</I> file has the same format as the <ICLASS="filename">hosts.equiv</I>file. Thus, to allow any computer on the Internet to print on yourprinter, you could use the following entry:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">cat /etc/hosts.lpd </B>+ % <ACLASS="indexterm"NAME="AUTOID-23642"></A><ACLASS="indexterm"NAME="AUTOID-23644"></A><ACLASS="indexterm"NAME="AUTOID-23646"></A> </PRE></BLOCKQUOTE><PCLASS="para">We do not recommend that you do this, however!</P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.19">17.3.19 Routing Internet Protocol (RIP routed)  (UDP Port520)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23652"></A><ACLASS="indexterm"NAME="AUTOID-23654"></A><ACLASS="indexterm"NAME="AUTOID-23656"></A><ACLASS="indexterm"NAME="AUTOID-23658"></A>The<SPANCLASS="acronym">RIP</SPAN> routing protocol is used by Internet gatewaysto exchange information about new networks and gateways. It is implementedon many <SPANCLASS="acronym">UNIX</SPAN> systems by the <KBDCLASS="command">routed </KBD>daemon.An alternative daemon called <KBDCLASS="command">gated</KBD> offers morecontrol over which routing information is accepted and distributed.</P><PCLASS="para">The <KBDCLASS="command">routed</KBD> daemon is quite a trusting program: it will happilyreceive (and believe) a packet from another computer on the networkthat says, in effect, &quot;I am the best gateway to get anywhere;send all of your packets to me.&quot; Clearly, this trust presentseven inexperienced attackers with a simple way for confounding yournetwork. Even worse: it gives sophisticated attackers a way to eavesdropon all of your communications.</P><PCLASS="para">For these reasons, many sites no longer run the <KBDCLASS="command">routed</KBD>daemon. Instead, they use static routes. For most network configurations,static routing is all that is really needed: if there is only onegateway out of the local network, all traffic should be routed toit.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.20">17.3.20 UUCP over TCP (TCP Port 540)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23672"></A><ACLASS="indexterm"NAME="AUTOID-23675"></A>The main use for sending <SPANCLASS="acronym">UUCP</SPAN> data over<SPANCLASS="acronym">TCP</SPAN> connections is that some <SPANCLASS="acronym">UUCP</SPAN>systems can transmit Usenet news more efficiently than the moremodern <SPANCLASS="acronym">NNTP</SPAN>.</P><PCLASS="para"><SPANCLASS="acronym">UUCP</SPAN> over <SPANCLASS="acronym">TCP</SPAN> presentsa security risk, as <SPANCLASS="acronym">UUCP</SPAN> passwords are sent unencrypted.Furthermore, if you use news to transfer confidential informationbetween corporate sites, that information may be monitored by othersites situated between the two endpoints.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21">17.3.21 The X Window System (TCP Ports 6000-6063)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23689"></A>X is a popular network-based window system that allows manyprograms to share a single graphical display. X-based programs displaytheir output in windows, which can be either on the same computeron which the program is running or on any other computer on thenetwork.</P><PCLASS="para">Each graphical device that runs X is controlled by a specialprogram, called the X Window Server. Other programs, called X clients,connect to the X Window Server over the network and tell it whatto display. Two popular X clients are xterm (the X terminal emulator)and xclock (which displays an analog or digital clock on the screen).</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21.1">17.3.21.1 /etc/fbtab and /etc/logindevperm</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23695"></A><ACLASS="indexterm"NAME="AUTOID-23698"></A><ACLASS="indexterm"NAME="AUTOID-23700"></A><ACLASS="indexterm"NAME="AUTOID-23703"></A><ACLASS="indexterm"NAME="AUTOID-23705"></A><ACLASS="indexterm"NAME="AUTOID-23707"></A><ACLASS="indexterm"NAME="AUTOID-23710"></A>Multiuser workstations provide a challenge for X security.On early implementations of X, the logical devices for the keyboard,screen, and sound devices were world readable and world writable;this availability caused security problems, because it meant thatanybody could read the contents of the user's screen orkeyboard, or could listen to the microphone in his office.</P><PCLASS="para">Some versions of <SPANCLASS="acronym">UNIX</SPAN> have a special filethat is used to solve this problem. The file, which is called <ICLASS="filename">/etc/fbtab</I>under SunOS and <ICLASS="filename">/etc/logindevperm</I> under Solaris(for example), specifies a list of devices that should have theirowner changed to the account that has logged into the <SPANCLASS="acronym">UNIX</SPAN>workstation. This approach is similar to the way that the <ICLASS="filename">/bin/login</I>changes the ownership of tty devices to the person who has loggedinto a serial device.</P><PCLASS="para">Here is a portion of the Solaris <ICLASS="filename">/etc/logindevperm</I>file. Under Solaris, the file is read by the <ICLASS="filename">/bin/ttymon</I>program. When a person logs onto the device that is listed in thefirst field, the program sets the device listed in the third fieldto the <SPANCLASS="acronym">UID</SPAN> of the user that has logged in. Themode of the device is set to the value contained in the second field:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/dev/console    0600    /dev/mouse:/dev/kbd/dev/console    0600    /dev/sound/*        # audio devices/dev/console    0600    /dev/fbs/*          # frame buffers/dev/console    0600    /dev/rtvc0          # nachos capture device 0/dev/console    0400    /dev/rtvcctl0       # nachos control device 0</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21.2">17.3.21.2 X security</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23727"></A>XWindow System has a simple security model&nbsp;- all or nothing.The X security mechanisms are used to determine whether or not aclient can connect to the X Window Server. After a client successfullyconnects, that client can exercise complete control over the display.</P><PCLASS="para">X clients can take over the mouse or the keyboard, send keystrokesto other applications, or even kill the windows associated withother clients. This capability allows considerable flexibility inthe creation of new clients. Unfortunately, it also creates a richopportunity for <ACLASS="indexterm"NAME="AUTOID-23731"></A><ACLASS="indexterm"NAME="AUTOID-23734"></A><ACLASS="indexterm"NAME="AUTOID-23737"></A><ACLASS="indexterm"NAME="AUTOID-23740"></A><ACLASS="indexterm"NAME="AUTOID-23743"></A>Trojan horseprograms: the multi-user tank war game that you are running in acorner of your screen may actually be covertly monitoring all ofthe email messages that you type on your keyboard, or may be makinga copy of every password that you type.</P><PCLASS="para">The simplest way for an X client program to monitor your keystrokesis to overlay the entire screen with a transparent, invisible window.Such a program records keystrokes, saves them for later use, andforwards the event to the appropriate subwindows so that the usercan't tell that he or she is being monitored. Releasesof the X Window System later than X11R4 have a &quot;secure&quot;feature on the<ICLASS="filename"> xterm</I> command that grabs theinput from the keyboard and mouse in such a way that no transparentoverlay can intercept the input. The <ICLASS="filename">xterm </I>windowchanges color to show that this is in effect. The option is usuallyon a pop-up menu that is selected by holding down both the controlkey and the left mouse button. This is a partial fix, but it isnot complete.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23751"></A>Ratherthan develop a system that uses access control lists and multiplelevels of privilege, the designers of the X Window System have merelyworked to refine the all-or-nothing access control. X Version 11,Release 6 has five different mechanisms for implementing accesscontrol. They are listed in <ACLASS="xref"HREF="ch17_03.htm#PUIS-CHP-17-TAB-3"TITLE="X Access Control Systems">Table 17.3</A>.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21.3">17.3.21.3 The xhost facility</A></H4><PCLASS="para">X maintains a host access control list of all hosts that areallowed to access the X server. The host list is maintained viathe <ACLASS="indexterm"NAME="AUTOID-23758"></A><KBDCLASS="command">xhost</KBD> command.The host list is always active, no matter what other forms of authenticationare used. Thus, you should fully understand the <KBDCLASS="command">xhost</KBD> facility andthe potential problems that it can create.</P><PCLASS="para">The <KBDCLASS="command">xhost</KBD> command lets users view and change the current listof &quot;<KBDCLASS="command">xhosted</KBD>&quot; hosts. Typing xhost by itself displaysa list of the current hosts that may connect to your X Window Server.</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">xhost</B> prose.cambridge.ma.us next.cambridge.ma.us %</PRE></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-17-TAB-3">Table 17.3: X Access Control Systems</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">System</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Technique</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Advantages</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Disadvantages</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">xhost</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">User specifies the hosts from which clientconnections are allowed; all others are rejected.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Simple to use and understand.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Not suited to environments in which workstationsor servers are used by more than one person at a time. Server issusceptible to IP spoofing.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">MIT-MAGIC-COOKIE-1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Xdm or user creates a 128-bit &quot;cookie&quot;that is stored in the user's <ICLASS="filename">.Xauthority</I> file at login.Each client program reads the cookie from the <ICLASS="filename">.Xauthority</I> file andpasses it to the server when the connection is established.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Access to the user's displayis limited to processes that have access to the user's<ICLASS="filename">.Xauthority</I> file.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Cookies are transmitted over the networkwithout encryption, allowing them to be intercepted. Cookies arestored in the user's <ICLASS="filename">.Xauthority</I> file, making it a target.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">XDM-AUTHORIZATION-1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Xdm creates a 56-bit DES key and a 64-bitrandom &quot;authenticator&quot; that are stored in theuser's <ICLASS="filename">.Xauthority</I> file. Each client uses the DES key toencrypt a 192-bit packet that is sent to the X server to validatethe connection.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">X authenticator is not susceptible tonetwork eavesdropping.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The authenticator is stored in the <ICLASS="filename">.Xauthority</I>file, making it a target. If the user's home directoryis mounted using NFS or another network filesystem, the 56-bit DEScan be eavesdropped from the network when it is read by the X clientprogram.This authorization system usesstrong encryption and is therefore not exportable.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SUN-DES-1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Authentication based on Sun'sSecure RPC. Uses the <KBDCLASS="command">xhost</KBD> command as its interface.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Communication to the X server is encryptedwith the X server's public key; the secret key is not storedin the <ICLASS="filename">.Xauthority file,</I> removing it as a target.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Only runs on systems that have Sun Microsystem'sSecure RPC (mostly Solaris).This authorizationsystem uses strong encryption and is therefore not exportable.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">MIT-KERBEROS-5</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Xdm obtains Kerberos tickets when theuser logs in; these tickets are stored in a special credentialscache file that is pointed to by the KRB5CCNAME environment variable.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Extends the Kerberos network-based authenticationsystem to the X Window System.</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Credentials file is a target. Stolentickets can be used after the user logs out. Kerberos can be a challengeto install.<ACLASS="indexterm"NAME="AUTOID-23838"></A><ACLASS="indexterm"NAME="AUTOID-23841"></A></P></TD></TR></TBODY></TABLE><PCLASS="para"></P><PCLASS="para">You can add a host to the <KBDCLASS="command">xhost</KBD> list by supplying a plus sign,followed by the host's name on the command line after the<KBDCLASS="command">xhost</KBD> command. You can remove a host from the <KBDCLASS="command">xhost</KBD> list by supplyingits name preceded by a hyphen:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">xhost +idr.cambridge.ma.us  </B>idr.cambridge.ma.us being added to access control list% <BCLASS="emphasis.bold">xhost </B>next.cambridge.ma.us prose.cambridge.ma.us idr.cambridge.ma.us % <BCLASS="emphasis.bold">xhost -next.cambridge.ma.us </B>next.cambridge.ma.us being removed from access control list% <BCLASS="emphasis.bold">xhost </B>prose.cambridge.ma.us idr.cambridge.ma.us</PRE></BLOCKQUOTE><PCLASS="para">If you <KBDCLASS="command">xhost</KBD> a computer, any user on that computer can connectto your X Server and issue commands. If a client connects to yourX Window Server, removing that host from your <KBDCLASS="command">xhost</KBD> list will notterminate the connection. The change will simply prevent futureaccess from that host.</P><PCLASS="para">If you are using <ACLASS="indexterm"NAME="AUTOID-23858"></A><ACLASS="indexterm"NAME="AUTOID-23860"></A><ACLASS="indexterm"NAME="AUTOID-23863"></A><SPANCLASS="acronym">SUN-DES</SPAN>-1authentication, you can use the <KBDCLASS="command">xhost</KBD> command to specify the networkprincipals (users) who are allowed to connect to your X server.The <KBDCLASS="command">xhost</KBD> command distinguishes principals from usernames becauseprincipals contain an at sign (@). For example, to allowthe network principal <ICLASS="filename">debby@oreilly</I> to access your server,you could type:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose% <BCLASS="emphasis.bold">xhost debby@oreilly</B></PRE></BLOCKQUOTE><PCLASS="para">If you are using <ACLASS="indexterm"NAME="AUTOID-23873"></A><SPANCLASS="acronym">MIT-KERBEROS</SPAN>-5authentication, you can use the <KBDCLASS="command">xhost</KBD> command to specify the Kerberosusers who are allowed to connect to your server. Kerberos usernamesmust be preceded by the string <ICLASS="filename">krb5</I>:. For example, if you wishedto allow the Kerberos user alice to access your server, you woulduse the command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose% <BCLASS="emphasis.bold">xhost krb5:alice</B></PRE></BLOCKQUOTE><PCLASS="para">The file <ICLASS="filename">/etc/X0.hosts</I> contains a defaultlist of <KBDCLASS="command">xhost</KBD> hosts for X display 0. This file contains a list oflines that determine the default host access to the X display. Theformat is the same as the <KBDCLASS="command">xhost</KBD> command: if a hostname appears byitself or is preceded by a plus sign, that host is allowed. If ahostname appears preceded by a minus sign, that host is denied.If a plus sign appears on a line by itself, access control is disabled.</P><PCLASS="para">For example, this file allows default access to X display0 for the hosts <ICLASS="filename">oreo</I> and <ICLASS="filename">nutterbutter</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">cat /etc/X0.hosts</B>-+oreo+nutterbutter</PRE></BLOCKQUOTE><PCLASS="para">If you have more than one display, you can create files <ICLASS="filename">/etc/X1.hosts</I>,<ICLASS="filename">/etc/X2.hosts</I>, and so forth.<ACLASS="indexterm"NAME="AUTOID-23892"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21.4">17.3.21.4 Using Xauthority magic cookies</A></H4><PCLASS="para">Normally, the <ACLASS="indexterm"NAME="AUTOID-23897"></A><ACLASS="indexterm"NAME="AUTOID-23899"></A><ACLASS="indexterm"NAME="AUTOID-23901"></A><ACLASS="indexterm"NAME="AUTOID-23903"></A><ACLASS="indexterm"NAME="AUTOID-23905"></A>Xauthorityfacility is automatically invoked when you use the <KBDCLASS="command">xdm</KBD> terminalmanagement system. However, you can also enable it manually if youstart the X server yourself.</P><PCLASS="para">To start, you should preload your <ICLASS="filename">.Xauthority</I> file with anappropriate key for your display. If you have the Kerberos or SunSecure <SPANCLASS="acronym">RPC</SPAN> mechanisms available, you should usethose. Otherwise, you need to create a &quot;magic cookie&quot;for your current session. This cookie should be a random value thatis not predictable to an attacker. (The script given in &quot;AGood Random Seed Generator&quot; in <ACLASS="xref"HREF="ch23_01.htm"TITLE="Writing Secure SUID and Network Programs">Chapter 23, <CITECLASS="chapter">Writing Secure SUID and Network Programs</CITE></A> canbe used for this.) You should generate your &quot;cookie&quot;and store it in your <ICLASS="filename">.Xauthority</I> file (normally, <ICLASS="filename">$HOME/.Xauthority)</I>:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ typeset -RZ28 key=$(randbits -n 14)$ EXPORT XAUTHORITY=${XAUTHORITY:=$HOME/.Xauthority}$ umask 077$ rm -f $XAUTHORITY$ cp /dev/null $XAUTHORITY$ chmod 600 $XAUTHORITY$ xauth add $HOSTNAME:$displ . $key $ xauth add $HOSTNAME/unix:$displ . $key$ xauth add localhost:$displ . $key $ unset key</PRE></BLOCKQUOTE><PCLASS="para">Next, when you start your X server, do so with the -authoption:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ xinit -- -auth $XAUTHORITY </PRE></BLOCKQUOTE><PCLASS="para">All your local client programs will now consult the <ICLASS="filename">.Xauthority</I>file to identify the correct &quot;magic cookie&quot; andthen send it to the server. If you want to run a program from anothermachine to display on this one, you will need to export the &quot;cookies&quot;to the other machine. If your home directory is exported with <SPANCLASS="acronym">NFS</SPAN>,the file should already be available&nbsp;- you simply need toset the <SPANCLASS="acronym">XAUTHORITY</SPAN> environment variable to thepathname of the <ICLASS="filename">.Xauthority</I> file (or whatever else you'venamed it).</P><PCLASS="para">Otherwise, you can do something similar to:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ xauth extract - $DISPLAY | rsh otherhost xauth merge -</PRE></BLOCKQUOTE><PCLASS="para">Keep in mind that the &quot;magic cookies&quot; inthis scheme can be read from your account or found by anyone readingnetwork packets. However, this method is considerably safer thanusing the <KBDCLASS="command">xhosts</KBD> mechanism, and should be used in preference to<KBDCLASS="command">xhosts</KBD> when feasible.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Versions of X11R6 <KBDCLASS="command">xdm</KBD> prior to public patch 13 containa weakness in the <KBDCLASS="command">xauth</KBD> generation method, which allows an intruderto access its display. For details, see &quot;<SPANCLASS="acronym">CERT</SPAN>advisory VB-95:08.X_Authentication_Vul.&quot;</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.21.5">17.3.21.5 Denial of service attacks under X</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23936"></A><ACLASS="indexterm"NAME="AUTOID-23939"></A><ACLASS="indexterm"NAME="AUTOID-23942"></A><ACLASS="indexterm"NAME="AUTOID-23945"></A><ACLASS="indexterm"NAME="AUTOID-23948"></A>Evenif you use the <KBDCLASS="command">xhost</KBD> facility, your X Window System may be vulnerableto attack from computers that are not in your <KBDCLASS="command">xhost</KBD> list. Some Xwindow servers read a small packet from the client before they determinewhether or not the client is in the <KBDCLASS="command">xhost</KBD> list. If a client connectsto the X server but does not transmit this initial packet, the Xserver halts all operation until it times out in 30 seconds.</P><PCLASS="para">You can determine whether your X server has this problem byexecuting the following command:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose% <BCLASS="emphasis.bold">telnet localhost 6000</B></PRE></BLOCKQUOTE><PCLASS="para">Here, 6000 is the <SPANCLASS="acronym">TCP/IP</SPAN> port address ofthe first X server on the system. (The second X display on the systemhas a <SPANCLASS="acronym">TCP/IP</SPAN> address of 6001.)</P><PCLASS="para">If your X server has this problem, your workstation'sdisplay will freeze. The cursor will not move, and you will be unableto type anything. In some X implementations, the X server will timeout after 30 seconds and resume normal operations. Under other Ximplementations, the server will remain blocked until the connectionis aborted.</P><PCLASS="para">Although this attack cannot be used to destroy information,it can be used to incapacitate any workstation that runs one ofthese servers and is connected to the network. If you have thisproblem with your software, ask your vendor for a corrected update.<ACLASS="indexterm"NAME="AUTOID-23962"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.22">17.3.22 RPC rpc.rexd (TCP Port 512)</A></H3><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-23967"></A><ACLASS="indexterm"NAME="AUTOID-23969"></A>rpc.rexdis a Sun <SPANCLASS="acronym">RPC</SPAN> server that allows for remote programexecution. Using rpc.rexd, any user who can execute <SPANCLASS="acronym">RPC</SPAN>commands on your machine can run arbitrary shell commands.</P><PCLASS="para">The <ICLASS="filename">rpc.rexd</I> daemon is usually started from the <ICLASS="filename">/etc/inetd.conf</I>file with the following line:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># We are being stupid and running the rexd server without Secure RPC:#rexd/1          tli  rpc/tcp wait root /usr/sbin/rpc.rexd     rpc.rexd</PRE></BLOCKQUOTE><PCLASS="para">As the comment indicates, you should not run the <ICLASS="filename">rexd</I> server.We make this warning because running <ICLASS="filename">rexd</I> without secure <SPANCLASS="acronym">RPC</SPAN>basically leaves your computer wide open, which is why Sun distributestheir <ICLASS="filename">/etc/inetd.conf</I> file with <ICLASS="filename">rexd</I> commentedout:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># The rexd server provides only minimal # authentication and is often not run##rexd/1          tli  rpc/tcp wait root /usr/sbin/rpc.rexd     rpc.rexd</PRE></BLOCKQUOTE><PCLASS="para">We think that vendors should remove the <ICLASS="filename">rexd</I> line from the<ICLASS="filename">/etc/inetd.conf</I> file altogether.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-17-SECT-3.23">17.3.23 Other TCP Ports: MUDs and Internet Relay Chat (IRC)</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23990"></A><ACLASS="indexterm"NAME="AUTOID-23992"></A>Multi-UserDungeons (<SPANCLASS="acronym">MUDS</SPAN>) are role-playing games that allowmany people over a network to interact in the same virtual environment.Most <SPANCLASS="acronym">MUDS</SPAN> are recreational, although some <SPANCLASS="acronym">MUDS</SPAN>have been created to allow scientists and other professionals tointeract. (The <SPANCLASS="acronym">MIT</SPAN> Media Lab's Media<SPANCLASS="acronym">MOO</SPAN>is an example of such a virtual environment.)</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24000"></A><ACLASS="indexterm"NAME="AUTOID-24002"></A>InternetRelay Chat (<SPANCLASS="acronym">IRC</SPAN>) is the Citizen's Bandradio of the Internet. <SPANCLASS="acronym">IRC</SPAN> permits real-timecommunication between many different people on different computers.Messages can be automatically forwarded from system to system.</P><PCLASS="para">While both <SPANCLASS="acronym">MUDS</SPAN> and <SPANCLASS="acronym">IRC</SPAN>can be useful and entertaining to use, these systems can also haveprofound security implications:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Because these systems permit unrestrictedcommunication between people on your computer and others on theInternet, they create an excellent opportunity for social engineering.Often an attacker will tell a naive user that there is some &quot;greatnew feature&quot; that they can enable simply by typing a certaincommand&nbsp;- a command that then allows the attacker to login and take over the user's account. Unfortunately, thereis no simple way to protect users from this kind of attack, otherthan to educate them to be suspicious of what they are told by strangerson the net.</P></LI><LICLASS="listitem"><PCLASS="para">Most <ACLASS="indexterm"NAME="AUTOID-24014"></A><SPANCLASS="acronym">MUDS</SPAN>require users to create an account with a username and a password.Unfortunately, many users will blindly type the same username andpassword that they use for their <SPANCLASS="acronym">UNIX</SPAN> account.This creates a profound security risk, as it permits anybody whohas access to the <SPANCLASS="acronym">MUD</SPAN> server (such as its administrator)to break into the user's <SPANCLASS="acronym">UNIX</SPAN> account.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24023"></A>Althoughmany <SPANCLASS="acronym">MUDS</SPAN> and <SPANCLASS="acronym">IRCS</SPAN> can beused with Telnet, they are more fun when used with specially writtenclient programs. Unfortunately, some of these programs have beendistributed with intentional security holes and back doors. Determiningwhether or not a client program is equipped with this kind of &quot;feature&quot;is very difficult.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24030"></A>Evenif your <SPANCLASS="acronym">MUD</SPAN> or <SPANCLASS="acronym">IRC</SPAN> clientdoesn't have a built-in back door, many of these clientswill execute commands from remote machines if such a feature isenabled by the user. The world of <SPANCLASS="acronym">MUDS</SPAN> and <SPANCLASS="acronym">IRCS</SPAN>is rife with malicious users who attempt to get unsuspecting usersto enable these features.</P></LI><LICLASS="listitem"><PCLASS="para">The server programs for <SPANCLASS="acronym">MUDS</SPAN>and <SPANCLASS="acronym">IRCS</SPAN> can place a significant load on thecomputers on which they reside. Unfortunately, as <SPANCLASS="acronym">MUDS</SPAN>and <SPANCLASS="acronym">IRCS</SPAN> do not use &quot;trusted ports,&quot;users can run their own servers even if they don't have<ICLASS="filename">root</I> access.<ACLASS="indexterm"NAME="AUTOID-24044"></A></P></LI></UL></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Controlling Access to Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.2 Controlling Access to Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_04.htm"TITLE="17.4 Security Implications of Network Services"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.4 Security Implications of Network Services"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">17.2 Controlling Access to Servers</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.4 Security Implications of Network Services</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>