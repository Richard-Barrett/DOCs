<HTML><HEAD><TITLE>[Chapter 18] 18.3 Controlling Access to Files on Your Server</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:14:39Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch18_01.htm"TITLE="18. WWW Security"><LINKREL="prev"HREF="ch18_02.htm"TITLE="18.2 Running a Secure Server"><LINKREL="next"HREF="ch18_04.htm"TITLE="18.4 Avoiding the Risks of Eavesdropping"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_02.htm"TITLE="18.2 Running a Secure Server"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 18.2 Running a Secure Server"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 18<BR>WWW Security</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_04.htm"TITLE="18.4 Avoiding the Risks of Eavesdropping"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 18.4 Avoiding the Risks of Eavesdropping"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-18-SECT-3">18.3 Controlling Access to Files on Your Server</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24962"></A><ACLASS="indexterm"NAME="AUTOID-24965"></A><ACLASS="indexterm"NAME="AUTOID-24968"></A><ACLASS="indexterm"NAME="AUTOID-24971"></A><ACLASS="indexterm"NAME="AUTOID-24974"></A>Many sites are interested in limiting the scopeof the information that they distribute with their Web servers.This may be because a Web server is used by an organization to distributeboth internal data, such as employee handbooks or phone books, andexternal data, such as how to reach the organization'sheadquarters by mass transit. To provide for this requirement, manyWeb servers have a system for restricting access to Web documents.</P><DIVCLASS="sidebar"><H4CLASS="sidebar"><ACLASS="title"NAME="AUTOID-24978">The WN Server</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24981"></A><ACLASS="indexterm"NAME="AUTOID-24983"></A>Most of this chapterdiscusses the <SPANCLASS="acronym">NCSA</SPAN> and <SPANCLASS="acronym">CERN</SPAN>servers, which are two of the most popular servers in use on theInternet at this time. A server that appears to offer considerablymore security than these servers is the WN server, developed byJohn Franks.</P><PCLASS="para">The WN server is a Web server designed from the ground upto provide security and flexibility. The server can perform manyfunctions, such as banners, footers, and searching, and the selectiveretrieval of portions of documents, which can only be performedon other servers using <SPANCLASS="acronym">CGI</SPAN> scripts. The serveris also smaller than the <SPANCLASS="acronym">NCSA</SPAN> and <SPANCLASS="acronym">CERN</SPAN>servers, making it easier to validate.</P><PCLASS="para">Another feature of the WN server is that it will not transferany file in any directory unless that file is listed in a specialindex file, normally called <ICLASS="firstterm">index.cache</I>.The index file also contains the <SPANCLASS="acronym">MIME</SPAN> file typeof each file in the directory; thus, WN eliminates the need to giveyour Web files extensions, such as <ICLASS="filename">filename.html</I>or <ICLASS="filename">picture.jpeg</I>. Automated tools are providedfor creating these files, if you chose to use them.</P><PCLASS="para">We do not have significant experience with the WN server,but its design looks promising. For more information, check <ACLASS="systemitem.url"HREF="http://hopf.math.nwu.edu/docs/manual.html.">http://hopf.math.nwu.edu/docs/manual.html.</A></P></DIV><PCLASS="para">Most servers support two primary techniques for controllingaccess to files and directories:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Restricting access to particular <ACLASS="indexterm"NAME="AUTOID-25003"></A>IP addresses, subnets,or <SPANCLASS="acronym">DNS</SPAN> domains.</P></LI><LICLASS="listitem"><PCLASS="para">Restricting access to particular <ACLASS="indexterm"NAME="AUTOID-25009"></A>users. Users are authenticated through the useof a password that is stored on the server.</P></LI></OL><PCLASS="para">Servers that are equipped with the necessary software for<ACLASS="indexterm"NAME="AUTOID-25013"></A><ACLASS="indexterm"NAME="AUTOID-25015"></A>publickey cryptography (usually, servers that are purchased for commercialpurposes) have a third technique for restricting access:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Restricting access to users who presentpublic keys that are signed by an appropriate certification authority.</P></LI></OL><PCLASS="para">Each of these techniques has advantages and disadvantages.Restricting to IP address is relatively simple within an organization,although it leaves you open to attacks based on &quot;IP spoofing.&quot;Using hostnames, instead of IP addresses, further opens your serverto the risk of <SPANCLASS="acronym">DNS</SPAN> spoofing. And usernames andpasswords, unless you use a server and clients that support encryption,are sent in the clear over the network.</P><PCLASS="para">Of these three techniques, restricting access to people whopresent properly signed certificates is probably the most secure,provided that you trust your certification authority. (See below.)</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-18-SECT-3.1">18.3.1 The access.conf and .htaccess Files</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25027"></A><ACLASS="indexterm"NAME="AUTOID-25029"></A><ACLASS="indexterm"NAME="AUTOID-25031"></A>The<SPANCLASS="acronym">NCSA</SPAN> server allows you to place all of your globalaccess restrictions in a single file called <ICLASS="filename">conf/access.conf.</I>Alternatively, you can place the restrictions in each directoryusing the name specified by the <ICLASS="filename">AccessFileName</I>in the configuration file <ACLASS="indexterm"NAME="AUTOID-25038"></A><ICLASS="filename">conf/srm.conf</I>. The per-directory defaultfile name is <ICLASS="filename">.htaccess</I>, but you can change this name ifyou wish.</P><PCLASS="para">Whether you choose to use many access files or a single fileis up to you. It is certainly more convenient to have a file ineach directory. It also makes it easier to move directories withinyour Web server, as you do not need to update the master accesscontrol file. Furthermore, you do not need to restart your serverwhenever you make a change to the access control list&nbsp;- theserver will notice that there is a new <ICLASS="filename">.htaccess </I> file,and behave appropriately.</P><PCLASS="para">On the other hand, having an access file in each directorymeans that there are more files that you need to check to see whetherthe directories are protected or not. There is also a bug with someWeb servers that allows the access file to be directly fetched (seethe Note below). As a result, most Web professionals recommend againstper-directory access control files.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25047"></A>Thecontents of the <ICLASS="filename">access.conf</I> file looks like <SPANCLASS="acronym">HTML</SPAN>.Accesses for each directory are bracketed with two tags, &lt;Directory<ICLASS="filename"> directoryname</I>&gt; and &lt;/Directory&gt;.For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;Directory /nsa/manual&gt; &lt;Limit GET&gt; order deny,allow deny from all allow from .nsa.mil &lt;/Limit&gt; &lt;/Directory&gt;</PRE></BLOCKQUOTE><PCLASS="para">If you are using the per-directory access control, do notinclude the &lt;Directory&gt; and &lt;/Directory&gt;tags. For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;Limit GET&gt; order deny,allow deny from all allow from .nsa.mil &lt;/Limit&gt;</PRE></BLOCKQUOTE><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> There is a <ACLASS="indexterm"NAME="AUTOID-25057"></A><ACLASS="indexterm"NAME="AUTOID-25060"></A>bugin many Web servers (including the <SPANCLASS="acronym">NCSA</SPAN> server)that allows the <ICLASS="filename">.htaccess </I>file to be fetched as a <SPANCLASS="acronym">URL</SPAN>.This is bad, because it lets an attacker learn the details of yourauthentication system. For this reason, if you do use per-directoryaccess control files, give them a name other than <ICLASS="filename">.htaccess</I>by specifying a different <ICLASS="filename">AccessFileName</I> inthe <ICLASS="filename">srm.conf</I> file, as shown below:</P></BLOCKQUOTE><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># AccessFileName: The name of the file to look for in each directory# for access control information.AccessFileName .ap</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-18-SECT-3.2">18.3.2 Commands Within the &lt;Directory&gt;Block</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25073"></A><ACLASS="indexterm"NAME="AUTOID-25075"></A>As the above examples illustrate, a number ofcommands are allowed within the &lt;Directory&gt; blocks.The commands that are useful for restricting access[2]are:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Othercommands that can be inserted within a &lt;Directory&gt;block can be found in NCSA's online documentation at <ACLASS="systemitem.url"HREF="http://hoohoo.ncsa.uiuc.edu/docs/setup/access/Overview.html.">http://hoohoo.ncsa.uiuc.edu/docs/setup/access/Overview.html.</A></P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term">Options <ICLASS="filename">opt1 opt2 opt3</I></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25086"></A><ACLASS="indexterm"NAME="AUTOID-25088"></A><ACLASS="indexterm"NAME="AUTOID-25091"></A><ACLASS="indexterm"NAME="AUTOID-25093"></A><ACLASS="indexterm"NAME="AUTOID-25095"></A>Use the <KBDCLASS="command">Options</KBD> command for turning onor off individual options within a particular directory. Optionsavailable are <ACLASS="indexterm"NAME="AUTOID-25099"></A>FollowSymLinks(follows symbolic links), <ACLASS="indexterm"NAME="AUTOID-25101"></A>SymLinksIfOwnerMatch(follows symbolic links if the owner of the link's targetis the same as the owner of the link), <ACLASS="indexterm"NAME="AUTOID-25103"></A>ExecCGI(turns on execution of <SPANCLASS="acronym">CGI</SPAN> scripts), <ACLASS="indexterm"NAME="AUTOID-25106"></A><ACLASS="indexterm"NAME="AUTOID-25108"></A>Includes(turns on server-side includes), Index (allows the server to respondto requests to generate a file list for the directory), and <ACLASS="indexterm"NAME="AUTOID-25111"></A>IncludesNoExec (enables server-side includes,but disables <SPANCLASS="acronym">CGI</SPAN> scripts in the includes.)</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25116"></A>AllowOverride<ICLASS="filename">what</I></DT><DDCLASS="listitem"><PCLASS="para">Specifies which directives can be overridden withdirectory-based access files.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25123"></A>AuthRealm<ICLASS="filename">realm</I></DT><DDCLASS="listitem"><PCLASS="para">Sets the name of the Authorization Realm for thedirectory. The name of the realm is displayed by the Web browserwhen it asks for a username and password.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25130"></A>AuthType<ICLASS="filename">type</I></DT><DDCLASS="listitem"><PCLASS="para">Specifies the type of authentication used by theserver. When this book was written, <SPANCLASS="acronym">NCSA</SPAN>'s<KBDCLASS="command">httpd</KBD> only supported the Basic authentication system (usernamesand passwords.)</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25139"></A><ACLASS="indexterm"NAME="AUTOID-25141"></A><ACLASS="indexterm"NAME="AUTOID-25144"></A>AuthUserFile <ICLASS="filename">absolute_pathname</I></DT><DDCLASS="listitem"><PCLASS="para">Specifies the pathname of the <KBDCLASS="command">httpd</KBD> password file.This password file is created and maintained with the <SPANCLASS="acronym">NCSA</SPAN><KBDCLASS="command">htpasswd</KBD> program. This password file is not stored in the same formatas <ICLASS="filename">/etc/passwd.</I> The format is described in thesection called &quot;Setting up Web Users and Passwords&quot;later in this chapter.</P></DD><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25156"></A><ACLASS="indexterm"NAME="AUTOID-25158"></A>AuthGroupFile <ICLASS="filename">absolute_pathname</I></DT><DDCLASS="listitem"><PCLASS="para">This specifies the pathname of the <KBDCLASS="command">httpd</KBD> group file.This group file is a regular text file. It is not in the formatof the <SPANCLASS="acronym">UNIX</SPAN> <ICLASS="filename">/etc/group</I> file.Instead, each line begins with a group name and a colon, and thenlists the members, separating each member with a space. For example:</P></DD></DL><BLOCKQUOTECLASS="screen"><PRECLASS="screen">		stooges: larry moe curley</PRE></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term"><ACLASS="indexterm"NAME="AUTOID-25171"></A>Limit<ICLASS="filename">methods to limit</I></DT><DDCLASS="listitem"><PCLASS="para">Begins a section that lists the limitations on thedirectory. In Version 1.42, this command can only be used to limitthe <SPANCLASS="acronym">GET</SPAN> and <SPANCLASS="acronym">POST</SPAN> directives.Within the Limit section, you may have the following directives:</P></DD></DL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Directive Usage</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Meaning</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">order ord</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Specifies the order in which allow anddeny statements should be checked.Specify&quot;deny,allow&quot; to check the deny entries first;servers that match both the &quot;deny&quot; and &quot;allow&quot;lists are allowed.Specify &quot;allow,deny&quot;to check the allow entries first; servers that match both are denied.Specify &quot;mutual-failure&quot;to cause hosts on the allow list to be allowed, those on the denylist to be denied, and all others to be denied.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">allow from <ICLASS="filename">host1 host2</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Specifies hosts that are allowed access.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">deny from <ICLASS="filename">host1 host2</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Specifies hosts that should be deniedaccess.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">require user<ICLASS="filename"> user1 user2 user3</I>... requiregroup <ICLASS="filename">group1 group2</I>... require valid-user</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Specifies that access should be grantedto a specific user or group. If &quot;valid-user&quot; isspecified, then any user that appears in the user file will be allowed.</P></TD></TR></TBODY></TABLE><PCLASS="para">Hosts in the allow and deny statements may be any of the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">A domain name, such as <ICLASS="systemitem">.vineyard.net</I>.</P></LI><LICLASS="listitem"><PCLASS="para">A fully qualified host name, such as <ICLASS="systemitem">nc.vineyard.net</I>.</P></LI><LICLASS="listitem"><PCLASS="para">An IP address, such as 204.17.195.100.</P></LI><LICLASS="listitem"><PCLASS="para">A partial IP address, such as 204.17.195, whichmatches any host on the subnet.</P></LI><LICLASS="listitem"><PCLASS="para">The keyword &quot;all,&quot; which matchesall hosts.</P></LI></UL><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-18-SECT-3.2.1">18.3.2.1 <ICLASS="systemitem">Examples</I></A></H4><PCLASS="para">For example, if you wish to restrict access to a directory'sfiles to everyone on the subnet 204.17.195.*, you couldadd the following lines to your <ICLASS="filename">access.conf</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;Directory /usr/local/etc/httpd/htdocs/special&gt;&lt;Limit GET POST&gt; order deny,allow deny from all allow from 204.17.195 &lt;/Limit&gt; &lt;/Directory&gt;</PRE></BLOCKQUOTE><PCLASS="para">If you then wanted to allow only the authenticated users <ICLASS="systemitem">beth</I> and <ICLASS="systemitem">simson</I> to access the files,and only when they are on subnet 204.17.195, you could add theselines:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">AuthType Basic AuthName The-T-Directory AuthUserFile /tmp/auth &lt;Limit GET POST&gt; order deny,allow deny from all allow from 204.17.195 require user simson beth &lt;/Limit&gt;</PRE></BLOCKQUOTE><PCLASS="para">Of course, the first three lines could as easily go in theserver's <ICLASS="filename">access.conf</I> file.</P><PCLASS="para">If you wish to allow the users <ICLASS="systemitem">beth</I>and <ICLASS="systemitem">simson</I> to accessthe files from anywhere on the Internet, provided that they typethe correct username and password, try this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">AuthType Basic AuthName The-T-Directory AuthUserFile /tmp/auth &lt;Limit GET POST&gt; require user simson beth &lt;/Limit&gt; <ACLASS="indexterm"NAME="AUTOID-25241"></A></PRE></BLOCKQUOTE></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-18-SECT-3.3">18.3.3 Setting Up Web Users and Passwords</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25246"></A><ACLASS="indexterm"NAME="AUTOID-25249"></A><ACLASS="indexterm"NAME="AUTOID-25252"></A><ACLASS="indexterm"NAME="AUTOID-25255"></A><ACLASS="indexterm"NAME="AUTOID-25258"></A>To use authenticated users,you will need to create a password file. You can do this with the<KBDCLASS="command">htpasswd</KBD> program, using the <ICLASS="filename">-c </I>option to createthe file. For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">./htpasswd -c /usr/local/etc/httpd/pw/auth simsong</B>Adding password for simsong.New password:<ICLASS="systemitem.password">foo1234</I>Re-type new password:<ICLASS="systemitem.password">foo1234</I># </PRE></BLOCKQUOTE><PCLASS="para">You can add additional users and passwords with the <KBDCLASS="command">htpasswd</KBD>program. When you add additional users, do <EMCLASS="emphasis">not</EM>use the <KBDCLASS="command">-c</KBD> option, or you will erase all of the users who are currentlyin the file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">./htpasswd /usr/local/etc/httpd/pw/auth beth</B>Adding password for beth.New password:<ICLASS="systemitem.password">luvsim</I>Re-type new password:<ICLASS="systemitem.password">luvsim</I># </PRE></BLOCKQUOTE><PCLASS="para">The password file is similar, but not identical, to the standard<ICLASS="filename">/etc/passwd</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># cat /usr/local/etc/httpd/pw/authsimsong:ZdZ2f8MOeVcNYbeth:ukJTIFYWHKwtA#</PRE></BLOCKQUOTE><PCLASS="para">Because the Web server uses <ACLASS="indexterm"NAME="AUTOID-25278"></A><ACLASS="indexterm"NAME="AUTOID-25280"></A><KBDCLASS="command">crypt ( )</KBD>-style passwords,it is important that the password file be inaccessible to normalusers on the server (and to users over the Web) to prevent an ambitiousattacker from trying to guess passwords using a program such as<ICLASS="filename">Crack</I>.<ACLASS="indexterm"NAME="AUTOID-25284"></A><ACLASS="indexterm"NAME="AUTOID-25287"></A><ACLASS="indexterm"NAME="AUTOID-25290"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_02.htm"TITLE="18.2 Running a Secure Server"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 18.2 Running a Secure Server"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_04.htm"TITLE="18.4 Avoiding the Risks of Eavesdropping"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 18.4 Avoiding the Risks of Eavesdropping"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">18.2 Running a Secure Server</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">18.4 Avoiding the Risks of Eavesdropping</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>