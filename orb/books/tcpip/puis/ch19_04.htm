<HTML><HEAD><TITLE>[Chapter 19] 19.4 Sun's Network Information Service (NIS)</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:15:23Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch19_01.htm"TITLE="19. RPC, NIS, NIS+,  and Kerberos"><LINKREL="prev"HREF="ch19_03.htm"TITLE="19.3 Secure RPC (AUTH_DES)"><LINKREL="next"HREF="ch19_05.htm"TITLE="19.5 Sun's NIS+"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_03.htm"TITLE="19.3 Secure RPC (AUTH_DES)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.3 Secure RPC (AUTH_DES)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 19<BR>RPC, NIS, NIS+,  and Kerberos</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_05.htm"TITLE="19.5 Sun's NIS+"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 19.5 Sun's NIS+"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4">19.4 Sun's Network Information Service (NIS)</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26559"></A><ACLASS="indexterm"NAME="AUTOID-26561"></A>Sun's Network InformationService (<SPANCLASS="acronym">NIS</SPAN>) is a distributed database systemthat lets many computers share password files, group files, hosttables, and other files over the network. Although the files appearto be available on every computer, they are actually stored on onlya single computer, called the <SPANCLASS="acronym">NIS</SPAN> <ACLASS="indexterm"NAME="AUTOID-26566"></A><ACLASS="indexterm"NAME="AUTOID-26568"></A><ACLASS="indexterm"NAME="AUTOID-26571"></A><ACLASS="indexterm"NAME="AUTOID-26574"></A><ICLASS="firstterm">master server </I>(andpossibly replicated on a backup, or <ACLASS="indexterm"NAME="AUTOID-26579"></A><ICLASS="firstterm">slave</I> server). The other computerson the network, <ICLASS="firstterm"><ACLASS="indexterm"NAME="AUTOID-26583"></A><ACLASS="indexterm"NAME="AUTOID-26586"></A>NIS clients</I>, can use the databasesstored on the master server (like <ICLASS="filename">/etc/passwd)</I>as if they were stored locally. These databases are called <ACLASS="indexterm"NAME="AUTOID-26590"></A><ACLASS="indexterm"NAME="AUTOID-26593"></A><SPANCLASS="acronym">NIS</SPAN><ICLASS="firstterm">maps</I>.</P><PCLASS="para">With <SPANCLASS="acronym">NIS</SPAN>,a large network can be managed more easily because all of the accountand configuration information (such as <ICLASS="filename">/etc/passwd</I>file) needs to be stored on only a single machine.</P><PCLASS="para">Somefiles are replaced by their <SPANCLASS="acronym">NIS</SPAN> maps. Other filesare augmented. For these files, <SPANCLASS="acronym">NIS</SPAN> uses theplus sign (<ACLASS="indexterm"NAME="AUTOID-26604"></A><ACLASS="indexterm"NAME="AUTOID-26607"></A><ACLASS="indexterm"NAME="AUTOID-26610"></A>+) to tell the system that itshould stop reading the file (e.g., <ICLASS="filename">/etc/passwd)</I>and should start reading the appropriate map (e.g., passwd). Theplus sign tells the <SPANCLASS="acronym">UNIX</SPAN> programs that scan thatdatabase file to ask the <SPANCLASS="acronym">NIS</SPAN> server for the remainderof the file. The server retrieves this information from the <SPANCLASS="acronym">NIS</SPAN>map. The server maintains multiple maps; these maps normally correspondto files stored in the <ICLASS="filename">/etc </I> directory such as <ICLASS="filename">/etc/passwd</I>,<ICLASS="filename">/etc/hosts,</I> and <ICLASS="filename">/etc/services.</I>This structure is shown in <ACLASS="xref"HREF="ch19_04.htm#PUIS-CHP-19-FIG-1"TITLE="How NIS works">Figure 19.1</A>.</P><PCLASS="para">For example, the <ICLASS="filename">/etc/passwd</I> file on a clientmight look like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh +::0:0::: </PRE></BLOCKQUOTE><PCLASS="para">This causes the program reading <ICLASS="filename">/etc/passwd</I>on the client to make a network request to read the passwd map onthe server. Normally, the passwd map is built from the server's<ICLASS="filename">/etc/passwd</I> file, although this need not necessarilybe the case.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-19-FIG-1">Figure 19.1: How NIS works</A></H4><IMGCLASS="graphic"SRC="figs/puis_1901.gif"ALT="Figure 19.1"><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.0.1">19.4.1 Including or excluding specific accounts:</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26634"></A><ACLASS="indexterm"NAME="AUTOID-26637"></A><ACLASS="indexterm"NAME="AUTOID-26640"></A>Youcan restrict the importing of accounts to particular users by followingthe &quot;+&quot; symbol with a particular username.For example, to include only the user <ICLASS="systemitem">george</I>from your <SPANCLASS="acronym">NIS</SPAN> server, you could use the followingentry in your <ICLASS="filename">/etc/passwd</I> file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh +george::120:5:::</PRE></BLOCKQUOTE><PCLASS="para">Note that we have included <ICLASS="systemitem">george</I>'s<SPANCLASS="acronym">UID</SPAN> and <SPANCLASS="acronym">GID</SPAN>. You must includethe <SPANCLASS="acronym">UID</SPAN> so that the function <ACLASS="indexterm"NAME="AUTOID-26651"></A><KBDCLASS="command">getpwuid</KBD>() willwork properly. However, <KBDCLASS="command">getpwuid</KBD>()actually goes to the <SPANCLASS="acronym">NIS</SPAN> map and overrides the<SPANCLASS="acronym">UID</SPAN> and <SPANCLASS="acronym">GID</SPAN> values that youspecify.</P><PCLASS="para">You can also exclude certain usernames frombeing imported by inserting a line that begins with a minus sign.When <SPANCLASS="acronym">NIS</SPAN> is scanning the <ICLASS="filename">/etc/passwd</I>file, it will stop when it finds the first line that matches. Therefore,if you wish to exclude a specific account but include others thatare on the server, you must place the lines beginning with the minussign before the lines beginning with the &quot;+&quot;symbol.</P><PCLASS="para">For example, to exclude <ICLASS="systemitem">zachary'</I>s account and to includethe others from the server, you might use the following <ICLASS="filename">/etc/passwd</I>file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh -zachary:::2001:102:: +::0:0:::</PRE></BLOCKQUOTE><PCLASS="para">Note again that we have included <ICLASS="systemitem">zachary'</I>s<SPANCLASS="acronym">UID</SPAN> and <SPANCLASS="acronym">GID</SPAN>.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.0.2">19.4.2 Importing accounts without really importing accounts</A></H3><PCLASS="para"><SPANCLASS="acronym">NIS</SPAN> allows you to selectively import somefields from the <ICLASS="filename">/etc/passwd</I> database but not others.For example, if you have the following entry in your <ICLASS="filename">/etc/passwd</I>file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh +:*:0:0::: </PRE></BLOCKQUOTE><PCLASS="para">Then all of the entries in the <SPANCLASS="acronym">NIS</SPAN> <KBDCLASS="command">passwd</KBD>map will be imported, but each will have its password entry changedto *, effectively preventing it from being used on theclient machine.</P><PCLASS="para">Why might you want to do that? Well,by importing the entire map, you get all the <SPANCLASS="acronym">UIDS</SPAN>and account names, so that <KBDCLASS="command">ls -l</KBD> invocations show the owner of filesand directories as usernames. The entry also allows the <ICLASS="filename">~user</I> notationin the various shells to correctly map to the user's homedirectory (assuming that it is mounted using <SPANCLASS="acronym">NFS</SPAN>).</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.1">19.4.3 NIS Domains</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26687"></A><ACLASS="indexterm"NAME="AUTOID-26690"></A>When you configure an <SPANCLASS="acronym">NIS</SPAN>server, you must specify an <SPANCLASS="acronym">NIS</SPAN> domain. Thesedomains are not the same as <SPANCLASS="acronym">DNS</SPAN> domains. While<SPANCLASS="acronym">DNS</SPAN> domains specify a region of the Internet,<SPANCLASS="acronym">NIS</SPAN> domains specify an administrative group ofmachines.</P><PCLASS="para">The <SPANCLASS="acronym">UNIX</SPAN> <ACLASS="indexterm"NAME="AUTOID-26699"></A><KBDCLASS="command">domainname</KBD> command is used to display and tochange your <KBDCLASS="command">domainname</KBD>. Without an argument, the command printsthe current domain:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">domainname</B>EXPERT%</PRE></BLOCKQUOTE><PCLASS="para">You can specify an argument to change your domain:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">domainname BAR-BAZ</B>#</PRE></BLOCKQUOTE><PCLASS="para">Note that you must be the superuser to set your computer'sdomain. Under Solaris 2.x, the computer's domainname isstored in the file <ICLASS="filename">/etc/defaultdomain</I>, andset automatically on system startup by the shell script <ICLASS="filename">/etc/rc2.d/S69inet.</I>A computer can only be in one <SPANCLASS="acronym">NIS</SPAN> domain at atime, but it can serve any number of <SPANCLASS="acronym">NIS</SPAN> domains.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> <ACLASS="indexterm"NAME="AUTOID-26715"></A><ACLASS="indexterm"NAME="AUTOID-26718"></A>Although you might be tempted touse your Internet domain as your netgroup domain, we strongly recommendagainst this. Setting the two domains to the same name has causedproblems with some versions of <KBDCLASS="command">sendmail</KBD>. It is also a security problemto use an <SPANCLASS="acronym">NIS</SPAN> domain that can be easily guessed.Hacker toolkits that attempt to exploit <SPANCLASS="acronym">NIS</SPAN> or<SPANCLASS="acronym">NFS</SPAN> bugs almost always try variations of theInternet domainname as the <SPANCLASS="acronym">NIS</SPAN> domainname beforetrying anything else. (Of course, the domainname can still be determinedin other ways.)</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2">19.4.4 NIS Netgroups</A></H3><PCLASS="para"><SPANCLASS="acronym">NIS</SPAN><ACLASS="indexterm"NAME="AUTOID-26730"></A><ACLASS="indexterm"NAME="AUTOID-26733"></A><ACLASS="indexterm"NAME="AUTOID-26735"></A>netgroups allow you to creategroups for users or machines on your network. Netgroups are similarin principle to <SPANCLASS="acronym">UNIX</SPAN> groups for users, but theyare much more complicated.</P><PCLASS="para">The primary purpose of netgroupsis to simplify your configuration files, and to give you less opportunityto make a mistake. By properly specifying and using netgroups, youcan increase the security of your system by limiting the individualsand the machines that have access to critical resources.</P><PCLASS="para">Thenetgroup database is kept on the <SPANCLASS="acronym">NIS</SPAN> master serverin the file <ICLASS="filename">/etc/netgroup</I> or <ICLASS="filename">/usr/etc/netgroup.</I>This file consists of one or more lines that have the form:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">groupname member1 member2 ...</PRE></BLOCKQUOTE><PCLASS="para">Eachmember can specify a host, a user, and a <SPANCLASS="acronym">NIS</SPAN>domain. The members have the form:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">(hostname, username, domainname) </PRE></BLOCKQUOTE><PCLASS="para">If a <ICLASS="filename">username</I> is not included, then every user at the host<ICLASS="filename">hostname</I> is a member of the group. If a <ICLASS="filename">domainname</I> is not provided,then the current domain is assumed.[11]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] It is generallya dangerous practice to create netgroups with both users and hosts;doing so makes mistakes somewhat more likely.</P></BLOCKQUOTE><PCLASS="para">Here are some sample netgroups:</P><DLCLASS="variablelist"><DTCLASS="term"><KBDCLASS="command">Profs (cs,bruno,hutch)(cs,art,hutch)</KBD> </DT><DDCLASS="listitem"><PCLASS="para">This statement creates a netgroup called <ICLASS="filename">Profs</I>,which is defined to be the users <ICLASS="systemitem">bruno</I> and <ICLASS="systemitem">art</I>on the machine <ICLASS="systemitem">cs</I> inthe domain hutch.</P></DD><DTCLASS="term"><KBDCLASS="command">Servers (oreo,,) (choco,,) (blueberry,,)</KBD></DT><DDCLASS="listitem"><PCLASS="para">This statement creates a netgroup called <ICLASS="filename">Servers</I>,which matches any user on the machines <ICLASS="systemitem">oreo</I>,<ICLASS="systemitem">choco</I>, or <ICLASS="systemitem">blueberry</I>.</P></DD><DTCLASS="term"><KBDCLASS="command">Karen_g (,karen,)</KBD> </DT><DDCLASS="listitem"><PCLASS="para">This statement creates a netgroup called <ICLASS="filename">Karen_g</I>which matches the user <ICLASS="systemitem">karen</I>on any machine.</P></DD><DTCLASS="term"><KBDCLASS="command">Universal(,,,)</KBD> </DT><DDCLASS="listitem"><PCLASS="para">This statement creates the <ICLASS="filename">Universal</I> netgroup, whichmatches anybody on any machine.</P></DD><DTCLASS="term"><KBDCLASS="command">MachinesOnly ( , - , )</KBD> </DT><DDCLASS="listitem"><PCLASS="para">This statement creates a netgroup that matches allhostnames in the current domain, but which has no user entries.In this case, the minus sign is used as a negative wildcard.</P></DD></DL><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.1">19.4.4.1 Setting up netgroups</A></H4><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-26795"></A><ACLASS="indexterm"NAME="AUTOID-26798"></A><ACLASS="indexterm"NAME="AUTOID-26801"></A><ICLASS="filename">/etc/yp/makedbm</I>program (sometimes found in <ICLASS="filename">/usr/etc/yp/makedbm)</I>processes the netgroup file into a number of database files thatare stored in the files:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/etc/yp/domainname/netgroup.dir /etc/yp/domainname/netgroup.pag /etc/yp/domainname/netgroup.byuser.dir /etc/yp/domainname/netgroup.byuser.pag /etc/yp/domainname/netgroup.byhost.dir /etc/yp/domainname/netgroup.byhost.pag</PRE></BLOCKQUOTE><PCLASS="para">Note that <ICLASS="filename">/etc/yp</I> may be symbolicallylinked to <ICLASS="filename">/var/yp</I> on some machines.</P><PCLASS="para">Ifyou have a small organization, you might simply create two netgroups:one for all of your users, and a second for all of your client machines.These groups will simplify the creation and administration of yoursystem's configuration files.</P><PCLASS="para">If you have alarger organization, you might create several groups. For example,you might create a group for each department's users. Youcould then have a master group that consists of all of the subgroups.Of course, you could do the same for your computers as well.</P><PCLASS="para">Consider the following science department:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Math (mathserve,,) (math1,,) (math2,,) (math3,,) Chemistry (chemserve1,,) (chemserve2,,) (chem1,,) (chem2,,) (chem3,,) Biology (bioserve1,,) (bio1,,) (bio2,,) (bio3,,) Science Math Chemistry Biology</PRE></BLOCKQUOTE><PCLASS="para">Netgroups are important for securitybecause you use them to limit which users or machines on the networkcan access information stored on your computer. You can use netgroupsin <SPANCLASS="acronym">NFS</SPAN> files to limit who has access to the partitions,and in data files such as <ICLASS="filename">/etc/passwd,</I> to limitwhich entries are imported into a system.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.2">19.4.4.2 Using netgroups to limit the importing of accounts</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26819"></A><ACLASS="indexterm"NAME="AUTOID-26822"></A><ACLASS="indexterm"NAME="AUTOID-26826"></A><ACLASS="indexterm"NAME="AUTOID-26829"></A><ACLASS="indexterm"NAME="AUTOID-26832"></A>Youcan use the netgroups facility to control which accounts are importedby the file <ICLASS="filename">/etc/passwd.</I> For example, if you wantto simply import accounts for a specific netgroup, then follow theplus sign (+) with an at sign (@) and a netgroup:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh +@operators::0:0:::</PRE></BLOCKQUOTE><PCLASS="para">The above will bring in the <SPANCLASS="acronym">NIS</SPAN> passwordmap entry for the users listed in the <ICLASS="filename">operators</I>group.</P><PCLASS="para">You can also exclude users or groups if you listthe <EMCLASS="emphasis">exclusions</EM> before you list the netgroups.For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">root:si4N0jF9Q8JqE:0:1:Mr. Root:/:/bin/sh -george::120:5::: -@suspects::0:0::: +::0:0:::</PRE></BLOCKQUOTE><PCLASS="para">The above will include all <SPANCLASS="acronym">NIS</SPAN> passwordmap entries <EMCLASS="emphasis">except for</EM> user <ICLASS="systemitem">george</I> and any users in thesuspects netgroup.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> The <ICLASS="filename">+@netgroup</I> and <ICLASS="filename">-@netgroup</I>notation does not work on all versions of <SPANCLASS="acronym">NIS</SPAN>,and does not work reliably on others. If you intend to use thesefeatures, <EMCLASS="emphasis">check your system to verify that they are behaving asexpected.</EM> Simply reading your documentation is not sufficient.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.3">19.4.4.3 Limitations with NIS</A></H4><PCLASS="para"><SPANCLASS="acronym">NIS</SPAN>has been the starting point for many successful penetrations into<SPANCLASS="acronym">UNIX</SPAN> networks. Because <SPANCLASS="acronym">NIS</SPAN>controls user accounts, if you can convince an <SPANCLASS="acronym">NIS</SPAN>server to broadcast that you have an account, you can use that fictitiousaccount to break into a client on the network. <SPANCLASS="acronym">NIS</SPAN>can also make confidential information, such as encrypted passwordentries, widely available.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.4">19.4.4.4 Spoofing RPC</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26863"></A><ACLASS="indexterm"NAME="AUTOID-26866"></A>There are designflaws in the code of the <SPANCLASS="acronym">NIS</SPAN> implementationsof several vendors that allow a user to reconfigure and spoof the<SPANCLASS="acronym">NIS</SPAN> system. This spoofing can be done in twoways: by spoofing the underlying <SPANCLASS="acronym">RPC</SPAN> system,and by spoofing <SPANCLASS="acronym">NIS</SPAN>.</P><PCLASS="para">The <SPANCLASS="acronym">NIS</SPAN>system depends on the functioning of the <ACLASS="indexterm"NAME="AUTOID-26875"></A><KBDCLASS="command">portmap</KBD>service. This is a daemon that matches supplied service names for<SPANCLASS="acronym">RPC</SPAN> with IP port numbers at which those servicescan be contacted. Servers using <SPANCLASS="acronym">RPC</SPAN> will registerthemselves with <KBDCLASS="command">portmap</KBD> when they start, and will remove themselvesfrom the <KBDCLASS="command">portmap</KBD> database when they exit or reconfigure.</P><PCLASS="para">Earlyversions of <KBDCLASS="command">portmap</KBD> allowed any program to register itself as an<SPANCLASS="acronym">RPC</SPAN> server, allowing attackers to register theirown <SPANCLASS="acronym">NIS</SPAN> servers and respond to requests withtheir own password files. Sun's current version of <KBDCLASS="command">portmap</KBD>rejects requests to register or delete services if they come froma remote machine, or if they refer to a privileged port and comefrom a connection initiated from a nonprivileged port. Thus, inSun's current version, only the superuser can make requeststhat add or delete service mappings to privileged ports, and allrequests can only be made locally. However, not every vendor'sversion of the <KBDCLASS="command">portmap</KBD> daemon performs these checks. The resultis that an attacker might be able to replace critical <SPANCLASS="acronym">RPC</SPAN>services with his own, booby-trapped versions.</P><PCLASS="para">Notethat <SPANCLASS="acronym">NFS</SPAN> and some <SPANCLASS="acronym">NIS</SPAN> servicesoften register on unprivileged ports, even in SunOS. In theory,even with the checks outlined above, an attacker could replace oneof these services with a specially written program that would respondto system requests in a way that would compromise system security.This would require some in-depth understanding of the protocolsand relationships of the programs, but these are well-documentedand widely known.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.5">19.4.4.5 Spoofing NIS</A></H4><PCLASS="para"><SPANCLASS="acronym">NIS</SPAN>clients <ACLASS="indexterm"NAME="AUTOID-26896"></A><ACLASS="indexterm"NAME="AUTOID-26899"></A><ACLASS="indexterm"NAME="AUTOID-26902"></A><ACLASS="indexterm"NAME="AUTOID-26904"></A>get information from a <SPANCLASS="acronym">NIS</SPAN> server through<SPANCLASS="acronym">RPC</SPAN> calls. A local daemon, <KBDCLASS="command">ypbind</KBD>, caches contactinformation for the appropriate <SPANCLASS="acronym">NIS</SPAN> server daemon,<KBDCLASS="command">ypserv</KBD>. The <KBDCLASS="command">ypserv</KBD> daemon may be local or remote.</P><PCLASS="para">Underearly SunOS versions of the <SPANCLASS="acronym">NIS</SPAN> service (andcurrent versions by some vendors), it was possible to instantiatea program that acted like <KBDCLASS="command">ypserv</KBD> and responded to <KBDCLASS="command">ypbind</KBD> requests.The local <KBDCLASS="command">ypbind</KBD> daemon could then be instructed to use that programinstead of the real <KBDCLASS="command">ypserv</KBD> daemon. As a result, an attacker couldsupply his or her own version of the password file (for instance)to a login request! (The security implications of this should beobvious.)</P><PCLASS="para">Current <SPANCLASS="acronym">NIS</SPAN> implementationsof <KBDCLASS="command">ypbind</KBD> have a <ACLASS="indexterm"NAME="AUTOID-26921"></A><KBDCLASS="command">-secure</KBD>command line flag[12]that can be provided when the daemon is started. If the flag isused, the <KBDCLASS="command">ypbind</KBD> daemon will not accept any information from a <KBDCLASS="command">ypserv</KBD>server that is not running on a privileged port. Thus, a user-suppliedattempt to masquerade as the ypserv daemon will be ignored. A usercan't spoof <ICLASS="filename">ypserv</I> unless that useralready has superuser privileges. In practice, there is no goodreason not to use the <KBDCLASS="command">-secure</KBD> flag.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] Perhaps present as simply <KBDCLASS="command">-s.</KBD></P></BLOCKQUOTE><PCLASS="para">Unfortunately, the<ICLASS="filename">-secure</I> flag has a flaw. If the attacker is able to subvert theroot account on a machine on the local network and start a versionof <KBDCLASS="command">ypserv</KBD> using his own <SPANCLASS="acronym">NIS</SPAN> information, he needonly point the target <KBDCLASS="command">ypbind</KBD> daemon to that server. The compromisedserver would be running on a privileged port, so its responses wouldnot be rejected. The <KBDCLASS="command">ypbind</KBD> process would therefore accept its informationas valid, and the security could be compromised.</P><PCLASS="para">Anattacker could also write a &quot;fake&quot; <KBDCLASS="command">ypserv</KBD> thatruns on a PC-based system. Privileged ports have no meaning in thiscontext, so the fake server could feed any information to the target<KBDCLASS="command">ypbind</KBD> process.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.2.6">19.4.4.6 NIS is confused about &quot;+&quot;</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26943"></A><ACLASS="indexterm"NAME="AUTOID-26946"></A><ACLASS="indexterm"NAME="AUTOID-26949"></A><ACLASS="indexterm"NAME="AUTOID-26952"></A><ACLASS="indexterm"NAME="AUTOID-26957"></A>A combination of installation mistakes andchanges in <SPANCLASS="acronym">NIS</SPAN> itself has caused some confusionwith respect to the <SPANCLASS="acronym">NIS</SPAN> plus sign (+)in the <ICLASS="filename">/etc/passwd</I> file.</P><PCLASS="para">If youuse <SPANCLASS="acronym">NIS</SPAN>, be very careful that the plus sign isin the <ICLASS="filename">/etc/passwd</I> file of your <ICLASS="filename">clients</I>, and notyour <ICLASS="filename">servers</I>. On a <SPANCLASS="acronym">NIS</SPAN> server, the plus signcan be interpreted as a username under some versions of the <SPANCLASS="acronym">UNIX</SPAN>operating system. The simplest way to avoid this problem is to makesure that you do not have the &quot;+&quot; accounton your <SPANCLASS="acronym">NIS</SPAN> server.</P><PCLASS="para">Attempting tofigure out what to put on your client machine is another matter.With early versions of <SPANCLASS="acronym">NIS</SPAN>, the following linewas distributed:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">+::0:0:::		<EMCLASS="emphasis">Correct on SunOS and Solaris </EM></PRE></BLOCKQUOTE><PCLASS="para">Unfortunately, this line presented a problem. When <SPANCLASS="acronym">NIS</SPAN>was not running, the plus sign was sometimes taken as an accountname, and anybody could log into the computer by typing +at the <KBDCLASS="command">login:</KBD> prompt. Even worse: the personlogged in with superuser privileges!</P><PCLASS="para">One way to minimizethe danger was by including a password field for the plus user.Specify the plus sign line in the form:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">+:*:0:0:::		 <EMCLASS="emphasis">On NIS clients only </EM></PRE></BLOCKQUOTE><PCLASS="para">Unfortunately, this entry actuallymeans &quot;import the <KBDCLASS="command">passwd</KBD> map, but change all of the encryptedpasswords to * which effectively prevents everybody fromlogging in. This entry wasn't right either!</P><PCLASS="para">Theeasiest way to deal with this confusion is simply to attempt tolog into your <SPANCLASS="acronym">NIS</SPAN> clients and servers using a+ as a username. You may also wish to try logging in withthe network cable unplugged, to simulate what happens to your computerwhen the <SPANCLASS="acronym">NIS</SPAN> server cannot be reached. In eithercase, you should not be able to log in by simply typing +as a username. This approach will tell you that your server is properlyconfigured.</P><PCLASS="para">If you see the following example, you haveno problem:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">login: <BCLASS="emphasis.bold">+ </B>password: <ICLASS="filename">anything</I> Login incorrect </PRE></BLOCKQUOTE><PCLASS="para">If you see the following example,you do have a problem:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">login: <BCLASS="emphasis.bold">+ </B>Last login: Sat Aug 18 16:11 32 on ttya #</PRE></BLOCKQUOTE><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> If you are running a recent version of your operatingsystem, do not think that your system is immune to the +confusion in the <SPANCLASS="acronym">NIS</SPAN> subsystem. In particular,some recent versions of Linux got this wrong too.<ACLASS="indexterm"NAME="AUTOID-26995"></A><ACLASS="indexterm"NAME="AUTOID-26998"></A><ACLASS="indexterm"NAME="AUTOID-27000"></A></P></BLOCKQUOTE></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-19-SECT-4.3">19.4.5 Unintended Disclosure of Site Information with NIS</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-27006"></A><ACLASS="indexterm"NAME="AUTOID-27009"></A>Because <SPANCLASS="acronym">NIS</SPAN> has relativelyweak security, it can unintentionally disclose information aboutyour site to attackers. In particular, <SPANCLASS="acronym">NIS</SPAN> candisclose encrypted passwords, usernames, hostnames and their IPaddresses, and mail aliases.</P><PCLASS="para">Unless you protect your<SPANCLASS="acronym">NIS</SPAN> server with a firewall or with a modified<KBDCLASS="command">portmap</KBD> process, anyone on the outside of your system can obtaincopies of the databases exported by your <SPANCLASS="acronym">NIS</SPAN>server. To do this, all the outsider needs to do is guess the nameof your <SPANCLASS="acronym">NIS</SPAN> domain, bind to your <SPANCLASS="acronym">NIS</SPAN>server using the <ACLASS="indexterm"NAME="AUTOID-27020"></A><KBDCLASS="command">ypset</KBD> command,and request the databases. This can result in the disclosure ofyour distributed password file, and all the other information containedin your <SPANCLASS="acronym">NIS</SPAN> databases.</P><PCLASS="para">There areseveral ways to prevent unauthorized disclosure of your <SPANCLASS="acronym">NIS</SPAN>databases:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">The simplest is to protect your sitewith a <ACLASS="indexterm"NAME="AUTOID-27029"></A><ACLASS="indexterm"NAME="AUTOID-27032"></A>firewall, or at least a smart router, and notallow the <SPANCLASS="acronym">UDP</SPAN> packets associated with <SPANCLASS="acronym">RPC</SPAN>to cross between your internal network and the outside world. Unfortunately,because <SPANCLASS="acronym">RPC</SPAN> is based on the <KBDCLASS="command">portmapper</KBD>, the actual<SPANCLASS="acronym">UDP</SPAN> port that is used is not fixed. In practice,the only safe strategy is to block all <SPANCLASS="acronym">UDP</SPAN> packetsexcept those that you specifically wish to let cross.</P></LI><LICLASS="listitem"><PCLASS="para">Another approach is to use Wietse Venema'sfreely available <KBDCLASS="command">portmapper</KBD> program, which allows you to specifya list of computers by hostname or IP address that should be allowedor denied access to specific <SPANCLASS="acronym">RPC</SPAN> servers.[13] See <ACLASS="xref"HREF="ch21_01.htm"TITLE="Firewalls">Chapter 21, <CITECLASS="chapter">Firewalls</CITE></A>,and <ACLASS="xref"HREF="ch22_01.htm"TITLE="Wrappers and Proxies">Chapter 22, <CITECLASS="chapter">Wrappers and Proxies</CITE></A>, for information on how todo this.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] This same functionality is built into many vendor versions,but you need to read the documentation carefully to find how touse it. It is usually turned off by default. On Sun systems, thisinvolves editing the <ICLASS="filename">/var/yp/securenets</I>file, and on HP machines it is the <ICLASS="filename">/etc/inetd.sec</I>file.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Some versions of <SPANCLASS="acronym">NIS</SPAN> supportthe use of the <ICLASS="filename">/var/yp/securenets</I> filefor <SPANCLASS="acronym">NIS</SPAN> servers. This file, when present, canbe used to specify a list of networks that may receive <SPANCLASS="acronym">NIS</SPAN>information.</P></LI><LICLASS="listitem"><PCLASS="para">Don't tighten up <SPANCLASS="acronym">NIS</SPAN>but forget about <SPANCLASS="acronym">DNS</SPAN>! If you decide that outsidersshould not be able to learn your site's IP addresses, besure to run two nameservers, one for internal use and one for externaluse.<ACLASS="indexterm"NAME="AUTOID-27060"></A></P></LI></OL></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_03.htm"TITLE="19.3 Secure RPC (AUTH_DES)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.3 Secure RPC (AUTH_DES)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_05.htm"TITLE="19.5 Sun's NIS+"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 19.5 Sun's NIS+"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">19.3 Secure RPC (AUTH_DES)</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">19.5 Sun's NIS+</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>