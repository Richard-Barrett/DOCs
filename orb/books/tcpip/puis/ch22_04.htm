<HTML><HEAD><TITLE>[Chapter 22] 22.4 SOCKS</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:17:13Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch22_01.htm"TITLE="22. Wrappers and Proxies"><LINKREL="prev"HREF="ch22_03.htm"TITLE="22.3 tcpwrapper"><LINKREL="next"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_03.htm"TITLE="22.3 tcpwrapper"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.3 tcpwrapper"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 22<BR>Wrappers and Proxies</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 22.5 UDP Relayer"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4">22.4 SOCKS</A></H2><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> is a systemthat allows computers behind a firewall to access services on theInternet. The program allows you to centrally control how programson your organization's network communicate with the Internet.With <SPANCLASS="acronym">SOCKS</SPAN>, you can allow specific services tospecific computers, disable access to individual hosts on the Internet,and log as much or as little as you want.</P><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN>was originally written by David Koblas and Michelle <ACLASS="indexterm"NAME="AUTOID-31164"></A><ACLASS="indexterm"NAME="AUTOID-31166"></A>Koblas. It has since been extendedby Ying-Da <ACLASS="indexterm"NAME="AUTOID-31168"></A>Lee at <SPANCLASS="acronym">NEC</SPAN>'sSystems Laboratory, and a commercially supported version is availablefrom <SPANCLASS="acronym">NEC</SPAN>. The name <SPANCLASS="acronym">SOCKS</SPAN> standsfor &quot;<SPANCLASS="acronym">SOCK</SPAN>-et-S.&quot; Accordingto the <SPANCLASS="acronym">SOCKS</SPAN> <SPANCLASS="acronym">FAQ</SPAN>, &quot;itwas one of those `development names' that neverleft.&quot;</P><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> consists oftwo parts:</P><DLCLASS="variablelist"><DTCLASS="term">SOCKS server</DT><DDCLASS="listitem"><PCLASS="para">A program that is run on a host that can communicatedirectly with both the Internet and the internal computers on yournetwork (e.g., the firewall's gate).</P></DD><DTCLASS="term">SOCKS client programs</DT><DDCLASS="listitem"><PCLASS="para">Specially modified Internet client programs thatknow to contact the <SPANCLASS="acronym">SOCKS</SPAN> server instead of sendingrequests directly to the Internet.</P></DD></DL><PCLASS="para">The standard <SPANCLASS="acronym">SOCKS</SPAN> distribution comes withclient programs for <KBDCLASS="command">finger</KBD>, <KBDCLASS="command">ftp</KBD>, <KBDCLASS="command">telnet</KBD>, and <KBDCLASS="command">whois</KBD>. <SPANCLASS="acronym">SOCKS</SPAN>also includes a library you can use to create other <SPANCLASS="acronym">SOCKS</SPAN>clients at will. Furthermore, many programs, such as <SPANCLASS="acronym">NCSA</SPAN>Mosaic, include provisions for using <SPANCLASS="acronym">SOCKS</SPAN> tonegotiate firewalls.</P><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> is availablefor most versions of <SPANCLASS="acronym">UNIX</SPAN>, including SunOS, SunSolaris, <SPANCLASS="acronym">IRIX</SPAN>, Ultrix, <SPANCLASS="acronym">HP-UX</SPAN>,<SPANCLASS="acronym">AIX</SPAN>, Interactive Systems <SPANCLASS="acronym">UNIX</SPAN>,<SPANCLASS="acronym">OSF</SPAN>/1, Net<SPANCLASS="acronym">BSD</SPAN>, <SPANCLASS="acronym">UNIX</SPAN>Ware,and Linux. A version called PC <SPANCLASS="acronym">SOCKS</SPAN>, by CornellKinderknecht, is available for Microsoft Windows. A Macintosh versionis under development.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.1">22.4.1 What SOCKS Does</A></H3><PCLASS="para">The <SPANCLASS="acronym">SOCKS</SPAN>client software works by replacing calls to the <SPANCLASS="acronym">UNIX</SPAN>socket functions&nbsp;- <KBDCLASS="command">connect</KBD>(),<KBDCLASS="command">getsocketname</KBD>(),<KBDCLASS="command">bind</KBD>(),<KBDCLASS="command">accept</KBD>(),<KBDCLASS="command">listen</KBD>()and <KBDCLASS="command">select</KBD>()&nbsp;- withits own versions of these functions. In practice, this replacementis done by adding a few macro definitions to the <SPANCLASS="acronym">CFLAGS</SPAN>in the <ICLASS="filename">Makefile</I> of the program that is used to compile the networkclient program, and then linking the resulting program with the<SPANCLASS="acronym">SOCKS</SPAN> library.</P><PCLASS="para">When a <SPANCLASS="acronym">SOCKS</SPAN>-modifiedclient attempts to connect to a server on the Internet, the <SPANCLASS="acronym">SOCKS</SPAN>library intercepts the connection attempt and instead opens up aconnection to the <SPANCLASS="acronym">SOCKS</SPAN> server. After the connectionis established, the <SPANCLASS="acronym">SOCKS</SPAN> client sends throughthe following information:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Version number</P></LI><LICLASS="listitem"><PCLASS="para">Connect request command</P></LI><LICLASS="listitem"><PCLASS="para">Port number to which the client requested to connect</P></LI><LICLASS="listitem"><PCLASS="para">IP address to which the client requested to connect</P></LI><LICLASS="listitem"><PCLASS="para">Username of the person initiating the request</P></LI></UL><PCLASS="para">The <SPANCLASS="acronym">SOCKS</SPAN> server then checks its accesscontrol list to see if the connection should be accepted or rejected.If the connection is accepted, the server opens up a connectionto the remote machine and then relays all information back and forth.If the connection is rejected, the server disconnects from the client.This configuration is shown graphically in <ACLASS="xref"HREF="ch22_04.htm#PUIS-CHP-22-FIG-1"TITLE=": Using SOCKS for proxying">Figure 22.1</A>.</P><H4CLASS="figure"><ACLASS="title"NAME="PUIS-CHP-22-FIG-1">Figure 22.1: : Using SOCKS for proxying</A></H4><IMGCLASS="graphic"SRC="figs/puis_2201.gif"ALT="Figure 22.1"><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> can also be usedto allow computers behind a firewall to receive connections. Inthis case, a connection is opened to the <SPANCLASS="acronym">SOCKS</SPAN>server, which in turn gets ready to accept connections from theInternet.</P><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> works only with<SPANCLASS="acronym">TCP/IP</SPAN>; for <SPANCLASS="acronym">UDP</SPAN> services (suchas Archie), use <SPANCLASS="acronym">UDP</SPAN> Relayer as described laterin this chapter.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.2">22.4.2 Getting SOCKS</A></H3><PCLASS="para">Socks may be freely downloadedfrom the Internet. The address is:</P><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><ACLASS="systemitem.url"HREF="ftp://ftp.nec.com/pub/security/socks.cstc/">ftp://ftp.nec.com/pub/security/socks.cstc/</A><BR><ACLASS="systemitem.url"HREF="http://www.socks.nec.com/">http://www.socks.nec.com/</A></P></BLOCKQUOTE><PCLASS="para">If you operate two nameservers to hide information from theInternet, you will also need to download the file <ICLASS="filename">Rgethostbyname.c</I>.This file contains a function that can be used to query multiplenameservers to resolve a hostname.</P><PCLASS="para">There is a mailinglist devoted to <SPANCLASS="acronym">SOCKS</SPAN> and related issues. Tojoin it, send the message &quot;subscribe socks <EMCLASS="emphasis">your-email-address</EM>&quot;to <ICLASS="filename">majordomo@syl.dl.nec.com.</I></P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> This section discusses <SPANCLASS="acronym">SOCKS</SPAN> Version4. At the time of this writing, <SPANCLASS="acronym">SOCKS</SPAN> Version5 was under development. New features in <SPANCLASS="acronym">SOCKS</SPAN>5 include strong authentication, authentication method negotiation,message integrity, message privacy, and support for <SPANCLASS="acronym">UDP</SPAN>applications.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.3">22.4.3 Getting SOCKS Running</A></H3><PCLASS="para">After you havedownloaded the system, you will need to follow these steps to getthe system running:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Unpack the <SPANCLASS="acronym">SOCKS</SPAN>distribution.</P></LI><LICLASS="listitem"><PCLASS="para">Decide whether you wish to have the <SPANCLASS="acronym">SOCKS</SPAN>daemon started automatically when the system starts (boot time),or started by <KBDCLASS="command">inetd</KBD> when each <SPANCLASS="acronym">SOCKS</SPAN> request isreceived.</P><PCLASS="para">The advantage of having the daemon start automaticallyat system start-up is that the daemon will need to read its configurationfile only once. Otherwise, the configuration file will have to beread each time a <SPANCLASS="acronym">SOCKS</SPAN> connection is requested.We recommend that you have <SPANCLASS="acronym">SOCKS</SPAN> started at boottime.</P></LI><LICLASS="listitem"><PCLASS="para">Edit the file <ICLASS="filename">Makefile</I> in the main <SPANCLASS="acronym">SOCKS</SPAN>directory and the file <ICLASS="filename">include/socks.h</I> to reflect the policyof your site. Be sure to edit the variables found in <ACLASS="xref"HREF="ch22_04.htm#PUIS-CHP-22-TAB-4"TITLE="Variables">Table 22.4</A>.<TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="PUIS-CHP-22-TAB-4">Table 22.4: Variables</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Variable</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Location</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Purpose/Setting</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOCKS_DEFAULT_SERVER</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set with the hostname of the computerthat hosts the <KBDCLASS="command">sockd</KBD> daemon.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOCKS_DEFAULT_NS</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set if the clients inside your firewallcannot look up the IP addresses of external hosts.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">NOT_THROUGH_INETD</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set if <KBDCLASS="command">socksd</KBD> will be started automaticallyat system boot.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOCKS_CONF</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Location of the SOCKS configuration filefor client machines.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOCKD_CONF</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Location of the SOCKS configuration filefor the <KBDCLASS="command">sockd</KBD> daemon.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">MULTIHOMED_SERVER</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set if <KBDCLASS="command">sockd</KBD> will be running on a multihomedserver (a gate computer with two Ethernet ports).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SOCKD_ROUTE_FILE</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">include/socks.h</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Location of the SOCKS routing file, foruse with multihomed servers.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">FACIST</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">Makefile</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Causes SOCKS FTP client to log namesof all files transferred.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">FOR_PS</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">Makefile</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Causes <KBDCLASS="command">sockd</KBD> to display information aboutits current activity in the output from the ps command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SERVER_BIN_DIR</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">Makefile</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Directory containing the <KBDCLASS="command">sockd</KBD> daemon.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">CLIENTS_BIN_DIR</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ICLASS="filename">Makefile</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Directory containing the SOCKS clientprograms.</P></TD></TR></TBODY></TABLE>&#13;</P></LI><LICLASS="listitem"><PCLASS="para">Compile <SPANCLASS="acronym">SOCKS</SPAN> witha suitable C compiler.</P></LI><LICLASS="listitem"><PCLASS="para">Verify that <KBDCLASS="command">sockd</KBD> compiled properly and with thecorrect configuration by running <KBDCLASS="command">sockd</KBD> with the <ICLASS="filename">-ver</I> option:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">./sockd -ver</B> CSTC single-homed, stand-alone SOCKS proxy server version 4.2. Supports clients that use Rrcmd().%</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Become superuser.</P></LI><LICLASS="listitem"><PCLASS="para">Install the <SPANCLASS="acronym">SOCKS</SPAN> daemon in thelocation that you specified in the <ICLASS="filename">Makefile</I>; you may be able todo this by typing &quot;<KBDCLASS="command">make install.server</KBD>&quot;.</P></LI><LICLASS="listitem"><PCLASS="para">Add the <SPANCLASS="acronym">SOCKS</SPAN> service to your<ICLASS="filename">/etc/services</I> file. It should look like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">socks			1080/tcp</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Now you need to set up the <SPANCLASS="acronym">SOCKS</SPAN>configuration file. See the section called &quot;The SOCKS ServerConfiguration File: <ICLASS="filename">/etc/sockd.conf</I> below.</P></LI><LICLASS="listitem"><PCLASS="para">If you decided to have <SPANCLASS="acronym">SOCKS</SPAN>start automatically at system boot time, modify your boot configurationfiles (either by adding a few lines to /etc/rc.localor by creating a new file in /etc/rc2.d/).You can set the start-up by adding a few lines that look like this:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Start SOCKS serverif [ -f /usr/etc/sockd ]; then      (echo -n &quot;sockd... &quot;)                &gt;/dev/console      /usr/etc/sockd &gt;/dev/console 2&gt;&amp;1fi</PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">If you decided to have <SPANCLASS="acronym">SOCKS</SPAN>start from inetd (and you probably don't want to do this),add this line to the /etc/inetd.conf file:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">socks stream tcp nowait nobody /usr/etc/sockd </PRE></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Start the sockd daemon manually, or reset inetd.</P></LI><LICLASS="listitem"><PCLASS="para">Test the system.</P></LI></OL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.4">22.4.4 SOCKS and Usernames</A></H3><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN>permits you to allow or deny access to Internet services based onboth IP address and the username of the person on the local networkmaking the request. There are two ways that <SPANCLASS="acronym">SOCKS</SPAN>can determine the username of a person on the internal network:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Normally, a <SPANCLASS="acronym">SOCKS</SPAN>client will send through the username of the person initiating theconnection as part of the <SPANCLASS="acronym">SOCKS</SPAN> protocol.</P></LI><LICLASS="listitem"><PCLASS="para"><SPANCLASS="acronym">SOCKS</SPAN> can also use the <KBDCLASS="command">ident</KBD>protocol. For more information, see the section &quot;IdentificationProtocol (auth) (TCP Port 113)&quot; in Chapter 17.</P></LI></OL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.5">22.4.5 SOCKS Identification Policy</A></H3><PCLASS="para">The choiceof identification policy is determined by the way in which the <KBDCLASS="command">sockd</KBD> program is invoked and by the <ICLASS="filename">/etc/sockd.conf</I>configuration file.</P><PCLASS="para">Normally, <KBDCLASS="command">sockd</KBD> is invoked withone of three options:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sockd [-ver | -i | -I]</PRE></BLOCKQUOTE><PCLASS="para">These options have the following meanings:</P><DLCLASS="variablelist"><DTCLASS="term">-ver</DT><DDCLASS="listitem"><PCLASS="para">Prints the <KBDCLASS="command">sockd</KBD> configuration information and exits.</P></DD><DTCLASS="term">-I</DT><DDCLASS="listitem"><PCLASS="para">Forces <SPANCLASS="acronym">SOCKS</SPAN> to use the <KBDCLASS="command">ident</KBD>protocol. Denies access to any client that is not running the <KBDCLASS="command">ident</KBD>protocol. Also denies access to clients for which the username returnedby the <KBDCLASS="command">ident</KBD> protocol does not match the username provided by the<SPANCLASS="acronym">SOCKS</SPAN> protocol.</P></DD><DTCLASS="term">-i</DT><DDCLASS="listitem"><PCLASS="para">Less restrictive than <ICLASS="filename">-I</I>. Denies access to clientswhen the username returned by the <KBDCLASS="command">ident</KBD> protocol is different fromthe username returned by the <SPANCLASS="acronym">SOCKS</SPAN> protocol,but allows use of <KBDCLASS="command">sockd</KBD> by users who do not have <KBDCLASS="command">ident</KBD> running ontheir systems.</P></DD></DL><PCLASS="para">Theidentification options -i and -I can be overridden by a statementin the <SPANCLASS="acronym">SOCKS</SPAN> configuration file, <ICLASS="filename">/etc/sockd.conf.</I></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.6">22.4.6 The SOCKS Server Configuration File: /etc/sockd.conf</A></H3><PCLASS="para">The <KBDCLASS="command">sockd</KBD> configuration file, <ICLASS="filename">/etc/sockd.conf,</I>allows you to control which <SPANCLASS="acronym">TCP/IP</SPAN> connectionsare passed by the <KBDCLASS="command">sockd</KBD> daemon. As the daemon usually runs on acomputer that has access to both your organization's internalnetwork and the Internet, the <ICLASS="filename">sockd.conf</I> file controls, in part,which services are passed between the two.</P><PCLASS="para">The <KBDCLASS="command">sockd</KBD>program doesn't know the difference between your internaland external networks. It simply receives connections, determinesthe parameters of the connections (username, source, requested destination,and <SPANCLASS="acronym">TCP/IP</SPAN> service), then scans rules in the<ICLASS="filename">/etc/sockd.conf</I> file to determine if the connectionsshould be permitted or denied.</P><PCLASS="para">The <ICLASS="filename">/etc/sockd.conf</I>file is an <SPANCLASS="acronym">ASCII</SPAN> text file. Each line consistsof a rule to either allow connections or reject (deny) them. The<KBDCLASS="command">sockd</KBD> program scans the file from the first line to the last lineuntil a match is found. When a match is found, the action specifiedby the line is followed.</P><PCLASS="para">Lines in the <ICLASS="filename">/etc/sockd.conf</I>file may be up to 1023 characters long. Each line has the followingform:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">[allow | deny] [?=auth] [*=username(s)|filename(s)] 		source-address source-mask 		[destination-address destination-mask] 		[operator destination-port] 		[: shell-command]</PRE></BLOCKQUOTE><PCLASS="para">Fields are separated by spaces or tabs. If a number sign (#)is found on the line, everything after the number sign is assumedto be a comment, except as noted below.</P><PCLASS="para">If an incoming<SPANCLASS="acronym">TCP/IP</SPAN> connection does not match any of the linesin the <ICLASS="filename">/etc/sockd.conf</I> configuration file, itis rejected.</P><PCLASS="para">Here is an explanation of the fields:</P><DLCLASS="variablelist"><DTCLASS="term">allow | deny</DT><DDCLASS="listitem"><PCLASS="para">Specifies whether a connection matching the ruleon this line should be allowed or denied.</P></DD><DTCLASS="term">?=auth</DT><DDCLASS="listitem"><PCLASS="para">If present, this field allows you to override theidentification policy specified when the program was invoked. Specify&quot;?=I&quot; to cause <KBDCLASS="command">sockd</KBD> to reject the connectionif the user on the client machine is not running <KBDCLASS="command">ident</KBD>, or if thename returned by <KBDCLASS="command">ident</KBD> is not the same as the username sent by the<SPANCLASS="acronym">SOCKS</SPAN> client. Specify &quot;?=i&quot;to cause <KBDCLASS="command">sockd</KBD> to reject the connection if the name returned by<KBDCLASS="command">ident</KBD> is not the same as the name sent by the <SPANCLASS="acronym">SOCKS</SPAN>client.</P></DD><DTCLASS="term">*=username(s)|filename(s)</DT><DDCLASS="listitem"><PCLASS="para">If present, causes the rule to match a particularusername. You can also specify a filename, in which case the usernamesare read out of the file (one username per line). Here are someexamples:</P></DD></DL><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Username</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Result</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*=<ICLASS="filename">simsong</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches the user <ICLASS="filename">simsong</I>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*=<ICLASS="filename">fred,julie</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches the users <ICLASS="filename">fred</I> and <ICLASS="filename">julie</I>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*=<ICLASS="filename">/etc/goodusers</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches anybody in the file <ICLASS="filename">/etc/goodusers.</I></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*=<ICLASS="filename">fred,/etc/goodusers</I></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches the user <ICLASS="systemitem">fred</I> and all of the users inthe file <ICLASS="filename">/etc/goodusers.</I></P></TD></TR></TBODY></TABLE><DLCLASS="variablelist"><DTCLASS="term">source-address source-mask</DT><DDCLASS="listitem"><PCLASS="para">The <ICLASS="filename">address</I> and <ICLASS="filename">mask</I> allow you to specify a matchfor a single IP address or a range of addresses. The <ICLASS="filename">source-address</I>may be either an IP address in the form <ICLASS="filename">hhh.iii.jjj.kkk</I> or an Internethostname; the <ICLASS="filename">source-mask</I> must be an IP address mask in the form<ICLASS="filename">hhh.iii.jjj.kkk.</I></P><PCLASS="para">The <ICLASS="filename">source-mask</I> specifies which bits of the <ICLASS="filename">source-address</I>should be compared with the actual address of the incoming IP connection.Thus, a <ICLASS="filename">source-mask</I> of  0.0.0.0 will cause the rule to match anyIP address, while a <ICLASS="filename">source-mask</I> of 255.255.255.255 will only allowfor an exact match. These and other possibilities are explored inthe table below:</P></DD></DL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">source-address</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">source-mask</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Result</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">18.80.0.1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">255.255.255.255</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches the host 18.80.0.1.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">204.17.190.0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">255.255.255.0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches any host on the subnet 204.17.190.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">10.80.0.1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">255.0.0.0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches any host on net 10.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0.0.0.0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0.0.0.0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Matches every host on the Internet.</P></TD></TR></TBODY></TABLE><DLCLASS="variablelist"><DTCLASS="term">operator destination-port</DT><DDCLASS="listitem"><PCLASS="para">These optional arguments allow you to specify aparticular <SPANCLASS="acronym">TCP</SPAN> service or a range of <SPANCLASS="acronym">TCP/IP</SPAN>ports. For example, you can specify &quot;le 1023&quot;to select all of the <SPANCLASS="acronym">UNIX</SPAN> &quot;privileged&quot;ports, or you can specify &quot;eq 25&quot; to specify the<SPANCLASS="acronym">SMTP</SPAN> port. The following table lists all of theoperators:</P></DD></DL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">operator</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Meaning</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">eq</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Equal to</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">neq</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Not equal to</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">lt</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Less than</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">le</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Less than or equal to</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">gt</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Greater than</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">ge</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Greater than or equal to</P></TD></TR></TBODY></TABLE><DLCLASS="variablelist"><DTCLASS="term">: shell-command</DT><DDCLASS="listitem"><PCLASS="para">You can specify a command that will be executedwhen the line is matched. The command line is executed by the Bourneshell (/bin/sh). Before the line is executed,the following substitutions are made:</P></DD></DL><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Token</P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Replaced With</P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%A</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The fully qualified domain name (FQDN)of the client (the computer contacting <KBDCLASS="command">sockd</KBD>), if it can be determined;otherwise, the computer's IP address</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%a</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The IP address of the client</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%c</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The direction of the <ICLASS="filename">connection</I>; replacedwith connect if the client is attempting to make an outgoing connection,or <KBDCLASS="command">bind</KBD> if the client is waiting for an incoming connection</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%p</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The process ID of <KBDCLASS="command">sockd</KBD></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%S</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The service name, if it can be determinedfrom the <ICLASS="filename">/etc/services</I> database; otherwise, thedestination port number</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%s</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The destination port number</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%U</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The username reported by <KBDCLASS="command">identd</KBD></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%u</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The username sent by the client program</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%Z</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The FQDN name of the destination host,if it can be determined; otherwise, the computer's IP address</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%z</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The IP address of the destination computer</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">%%</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&quot;%&quot;</P></TD></TR></TBODY></TABLE><PCLASS="para">Obviously, token expansions that requirethat <KBDCLASS="command">sockd</KBD> look up a value in a database (such as %A, %S,and %Z) will take longer to execute than token expansionsthat merely report an IP or port number (such as %a, %sand %z).</P><PCLASS="para">This example command runs <KBDCLASS="command">finger</KBD> todetermine the users on a particular computer, and then sends theresults to the <ICLASS="filename">root</I> account of the computer that is running sockd:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/ucb/finger @%A | /bin/mailx -s 'SOCKS: rejected %u@%A' root</PRE></BLOCKQUOTE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.6.1">22.4.6.1 #NO_IDENTD and #BAD_ID</A></H4><PCLASS="para">In addition to the pattern matching described above, <KBDCLASS="command">sockd</KBD>allows you to specify rules that will match any computer contactingthe <KBDCLASS="command">sockd</KBD> daemon which is not running the <KBDCLASS="command">ident</KBD>protocol, or for which the username returned by the ident protocolis different from the username provided in the initial <KBDCLASS="command">sockd</KBD> contact.These lines have the form:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#NO_IDENTD: command#BAD_ID: command</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.6.2">22.4.6.2 Example /etc/sockd.conf configurationfiles</A></H4><PCLASS="para">Here are some example lines from an <ICLASS="filename">/etc/sockd.conf</I>configuration file. The configuration file is designed to protectan organization that has placed a set of <SPANCLASS="acronym">UNIX</SPAN>workstations on IP subnet 204.99.90.</P><DLCLASS="variablelist"><DTCLASS="term">deny</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">204.99.90.0	255.255.255.0	204.99.90.0	255.255.255.0 </B></P><PCLASS="para">Thisinitial rule disallows access to the internal network from internalcomputers using <SPANCLASS="acronym">SOCKS</SPAN>. (Why tie up the <SPANCLASS="acronym">SOCKS</SPAN>server if you don't need to?)</P></DD><DTCLASS="term">allow</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">0.0.0.0	0.0.0.0	204.99.90.100	255.255.255.255	eq 25 </B></P><PCLASS="para">Allows connections to port 25 (<SPANCLASS="acronym">SMTP</SPAN>) ofthe machine 204.99.90.100. This allows incoming electronic mailto that network.</P></DD><DTCLASS="term">allow</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">204.99.90.100	255.255.255.255	0.0.0.0	0.0.0.0	eq 25 </B></P><PCLASS="para">Allows outgoing connections from the machine 204.99.90.100to port 25 of any computer on the Internet. This rule allows theorganization to send mail to outside computers.</P></DD><DTCLASS="term">allow</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">204.99.90.0	255.255.255.0	0.0.0.0	0.0.0.0 </B></P><PCLASS="para">Allowsoutgoing connections from any host on subnet 204.99.90 to any computeron the Internet. If you have this rule, the previous rule is unnecessary.</P></DD><DTCLASS="term">deny</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">0.0.0.0	0.0.0.0	204.99.90.255	255.255.255.000	eq 23 : \ </B></P><PCLASS="para">safe_finger @%A |/bin/mailx -s 'Telnet denied from %U/%A'root</P></DD></DL><PCLASS="para">Thisrather complex rule denies any attempted login to the organization'sinternal network. In addition to stopping the logins, it also doesa <KBDCLASS="command">finger</KBD> of the computer from where the attempt is coming and sendsemail to the <ICLASS="filename">root</I> account of the computer running <KBDCLASS="command">sockd</KBD>. If theremote machine is running the <KBDCLASS="command">ident</KBD> protocol, the username willbe sent as well.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> Do not use reverse <KBDCLASS="command">finger</KBD> for logging contacts on the<KBDCLASS="command">finger</KBD> port (port 79). Otherwise, a loop may result, with two <KBDCLASS="command">sockd</KBD>daemons continually attempting to <KBDCLASS="command">finger</KBD> each other until they aremanually shut down or the disks fill up.</P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term">deny</DT><DDCLASS="listitem"><PCLASS="para">   <BCLASS="emphasis.bold">0.0.0.0     0.0.0.0     204.99.90.0     255.255.255.0</B></P><PCLASS="para">Denies all other connections to the subnet 204.99.99.Strictly speaking, this rule is not necessary, as a connection thatdoes not specifically match the &quot;allow&quot; rulesabove will be rejected.</P></DD></DL></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.7">22.4.7 SOCKS Client Configuration File: /etc/socks.conf</A></H3><PCLASS="para">Each client that wishes to use the <KBDCLASS="command">sockd</KBD> server mustalso have its own configuration file. The configuration file hasa syntax that is similar to, but slightly different from, the syntaxof the <ICLASS="filename">/etc/sockd</I>.conf file.</P><PCLASS="para">Whena <SPANCLASS="acronym">SOCKS</SPAN> client attempts to make an outgoing connectionto another host on the Internet, or when it calls the <ICLASS="filename">Rbind()</I>function to accept an incoming connection, the <SPANCLASS="acronym">SOCKS</SPAN>library scans the <ICLASS="filename">/etc/socks.conf</I> configurationfile line by line, starting with the first line, until it findsa line that matches the requested connection. The library then performsthe action that is specified in the file.</P><PCLASS="para">Each linein the file can have the following form:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">deny [*=username(s)|filename(s)] destination-address destination-mask  			[operator destination-port] 			[: shell-command]direct [*=username(s)|filename(s)] destination-address destination-mask  			[operator destination-port] 		[: shell-command]sockd [@=serverlist] [*=username(s)|filename(s)]  			destination-address destination-mask  			[operator destination-port] 			[: shell-command]</PRE></BLOCKQUOTE><PCLASS="para">Most of these fields are similar to those in the <ICLASS="filename">/etc/sockd.conf</I>file. The differences are described below:</P><DLCLASS="variablelist"><DTCLASS="term">deny</DT><DDCLASS="listitem"><PCLASS="para">The <KBDCLASS="command">deny</KBD> operator specifies that a <SPANCLASS="acronym">TCP/IP</SPAN>connection that matches the line should be denied. (Remember, eventhough this connection will prevent the <SPANCLASS="acronym">SOCKS</SPAN>package from making a connection to the site in question, the usermay still have the option of connecting to the site using a clientprogram that has not been linked with the <SPANCLASS="acronym">SOCKS</SPAN>library. Thus, the <KBDCLASS="command">deny</KBD> operator running on the client computeris not a substitute for a suitable firewall choke. For more informationon firewalls, see <ACLASS="xref"HREF="ch21_01.htm"TITLE="Firewalls">Chapter 21, <CITECLASS="chapter">Firewalls</CITE></A>.)</P></DD><DTCLASS="term">direct</DT><DDCLASS="listitem"><PCLASS="para">The <KBDCLASS="command">direct</KBD> operator tells the <SPANCLASS="acronym">SOCKS</SPAN>library that the <SPANCLASS="acronym">TCP/IP</SPAN> connection should besent directly through.</P></DD><DTCLASS="term">sockd [@=serverlist]</DT><DDCLASS="listitem"><PCLASS="para">The <KBDCLASS="command">sockd</KBD> operator tells the <SPANCLASS="acronym">SOCKS</SPAN>library that the <SPANCLASS="acronym">TCP/IP</SPAN> connection should besent to the <KBDCLASS="command">sockd</KBD> daemon, which presumably will then pass it throughto the outside network.</P><PCLASS="para">The name of the host that is running the <KBDCLASS="command">sockd</KBD> serveris compiled into the <SPANCLASS="acronym">SOCKS</SPAN> library. It may alsobe specified on the command line, the <SPANCLASS="acronym">SOCKS_SERVER</SPAN>environment variable, or it may be specified in the <ICLASS="filename">/etc/socks.conf</I>configuration file using the @ argument. More than oneserver may be specified by separating the names with a comma, suchas:</P></DD></DL><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sockd @=socks1,socks2,sock3 0.0.0.0 0.0.0.0</PRE></BLOCKQUOTE><PCLASS="para">In <SPANCLASS="acronym">SOCKS</SPAN> version4.2, the servers are tried in the order in which they appear inthe configuration file. Thus, you can specify different serversin different orders on different clients to distribute the load.(A more intelligent approach, though, would be for the servers tobe tried in random order.)</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-22-SECT-4.7.1">22.4.7.1 Example /etc/socks.conf file</A></H4><PCLASS="para">This simple configuration file, for an organization administratingthe subnet 204.90.80, specifies that all connections to organization'sinternal subnet should go direct, while all connections to the outsidenetwork should go through the <SPANCLASS="acronym">SOCKS</SPAN> server:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">direct 204.90.80.0 255.255.255.0sockd @=socks-server 0.0.0.0 0.0.0.0</PRE></BLOCKQUOTE></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_03.htm"TITLE="22.3 tcpwrapper"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.3 tcpwrapper"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 22.5 UDP Relayer"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">22.3 tcpwrapper</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">22.5 UDP Relayer</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>