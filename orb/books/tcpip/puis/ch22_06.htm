<HTML><HEAD><TITLE>[Chapter 22] 22.6 Writing Your Own Wrappers</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:17:21Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch22_01.htm"TITLE="22. Wrappers and Proxies"><LINKREL="prev"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"><LINKREL="next"HREF="ch23_01.htm"TITLE="23. Writing Secure SUID and Network Programs"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.5 UDP Relayer"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 22<BR>Wrappers and Proxies</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch23_01.htm"TITLE="23. Writing Secure SUID and Network Programs"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23. Writing Secure SUID and Network Programs"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-22-SECT-6">22.6 Writing Your Own Wrappers</A></H2><PCLASS="para">In this section,we describe the reasons for writing your own wrappers. In most cases,you won't need to write your own wrappers; you'llfind that the standard <SPANCLASS="acronym">UNIX</SPAN> wrappers will suitmost situations.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-6.1">22.6.1 Wrappers That Provide Temporary Patches</A></H3><PCLASS="para">Atypical case in which you might want to build a wrapper yourselfis when there is a report of a new bug in some existing softwareon your system that is triggered or aggravated when an environmentvariable or input is uncontrolled. By writing a small wrapper, youcan filter what reaches the real program, and you can reset itsenvironment. The software can thus continue to be used until suchtime as your vendor releases a formal patch.</P><PCLASS="para">The codein Example 22-2 is an example of such a wrapper.It was originally written by Wietse Venema and released as partof <SPANCLASS="acronym">CERT</SPAN> Advisory 11, in 1992. An unexpected interactionbetween Sun Microsystems' shared library implementationand various <SPANCLASS="acronym">SUID</SPAN> and <SPANCLASS="acronym">SGID</SPAN>programs could result in unauthorized privileges being granted tousers. The temporary fix to the problem was to put a wrapper programaround susceptible programs (such as the <KBDCLASS="command">sendmail</KBD>program) to filter out environment variables that referenced unauthorizedshared libraries&nbsp;- those variables beginning with the characters&quot;LD_&quot;.</P><DIVCLASS="example"><H4CLASS="example"><ACLASS="title"NAME="PUIS-CHP-22-EX-2">Example 22.2: Wrapper Program for sendmail</A></H4><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/* Start of C program source *//* Change the next line to reflect the full pathname of the file to be protected by the wrapper code   */#define COMMAND &quot;/usr/lib/sendmail.dist&quot;#define VAR_NAME &quot;LD_&quot;main(argc,argv,envp)    int argc;    char **argv;    char **envp;{    register char  **cpp;    register char  **xpp;    register char   *cp;    for (cpp = envp; cp = *cpp;) {        if (strncmp(cp, VAR_NAME, strlen(VAR_NAME))==0) {            for (xpp = cpp; xpp[0] = xpp[1]; xpp++){            }    /* void */ ;        }        else {            cpp++;            }        }    execv(COMMAND, argv);    perror(COMMAND);    exit(1);}    /* End of C program source */</PRE></BLOCKQUOTE></DIV><PCLASS="para">To use this code, you would compile it, movethe original sendmail to a safe location, and then install the wrapperin place of the real program. For the example above, for instance,you would issue the following commands as the superuser:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">make wrapper</B># <BCLASS="emphasis.bold">mv /usr/lib/sendmail /usr/lib/sendmail.dist</B># <BCLASS="emphasis.bold">chmod 100 /usr/lib/sendmail.dist</B># <BCLASS="emphasis.bold">mv ./wrapper /usr/lib/sendmail</B># <BCLASS="emphasis.bold">chown root /usr/lib/sendmail</B># <BCLASS="emphasis.bold">chmod 4711 /usr/lib/sendmail</B></PRE></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-22-SECT-6.2">22.6.2 Wrappers That Provide Extra Logging</A></H3><PCLASS="para">Anothercase in which you might want to build your own wrapper code is whenyou wish to do some extra logging of a program execution, or toperform additional authentication of a user. The use of a wrapperallows you to do this without modifying the underlying code.</P><PCLASS="para">Suppose you suspect some user of your system of misusing thesystem's printer. You wish to gain some additional loginformation to help you determine what is being done. So, you mightuse a wrapper such as the one in <ACLASS="xref"HREF="ch22_06.htm#PUIS-CHP-22-EX-3"TITLE=": A Logging Wrapper">Example 22.3</A>.</P><DIVCLASS="example"><H4CLASS="example"><ACLASS="title"NAME="PUIS-CHP-22-EX-3">Example 22.3: : A Logging Wrapper</A></H4><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/* Start of C program source *//* Change the next line to reflect the full pathnameof the file to be protected by the wrapper code   */#define COMMAND &quot;/usr/lib/.hidden/lpr&quot;#include &lt;syslog.h&gt;main(argc,argv,envp)    int argc;    char **argv, **envp;{    int iloop;    openlog(&quot;xtra-log&quot;, LOG_PID, LOG_LPR);    syslog(LOG_INFO, &quot;lpr invoked with %d arguments&quot;, argc);    for (iloop = 1; i loop &lt; argc; iloop++){        if(strlen(argv[iloop])&gt;1023) argv[iloop][1023]=0;        syslog(LOG_INFO, &quot;arg %d is `%s'&quot;, argv[iloop]);    }    syslog(LOG_INFO, &quot;uid is %d&quot;, getuid());    closelog();    execv(COMMAND, argv);    perror(COMMAND);    exit(1);}    /* End of C program source */</PRE></BLOCKQUOTE></DIV><PCLASS="para">To use this code, you follow the same basicsteps as in the previous example: you compile the code, make thehidden directory, move the original lpr to a safe location, andthen install the wrapper in place of the real program. For thisexample, you might issue the following commands as the superuser:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">make wrapper</B># <BCLASS="emphasis.bold">mkdir /usr/lib/.hidden</B># <BCLASS="emphasis.bold">chmod 700 /usr/lib/.hidden</B># <BCLASS="emphasis.bold">mv /usr/bin/lpr /usr/lib/.hidden/lpr </B># <BCLASS="emphasis.bold">chmod 100 /usr/lib/.hidden/lpr </B># <BCLASS="emphasis.bold"> mv ./wrapper /usr/bin/lpr </B># <BCLASS="emphasis.bold">chown root /usr/bin/lpr </B># <BCLASS="emphasis.bold">chmod 4711 /usr/bin/lpr</B></PRE></BLOCKQUOTE><PCLASS="para">Now, whenever someone executes the lpr command, you will finda copy of the arguments and other useful information in the <ICLASS="filename">syslog</I>.See <ACLASS="xref"HREF="ch10_01.htm"TITLE="Auditing and Logging">Chapter 10, <CITECLASS="chapter">Auditing and Logging</CITE></A>,for more information on syslog and other logging facilities.</P><PCLASS="para">The above example can be modified in various ways to do otherlogging, change directories, or perform other checks and changesthat might be necessary for what you want to do.</P><PCLASS="para">Youcan also adopt the concept we've discussed to put a wrapperaround shell files you want to make <SPANCLASS="acronym">SUID</SPAN>. Aswe noted in <ACLASS="xref"HREF="ch05_01.htm"TITLE="The UNIX Filesystem">Chapter 5, <CITECLASS="chapter">The UNIX Filesystem</CITE></A>, on most older<SPANCLASS="acronym">UNIX</SPAN> systems, <SPANCLASS="acronym">SUID</SPAN> shell filesare a security problem. You can create a wrapper that is <SPANCLASS="acronym">SUID</SPAN>,cleans up the environment (including resetting the <SPANCLASS="acronym">PATH</SPAN>variable, and removing <SPANCLASS="acronym">IFS</SPAN>), and then exec'sthe shell file from a protected directory. In this way, you'llget all of the benefits of a <SPANCLASS="acronym">SUID</SPAN> shell file,and fewer (but, alas, still some) of the dangers.</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 UDP Relayer"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.5 UDP Relayer"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch23_01.htm"TITLE="23. Writing Secure SUID and Network Programs"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23. Writing Secure SUID and Network Programs"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">22.5 UDP Relayer</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">23. Writing Secure SUID and Network Programs</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>