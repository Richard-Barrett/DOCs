<HTML><HEAD><TITLE>[Chapter 23] 23.8 Picking a Random Seed</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:18:00Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch23_01.htm"TITLE="23. Writing Secure SUID and Network Programs"><LINKREL="prev"HREF="ch23_07.htm"TITLE="23.7 UNIX Pseudo-Random Functions"><LINKREL="next"HREF="ch23_09.htm"TITLE="23.9 A Good Random Seed Generator"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_07.htm"TITLE="23.7 UNIX Pseudo-Random Functions"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 23.7 UNIX Pseudo-Random Functions"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 23<BR>Writing Secure SUID and Network Programs</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_09.htm"TITLE="23.9 A Good Random Seed Generator"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23.9 A Good Random Seed Generator"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-23-SECT-7.5">23.8 Picking a Random Seed</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="IDX-643409"></A>Using a good random number generator is easy. Picking a random seed,on the other hand, can be quite difficult. Conceptually, picking arandom number should be easy: pick something that is alwaysdifferent. But in practice, picking a random number-especially onethat will be used as the basis of a cryptographic key-is quitedifficult. The practice is difficult because many things that changeall the time actually change in predictable ways.</P><PCLASS="para">A stunning example ofa poorly chosen seed for a random number generator appeared on thefront page of the New York Times[14]in September 1995. The problem was in <ACLASS="indexterm"NAME="IDX-643410"></A>Netscape Navigator, a popular program for browsing the World Wide Web. Instead of using truly random information for seeding the random number generator, Netscape's programmers used a combination of the current time of day, the PID of the running Netscape program, and the Parent Process ID (PPID). Researchers at the University of California at Berkeley discovered that they could, through a process of trial and error, discover the numbers that any copy of Netscape was using and crack the encrypted messages with relative ease.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] John Markoff, &quot;Security Flaw Is Discovered in Software Used inShopping,&quot; <EMCLASS="emphasis">The New York Times</EM>,September 19, 1995 p.1.</P></BLOCKQUOTE><PCLASS="para">Another example of a badly chosen seed generation routine was used in Kerberos version 4. This routine was based on the time of day XORed with other information. The XOR effectively masked out the other information and resulted in a seed of only 20 bits of predictable value. This reduced the key space from more than 72 quadrillion possible keys to slightly more than one million, thus allowing keys to be guessed in a matter of seconds. When this weakness was discovered at Purdue's COAST Laboratory, conversations with personnel at MIT revealed that they had known for years that this problem existed, but the patch had somehow never beenreleased.</P><PCLASS="para">In the book Network Security, <EMCLASS="emphasis">Private Communication in a PublicWorld,</EM> Kaufman <EMCLASS="emphasis">et al</EM> identify three typical mistakes when pickingrandom-number seeds:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Seeding a random number generator from a limited space.</P><PCLASS="para">If you seed your random number generator with an 8-bit number,your generator only has one of 256 possible initial seeds.  You willonly have 256 possible sequences of random numbers coming from thefunction (even if your generator has 128 bytes of internalstate).</P></LI><LICLASS="listitem"><PCLASS="para">Using a hash value of only the current <ACLASS="indexterm"NAME="IDX-643411"></A>time as a randomseed.</P><PCLASS="para">This practice was the problem with the Netscape security bug. The problem was that even though the UNIX operating system API appears to return the current time to the nearest microsecond, most operating systems have a resolution considerably coarser-usually within one 1/60th of a second or less. As Kaufman et al point out, if a clock has only 1/60th of asecond <ACLASS="indexterm"NAME="IDX-643412"></A><ACLASS="indexterm"NAME="AUTOID-33034"></A>granularity, and the intruder knows to the nearest hour at what time the current time was sampled, then there are only 60x60x60 = 216,000 possible values for the supposedly random seed.</P></LI><LICLASS="listitem"><PCLASS="para">Divulging the seed value itself.</P><PCLASS="para">In one case reported by Kaufman et al, and originally discoveredby Jeff Schiller of MIT, a program used the time of day to choose aper-message encryption key. The problem in this case was that theapplication included the time that the message was generated in itsunencrypted header of the message.</P></LI></OL><PCLASS="para">How do you pick a good random number? Here are someideas:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Use a genuine source of randomness, such as a radioactive source, static on the FM dial, thermal noise, or something similar.</P><PCLASS="para">Measuring the timing of hard disk drives can be another source of randomness, provided that you can access the hardware at a sufficiently low level.</P></LI><LICLASS="listitem"><PCLASS="para">Ask the user to type a set of text, and sample the time between<ACLASS="indexterm"NAME="IDX-643413"></A>keystrokes.</P><PCLASS="para">If you get the same amount of time between two keystrokes, throwout the second value; the user is prob- ably holding down a key andthe key is repeating. (This technique is used by PGP as a source ofrandomness for its random number generator.)</P></LI><LICLASS="listitem"><PCLASS="para">Monitor the user.</P><PCLASS="para">Each time the user presses the keyboard, take the time between the current keypress and the last keypress, add it to the current random number seed, and hash the result with a cryptographic hash function. You can also use mouse movements to add still more randomness.</P></LI><LICLASS="listitem"><PCLASS="para">Monitor the computer.</P><PCLASS="para">Use readily available, constantly changing information, such as the number of virtual memory pages that have been paged in, the status of the network, and so forth.</P></LI></OL><PCLASS="para">In December 1994, Donald Eastlake, Steve Crocker, and JeffreySchiller prepared <ACLASS="indexterm"NAME="IDX-643414"></A>RFC 1750, which made many observations about picking seeds for random number generators. Among them:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Avoid relying on the <ACLASS="indexterm"NAME="IDX-643415"></A><ACLASS="indexterm"NAME="AUTOID-33065"></A>system clock.</P><PCLASS="para">Many system clocks are surprisingly non-random. Many clocks which claim to provide accuracy actually don't, or they don't provide good accuracy all the time.</P></LI><LICLASS="listitem"><PCLASS="para">Don't use <ACLASS="indexterm"NAME="IDX-643416"></A>Ethernet addresses or hardware serial numbers.</P><PCLASS="para">Such numbers are usually &quot;heavily structured&quot; and have &quot;heavilystructured subfields.&quot; As a result, one could easily try all of thepossible combinations, or guess the value based on the date ofmanufacture.</P></LI><LICLASS="listitem"><PCLASS="para">Beware of using information such as the time of the arrival ofnetwork packets.</P><PCLASS="para">Such external sources of randomness could be manipulated by anadversary.</P></LI><LICLASS="listitem"><PCLASS="para">Don't use random selection from a large database (such as a CD-ROM) as a source of randomness.</P><PCLASS="para">The reason, according to RFC 1750, is that your adversary may have access to the same database. The database may also contain unnoticed structure.</P></LI><LICLASS="listitem"><PCLASS="para">Consider using analog input devices already present on yoursystem.</P><PCLASS="para">For example, RFC 1750 suggests using the <ICLASS="filename">/dev/audio</I> device present on some UNIX workstations as a source of random numbers. The stream is further compressed to remove systematic skew. For example:</P></LI></OL><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">cat /dev/audio | compress - &gt;random-bit-stream</B></PRE></BLOCKQUOTE></P><PCLASS="para">RFC 1750 advises that the microphone not be connected to theaudio input jack, so that the <ACLASS="indexterm"NAME="IDX-643417"></A><ACLASS="indexterm"NAME="AUTOID-33092"></A><ICLASS="filename">/dev/audio</I> device will pick up randomelectrical noise. This rule may not be true on all hardwareplatforms. You should check your hardware with the microphone turnedon and with no microphone connected to see which way gives a &quot;better&quot;source of random numbers.</P><ACLASS="indexterm"NAME="AUTOID-33095"></A></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_07.htm"TITLE="23.7 UNIX Pseudo-Random Functions"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 23.7 UNIX Pseudo-Random Functions"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_09.htm"TITLE="23.9 A Good Random Seed Generator"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23.9 A Good Random Seed Generator"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">23.7 UNIX Pseudo-Random Functions</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">23.9 A Good Random Seed Generator</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>