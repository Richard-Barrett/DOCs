<HTML><HEAD><TITLE>[Chapter 24] 24.4 Cleaning Up After the Intruder</TITLE><METANAME="DC.title"CONTENT="Practical UNIX &amp; Internet Security"><METANAME="DC.creator"CONTENT="Simson Garfinkel &amp; Gene Spafford"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T00:19:08Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-148-8"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch24_01.htm"TITLE="24. Discovering a  Break-in"><LINKREL="prev"HREF="ch24_03.htm"TITLE="24.3 The Log Files: Discovering an Intruder's Tracks"><LINKREL="next"HREF="ch24_05.htm"TITLE="24.5 An Example"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Practical UNIX &amp; Internet Security"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="Practical UNIX &amp; Internet Security"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_03.htm"TITLE="24.3 The Log Files: Discovering an Intruder's Tracks"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.3 The Log Files: Discovering an Intruder's Tracks"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 24<BR>Discovering a  Break-in</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_05.htm"TITLE="24.5 An Example"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.5 An Example"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4">24.4 Cleaning Up After the Intruder</A></H2><PCLASS="para">If your intruder gained superuser access, or access to anotherprivileged account such as <KBDCLASS="command">uucp</KBD>, he may have modified your systemto make it easier for him to break in again in the future. In particular,your intruder may have:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Created a new account</P></LI><LICLASS="listitem"><PCLASS="para">Changed the password on an existing account</P></LI><LICLASS="listitem"><PCLASS="para">Changed the protections on certain files or devices</P></LI><LICLASS="listitem"><PCLASS="para">Created <SPANCLASS="acronym">SUID</SPAN> or <SPANCLASS="acronym">SGID</SPAN>programs</P></LI><LICLASS="listitem"><PCLASS="para">Replaced or modified system programs</P></LI><LICLASS="listitem"><PCLASS="para">Installed a special alias in the mail system torun a program</P></LI><LICLASS="listitem"><PCLASS="para">Added new features to your news or <SPANCLASS="acronym">UUCP</SPAN>system</P></LI><LICLASS="listitem"><PCLASS="para">Installed a password sniffer</P></LI><LICLASS="listitem"><PCLASS="para">Stolen the password file for later cracking</P></LI></UL><PCLASS="para">If the intruder committed either of the last two misdeeds,he'll now have access to a legitimate account and willbe able to get back in no matter what other precautions are taken.You'll have to change all of the passwords on the system.</P><PCLASS="para">After a successful break-in, you must perform a careful auditto determine the extent of the damage. Depending on the nature ofthe break-in, you'll have to examine your entire system.You may need to also examine other systems on your local net, orpossibly the entire network (including routers and other networkdevices).</P><PCLASS="para">Note that <SPANCLASS="acronym">COPS</SPAN> and Tiger are helpful recoverytools, as are many commercial security toolkits, especially becausethey provide an automatic check of the suggestions we make in thischapter. Remember, though, that they too could be compromised, sofetch a new copy and work from there. <SPANCLASS="acronym">COPS</SPAN> andTiger assume the integrity of system executables, such as <KBDCLASS="command">ls</KBD> and<ICLASS="filename">find.</I> We think they are best used in conjunctionwith an integrity checker such as Tripwire. (See <ACLASS="xref"HREF="appe_01.htm"TITLE="Electronic Resources">Appendix E, <CITECLASS="appendix">Electronic Resources</CITE></A>for how to obtain all of these packages.)</P><PCLASS="para">The remainder of this chapter discusses in detail how to findout what an intruder may have done and how you should clean up afterwards.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1">24.4.1 New Accounts</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33738"></A><ACLASS="indexterm"NAME="AUTOID-33741"></A><ACLASS="indexterm"NAME="AUTOID-33745"></A><ACLASS="indexterm"NAME="AUTOID-33747"></A>After a break-in, scan the <ICLASS="filename">/etc/passwd</I>file for newly created accounts. If you have made a backup copyof <ICLASS="filename">/etc/passwd</I>, use diff to compare the two files.But don't let the automated check be a substitute for goingthrough the <ICLASS="filename">/etc/passwd</I> file by hand, becausethe intruder might have also modified your copy of the file or the<ICLASS="filename">diff </I>program. (This is the reason it is advantageousto keep a second copy of the <ICLASS="filename">/etc/passwd</I> fileand all of your comparison tools on removable media like a floppydisk.)</P><PCLASS="para">Delete any accounts that have been created by an intruder.You may wish to make a paper record of an account, before deletingit in case you wish to prosecute the intruder (assuming that youever find the villain).</P><PCLASS="para">Also, be sure to check that every line of the <ICLASS="filename">/etc/passwd</I>file is in the proper format, and that no <SPANCLASS="acronym">UID</SPAN>or password fields have been changed to unauthorized values. Remember,simply adding an extra colon to the <ICLASS="filename">/etc/passwd</I>entry for root can do the same amount of damage as removing thesuperuser's password entirely!</P><PCLASS="para">The following <KBDCLASS="command">awk</KBD> command will print <ICLASS="filename">/etc/passwd</I>entries that do not have seven fields, that specify the superuser,or that do not have a password:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">cat-passwd | awk -F: 'NF != 7 || $3 == 0 || $2 == &quot;&quot; { print $1 &quot; &quot; $2 &quot; &quot; $3}'</B> root xq7Xm0Tv 0 johnson f3V6Wv/u 0 sidney 104 #</PRE></BLOCKQUOTE><PCLASS="para">This <KBDCLASS="command">awk</KBD> command sets the field separator to the colon (:),which matches the format of the <ICLASS="filename">/etc/passwd</I> file.The <KBDCLASS="command">awk</KBD> command then prints out the first three fields (username,password, and <SPANCLASS="acronym">UID</SPAN>) of any line in the <ICLASS="filename">/etc/passwd</I>file that does not have seven fields, has a <SPANCLASS="acronym">UID</SPAN>of 0, or has no password.</P><PCLASS="para">In this example, the user <ICLASS="systemitem.username">johnson</I> has had her <SPANCLASS="acronym">UID</SPAN>changed to 0, making her account an alias for the superuser, andthe user <BCLASS="emphasis.bold">sidney</B> has had his password removed.</P><PCLASS="para">This automated check is much more reliable than a visual inspection,but make sure that the script that you use to run this automatedcheck hasn't been corrupted by an attacker. One approachis to type the <KBDCLASS="command">awk</KBD> command each time you use it instead of embeddingit in a shell script.[3]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] Or use Tripwire.</P></BLOCKQUOTE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.1">24.4.1.1 Changes in file contents</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33783"></A>An intruderwho gains superuser privileges can change any file on your system.Although you should make a thorough inventory of your computer'sentire filesystem, you should look specifically for any changesto the system that affect security. For example, an intruder mayhave inserted trap doors or logic bombs to do damage at a laterpoint in time.</P><PCLASS="para">One way to easily locate changes to system programs is touse the checklists described in <ACLASS="xref"HREF="ch05_01.htm"TITLE="The UNIX Filesystem">Chapter 5, <CITECLASS="chapter">The UNIX Filesystem</CITE></A>.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.2">24.4.1.2 Changes in file and directory protections</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33791"></A><ACLASS="indexterm"NAME="AUTOID-33794"></A>After a break-in, review the protectionof every critical file on your system. Intruders who gain superuserprivileges may change the protections of critical files to makeit easier for them to regain superuser access in the future. Forexample, an intruder might have changed the mode of the <ICLASS="filename">/bin</I>directory to 777 to make it easier to modify system software inthe future, or altered the protections on <ICLASS="filename">/dev/kmem</I>so as to be able to modify system calls directly using a symbolicdebugger.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.3">24.4.1.3 New SUID and SGID files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33802"></A>Computercrackers who gain superuser access frequently create <SPANCLASS="acronym">SUID</SPAN>and <SPANCLASS="acronym">SGID</SPAN> files. After a break-in, scan your systemto make sure that new <SPANCLASS="acronym">SUID</SPAN> files have not beencreated. See the section <ACLASS="xref"HREF="ch05_05.htm"TITLE="SUID">Section 5.5, "SUID"</A> for information about how to dothis.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.4">24.4.1.4 Changes in .rhosts files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33812"></A>An intruder may have created new <ICLASS="filename">.rhosts</I>files in your users' home directories, or may have modifiedexisting <ICLASS="filename">.rhosts</I> files. (The <ICLASS="filename">.rhosts</I> file allows other users onthe network to log into your account without providing a password.For more information, see <ACLASS="xref"HREF="ch16_01.htm"TITLE="TCP/IP Networks">Chapter 16</A>.) Aftera break-in, tell your users to check their <ICLASS="filename">.rhosts</I> files to makesure that none of these files have been modified.</P><PCLASS="para">Chapter&nbsp;16 also contains a shell script that youcan use to get a list of every <ICLASS="filename">.rhosts</I> file on the system. Aftera break-in, you may wish to delete every <ICLASS="filename">.rhosts</I> file rather thantake the chance that a file modified by the attacker won'tbe caught by the account's rightful owner. After all, the<ICLASS="filename">.rhosts</I> file is simply a convenience, and your legitimate userscan recreate their <ICLASS="filename">.rhosts</I> files as necessary.[4]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] Atsome sites, this may be a drastic measure, and might make some ofyour users very angry, so think it over carefully before takingthis step. Alternatively, you could rename each <ICLASS="filename">.rhosts</I>file to <ICLASS="filename">rhosts.old</I> so that the file will notbe used, and so that your users do not need to retype the entirefile's contents.</P></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.5">24.4.1.5 Changes to the <ACLASS="indexterm"NAME="AUTOID-33831"></A><ICLASS="filename">/etc/hosts.equiv</I>file</A></H4><PCLASS="para">An intruder may have added more machines to your <ICLASS="filename">/etc/hosts.equiv</I>file, so be sure to check for changes to this file. Also, checkyour <ICLASS="filename">/etc/netgroups</I> and <ICLASS="filename">/etc/exports</I>files (or equivalent) if you are running <SPANCLASS="acronym">NIS</SPAN>or <SPANCLASS="acronym">NFS</SPAN>.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.6">24.4.1.6 Changes to startup files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33843"></A><ACLASS="indexterm"NAME="AUTOID-33846"></A><ACLASS="indexterm"NAME="AUTOID-33848"></A><ACLASS="indexterm"NAME="AUTOID-33850"></A>Anintruder may have modified the contents of dot (.) files in yourusers' home directories. Instruct all of your users tocheck these files and report anything suspicious. You can forceyour users to check the files by renaming them to names like <ICLASS="filename">login.old</I>,<ICLASS="filename">cshrc.old</I>, and <ICLASS="filename">profile.old</I>. Be sure to check the versions of thosefiles belonging to the root user, and also check the <ACLASS="indexterm"NAME="AUTOID-33855"></A><ACLASS="indexterm"NAME="AUTOID-33858"></A><ICLASS="filename">/etc/profile</I>file.</P><PCLASS="para">If you are using <ACLASS="indexterm"NAME="AUTOID-33862"></A><ACLASS="indexterm"NAME="AUTOID-33865"></A><KBDCLASS="command">sendmail</KBD>,the attacker may have created or modified the <ICLASS="filename">.forward</I> files sothat they run programs when mail is received. This aspect is especiallycritical on nonuser accounts such as <KBDCLASS="command">ftp</KBD> and <KBDCLASS="command">uucp</KBD>.</P><PCLASS="para">If you know the precise time that the intruder was loggedin, you can list all of the dot files in users' home directories,sort the list by time of day, and then check them for changes. Asimple shell script to use is shown below:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/ksh  # Search for .files in home directories  for user in $(cat-passwd | /bin/awk -F: &quot;length($6) &gt; 0 {print $6}&quot;) do  &nbsp;&nbsp;&nbsp; for name in $user/.* &nbsp;&nbsp;&nbsp; do&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [[ $name == $user/.. ]] &amp;&amp; continue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [[ -f $name ]] &amp;&amp; print &quot;$name&quot;&nbsp;&nbsp;&nbsp; done done | xargs ls -ltd </PRE></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33874"></A><ACLASS="indexterm"NAME="AUTOID-33877"></A><ACLASS="indexterm"NAME="AUTOID-33880"></A>However, using timestampsmay not detect all modifications, as discussed at the end of thischapter. The <KBDCLASS="command">-c</KBD> and <KBDCLASS="command">-l</KBD> options to the <KBDCLASS="command">ls</KBD> commandshould be used to also check for modifications to permission settings,and to determine if the mtime was altered to hide a modification.</P><PCLASS="para">Another approach is to sweep the entire filesystem with the<ICLASS="filename">find </I> command and observe what files and directories wereaccessed around the time of the intrusion. This may give you someclues as to what was done. For instance, if your compiler, loader,and libraries all show access times within a few seconds of eachother, you can conclude that the intruder compiled something.</P><PCLASS="para">If you decide to take this approach, we suggest that you firstremount all your filesystems as read-only so that your examinationsdon't alter the saved filesystem dates and times.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.7">24.4.1.7 Hidden files and directories</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33891"></A><ACLASS="indexterm"NAME="AUTOID-33894"></A><ACLASS="indexterm"NAME="AUTOID-33897"></A>The intruder may have created a &quot;hiddendirectory&quot; on your computer, and be using it as a repositoryfor stolen information or for programs that break security.</P><PCLASS="para">On older <SPANCLASS="acronym">UNIX</SPAN> systems, one common trickfor creating a hidden directory was to unlink (as <ICLASS="filename">root</I>) the &quot;..&quot;directory in a subdirectory and then create a new one. The contentsof such a hidden directory are overlooked by programs such as <KBDCLASS="command">find</KBD>that search the filesystem for special files. Modern versions of<SPANCLASS="acronym">UNIX</SPAN>, however, detect such hidden directoriesas inconsistencies when you run the <ACLASS="indexterm"NAME="AUTOID-33905"></A><ACLASS="indexterm"NAME="AUTOID-33908"></A><ICLASS="filename">/etc/fsck</I>program. For this reason, be sure to run <KBDCLASS="command">fsck</KBD> on each filesystemas part of your routine security monitoring.</P><PCLASS="para">On some HP-UX systems, intruders have stored their tools andfiles in a <ACLASS="indexterm"NAME="AUTOID-33913"></A><ACLASS="indexterm"NAME="AUTOID-33915"></A><ACLASS="indexterm"NAME="AUTOID-33918"></A><ACLASS="indexterm"NAME="AUTOID-33921"></A><ACLASS="indexterm"NAME="AUTOID-33923"></A><ACLASS="indexterm"NAME="AUTOID-33926"></A><SPANCLASS="acronym">CDF</SPAN>(Context Dependent File) directory. On these systems, be sure touse the <KBDCLASS="command">-H</KBD> option to <KBDCLASS="command">find</KBD> and <KBDCLASS="command">ls</KBD> when you are looking for filesthat are out of place.</P><PCLASS="para">Nowadays, intruders often hide their files in directorieswith names that are a little difficult to discover or enter on thecommand line. This way, a novice system administrator who discoversthe hidden directory will be unlikely to figure out how to accessits contents. Filenames that are difficult to discover or enterinclude &quot;..&quot; (dot dot space), control characters,backspaces, or other special characters.</P><PCLASS="para">You can often discover hidden directories easily because theycause results that differ from those of normal directories. Forexample:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose% <BCLASS="emphasis.bold">ls -l </B>drwxr-xr-x 1 orpheus 1024 Jul 17 11:55 foobar prose% <BCLASS="emphasis.bold">cd foobar </B>foobar: No such file or directory prose%</PRE></BLOCKQUOTE><PCLASS="para">In this case, the real name of the directory is <ICLASS="filename">foobar</I>, witha space following the letter <ICLASS="filename">r</I>. The easy way of entering filenameslike this one is to use the shell's wildcard capability:The wildcard <ICLASS="filename">*ob*</I> will match the directory <ICLASS="filename">foobar</I>,no matter how many spaces or other characters it has in it, as longthe letters <ICLASS="filename">o</I> and <ICLASS="filename">b</I> are adjacent.</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prose% <BCLASS="emphasis.bold">ls -l </B>drwxr-xr-x 1 orpheus 1024 Jul 17 11:55 foobar prose% <BCLASS="emphasis.bold">cd *ob* prose%</B></PRE></BLOCKQUOTE><PCLASS="para">If you suspect that a filename has embedded control characters,you can use the <ACLASS="indexterm"NAME="AUTOID-33949"></A><KBDCLASS="command">cat-v</KBD> command to determine what they are. For example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">ls -l </B>total 1 -rw-r--r-- 1 john 21 Mar 10 23:38 bogus?file % <BCLASS="emphasis.bold">echo * | cat -v </B>bogus^Yfile %</PRE></BLOCKQUOTE><PCLASS="para">In this example, the file <ICLASS="filename">bogus?file</I> actually has a <SPANCLASS="acronym">CTRL</SPAN>-Ycharacter between the letters &quot;<ICLASS="filename">bogus</I>&quot; and theletters <ICLASS="filename">&quot;file&quot;</I>. Some versions of the <KBDCLASS="command">ls</KBD> commandprint control characters as question marks (?). To see what thecontrol character actually was, however, you must send the raw filenameto the <KBDCLASS="command">cat</KBD> command, which is accomplished with the shell <KBDCLASS="command">echo</KBD>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33965"></A><ACLASS="indexterm"NAME="AUTOID-33967"></A>If youare using the 93 version of the Korn shell, you can also list allthe files in the local directory in a readable manner. This approachworks even when your ls command has been replaced with an alteredversion:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">printf $'entry: %'' .* * </B>entry: . entry: .. entry: $'..\n' entry: $'bogus\031file' entry: temp0001 entry: temp0002 $</PRE></BLOCKQUOTE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="PUIS-CHP-24-SECT-4.1.8">24.4.1.8 Unowned files</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33974"></A><ACLASS="indexterm"NAME="AUTOID-33976"></A><ACLASS="indexterm"NAME="AUTOID-33979"></A><ACLASS="indexterm"NAME="AUTOID-33982"></A>Sometimes attackers leave files in thefilesystem that are not owned by any user or group&nbsp;- thatis, the files have a <SPANCLASS="acronym">UID</SPAN> or <SPANCLASS="acronym">GID</SPAN>that does not correspond to any entries in the <ICLASS="filename">/etc/passwd</I>and <ICLASS="filename">/etc/group</I> files. This can happen if the attackercreated an account and some files, and then deleted the account&nbsp;- leavingthe files. Alternatively, the attacker might have been modifyingthe raw inodes on a disk and changed a <SPANCLASS="acronym">UID</SPAN> byaccident.</P><PCLASS="para">You can search for these files with the <KBDCLASS="command">find</KBD> command, as shownin the following example:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># find / -nouser -o -nogroup -print</B></PRE></BLOCKQUOTE><PCLASS="para">Remember, if you are using <SPANCLASS="acronym">NFS</SPAN>, you shouldinstead run the following <KBDCLASS="command">find</KBD> command on each server:</P><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold"># find / \( -local -o -prune \) -nouser -o -nogroup -print</B></PRE></BLOCKQUOTE><PCLASS="para">You might also notice unowned files on your system if youdelete a user from the <ICLASS="filename">/etc/passwd</I> file but leavea few of that user's files on the system. It is a goodidea to scan for unowned files on a regular basis, copy them totape (in case they're ever needed), and then delete themfrom your system.</P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_03.htm"TITLE="24.3 The Log Files: Discovering an Intruder's Tracks"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.3 The Log Files: Discovering an Intruder's Tracks"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Practical UNIX &amp; Internet Security"><IMGSRC="../gifs/txthome.gif"ALT="Practical UNIX &amp; Internet Security"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_05.htm"TITLE="24.5 An Example"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.5 An Example"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">24.3 The Log Files: Discovering an Intruder's Tracks</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">24.5 An Example</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>