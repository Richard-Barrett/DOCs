<HTML><HEAD><TITLE>[Chapter 10] 10.2 Rule Set 3</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:36:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. Rule Set 3"><LINKREL="prev"HREF="ch10_01.htm"TITLE="10.1 Why Preprocess?"><LINKREL="next"HREF="ch10_03.htm"TITLE="10.3 Missing Addresses"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_01.htm"TITLE="10.1 Why Preprocess?"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.1 Why Preprocess?"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>Rule Set 3</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_03.htm"TITLE="10.3 Missing Addresses"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.3 Missing Addresses"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-10-SECT-2">10.2 Rule Set 3</A></H2><PCLASS="para">In its initial form, rule set 3 looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">S3 # preprocessing for all rule setsR$* &lt; $* &gt; $*   $2             basic RFC822 parsing</PRE></BLOCKQUOTE></P><PCLASS="para">As with rule set 0, the definition of rule set 3begins with the <CODECLASS="literal">S</CODE> configurationcommand. The <CODECLASS="literal">S</CODE> character must begin a line, and the 3 mustfollow with no intervening nonspace characters.</P><PCLASS="para">The only rule in rule set 3 is composed of three parts, eachseparated from the others by one or more tab characters:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$* &lt; $* &gt; $*   $2             basic RFC822 parsing <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^">           <IMGSRC="../chars/uarr.gif"ALT="-^">  <IMGSRC="../chars/uarr.gif"ALT="-^">       <IMGSRC="../chars/uarr.gif"ALT="-^">      <IMGSRC="../chars/uarr.gif"ALT="-^"></I> <ICLASS="lineannotation">LHS        tabs  RHS   tabs     comment</I></PRE></BLOCKQUOTE></P><PCLASS="para">Note that we will now separate the tokens in the LHS with <EMCLASS="emphasis">spaces</EM> (not tabs)to make the LHS easier to understand. Spaces always separate tokens, yet are neverthemselves tokens.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-10-SECT-2-1">10.2.1 The LHS</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5617"></A>The wildcard operator in this LHS, the <CODECLASS="literal">$*</CODE>, is different from the <CODECLASS="literal">$+</CODE>wildcard operator that you saw in rule set 0. Recall that the <CODECLASS="literal">$+</CODE> wildcard operator matches one or more tokens in the workspace. To review, consider the LHS rule:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$+ @ $+</PRE></BLOCKQUOTE></P><PCLASS="para">This LHS easily matches an address like <EMCLASS="emphasis">you@here.us.edu</EM> inthe workspace:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">workspace                     LHS</I>you               $+       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match one or more              </I>@                 @        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly              </I>here              $+       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match one              </I>.                          <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">     or more</I>us.edu</PRE></BLOCKQUOTE></P><PCLASS="para">This same LHS, however, does not match an address like <EMCLASS="emphasis">@here.us.edu</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">workspace                  LHS</I>@               $+       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match one              </I>here                     <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">     or more              </I>.us.edu                             @        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly, fails!</I>                $+</PRE></BLOCKQUOTE></P><PCLASS="para">Because the <CODECLASS="literal">$+</CODE> wildcard operator needs to match one or moretokens, it fails when there is nothing in front of the <CODECLASS="literal">@</CODE>.</P><PCLASS="para">The <CODECLASS="literal">$*</CODE> wildcard operator is just like the <CODECLASS="literal">$+</CODE> wildcard operator, exceptthat it <EMCLASS="emphasis">will</EM> match nothing (zero tokens). If the LHS had used <CODECLASS="literal">$*</CODE>instead of <CODECLASS="literal">$+</CODE>, an address like <EMCLASS="emphasis">@here.us.edu</EM> wouldbe matched:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">workspace                   LHS</I>                 $*       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero or more (matches zero)              </I>@                @        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly              </I>here             $*       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero              </I>.                         <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">     or more</I>us.edu</PRE></BLOCKQUOTE></P><PCLASS="para">The LHS in rule set 3 matches anything or nothing,provided that there is a pair of angle brackets in the workspace somewhere:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$* &lt; $* &gt; $*   $2             basic RFC822 parsing</PRE></BLOCKQUOTE></P><PCLASS="para">For example, consider an address that might be given to <EMCLASS="emphasis">sendmail</EM>by your MUA:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Your Fullname &lt;you@here.us.edu&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">This address is tokenized and placed into the workspace. That workspaceis then compared to the LHS:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">workspace                   LHS</I>Your             $*       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero              </I>Fullname                  <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">     or more              </I>&lt;                &lt;        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly              </I>you              $*       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero              </I>@                         <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">     or more</I>here.us.edu&gt;                &gt;        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly</I>                 $*       <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero or more</I></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-10-SECT-2-2">10.2.2 The RHS</A></H3><PCLASS="para">Recall that the objective of rule set 3 is to strip everythingbut the address part (the text between the angle brackets).That stripping is accomplished by rewriting the workspace using the <CODECLASS="literal">$2</CODE> positional operator in the RHS:<ACLASS="indexterm"NAME="AUTOID-5682"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$* &lt; $* &gt; $*   $2             basic RFC822 parsing                <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>                <ICLASS="lineannotation">strip all but the address</I></PRE></BLOCKQUOTE></P><PCLASS="para">Remember, when a $<CODECLASS="replaceable"><I>digit</I></CODE> appears in the RHS,that digit is used as a count into the wildcard operators ofthe LHS.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$* &lt; $* &gt; $*<IMGSRC="../chars/uarr.gif"ALT="-^">    <IMGSRC="../chars/uarr.gif"ALT="-^">    <IMGSRC="../chars/uarr.gif"ALT="-^"><EMCLASS="emphasis">$1   $2   $3</EM></PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="literal">$1</CODE> refers to the first <CODECLASS="literal">$*</CODE>,<CODECLASS="literal">$2</CODE> refers to the second, and<CODECLASS="literal">$3</CODE> to the third.Comparing this ordering of operators to the test address, you see</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">workspace            LHS                                                RHS</I>Your         $*    <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero</I>          $1       Fullname           <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">      or more              </I>&lt;            &lt;     <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly              </I>you          $*    <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero</I>          $2         @                  <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v">      or more</I>here.us.edu&gt;            &gt;     <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match exactly</I>             $*    <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> match zero or more   $3</I></PRE></BLOCKQUOTE></P><PCLASS="para">This illustrates that the middle (second) <CODECLASS="literal">$*</CODE> matchesthe <EMCLASS="emphasis">you@here.us.edu</EM> part of the workspace. When theRHS rewrites the workspace, it does so by copying the tokens matchedby the second wildcard operator (specified in the RHSwith the <CODECLASS="literal">$2</CODE> positional operator).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-10-SECT-2-3">10.2.3 Test Rule Set 3</A></H3><PCLASS="para">Take a few moments to experiment.Observe the transformation of a user-specified addressinto one that <EMCLASS="emphasis">sendmail</EM> can use. Add the following new rule set3 to the rule sets in the <EMCLASS="emphasis">client.cf</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>S3 # preprocessing for all rule sets                                  </B></CODE><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> new</I><CODECLASS="userinput"><B>R$* &lt; $* &gt; $*       $2                      basic RFC822 parsing      </B></CODE><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> new</I></PRE></BLOCKQUOTE></P><PCLASS="para">Now run <EMCLASS="emphasis">sendmail</EM> again. Up to now, you have been testing rule set 0,so you have specified a 0 following the <CODECLASS="literal">&gt;</CODE> prompt. Instead, you will now specify a <CODECLASS="literal">3</CODE> because you are testing rule set 3:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>./sendmail -Cclient.cf -bt</B></CODE>ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)Enter &lt;ruleset&gt; &lt;address&gt;&gt; <CODECLASS="userinput"><B>3 Your Fullname &lt;you@here&gt;</B></CODE>rewrite: ruleset  3   input: Your Fullname &lt; you @ here &gt;rewrite: ruleset  3 returns: you @ here</PRE></BLOCKQUOTE></P><PCLASS="para">As expected,the new rule causes everything except the &quot;good&quot; email address,the address between the angle brackets, to be thrown away.</P><PCLASS="para">Before we improve rule set 3,take a few moments to experiment. Experiment by puttingthe <CODECLASS="literal">fullname</CODE> last. Try omitting the email address between the anglebrackets. Try nesting angle brackets in an address, like <CODECLASS="literal">&lt;a&lt;b&gt;c&gt;</CODE>.</P><PCLASS="para">As a closing note, recall that <EMCLASS="emphasis">sendmail</EM> does the minimum matching possible whencomparing operators to the workspace. Although <CODECLASS="literal">$*</CODE>, for example,can match zero or more, it prefers to match zero if possible and, if not,to match the fewest tokens possible. A LHS of <CODECLASS="literal">$*@$+</CODE>, for example,will match as shown in<ACLASS="xref"HREF="ch10_02.htm#SML2-CH-10-TAB-0"TITLE="What $* in $*@$+ Matches for Different Addresses">Table 10.1</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="SML2-CH-10-TAB-0">Table 10.1: What $* in $*@$+ Matches for Different Addresses</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Address</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">$* matches</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">@</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">$+</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">a.b.c@d.e</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">a.b.c</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">d.e</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">a@b@c</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">a</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">b@c</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@b@c</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">b@c</TD></TR></TBODY></TABLE><PCLASS="para">Expecting operators to match more than they do can cause you tomisunderstand the effect of rules.</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_01.htm"TITLE="10.1 Why Preprocess?"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.1 Why Preprocess?"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_03.htm"TITLE="10.3 Missing Addresses"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.3 Missing Addresses"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.1 Why Preprocess?</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">10.3 Missing Addresses</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>