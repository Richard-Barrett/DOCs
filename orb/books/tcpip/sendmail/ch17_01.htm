<HTML><HEAD><TITLE>[Chapter 17] The Hub's Complex Rules</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T18:39:51Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part01.htm"TITLE="I. A Tutorial"><LINKREL="prev"HREF="ch16_06.htm"TITLE="16.6 Things to Try"><LINKREL="next"HREF="ch17_02.htm"TITLE="17.2 Rule Set 96"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_06.htm"TITLE="16.6 Things to Try"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.6 Things to Try"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Rule Set 96"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.2 Rule Set 96"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="SML2-CH-17">17. The Hub's Complex Rules</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="sect1"HREF="#SML2-CH-17-SECT-1"TITLE="17.1 Rule Set 3">Rule Set 3</A><BR><ACLASS="sect1"HREF="ch17_02.htm"TITLE="17.2 Rule Set 96">Rule Set 96</A><BR><ACLASS="sect1"HREF="ch17_03.htm"TITLE="17.3 Rule Set 0">Rule Set 0</A><BR><ACLASS="sect1"HREF="ch17_04.htm"TITLE="17.4 Rule Set 4">Rule Set 4</A><BR><ACLASS="sect1"HREF="ch17_05.htm"TITLE="17.5 Things to Try">Things to Try</A></P><P></P></DIV><PCLASS="para"></P><PCLASS="para">In this chapter we look at someof the rules that are needed to make a hub function.Until now we have focused on the client form of the configurationfile. Since the role of the client is narrow (to forward all mailto the hub), its configuration file is simple.But a hub can be a very busy machine, receiving and sendingmail for many client machines, and because its role is broad,its configuration file is complex.<ACLASS="indexterm"NAME="SML2-CH-17-IX-RULES-MAIL-HUB"></A><ACLASS="indexterm"NAME="SML2-CH-17-IX-HUBS-RULES-FOR"></A></P><PCLASS="para">Fundamentally, all configuration files, simple and complex, tend to look pretty much the same.Both begin by selecting delivery agents using rule set 3 and 0.Both then process recipient or sender addresses with rule sets 3, 1 or 2,R= or S=, then 4, but the hub's rules are more complex:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The hub needs to recognize more than simple Internet-style addresses. It may need to handle UUCP-style addresses orreverse-style addresses such as those used in parts of the United Kingdom.It needs rules to convert all such addresses into a form that itcan understand.</P></LI><LICLASS="listitem"><PCLASS="para">The hub needs not only to forward mail (like the client), but also to deliver it to the mail spool directory, to pipe through programs, and to form mailing lists.</P></LI><LICLASS="listitem"><PCLASS="para">The hub needs to handle all error conditions gracefully and to emithelpful and clear error messages.</P></LI><LICLASS="listitem"><PCLASS="para">The hub needs to know how to connect to many different kinds ofmachines worldwide.</P></LI></UL><PCLASS="para">In this chapter we explore high points of the V8 configuration files. Alongthe way, we also mix in rules contributed by others to help illustratedifficult concepts.&#13;</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-17-SECT-1">17.1 Rule Set 3</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-17-IX-RULE-SETS-RULE-SET-3"></A><ACLASS="indexterm"NAME="AUTOID-9027"></A><ACLASS="indexterm"NAME="AUTOID-9030"></A>Recall that all addresses are first processed by rule set 3. Its jobis to find an address among other clutter and to normalize alladdresses into a form that other rules can recognize.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-17-SECT-1-1">17.1.1 Find the Address</A></H3><PCLASS="para">Recall that addresses can legally assume two forms:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><EMCLASS="emphasis">address </EM>(<EMCLASS="emphasis">comment</EM>)<EMCLASS="emphasis">comment </EM>&lt;<EMCLASS="emphasis">address</EM>&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">In the first form, <EMCLASS="emphasis">sendmail</EM> strips (and saves) the parenthesized comment, then gives the naked address to rule set 3.In the second form, <EMCLASS="emphasis">sendmail</EM> passes the entire address,angle brackets and all, to rule set 3.</P><PCLASS="para">The rules to strip the angle brackets look like this:[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] These ingenious rules were designed by LeRoy Eide, with surroundingcommentary inspired by John Halleck.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">S3R$*         $: &lt;$1&gt;      Guarantee at least one &lt;&gt; pairR$+ &lt;$*&gt;       &lt;$2&gt;      Remove everything before the last &lt;R&lt;$*&gt; $+    $: &lt;$1&gt;      Remove everything after the first &gt;R&lt;&gt;         $@ &lt;@&gt;       Null address to @R&lt;$*&gt;       $:  $1       Strip remaining &lt;&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">In the following,we discuss each of these rules individually.&#13;</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-17-SECT-1-1-1">17.1.1.1 At least one &lt;&gt; pair</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9054"></A><ACLASS="indexterm"NAME="AUTOID-9056"></A>To find the address in addresses of the form</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><EMCLASS="emphasis">comment </EM>&lt;<EMCLASS="emphasis">address</EM>&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">we must use rules to search for the <CODECLASS="literal">&lt;</CODE> and <CODECLASS="literal">&gt;</CODE>characters. Designing rules that do this is easier if we canbe sure that every address has at least one surroundingangle bracket pair:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$*        $: &lt;$1&gt;      Guarantee at least one &lt;&gt; pair</PRE></BLOCKQUOTE></P><PCLASS="para">This rule places angle brackets around all addresses, even thosethat already have them. Note that the <CODECLASS="literal">$:</CODE> that prefixes theRHS causes it to be executed only once.</P><PCLASS="para">A side benefit of this rule is that it also surrounds an empty (null) addresswith angle brackets. This allows old versions of <EMCLASS="emphasis">sendmail</EM> todetect null addresses without needing to use the new (beginning with V8.7<EMCLASS="emphasis">sendmail</EM>) <CODECLASS="literal">$@</CODE> LHS operator. We'll cover this in more detail soon.&#13;</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-17-SECT-1-1-2">17.1.1.2 Strip to left of &lt;</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9076"></A><ACLASS="indexterm"NAME="AUTOID-9079"></A><ACLASS="indexterm"NAME="AUTOID-9082"></A>A common problem is that of finding the address when it is deeplynested in many pairs of angle brackets. Consider an address likethis:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;&lt;&lt;&lt;address&gt;&gt;&gt;&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Such addresses are not common but do appear every now and thenas a result of overzealous users or MUAs. Another problemaddress looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">comment &lt;phone&gt; &lt;address&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, just noting the outermost pair of angle brackets is not sufficientbecause the rightmost pair contains the address.</P><PCLASS="para">The process of finding the rightmost innermost pair of angle bracketsrequires two rules:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+ &lt;$*&gt;       &lt;$2&gt;      Remove everything before the last &lt;R&lt;$*&gt; $+    $: &lt;$1&gt;      Remove everything after the first &gt;</PRE></BLOCKQUOTE></P><PCLASS="para">The first recursively discards everything (including angle brackets)to the left of the rightmost balanced <CODECLASS="literal">&lt;</CODE> character.The second truncates to the correct address by discardingeverything following the innermost remaining angle bracket pair.</P><PCLASS="para">The behavior of these two rules may not be obvious. To better understandthem, first create a small configuration file (called <EMCLASS="emphasis">x.cf</EM>)that includes the following two lines:[2]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Note that when a configuration file lacks an <CODECLASS="literal">S</CODE> command (todeclare a rule set), all rules become part of rule set 0.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+ &lt;$*&gt;       &lt;$2&gt;R&lt;$*&gt; $+    $: &lt;$1&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Then run <EMCLASS="emphasis">sendmail</EM> in rule-testing mode with a commandlike this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -Cx.cf -bt</B></CODE>ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)Enter &lt;ruleset&gt; &lt;address&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Enter a series of addresses, one at a time, to see howeach is handled. Be as extreme as you want when nesting anglebrackets:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>0 &lt;&lt;&lt;&lt;&lt;a&gt;&gt;&gt;&gt;&gt;</B></CODE>rewrite: ruleset  0   input: &lt; &lt; &lt; &lt; &lt; a &gt; &gt; &gt; &gt; &gt;rewrite: ruleset  0 returns: &lt; a &gt;&gt; <CODECLASS="userinput"><B>0 &lt;a&gt; &lt;b&gt;</B></CODE>rewrite: ruleset  0   input: &lt; a &gt; &lt; b &gt;rewrite: ruleset  0 returns: &lt; b &gt;&gt; <CODECLASS="userinput"><B>0 &lt;&lt;a&gt; &lt;b&gt;&gt;</B></CODE>rewrite: ruleset  0   input: &lt; &lt; a &gt; &lt; b &gt; &gt;rewrite: ruleset  0 returns: &lt; b &gt;&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">If you want to see, step by step, how each rule works,run <EMCLASS="emphasis">sendmail</EM> again, this timewith the <CODECLASS="literal">-d21.12</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-72"TITLE="">Section 37.5.72, -d21.12</A>).With that switch, the first example above will print like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>0 &lt;&lt;&lt;&lt;&lt;a&gt;&gt;&gt;&gt;&gt;</B></CODE>rewrite: ruleset  0   input: &lt; &lt; &lt; &lt; &lt; a &gt; &gt; &gt; &gt; &gt;---trying rule: $+ &lt; $* &gt;---rule matches: &lt; $2 &gt;rewritten as: &lt; &lt; &lt; &lt; a &gt; &gt; &gt; &gt; &gt;---trying rule: $+ &lt; $* &gt;---rule matches: &lt; $2 &gt;rewritten as: &lt; &lt; &lt; a &gt; &gt; &gt; &gt; &gt;---trying rule: $+ &lt; $* &gt;---rule matches: &lt; $2 &gt;rewritten as: &lt; &lt; a &gt; &gt; &gt; &gt; &gt;---trying rule: $+ &lt; $* &gt;---rule matches: &lt; $2 &gt;rewritten as: &lt; a &gt; &gt; &gt; &gt; &gt;---trying rule: $+ &lt; $* &gt;--- rule fails---trying rule: &lt; $* &gt; $+---rule matches: $: &lt; $1 &gt;rewritten as: &lt; a &gt;rewrite: ruleset  0 returns: &lt; a &gt;</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-17-SECT-1-1-3">17.1.1.3 Handle null address</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9125"></A><ACLASS="indexterm"NAME="AUTOID-9128"></A><ACLASS="indexterm"NAME="AUTOID-9131"></A><ACLASS="indexterm"NAME="AUTOID-9134"></A>The fourth rule in rule set 3 is designed to convert a null &nbsp;- pty)address into the magic symbol <CODECLASS="literal">@</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R&lt;&gt;        $@ &lt;@&gt;       Null address to @</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9140"></A>The <CODECLASS="literal">@</CODE> symbol is surrounded by angle brackets (&quot;focused&quot;).It needs to be focused because later rules expect all addressesto have the host part in this form. Still later, the angle brackets will be removed,and the <CODECLASS="literal">@</CODE> will be discarded by rule set 4.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9145"></A><ACLASS="indexterm"NAME="AUTOID-9148"></A>The <CODECLASS="literal">$@</CODE> prefix to the RHS causes all further rules in ruleset 3 to be skipped. The focused address <CODECLASS="literal">&lt;@&gt;</CODE> is returned.If <CODECLASS="literal">&lt;@&gt;</CODE> were to be handled by the next rule, its anglebrackets would be stripped, and this is not what we desire.&#13;</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-17-SECT-1-1-4">17.1.1.4 Remove remaining angle brackets</A></H4><PCLASS="para">The last of our five preliminary rules simply removes the anglebrackets from whatever remains:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R&lt;$*&gt;      $:  $1       Strip remaining &lt;&gt;</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-17-SECT-1-2">17.1.2 Normalize the Address</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9163"></A>The rules that we have just looked at isolatethe address from other possible information andleave it in its initial form, not surrounded by angle brackets.The rest of the rules in rule set 3 are designed to highlight thehost part of any address. They assume that all addressesare composed of a user and a host part.&#13;</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-17-SECT-1-2-1">17.1.2.1 A rule to handle List:;</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9168"></A><ACLASS="indexterm"NAME="AUTOID-9171"></A><ACLASS="indexterm"NAME="AUTOID-9173"></A>RFC822 allows addresses of the form </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>name : address(s)</I></CODE> ;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>name</I></CODE> is the name of a mailing list thatcan contain multiple words and spaces, for example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Undisclosed Recipients :;</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9183"></A>The colon and semicolon are mandatory and may contain one or more addresses between them, which may themselves be lists.[3]Rule set 3 needs to check for the presence of an empty list (one withno addresses between the colon and semicolon). The following rule does just that andturns the empty list into the magic token <CODECLASS="literal">&lt;@&gt;</CODE>:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] Which tends to complicate the algorithm.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$* :;      $@ $1 :; &lt;@&gt;       Handle empty List:;</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-17-SECT-1-3">17.1.3 Internet Addresses</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9194"></A><ACLASS="indexterm"NAME="AUTOID-9196"></A>After lists have been disposed of, domain-typeaddresses need to be handled. Domain type addresses are ofthe form <EMCLASS="emphasis">user@host</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+ @ $+                $: $1 &lt;@$2&gt;                 Focus on hostR$+ &lt; $+ @ $+ &gt;            $1 $2 &lt;@$3&gt;              move gaze rightR$* &lt; @ $* : $* &gt; $*       $1 &lt;@ $2$3&gt; $4           strip colonsR$+ &lt; @ $+ &gt;            $@ $&gt;96 $1&lt;@$2&gt;             localize and canonicalize</PRE></BLOCKQUOTE></P><PCLASS="para">The first rule detects addresses of the form <EMCLASS="emphasis">something</EM>@<EMCLASS="emphasis">something</EM>and rewrites them in such a way that the second <EMCLASS="emphasis">something</EM> becomesthe focused host part. </P><PCLASS="para">The second rule handles addresses withmultiple <CODECLASS="literal">@</CODE> symbols (such as <EMCLASS="emphasis">a@b@c</EM>). It recursivelymoves the focus to the rightmost host.</P><PCLASS="para">The third rule recursively removes anycolons from the resulting host part as a &quot;sanity check.&quot;This is necessary becausestrange forms of route addresses may have bypassed earlier rules(see the <CODECLASS="literal">DontPruneRoutes</CODE> option in <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-20"TITLE="">Section 34.8.20, DontPruneRoutes (R)</A>,how route addresses are handled in rules in <ACLASS="xref"HREF="ch29_04.htm#SML2-CH-29-SECT-4-3"TITLE="Handling Routing Addresses">Section 29.4.3, "Handling Routing Addresses"</A>,and the <CODECLASS="literal">F=d</CODE> delivery agent flag in <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-16"TITLE="">Section 30.8.16, F=d</A>), ora colon may be left over from the <CODECLASS="literal">mailertable</CODE> feature(see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-14"TITLE="">Section 19.6.14, FEATURE(mailertable)</A>).</P><PCLASS="para">The fourth rule passes any addresses that have been successfully focusedto rule set 96 (which will be discussed in <ACLASS="xref"HREF="ch17_02.htm"TITLE="Rule Set 96">Section 17.2, "Rule Set 96"</A>)so that the local host can be detected andthe host part canonicalized. The result from rule set 96is returned.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-17-SECT-1-4">17.1.4 UUCP Addresses</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9221"></A><ACLASS="indexterm"NAME="AUTOID-9224"></A><ACLASS="indexterm"NAME="AUTOID-9226"></A>UUCP addresses contain one or more exclamation points (such as <EMCLASS="emphasis">lady!sonya!george</EM>).They fall intotwo categories: those that are delivered locally by <EMCLASS="emphasis">uux</EM>(8) andthose that are forwarded to another host.The rules to handle them look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$- ! $+          $@ $&gt;96 $2 &lt;@ $1.UUCP&gt;      host!user uucpR$+ . $- ! $+     $@ $&gt;96 $3 &lt;@ $1.$2&gt;        Domain style uucpR$+ ! $+          $@ $&gt;96 $2 &lt;@ $1.UUCP&gt;      Bang path uucp</PRE></BLOCKQUOTE></P><PCLASS="para">The first rule looks for a single token hostname followed byan exclamation point. A single token host always becomes the nexthost in line for delivery. The .UUCP suffix added in the RHS allowsrule set 0 to recognize this address as one requiring <EMCLASS="emphasis">uux</EM>(8) delivery.</P><PCLASS="para">The second rule looks for a dot in the hostname part of the address.A dot indicates the new-style, domain-based hostname, such as<EMCLASS="emphasis">host.domain!user</EM>.Such names are assumed to have MX records pointing to service providers and are rewritten into the normal <EMCLASS="emphasis">user@host.domain</EM> form.</P><PCLASS="para">The third rule catches any remaining addresses with exclamationpoints in them. The host to the left of the leftmost exclamation point is takenas the next hop in the UUCP path for delivery. A .UUCP suffix is added to that host, justas in the first rule.</P><PCLASS="para">All three rules exit (the leading <CODECLASS="literal">$@</CODE> in the RHS) after the address is normalized by rule set 96 (which leaves .UUCPsuffixed addresses unchanged). They are then handed as is to ruleset 0, which selects a delivery agent (usually <EMCLASS="emphasis">uux</EM>(8)).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-17-SECT-1-5">17.1.5 The % Hack</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9245"></A><ACLASS="indexterm"NAME="AUTOID-9247"></A><ACLASS="indexterm"NAME="AUTOID-9250"></A><ACLASS="indexterm"NAME="AUTOID-9253"></A>A common technique in mail debugging is to send mail to one hostand have that host deliver it to another. Often, this is done by sending themail something like:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mail </B></CODE><EMCLASS="emphasis">user%second@first</EM></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the intention is send mail to <EMCLASS="emphasis">first</EM>and from there to <EMCLASS="emphasis">usr@second</EM>. This type of addressing is nonstandard.Essentially, it is route addressing with <CODECLASS="literal">%</CODE> characterssubstituted for <CODECLASS="literal">@</CODE> characters. Enabling this behavior requiresthree rules:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$*%$*             $1 @ $2                  Convert all % to @R$*@$*@$*          $1 % $2 @ $3             Undo all but last @R$*@$*          $@ $&gt;96 $1 &lt;@$2&gt;            Focus on rightmost</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the first rule changes all the percent characters into<CODECLASS="literal">@</CODE> characters. The intention is to focus on the rightmosthost, whether it is prefixed with an <CODECLASS="literal">%</CODE> or an <CODECLASS="literal">@</CODE>.The second rule changes all but the rightmost <CODECLASS="literal">@</CODE> back intopercent characters even if they were originally <CODECLASS="literal">@</CODE> characters.The last rule takes the result and focuses on the rightmosthost, just as was done in the domain form of addressing above.<ACLASS="indexterm"NAME="AUTOID-9272"></A>&#13;</P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_06.htm"TITLE="16.6 Things to Try"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.6 Things to Try"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_02.htm"TITLE="17.2 Rule Set 96"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.2 Rule Set 96"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">16.6 Things to Try</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.2 Rule Set 96</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>