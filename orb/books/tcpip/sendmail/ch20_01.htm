<HTML><HEAD><TITLE>[Chapter 20] The checkcompat() Cookbook</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:24:05Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part02.htm"TITLE="II. Build and Install"><LINKREL="prev"HREF="ch19_06.htm"TITLE="19.6 Alphabetized m4 Macros"><LINKREL="next"HREF="ch20_02.htm"TITLE="20.2 The Cookbook"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_06.htm"TITLE="19.6 Alphabetized m4 Macros"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.6 Alphabetized m4 Macros"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 20</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_02.htm"TITLE="20.2 The Cookbook"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 20.2 The Cookbook"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="SML2-CH-20">20. The checkcompat() Cookbook</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="sect1"HREF="#SML2-CH-20-SECT-1"TITLE="20.1 How checkcompat() Works">How checkcompat() Works</A><BR><ACLASS="sect1"HREF="ch20_02.htm"TITLE="20.2 The Cookbook">The Cookbook</A><BR><ACLASS="sect1"HREF="ch20_03.htm"TITLE="20.3 Alphabetized V8.8 Subroutines">Alphabetized V8.8 Subroutines</A></P><P></P></DIV><PCLASS="para"></P><PCLASS="para">Inside <EMCLASS="emphasis">sendmail</EM> is the often overlooked<EMCLASS="emphasis">checkcompat</EM>() routine. It has existed since Version 3 andis intended to allow the site administrator to accept, reject,and log mail delivery attempts.Among its uses, and those we will illustrate, are the following:<ACLASS="indexterm"NAME="SML2-CH-20-IX-CHECKCOMPAT-ROUTINE"></A></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Refuse to act as a mail gateway. Reject any mail that is bothfrom and to any outside address.</P></LI><LICLASS="listitem"><PCLASS="para">Limit the size of guest messages. Screen messages based onuser <EMCLASS="emphasis">uid</EM>, and reject those for the class of userswho are guests when the message is over a specified limitin bytes.</P></LI><LICLASS="listitem"><PCLASS="para">Verify <EMCLASS="emphasis">identd</EM>(8) information. Compare the host informationin <CODECLASS="literal">$s</CODE> to that in <CODECLASS="literal">$_</CODE> and log a warning if theydiffer.</P></LI><LICLASS="listitem"><PCLASS="para">Prune <CODECLASS="literal">Received:</CODE> headers at a firewall. Make all outgoingmail appear fresh as it exits the internal network via a firewall.</P></LI><LICLASS="listitem"><PCLASS="para">Reject mail from spamming or mail-bombing sites. Look up thesender in an external database and bounce the message if thesender is listed as &quot;bad.&quot;</P></LI></UL><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() routine is located in the file<EMCLASS="emphasis">src/conf.c</EM>.That file contains comments describing one way to code <EMCLASS="emphasis">checkcompat</EM>().In this chapter we show you other ways to code it.</P><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() routine is inherently &quot;internal,&quot;meaning that it must understand internal data structures that maychange. [1]Since you are modifying source code, you have tobe prepared to read source code.In this chapter we offer examples of ways to use <EMCLASS="emphasis">checkcompat</EM>().Be aware that they are examples only, and you will need C programmingskill to extend them to real-world situations.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] V8.8 <EMCLASS="emphasis">sendmail</EM> also offers a <CODECLASS="literal">check_compat</CODE> rule set (see<ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-4"TITLE="The check_compat Rule Set">Section 29.10.4, "The check_compat Rule Set"</A>) that can perform some of the<EMCLASS="emphasis">checkcompat</EM>() routine's functionality at therule set level. This is one way to avoid having to program in the C language.</P></BLOCKQUOTE><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() routine is called for every delivery attemptto every recipient. When designing a <EMCLASS="emphasis">checkcompat</EM>() routineof your own, be aware that a cascade of errors may propagate ifyou are not careful with your design. Logging a warning based on thesender, for example, may result in multiple warnings when there aremultiple recipients.&#13;</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-20-SECT-1">20.1 How checkcompat() Works</A></H2><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> prepares to deliver mail, it first checks thesize of the mail message and rejects (bounces) it if it islarger than the limit imposed by the <CODECLASS="literal">M=</CODE>delivery agent equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-7"TITLE="">Section 30.4.7, M=</A>).V8.8 <EMCLASS="emphasis">sendmail</EM> then calls the <CODECLASS="literal">check_compat</CODE> rule set(see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-4"TITLE="The check_compat Rule Set">Section 29.10.4</A>).Next, all versions of <EMCLASS="emphasis">sendmail</EM> call the <EMCLASS="emphasis">checkcompat</EM>()routine.</P><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() routine lies in a unique position withinthe <EMCLASS="emphasis">sendmail</EM> code. It is the one place where both the sender andrecipient addresses are available at the same time. Since it precedesactual delivery, all the information needed for delivery is availableto you for checking.</P><PCLASS="para">If <EMCLASS="emphasis">checkcompat</EM>() returns EX_OK,as defined in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>, the mail message is consideredokay and delivered.Otherwise, the message is bounced. If you wish the message to be requeued instead of bounced, youcan return EX_TEMPFAIL.</P><PCLASS="para">Again note that the <EMCLASS="emphasis">checkcompat</EM>() routineis called once for each recipient.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-20-SECT-1-1">20.1.1 Arguments Passed to checkcompat()</A></H3><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() is found in the C language sourcefile <EMCLASS="emphasis">src/conf.c</EM>.Inside that file you will find it declared like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">checkcompat(to, e)        register ADDRESS *to;        register ENVELOPE *e;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">to</CODE> is a pointer to a structure of <EMCLASS="emphasis">typedef</EM>ADDRESS that contains information about the recipient.And <CODECLASS="literal">e</CODE> is a pointer to a structure(actually a linked list of structures) of <EMCLASS="emphasis">typedef</EM>ENVELOPE that contains information about the current envelope.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16064"></A>The members of the <CODECLASS="literal">ADDRESS *to</CODE> structure are shown in<ACLASS="xref"HREF="ch20_01.htm#SML2-CH-20-TAB-0"TITLE="ADDRESS *to Members">Table 20.1</A>.Note that these members are correct for V8.8 <EMCLASS="emphasis">sendmail</EM> only.Also note that the table shows only those members that may beuseful in a <EMCLASS="emphasis">checkcompat</EM>() routine (see <EMCLASS="emphasis">sendmail.h</EM>for the other members of <CODECLASS="literal">*to</CODE>).</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="SML2-CH-20-TAB-0">Table 20.1: ADDRESS *to Members</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Type</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Member</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_paddr</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The address in a form suitable for printing</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_user</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user part (<CODECLASS="literal">$:</CODE>) from rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6, "Rule Set 0"</A>)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_ruser</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The login name for this user, if known</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_host</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The host part (<CODECLASS="literal">$@</CODE>) from rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6</A>)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">struct mailer *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_mailer</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The delivery agent (<CODECLASS="literal">$#</CODE>) from rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6</A>)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">u_long</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_flags</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Status flags (see <ACLASS="xref"HREF="ch37_03.htm#SML2-CH-37-SECT-3-1"TITLE="The Output Produced by printaddr()">Section 37.3.1, "The Output Produced by printaddr()"</A> in <ACLASS="xref"HREF="ch37_03.htm#SML2-CH-37-SECT-3-1"TITLE="The Output Produced by printaddr()">Section 37.3.1</A>)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">uid_t</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_uid</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The <EMCLASS="emphasis">uid</EM> of the <CODECLASS="literal">q_ruser</CODE>, if known</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">gid_t</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_gid</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The <EMCLASS="emphasis">gid</EM> of the <CODECLASS="literal">q_ruser</CODE>, if known</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_home</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The home directory (path), if delivery is local</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_fullname</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The (gecos) full name of <CODECLASS="literal">q_ruser</CODE>, if known</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">struct address *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_next</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Link to the next ADDRESS in the chain</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">struct address *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_alias</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The alias that yielded this address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">char *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">q_owner</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The owner of <CODECLASS="literal">q_alias</CODE></TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16174"></A>The members of the <CODECLASS="literal">ENVELOPE *e</CODE> structure are shown in<ACLASS="xref"HREF="ch20_01.htm#SML2-CH-20-TAB-1"TITLE="ENVELOPE *e Members">Table 20.2</A>.Note that these members are correct for V8.8 <EMCLASS="emphasis">sendmail</EM> only.Also note that the table shows only those members that may beuseful in a <EMCLASS="emphasis">checkcompat</EM>() routine (see <EMCLASS="emphasis">sendmail.h</EM>for other members of <CODECLASS="literal">*e</CODE>).</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="SML2-CH-20-TAB-1">Table 20.2: ENVELOPE *e Members</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Type</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Member</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">HDR *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_header</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Linked list of headers</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">time_t</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_ctime</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Time message first placed into the queue</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">ADDRESS</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_from</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The sender</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">ADDRESS *</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_sendqueue</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Linked list of recipients</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">long</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_msgsize</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Size of the message in bytes</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">long</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_flags</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Envelope flags (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-TAB-2"TITLE="Hexadecimal Envelope Flags">Table 37.3</A> in <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-12"TITLE="">Section 37.5.12, -d2.1</A>)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">int</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_nrcpts</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Number of recipients</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">short</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">e_hopcount</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The hop count for the message</TD></TR></TBODY></TABLE><PCLASS="para">The <EMCLASS="emphasis">checkcompat</EM>() routine is a powerful internal hook inside<EMCLASS="emphasis">sendmail</EM>. It is so internal and powerful, in fact, that ifyou are truly clever, you can even use <EMCLASS="emphasis">checkcompat</EM>() tomodify rewrite rules at runtime (scary but possible).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-20-SECT-1-2">20.1.2 Global Variables</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16248"></A><ACLASS="indexterm"NAME="AUTOID-16250"></A>Over 100 global variables are used by V8.8 <EMCLASS="emphasis">sendmail</EM>. They are alllisted in <EMCLASS="emphasis">sendmail.h</EM> and <EMCLASS="emphasis">conf.c</EM> with &quot;lite&quot; comments.Global variables store information such as <EMCLASS="emphasis">sendmail</EM>'s option values,file descriptor values, macro values, class lists,and database access information.Any can be modified inside <EMCLASS="emphasis">checkcompat</EM>(), but beforeattempting to do so, study the <EMCLASS="emphasis">sendmail</EM> C source codeto anticipate any unexpected side effects.</P><PCLASS="para">In general, you can use almost any of the global variableswhen designing your own <EMCLASS="emphasis">checkcompat</EM>() routine. The four most interesting are the following:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">RealHostAddr</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16267"></A><ACLASS="indexterm"NAME="AUTOID-16269"></A><ACLASS="indexterm"NAME="AUTOID-16272"></A>The IP address of the sending host.This is a union of several <EMCLASS="emphasis">sockaddr_</EM>types depending on your selection of protocol type.This can be zero for locally submitted mail.</P></DD><DTCLASS="term"><CODECLASS="literal">RealHostName</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16281"></A><ACLASS="indexterm"NAME="AUTOID-16283"></A>A string containing the definitive canonical name of the sending host.If it can't be resolved to a name, it will containthe host's IP number in text form, surrounded by square brackets.</P></DD><DTCLASS="term"><CODECLASS="literal">LogLevel</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16291"></A>This variable determines the amount of logging that <EMCLASS="emphasis">sendmail</EM> does.It is initially set with the <CODECLASS="literal">LogLevel</CODE> (<CODECLASS="literal">L</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-33"TITLE="">Section 34.8.33, LogLevel (L)</A>).You might want to use <EMCLASS="emphasis">checkcompat</EM>() to detect questionable connections and, if any are detected, to increase the value in <CODECLASS="literal">LogLevel</CODE> to 12. This will causeboth sides of every subsequent SMTP connection to be logged.</P></DD><DTCLASS="term"><CODECLASS="literal">MatchGecos</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16305"></A>Whether or not unmatched local looking names are looked up in the <EMCLASS="emphasis">passwd</EM>(5)file is under the control of the <CODECLASS="literal">MatchGECOS</CODE> (<CODECLASS="literal">G</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-34"TITLE="">Section 34.8.34, MatchGECOS (G)</A>). Because this kind of lookup is expensive, youmight wish to enable it only during nonbusiness hours. One way to do thiswould be by modifying the <CODECLASS="literal">MatchGecos</CODE> variable inside <EMCLASS="emphasis">checkcompat</EM>().&#13;</P></DD></DL></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_06.htm"TITLE="19.6 Alphabetized m4 Macros"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.6 Alphabetized m4 Macros"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_02.htm"TITLE="20.2 The Cookbook"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 20.2 The Cookbook"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">19.6 Alphabetized m4 Macros</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">20.2 The Cookbook</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>