<HTML><HEAD><TITLE>[Chapter 21] 21.3 Set Up MX Records</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:28:23Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch21_01.htm"TITLE="21. DNS and sendmail"><LINKREL="prev"HREF="ch21_02.htm"TITLE="21.2 How sendmail Uses DNS"><LINKREL="next"HREF="ch21_04.htm"TITLE="21.4 How to Use nslookup"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_02.htm"TITLE="21.2 How sendmail Uses DNS"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 21.2 How sendmail Uses DNS"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 21<BR>DNS and sendmail</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_04.htm"TITLE="21.4 How to Use nslookup"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 21.4 How to Use nslookup"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-21-SECT-3">21.3 Set Up MX Records</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-21-IX-MX-RECORDS"></A><ACLASS="indexterm"NAME="AUTOID-17502"></A>An MX record is simply the method used by DNSto route mail bound for one machine to another instead.An MX record is created by a single line in one of your <EMCLASS="emphasis">named</EM>(8) files:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA    IN      MX 10 hostB</PRE></BLOCKQUOTE></P><PCLASS="para">This line says that all mail destined for <CODECLASS="literal">hostA</CODE> in yourdomain should instead be delivered to <CODECLASS="literal">hostB</CODE> in your domain.The <CODECLASS="literal">IN</CODE> says that this is an Internet-type record,and the <CODECLASS="literal">10</CODE> is the cost[11]for using this MX record.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] Technically, this field is called the preference. We use costto clarify that lower values are preferable, whereas preference wronglyconnotes that higher values are preferable.<ACLASS="indexterm"NAME="AUTOID-17516"></A><ACLASS="indexterm"NAME="AUTOID-17519"></A><ACLASS="indexterm"NAME="AUTOID-17522"></A></P></BLOCKQUOTE><PCLASS="para">An MX record may point to another host or to the original host:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA    IN      MX 0 hostA</PRE></BLOCKQUOTE></P><PCLASS="para">This line says that mail for <CODECLASS="literal">hostA</CODE> will be deliveredto <CODECLASS="literal">hostA</CODE>. Such records may seem redundant, but theyare not. We'll cover why shortly.</P><PCLASS="para">A host can have multiple MX records (one pointing to itself or not):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA   IN      MX 0  hostA        IN      MX 10 hostB</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">hostA</CODE> has the lowest cost (<CODECLASS="literal">0</CODE>versus <CODECLASS="literal">10</CODE> for <CODECLASS="literal">hostB</CODE>), sodelivery will be attempted to itself first. If <CODECLASS="literal">hostA</CODE> isdown, delivery will be attempted to <CODECLASS="literal">hostB</CODE> host instead.</P><PCLASS="para">Usually, MX records point to hosts inside the same domain. Thereforemanaging them does not require the cooperation of others.But it is legal for MX records to point to hosts in differentdomains:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA   IN      MX 0  hostA        IN      MX 10  host.other.domain.</PRE></BLOCKQUOTE></P><PCLASS="para">Here, you must contact the administrator at <CODECLASS="literal">other.domain</CODE>and obtain permission before creating this MX record. We coverthis concept in more detail when we discuss disaster preparationlater in this chapter.</P><PCLASS="para">Although MX records are usually straightforward, there can bea few problems associated with them.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-1">21.3.1 MX Must Point to an A Record</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17550"></A>The A record for a host is a line that gives the host's IPaddress.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostC  IN     A   123.45.67.8</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">hostC</CODE> is the host's name. The <CODECLASS="literal">IN</CODE> says thisis an Internet-type record. The <CODECLASS="literal">A</CODE> marks this as an Arecord. The <CODECLASS="literal">123.45.67.8</CODE> is the IP addressfor the host <CODECLASS="literal">hostC</CODE>.</P><PCLASS="para">An MX record must point to a hostname that has an A record.To illustrate, consider the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA  IN     MX  10 hostB           <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> illegal</I>       IN     MX  20 hostChostB  IN     MX  10 hostChostC  IN     A   123.45.67.8</PRE></BLOCKQUOTE></P><PCLASS="para">Note that <CODECLASS="literal">hostB</CODE> lacks an A record but <CODECLASS="literal">hostC</CODE> has one. It is illegal to point an MX recordat a host that lacks an A record.Therefore the first line above is illegal, whereas the second lineis legal.</P><PCLASS="para">Although such a mistake is difficult to make when maintaining yourown domain tables, it can easily happen to you if you rely ona name server in someone else's domain, as shown:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA    IN     MX  10 mail.other.domain.</PRE></BLOCKQUOTE></P><PCLASS="para">The other administrator might, for example, retire the machine<CODECLASS="literal">mail</CODE> and replace its A record with an MX record thatpoints to a different machine.Unless you are notified of the change, your MX recordwill suddenly become illegal.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-2">21.3.2 MX to CNAME Causes Extra Lookups</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17575"></A><ACLASS="indexterm"NAME="AUTOID-17577"></A>The <EMCLASS="emphasis">sendmail</EM> program is frequently more forgiving than otherMTAs because it accepts an MX record that points to a CNAME record.The presumption is that, eventually, the CNAME will correctly point to an Arecord.But beware, this kind of indirection can cost additional DNS lookups.Consider this example of an exceptionally bad setup:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA    IN     MX  10 mailhubmailhub  IN     CNAME  nfsmastnfsmast  IN     CNAME  hostBhostB    IN     A 123.45.67.89</PRE></BLOCKQUOTE></P><PCLASS="para">First, <EMCLASS="emphasis">sendmail</EM> looks up <CODECLASS="literal">hostA</CODE> and gets an MX recordpointing to <CODECLASS="literal">mailhub</CODE>. Since there is only a single MX record,<EMCLASS="emphasis">sendmail</EM> considers <CODECLASS="literal">mailhub</CODE> to be official. Next, <CODECLASS="literal">mailhub</CODE>is looked up to find an A record (IP address), but instead a CNAME (<CODECLASS="literal">nfsmast</CODE>) is returned. Now <EMCLASS="emphasis">sendmail</EM> mustlook up the CNAME <CODECLASS="literal">nfsmast</CODE> to find its A record.But again a CNAME is returned instead of an A record. So <EMCLASS="emphasis">sendmail</EM>must again look for an A record (this time with <CODECLASS="literal">hostB</CODE>).Finally, <EMCLASS="emphasis">sendmail</EM> succeeds by finding the A record for <CODECLASS="literal">hostB</CODE>,but only after a few too many lookups.</P><PCLASS="para">The correct way to form the above DNS file entries is as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA    IN     MX  10 hostBmailhub  IN     CNAME  hostBnfsmast  IN     CNAME  hostBhostB    IN     A 123.45.67.89</PRE></BLOCKQUOTE></P><PCLASS="para">In general, try to construct DNS records in such a way that the fewest lookupsare required to resolve any A or MX records.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-3">21.3.3 MX Records Are Nonrecursive</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17604"></A>Consider the following MX setup, which causes all mail for <CODECLASS="literal">hostA</CODE>to be sent to <CODECLASS="literal">hostB</CODE> and all mail for <CODECLASS="literal">hostB</CODE>to be sent to <CODECLASS="literal">hostB</CODE>, or to <CODECLASS="literal">hostC</CODE> if <CODECLASS="literal">hostB</CODE> is down:[12]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] We are fudging for the sake of simplicity. Here, we assume that all the hostsalso have A records.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA   IN     MX  10 hostBhostB   IN     MX  10 hostB        IN     MX  20 hostC</PRE></BLOCKQUOTE></P><PCLASS="para">One might expect <EMCLASS="emphasis">sendmail</EM> to be smart and deliver mailfor <CODECLASS="literal">hostA</CODE> to <CODECLASS="literal">hostC</CODE> if <CODECLASS="literal">hostB</CODE> is down.But <EMCLASS="emphasis">sendmail</EM> won't do that.It does not try to recursively look for additional MX records.If it did, it could get hopelessly entangled in MX loops.Consider the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA   IN     MX  10 hostBhostB   IN     MX  10 hostB        IN     MX  20 hostChostC   IN     MX  10 hostA     <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> potential loop</I></PRE></BLOCKQUOTE></P><PCLASS="para">If your intention is to have <CODECLASS="literal">hostA</CODE> MX to two other hosts,then you must state that explicitly:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostA   IN     MX  10 hostB        IN     MX  20 hostChostB   IN     MX  10 hostB        IN     MX  20 hostC</PRE></BLOCKQUOTE></P><PCLASS="para">Another reason <EMCLASS="emphasis">sendmail</EM> refuses to follow MX records beyondthe target host is that costs in such a situation are undefined.Consider the example with the potential loop above. What is the costof <CODECLASS="literal">hostA</CODE> when MX'd by <CODECLASS="literal">hostB</CODE> to <CODECLASS="literal">hostC</CODE>?  Should it be theminimum of 10, the maximum of 20, the mean of 15, or the sum of 30?&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-4">21.3.4 Wildcard MX Records</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17637"></A><ACLASS="indexterm"NAME="AUTOID-17639"></A>Wildcard MX records provide a shorthand for MX'ing many hostswith a single MX record:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">*.dc.gov.       IN  MX  10 hostB</PRE></BLOCKQUOTE></P><PCLASS="para">This says that any host in the domain <CODECLASS="literal">.dc.gov</CODE> (where that host doesn'thave any record of its own) should have its mail forwarded to<CODECLASS="literal">hostB</CODE>. </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; domain is .dc.gov*.dc.gov.       IN  MX  10 hostBhostA           IN  MX  10 hostChostB           IN  A   123.45.67.8</PRE></BLOCKQUOTE></P><PCLASS="para">Here, mail to <CODECLASS="literal">hostD</CODE> (no record at all) will be forwardedto <CODECLASS="literal">hostB</CODE>. But the wildcard MX record will be ignoredfor <CODECLASS="literal">hostA</CODE> and <CODECLASS="literal">hostB</CODE>, because each has its own record.</P><PCLASS="para">Care must be exercised in setting up wildcard MX records.It is easy to create ambiguous situations that DNSmay not be be able to handle correctly. Consider the following, for example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; domain is sub.dc.gov*.dc.gov.       IN  MX  10 hostB.dc.gov.*.sub.dc.gov.   IN  MX  10 hostC.dc.gov.</PRE></BLOCKQUOTE></P><PCLASS="para">Here, an unqualified name such as just plain <CODECLASS="literal">hostD</CODE> matches both wildcard records. This is ambiguous, so DNSautomatically picks the most complete one (<CODECLASS="literal">*.sub.dc.gov.</CODE>)and supplies that MX record to <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para">One compelling weakness of wildcard MX records is that they matchany hostname at all, even for machines that don't exist:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">; domain is sub.dc.gov *.dc.gov.       IN  MX  10 hostB.dc.gov.</PRE></BLOCKQUOTE></P><PCLASS="para">Here, mail to <EMCLASS="emphasis">foo.dc.gov</EM> will be forwarded to <CODECLASS="literal">hostB.dc.gov</CODE>,even if there is no host <EMCLASS="emphasis">foo</EM> in that domain.</P><PCLASS="para">Wildcard MX records almost never have any appropriate use on the Internet.They are often misunderstood and are often used just to save theeffort of typing hundreds of MX records. They do, however, have legitimate usesbehind firewall machines and on non-Internet networks.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-5">21.3.5 What? They Ignore MX Records?</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17672"></A><ACLASS="indexterm"NAME="AUTOID-17675"></A>Many older MTAs on the network ignore MX records, and someSun sites wrongly run the non-MX version of <EMCLASS="emphasis">sendmail</EM> (that is,they should use<EMCLASS="emphasis">/usr/lib/sendmail.mx</EM>).Because of this, you will occasionallyfind some sites that insist on sending mail to a host eventhough that host has been explicitly MX'd to another.</P><PCLASS="para">To illustrate why this is bad, consider a UUCP host thathas only an MX record.It has no A record because it is not on the network:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">uuhost   IN    MX  10 uucpserver</PRE></BLOCKQUOTE></P><PCLASS="para">Here, mail to <CODECLASS="literal">uuhost</CODE> will be sent to <CODECLASS="literal">uucpserver</CODE>, whichwill forward the message to <CODECLASS="literal">uuhost</CODE> with UUCP software.An attempt to ignore this MX record will fail because <CODECLASS="literal">uuhost</CODE>has no other records. Similar problems can arise for printers withdirect network connections, terminal servers, and even workstationsthat don't run an SMTP daemon such as <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para">If you believe in DNS and disdain sites that don't, youcan simply ignore the offending sites.In this case the mail will fail if your MX'd host doesn't runa <EMCLASS="emphasis">sendmail</EM> daemon (or another MTA). This is not asnasty as it sounds. There is actually considerable support for thisapproach; failure to obey MX records is a clear violationof published network protocols. RFC1123, <EMCLASS="emphasis">Host Requirements</EM>,section 5.3.5, notes that obeying MX records is mandatory.</P><PCLASS="para">On the other hand, if you want to ensure that all mail is received,even on a workstation whose mail is MX'd elsewhere, you canrun the <EMCLASS="emphasis">sendmail</EM> daemon on every machine.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-6">21.3.6 Caching MX Records</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17697"></A>Although you are not required to have MX records for all hosts,there is good reason to consider doing so. To illustrate, considerthe following host that only has an A record:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostB           IN  A   123.45.67.8</PRE></BLOCKQUOTE></P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> first looks up this host, it asks the localname server for all records. Because there is only an A record,that is all it gets.</P><PCLASS="para">But note that asking for all records caused the localname server to cache the information.The next time <EMCLASS="emphasis">sendmail</EM> looks up this same host, the localname server will return the A record from its cache. This isfaster and reduces Internet traffic. The cachedinformation is &quot;nonauthoritative&quot; (because it is a copy)and includes no MX records (because there are none).</P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> gets a nonauthoritative reply that lacksMX records, it is forced to do another DNS lookup. This time,it specifically asks for MX records. In this case there arenone, so it gets none.</P><PCLASS="para">Because <CODECLASS="literal">hostB</CODE> lacks an MX record, <EMCLASS="emphasis">sendmail</EM> performs a DNS lookup each and every time mail is sent to that host.If <CODECLASS="literal">hostB</CODE> were a major mail-receiving site, its lackof an MX record would be causing many <EMCLASS="emphasis">sendmail</EM> programs,all over the world, to waste network bandwidth with otherwiseuseless DNS lookups.</P><PCLASS="para">We strongly recommend that every host on the Internet haveat least one MX record. As a minimum, it can simply pointto itself with a 0 cost:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostB           IN  A   123.45.67.8                IN  MX  0 hostB</PRE></BLOCKQUOTE></P><PCLASS="para">This will not change how mail is routed to <CODECLASS="literal">hostB</CODE>but will reduce the number of DNS lookups required.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-21-SECT-3-7">21.3.7 Ambiguous MX Records</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17721"></A><ACLASS="indexterm"NAME="AUTOID-17723"></A>RFC974 leaves the treatment of ambiguous MX records to theimplementor's discretion.This has generated much debate in <EMCLASS="emphasis">sendmail</EM> circles.Consider the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">foo    IN MX 10 hostAfoo    IN MX 20 hostB        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> mail from hostB to foo</I>foo    IN MX 30 hostC</PRE></BLOCKQUOTE></P><PCLASS="para">When mail is sent from a host (<CODECLASS="literal">hostB</CODE>) that is an MX recordfor the receiving host (<CODECLASS="literal">foo</CODE>), all MX records that have a costequal to or greater than that of <CODECLASS="literal">hostB</CODE> must be discarded.The mail is then delivered tothe remaining MX host with the lowest cost(<CODECLASS="literal">hostA</CODE>).This is a sensible rule, because it prevents <CODECLASS="literal">hostB</CODE> from wronglytrying to deliver to itself.</P><PCLASS="para">It is possible to configure <CODECLASS="literal">hostB</CODE> so that it views thename <CODECLASS="literal">foo</CODE> as a synonym for its own name.Such a configuration results in <CODECLASS="literal">hostB</CODE> never looking up any MX records because it recognizes mail to <CODECLASS="literal">foo</CODE> as local.</P><PCLASS="para">But what should happen if <CODECLASS="literal">hostB</CODE> does not recognize <CODECLASS="literal">foo</CODE>as local and if there is no <CODECLASS="literal">hostA</CODE>?</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">                             <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> no hostA</I>foo    IN MX 20 hostB        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> mail from hostB to foo</I>foo    IN MX 30 hostC</PRE></BLOCKQUOTE></P><PCLASS="para">Again, RFC974 says that when mail is being sent from a host (<CODECLASS="literal">hostB</CODE>)that is an MX record for the receiving host (<CODECLASS="literal">foo</CODE>),all MX records that have a cost equal to or greater than that of <CODECLASS="literal">hostB</CODE>must be discarded.In this example that leaves <EMCLASS="emphasis">zero</EM> MX records.Three courses of action are now open to <EMCLASS="emphasis">sendmail</EM>, but RFC974 doesn'tsay which it should use:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Assume that this is an error condition. Clearly, <EMCLASS="emphasis">hostB</EM>should have been configured to recognize <EMCLASS="emphasis">foo</EM> as local.It didn't (hence the MX lookup and discarding in the first place),so it must not have known what it was doing. V8 <EMCLASS="emphasis">sendmail</EM> withthe <CODECLASS="literal">TryNullMXList</CODE> (<CODECLASS="literal">w</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-71"TITLE="">Section 34.8.71, TryNullMXList (w)</A>)not set (undeclared or declared as false) will bounce the mail message.<ACLASS="indexterm"NAME="AUTOID-17764"></A></P></LI><LICLASS="listitem"><PCLASS="para">Look to see whether <EMCLASS="emphasis">foo</EM> has anA record. If it does, go ahead and try to deliver the mail messagedirectly to <EMCLASS="emphasis">foo</EM>. If it lacks an A record, bounce the message.This approach runs the risk that <EMCLASS="emphasis">foo</EM>may not be configured to properly accept mail (thus causing mail todisappear down a black hole). Still, this approach may be desirable insome circumstances. V8 <EMCLASS="emphasis">sendmail</EM> with the <CODECLASS="literal">TryNullMXList</CODE> (<CODECLASS="literal">w</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-71"TITLE="">Section 34.8.71</A>)set always tries to connect to <EMCLASS="emphasis">foo</EM>.[13]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] As does the UIUC version of IDA <EMCLASS="emphasis">sendmail</EM>.Other versions of IDA (such as KJS) do not.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Assume (even though it has not been configured to do so) that <EMCLASS="emphasis">foo</EM>should be treated as local to <EMCLASS="emphasis">hostB</EM>. No version of <EMCLASS="emphasis">sendmail</EM>makes this assumption.</P></LI></UL><PCLASS="para">This situation is not an idle exercise. Consider the MX record for<CODECLASS="literal">uuhost</CODE> presented in the previous section:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">uuhost   IN    MX  10 uucpserver</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">uuhost</CODE> has no A record, because it is connectedto <CODECLASS="literal">uucpserver</CODE> via a dial-up line.If <CODECLASS="literal">uucpserver</CODE> is not configured to recognize<CODECLASS="literal">uuhost</CODE> as one of its UUCP clients, and if mail is sent from<CODECLASS="literal">uucpserver</CODE> to <CODECLASS="literal">uuhost</CODE>, it will query DNS and getitself as the MX record for <CODECLASS="literal">uuhost</CODE>. As we have shown, thatMX record is discarded, and an ambiguous situation has developed.<ACLASS="indexterm"NAME="AUTOID-17796"></A>&#13;</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_02.htm"TITLE="21.2 How sendmail Uses DNS"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 21.2 How sendmail Uses DNS"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_04.htm"TITLE="21.4 How to Use nslookup"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 21.4 How to Use nslookup"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">21.2 How sendmail Uses DNS</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">21.4 How to Use nslookup</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>