<HTML><HEAD><TITLE>[Chapter 22] 22.4 The Configuration File</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:29:13Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch22_01.htm"TITLE="22. Security"><LINKREL="prev"HREF="ch22_03.htm"TITLE="22.3 SMTP Probes"><LINKREL="next"HREF="ch22_05.htm"TITLE="22.5 Permissions"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_03.htm"TITLE="22.3 SMTP Probes"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.3 SMTP Probes"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 22<BR>Security</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 Permissions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 22.5 Permissions"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-22-SECT-4">22.4 The Configuration File</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-22-IX-SECURITY-SENDMAIL-CF-AND"></A><ACLASS="indexterm"NAME="SML2-CH-22-IX-SENDMAIL-CF-CONFIGURATION-FILE"></A>There are a number of security holes that can be opened up by commandsgiven carelessly in the configuration file. Such holes can beserious because <EMCLASS="emphasis">sendmail</EM> starts to run as <EMCLASS="emphasis">root</EM>,provided that it has not been given an unsafe command-line switch(such as <CODECLASS="literal">-C</CODE>; see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-15"TITLE="">Section 36.7.15, -C</A>) or an unsafe option(see <ACLASS="xref"HREF="ch34_01.htm#SML2-CH-34-SECT-1-4"TITLE="Options that Are Safe">Section 34.1.4, "Options that Are Safe"</A>).It continues as <EMCLASS="emphasis">root</EM> until it delivers mail, whereuponit changes its identity to that of an ordinary user. When <EMCLASS="emphasis">sendmail</EM>reads its configuration file, it generally does so while it is still <EMCLASS="emphasis">root</EM>.  Consequently, as we will illustrate,it may be able to read and overwrite any file.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-22-SECT-4-1">22.4.1 Accept/Reject Connections via libwrap.a</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18447"></A><ACLASS="indexterm"NAME="AUTOID-18449"></A><ACLASS="indexterm"NAME="AUTOID-18452"></A>The TCP wrapper package is written and maintained byWietse Venema at the Department of Mathematics and Computing Science,The Netherlands. It is available via anonymous FTP from:</P><PCLASS="para"><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><ACLASS="systemitem.url"HREF="ftp://ftp.cert.org/pub/tools/tcp_wrappers/">ftp://ftp.cert.org/pub/tools/tcp_wrappers/</A><BR><ACLASS="systemitem.url"HREF="ftp://ftp.win.tue.nl/pub/security/">ftp://ftp.win.tue.nl/pub/security/</A></P></BLOCKQUOTE></P><PCLASS="para">This package is used to screen incoming network connections andto accept or reject them on the basis of hostname, domain, or IPnumber. It is a powerful adjunct to security, and if you havenot already done so, you should install it at your site.</P><PCLASS="para">Prior to V8.8 the only way <EMCLASS="emphasis">sendmail</EM> could take advantageof this package was to be run from <EMCLASS="emphasis">inetd</EM>(8) (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-11"TITLE="">Section 36.7.11, -bs</A>).Beginning with V8.8 <EMCLASS="emphasis">sendmail</EM>, support for this packageis built in.</P><PCLASS="para">If TCPWRAPPERS is defined in compiling (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-49"TITLE="">Section 18.8.49, TCPWRAPPERS</A>),<EMCLASS="emphasis">sendmail</EM> will automatically use that package to verify andscreen all incoming SMTP connections. If, as CERTrecommends, you have ALL:ALL in your <EMCLASS="emphasis">hosts.deny</EM> file,you will need to add this line to your <EMCLASS="emphasis">hosts.allow</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sendmail:ALL</PRE></BLOCKQUOTE></P><PCLASS="para">Then, to selectively reject connection, you might add a line likethis to your <EMCLASS="emphasis">hosts.deny</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sendmail:spam.host.domain</PRE></BLOCKQUOTE></P><PCLASS="para">This causes the TCP wrapper package to tell <EMCLASS="emphasis">sendmail</EM>to reject all SMTP connections from the spamming host<EMCLASS="emphasis">spam.host.domain</EM>.</P><PCLASS="para">When mail comes in from <EMCLASS="emphasis">spam.host.domain</EM>, <EMCLASS="emphasis">sendmail</EM>will issue this SMTP message as a reply to allSMTP commands from that host:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">550 Access denied</PRE></BLOCKQUOTE></P><PCLASS="para">The only exception is the QUIT command (and beginning withV8.8.5, the HELO, EHLO, and NOOP commands), whichallows the spamming host to disconnect.</P><PCLASS="para">Use of the TCP wrapper package imposes additional networktraffic that may not be desirable. Both it and <EMCLASS="emphasis">sendmail</EM>, forinstance, may look up the same host with DNS. The wrappersoftware also sends <EMCLASS="emphasis">identd</EM>(8) queries that a duplicatethose used by <EMCLASS="emphasis">sendmail</EM>. Finally, note that two filesneed to be opened and read for each connection. We recommend thatyou exclude support for this package (especially at high-volumesites) until you actually need it. At low- to medium-volumesites you may wish to include support for this package in <EMCLASS="emphasis">sendmail</EM> butthen to not implement that support (in <EMCLASS="emphasis">hosts.allow</EM> and<EMCLASS="emphasis">hosts.deny</EM>) until the need arises.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-22-SECT-4-2">22.4.2 The F Command&nbsp;- File Form</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18494"></A><ACLASS="indexterm"NAME="AUTOID-18497"></A>The file form of the <CODECLASS="literal">F</CODE> configuration command (see <ACLASS="xref"HREF="ch32_01.htm#SML2-CH-32-SECT-1-2"TITLE="The F Class Command">Section 32.1.2, "The F Class Command"</A>)can be used to readsensitive information. That command looks like this in the configurationfile:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">F<CODECLASS="replaceable"><I>X/path pat</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This form is used to read class macro entries from files.It can cause problems through a misunderstanding of the<EMCLASS="emphasis">scanf</EM>(3) pattern <CODECLASS="replaceable"><I>pat</I></CODE>.The <CODECLASS="replaceable"><I>/path</I></CODE> is the name of the file,and the optional <CODECLASS="replaceable"><I>pat</I></CODE> is a pattern to be used by <EMCLASS="emphasis">scanf</EM>(3)(see <ACLASS="xref"HREF="ch32_01.htm#SML2-CH-32-SECT-1-2-1"TITLE="scanf(3) variations">Section 32.1.2.1, "scanf(3) variations"</A>).</P><PCLASS="para">To illustrate the risk of the <CODECLASS="replaceable"><I>pat</I></CODE>, considerthe following configuration file entry:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Fw/etc/myhostnames %[^#]</PRE></BLOCKQUOTE></P><PCLASS="para">Normally, the <CODECLASS="literal">F</CODE> command reads only the first whitespace-delimited word from each line of the file. But if the optional pattern<CODECLASS="replaceable"><I>pat</I></CODE> is specified, the <CODECLASS="literal">F</CODE> command instead readsone or more words from each line based on the nature of the pattern.The pattern is used by <EMCLASS="emphasis">scanf</EM>(3) to extract words, and thespecific pattern used here <CODECLASS="literal">[^#]</CODE> causes <EMCLASS="emphasis">scanf</EM>(3) toread everythingup to the first comment character (the <CODECLASS="literal">#</CODE>) from each line.This <CODECLASS="replaceable"><I>pat</I></CODE> allows multiple hostnames to be convenientlylisted on each line of the file.Now assume that a new administrator, who is not very familiar with <EMCLASS="emphasis">sendmail</EM>,decides to add an <CODECLASS="literal">F</CODE> command to gather a list of UUCP hosts fromthe <EMCLASS="emphasis">/etc/uucp/Systems</EM> file. Being a novice, the new administratorcopies the existing entry for use with the new file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">FU/etc/uucp/Systems %[^#]</PRE></BLOCKQUOTE></P><PCLASS="para">This is the same pattern that was correctly used for <EMCLASS="emphasis">/etc/myhostnames</EM>.Unfortunately, the <EMCLASS="emphasis">Systems</EM> file contains more than just hostentries on each line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">linda Any ACU 2400 5551212  &quot;&quot; \d\n in:-\r-in: Uourhost word: MublyPeghoby Any ACU 2400 5551213  &quot;&quot; \d\n in:-\r-in: Uourhost word: FuMzz3.x&#13;</PRE></BLOCKQUOTE></P><PCLASS="para">A part of each line (the last item in each) contains nonencrypted passwords.An unscrupulous user, noticing the mistaken <CODECLASS="literal">[^#]</CODE> in theconfiguration file, could run <EMCLASS="emphasis">sendmail</EM> with a <CODECLASS="literal">-d36.5</CODE>debugging switch and watch each password being processed. For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -d36.5 -bt &lt; /dev/null</B></CODE><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> ... some output deleted</I>STAB: hoby 1 enteredSTAB: Any 1 enteredSTAB: ACU 1 enteredSTAB: 2400 1 enteredSTAB: 5551213 1 enteredSTAB: &quot;&quot; 1 type 1 val 0 0 200000 0STAB: \d\n 1 enteredSTAB: in:-\r-in: 1 enteredSTAB: Uourhost 1 enteredSTAB: word: 1 entered<CODECLASS="userinput"><B>STAB: FuMzz3.x 1 entered                         </B></CODE><EMCLASS="emphasis"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> note</EM>STAB: local 3 type 3 val 34d00 0 0 0STAB: prog 3 type 3 val 34d80 0 0 0</PRE></BLOCKQUOTE></P><PCLASS="para">Note the third line from the bottom, where the password for the UUCPlogin into the host <CODECLASS="literal">hoby</CODE> is printed.This example illustrates two rules about handling the configuration file:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Avoid using the <CODECLASS="literal">F</CODE> command to read a file that is not alreadypublicly readable. To do so can reveal sensitive information.Even if the <EMCLASS="emphasis">scanf</EM>(3) option is correct, a core dump[10]can be examined for sensitive information from otherwise secured files.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Most versions of UNIX disallow core dumps of <EMCLASS="emphasis">suid</EM> <EMCLASS="emphasis">root</EM> programs.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">Avoid adding a new command to the configuration file by blindly copyingand modifying another. Try to learn the rules governing the commandfirst.</P></LI></UL><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-22-SECT-4-3">22.4.3 The F Command&nbsp;- Program Form</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18562"></A><ACLASS="indexterm"NAME="AUTOID-18564"></A><ACLASS="indexterm"NAME="AUTOID-18567"></A>Another form of the <CODECLASS="literal">F</CODE> (File) configuration command is the programform, which looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">F<CODECLASS="replaceable"><I>X|/path</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="literal">|</CODE> prefix to the <CODECLASS="replaceable"><I>/path</I></CODE> tells <EMCLASS="emphasis">sendmail</EM>that <CODECLASS="replaceable"><I>/path</I></CODE> is the name of a program to run. The output producedby the program is appended to the class, here <CODECLASS="replaceable"><I>X</I></CODE>.</P><PCLASS="para">To illustrate another potential security risk,consider a configuration file that is group writable, perhapsby a few administrators who share the job of <EMCLASS="emphasis">postmaster</EM>. To break into <EMCLASS="emphasis">root</EM>, the attacker only needs to assume the identityof one of those users and, under that identity, edit the configuration file.Consider the following bogus entry added by an attacker to that configuration file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">FX|/tmp/.sh</PRE></BLOCKQUOTE></P><PCLASS="para">Consider further a change to the <CODECLASS="literal">DefaultUser</CODE> option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-15"TITLE="">Section 34.8.15, DefaultUser (g)(u)</A>) that causesthe default <EMCLASS="emphasis">uid</EM> and <EMCLASS="emphasis">gid</EM> to become those of root:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">O DefaultUser=0:0</PRE></BLOCKQUOTE></P><PCLASS="para">With these changes in place, the program (actually a shell script) called <EMCLASS="emphasis">/tmp/.sh</EM>is run by <EMCLASS="emphasis">sendmail</EM> to fill the class <CODECLASS="literal">X</CODE> with new values.All this seems harmless enough, but suppose <EMCLASS="emphasis">/tmp/.sh</EM> does the unexpected:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shcp /bin/sh /tmp/.shellchmod u+s /tmp/.shell</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the Bourne shell is copied to <EMCLASS="emphasis">/tmp/.shell</EM>, and the <EMCLASS="emphasis">suid</EM><EMCLASS="emphasis">root</EM> bit is set. Now, any user at all can run <EMCLASS="emphasis">sendmail</EM> andbecome <EMCLASS="emphasis">root</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -l /tmp/.shell</B></CODE>/tmp/.shell not found% <CODECLASS="userinput"><B> /usr/lib/sendmail -bt &lt; /dev/null</B></CODE>% <CODECLASS="userinput"><B>ls -l /tmp/.shell</B></CODE>-rwsr-xr-x  1 root       122880 Sep 24 13:20 /tmp/.shell</PRE></BLOCKQUOTE></P><PCLASS="para">The program form of the <CODECLASS="literal">F</CODE> configuration command is clearlydangerous.</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> configuration file must <EMCLASS="emphasis">never</EM> be writable by anyoneother than <EMCLASS="emphasis">root</EM>. It should also live in a directory,every path component of which is owned by and writable only by <EMCLASS="emphasis">root</EM>.(We'll discuss this latter point in greater detail soon.)If the configuration file is created with the <EMCLASS="emphasis">m4</EM> technique, thencare must be taken to ensure that only <EMCLASS="emphasis">root</EM> can install it.</P></LI></UL><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-22-SECT-4-4">22.4.4 The P= of Delivery Agents</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18624"></A><ACLASS="indexterm"NAME="AUTOID-18626"></A>Just as the program form of the <CODECLASS="literal">F</CODE> command can pose a security riskif the configuration file is poorly protected, so can the <CODECLASS="literal">M</CODE>delivery agent definition. Specifically, the <CODECLASS="literal">P=</CODE> equatefor a delivery agent (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-9"TITLE="">Section 30.4.9, P=</A>) can be modified to run a bogus programthat gives away <EMCLASS="emphasis">root</EM> privilege. Consider the followingmodification to the <CODECLASS="literal">local</CODE> delivery agent:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Mlocal, P=/bin/mail, F=rlsDFMmnP, S=10, R=20, A=mail -d $u           <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v"></I>        <ICLASS="lineannotation">becomes</I>           <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v"></I>Mlocal, P=/<CODECLASS="userinput"><B>tmp</B></CODE>/mail, <CODECLASS="userinput"><B>U=0</B></CODE>, F=<CODECLASS="userinput"><B>S</B></CODE>rlsDFMmnP, S=10, R=20, A=mail -d $u                     <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>      <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>                     <ICLASS="lineannotation">note</I>   <ICLASS="lineannotation">note</I></PRE></BLOCKQUOTE></P><PCLASS="para">Here, local mail should be delivered with the <EMCLASS="emphasis">/bin/mail</EM>program, but instead it is delivered with a bogus frontend,<EMCLASS="emphasis">/tmp/mail</EM>. If <EMCLASS="emphasis">/tmp/mail</EM> iscarefully crafted, users will never noticethat the mail has been diverted.The <CODECLASS="literal">S</CODE> flag in the <CODECLASS="literal">F=</CODE> equate (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-40"TITLE="">Section 30.8.40, F=S</A>)causes <EMCLASS="emphasis">sendmail</EM> toretain its default identity when executing the bogus <EMCLASS="emphasis">/tmp/mail</EM>.The <CODECLASS="literal">U=0</CODE> equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-13"TITLE="">Section 30.4.13, U=</A>) causes that default to becomethe identity of <EMCLASS="emphasis">root</EM>.</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Delivery agent <CODECLASS="literal">P=</CODE> equates must be protected by protectingthe configuration file. As an additional precaution, <EMCLASS="emphasis">never</EM>use relative pathnames in the <CODECLASS="literal">P=</CODE> equate.</P></LI><LICLASS="listitem"><PCLASS="para">The <CODECLASS="literal">F=S</CODE> and <CODECLASS="literal">U=0</CODE> are especially dangerous.They should never appear in your configuration file unlessyou have deliberately placed them there and are 100percent certain of their effect.</P></LI></UL><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-22-SECT-4-5">22.4.5 The S Option and the Statistics File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18673"></A><ACLASS="indexterm"NAME="AUTOID-18675"></A><ACLASS="indexterm"NAME="AUTOID-18678"></A>When <EMCLASS="emphasis">sendmail</EM> attempts to record its delivery agent statistics (see <ACLASS="xref"HREF="ch26_02.htm#SML2-CH-26-SECT-2-1"TITLE="The sendmail.st File">Section 26.2.1, "The sendmail.st File"</A>),it checks for the existence and write permissionsof the file specified by the <CODECLASS="literal">StatusFile</CODE> (<CODECLASS="literal">S</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-66"TITLE="">Section 34.8.66, StatusFile (S)</A>).The <EMCLASS="emphasis">sendmail</EM>program does not care where that file lives or what permissions ithas&nbsp;- only that it exists.</P><PCLASS="para">A security problem can arise if one is tempted to locate the statisticsfile in a spool or temporary area. Consider the following location,for example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">OS/usr/tmp/sendmail.st</PRE></BLOCKQUOTE></P><PCLASS="para">Here the administrator sets the <CODECLASS="literal">StatusFile</CODE> (<CODECLASS="literal">S</CODE>) option to locate the statisticsfile in the <EMCLASS="emphasis">/usr/tmp</EM> directory. The intention is that the file can be easily created by anyone who wishesto gather statistics for a while, then removed.Unfortunately, the <EMCLASS="emphasis">/usr/tmp</EM>  directory is usually world-writable.</P><PCLASS="para">Thus any unhappy or malicious user can bring the system to its knees:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cd /usr/tmp</B></CODE>% <CODECLASS="userinput"><B>ln -s /vmunix sendmail.st</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <EMCLASS="emphasis">sendmail</EM> clobbersthe disk copy of the kernel. Nothing bad may happen at first,[11]but the machine will require manual intervention to boot in the future.[12]Clearly, precautions must be taken. For example, any file that <EMCLASS="emphasis">sendmail</EM> writes to (such as the <CODECLASS="literal">StatusFile</CODE> (<CODECLASS="literal">S</CODE>) optionstatistics file or the <EMCLASS="emphasis">aliases</EM> database files) must be writableonly by <EMCLASS="emphasis">root</EM> and live in a directory, every path component of whichis writable only by <EMCLASS="emphasis">root</EM>.<ACLASS="indexterm"NAME="AUTOID-18714"></A><ACLASS="indexterm"NAME="AUTOID-18715"></A>&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] Programs that need kernel symbols, such as <EMCLASS="emphasis">ps</EM>(1), will cease to workor will produce garbage output.</P><PCLASS="para">[12] The savvy administrator can still boot off the network or froma CD-ROM and quickly install a new kernel.</P></BLOCKQUOTE></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_03.htm"TITLE="22.3 SMTP Probes"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 22.3 SMTP Probes"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch22_05.htm"TITLE="22.5 Permissions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 22.5 Permissions"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">22.3 SMTP Probes</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">22.5 Permissions</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>