<HTML><HEAD><TITLE>[Chapter 23] 23.6 Cause the Queue to Be Processed</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:34:05Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch23_01.htm"TITLE="23. The Queue"><LINKREL="prev"HREF="ch23_05.htm"TITLE="23.5 How the Queue Is Processed"><LINKREL="next"HREF="ch23_07.htm"TITLE="23.7 Process Alternate Queues"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_05.htm"TITLE="23.5 How the Queue Is Processed"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 23.5 How the Queue Is Processed"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 23<BR>The Queue</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_07.htm"TITLE="23.7 Process Alternate Queues"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23.7 Process Alternate Queues"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-23-SECT-6">23.6 Cause the Queue to Be Processed</A></H2><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program offers two different methods for processingthe queue. It can be told to process the queue periodicallyor to process it once and then exit.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-23-SECT-6-1">23.6.1 Periodically with -q</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20695"></A><ACLASS="indexterm"NAME="AUTOID-20697"></A>The <CODECLASS="literal">-q</CODE> command-lineswitch is used both to cause the queue to be processed and to specify the interval between queue runs.</P><PCLASS="para">A typical invocation of the <EMCLASS="emphasis">sendmail</EM> daemon looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/lib/sendmail -bd -q1h</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <EMCLASS="emphasis">sendmail</EM> program is placed into listening mode withthe <CODECLASS="literal">-bd</CODE> command-line switch. The <CODECLASS="literal">-q1h</CODE> command-lineswitch tells it to process the queue once each hour.Note that either switch puts <EMCLASS="emphasis">sendmail</EM> into the backgroundas a daemon. The <CODECLASS="literal">-bd</CODE> switch just allows <EMCLASS="emphasis">sendmail</EM> tolisten for incoming SMTP connections. Consider the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/lib/sendmail -bd/usr/lib/sendmail -q1h</PRE></BLOCKQUOTE></P><PCLASS="para">This runs two daemons simultaneously. The first listens for incomingSMTP connections. The second processes the queue once per hour.</P><PCLASS="para">At small sites, where mail messages are rarely queued, the time intervalchosen may be small, to ensure that all mail is delivered promptly.An interval of <CODECLASS="literal">15m</CODE> (15 minutes) may be appropriate.</P><PCLASS="para">At many sites an interval of one hour is probably best.It is short enough to ensure that delays in delivery remain tolerable,yet long enough to ensure that queue processing does not overlap.</P><PCLASS="para">At large sites with huge amounts of mail and at sites that senda great deal of international mail, the interval hasto be carefully tuned by observing how long it takes <EMCLASS="emphasis">sendmail</EM>to process the queue and what causes that processto take a long time. Points to consider are the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Network delays or delays at the receiving host may causedelivery to that host to time out.Timeouts are set with the <CODECLASS="literal">Timeout</CODE> (<CODECLASS="literal">r</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-70"TITLE="">Section 34.8.70</A>).[5]Each such timeout is logged at LOG_NOTICE with a messagelike this:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] Note that prior to V8 <EMCLASS="emphasis">sendmail</EM> the <CODECLASS="literal">r</CODE> option set onetimeout for all SMTP timeouts.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">timeout waiting for input from <CODECLASS="replaceable"><I>host</I></CODE> during <CODECLASS="replaceable"><I>what</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <EMCLASS="emphasis">host</EM> is the name of the other host, and <CODECLASS="replaceable"><I>what</I></CODE>specifies which timeout triggered the message (such as&quot;client HELO for <CODECLASS="literal">to_helo</CODE>). In general,timeouts should be largeto ensure that mail to busy sites and to largemailing lists does not time out improperly. In observing the queueprocessing, you may find thatall messages but one process swiftly. That one, you may find, takesover an hour because of a long SMTP timeout. A possible solutionto this problemis to make all timeouts short so that most queue runs are processedquickly.Then, for example, the following commandcould be run a few times each night to specificallyflush those long jobs:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/lib/sendmail -or2h -q</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20743"></A>The queue can take a long time to process because too many messagesare being queued unnecessarily. Several options affect the placementof mail messages into the queue. The <CODECLASS="literal">QueueLA</CODE> (<CODECLASS="literal">x</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-50"TITLE="">Section 34.8.50</A>) tells <EMCLASS="emphasis">sendmail</EM>to queue, rather than deliver, a message if the machine load is toohigh. Fewer messages will be queued ifthe value of that option is increased. The <CODECLASS="literal">SuperSafe</CODE> (<CODECLASS="literal">s</CODE>) option<ACLASS="indexterm"NAME="AUTOID-20751"></A>(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-67"TITLE="">Section 34.8.67, SuperSafe (s)</A>) tells <EMCLASS="emphasis">sendmail</EM> to queue all messages for safety.If your machine &quot;never&quot; crashes, this may not be necessary.[6]<ACLASS="indexterm"NAME="AUTOID-20758"></A><ACLASS="indexterm"NAME="AUTOID-20760"></A><ACLASS="indexterm"NAME="AUTOID-20762"></A><ACLASS="indexterm"NAME="AUTOID-20765"></A>The <CODECLASS="literal">HoldExpensive</CODE> (<CODECLASS="literal">c</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-29"TITLE="">Section 34.8.29, HoldExpensive (c)</A>) tells <EMCLASS="emphasis">sendmail</EM> to queuemessages to &quot;expensive&quot; delivery agents (those with the <CODECLASS="literal">F=e</CODE>flag set; see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-18"TITLE="">Section 30.8.18, F=e</A>) rather than delivering them.If the queue is routinely filled with messages to expensive sites,you should reconsider your reasons for marking those sitesas expensive.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] Eric says, &quot;<EMCLASS="emphasis">Set this option</EM>. In fact, it may go away (or be ignored, i.e.,always be on) in some future release.&quot;</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20775"></A><ACLASS="indexterm"NAME="AUTOID-20777"></A>The queue can fill with messages because <EMCLASS="emphasis">sendmail</EM> wasrun with the <CODECLASS="literal">-odq</CODE> or <CODECLASS="literal">-odd</CODE> command-line switch (seethe <CODECLASS="literal">DeliveryMode</CODE> (<CODECLASS="literal">d</CODE>) option, <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-16"TITLE="">Section 34.8.16</A>). At sites thatreceive a great deal of UUCP mail for forwarding, the <EMCLASS="emphasis">rmail</EM>(8)program is often set up to run <EMCLASS="emphasis">sendmail</EM> in &quot;queue only&quot; modewith the <CODECLASS="literal">-odq</CODE> command-line switch. If UUCP mail is cloggingyour normal mail services, you should consider queueing it toa separate queue directory. You can then process that other directorywith a separate queue run of <EMCLASS="emphasis">sendmail</EM>. (Use of separatequeue directories is discussed in <ACLASS="xref"HREF="ch23_07.htm"TITLE="Process Alternate Queues">Section 23.7, "Process Alternate Queues"</A>.)</P></LI><LICLASS="listitem"><PCLASS="para">A slow machine can clog the queue. When a single machine isset up to handle the bulk of a site's mail, that machine shouldbe as swift as possible. In general, a dedicated mailserver should have a fast CPU with lots of memory. It shouldnever allow users to log in to it, and it should run its ownname server daemon.</P></LI></UL><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-23-SECT-6-2">23.6.2 From the Command Line</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20796"></A>The <CODECLASS="literal">-q</CODE> command-line switch, invoked withouta time interval argument, is usedto run <EMCLASS="emphasis">sendmail</EM> in queue-processing mode. In this mode,<EMCLASS="emphasis">sendmail</EM> processes the queue once and then exits.This mode can be run interactively from the command-line orin the background via <EMCLASS="emphasis">cron</EM>(8).</P><PCLASS="para">Other command-line switches can be combined with <CODECLASS="literal">-q</CODE> torefine the way the queue is processed.The <CODECLASS="literal">-v</CODE> (verbose) switch causes <EMCLASS="emphasis">sendmail</EM>to print information about each message it is processing. The<CODECLASS="literal">-d</CODE> (debugging) switch may be used to produce additionalinformation about the queue. We'll discuss the <CODECLASS="literal">-v</CODE>switch as it applies to the queue later in this chapter. Those <CODECLASS="literal">-d</CODE>debugging switches appropriate to the queue can be found in <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-TAB-1"TITLE="Debugging Switches by Category">Table 37.2</A> of <ACLASS="xref"HREF="ch37_05.htm"TITLE="Reference in Numerical Order">Section 37.5, "Reference in Numerical Order"</A>.</P><PCLASS="para">V8 <EMCLASS="emphasis">sendmail</EM> allows variations on <CODECLASS="literal">-q</CODE>:<CODECLASS="literal">-qI</CODE> allows you to specify a specific message identifier for processing;<CODECLASS="literal">-qR</CODE> allows you to specify specific recipient addresses for processing; <CODECLASS="literal">-qS</CODE> allows you to specify specific senderaddresses for processing.[7]&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] IDA and Pre-V8 SunOS <EMCLASS="emphasis">sendmail</EM> offer three different command-lineswitches for processing the queue. The <CODECLASS="literal">-M</CODE> switch allowsyou to specify a specific message for processing. The <CODECLASS="literal">-R</CODE>switch allows you to specify specific recipient addresses for processing.The <CODECLASS="literal">-S</CODE> switch allows you to specify specific senderaddresses for processing.</P></BLOCKQUOTE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-23-SECT-6-2-1">23.6.2.1 Process the queue once: -q</A></H4><PCLASS="para">The <CODECLASS="literal">-q</CODE> command-line switch, without an interval argument,tells <EMCLASS="emphasis">sendmail</EM> to process the queue once, then exit.As such, this switch is a handy administrative tool.When the queue fills unexpectedly between queue runs of thedaemon, for example, the <CODECLASS="literal">-q</CODE> command-line switch can be used toforce an immediate queue run:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>/usr/lib/sendmail -q</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">On machines that do not run the <EMCLASS="emphasis">sendmail</EM> daemon, the <CODECLASS="literal">-q</CODE>command-line switch can be used in conjunction with <EMCLASS="emphasis">cron</EM>(8)to periodically process the queue.The following <EMCLASS="emphasis">crontab</EM>(5) file entry, for example,causes <EMCLASS="emphasis">sendmail</EM> to be runonce per hour, at five minutes past the hour, to silently process the queue and exit:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">5 * * * * /usr/lib/sendmail -q &gt;/dev/null 2&gt;&amp;1</PRE></BLOCKQUOTE></P><PCLASS="para">When used in conjunction with other switches (shown below), the<CODECLASS="literal">-q</CODE> switch allows many queue problems to be conveniently handled.&#13;</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-23-SECT-6-2-2">23.6.2.2 Combine -v with -q</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20845"></A><ACLASS="indexterm"NAME="AUTOID-20847"></A>The <CODECLASS="literal">-q</CODE> switch without an argumentprevents <EMCLASS="emphasis">sendmail</EM> from runningin the background and detaching from its controlling terminal.But it also runs silently. To see what is going on, use the <CODECLASS="literal">-v</CODE> command-line switchin combination with the <CODECLASS="literal">-q</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -v -q</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">-v</CODE> command-line switchcauses <EMCLASS="emphasis">sendmail</EM> to print a step-by-step description of whatit is doing.To illustrate, consider the following output produced by usingboth the <CODECLASS="literal">-v</CODE> and <CODECLASS="literal">-q</CODE> command-line switches:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Running MAA20989 (sequence 1 of 2)&lt;adams@dc.gov&gt;... Connecting to dc.gov via ddn...Trying 123.45.67.8... Connection timed out during user open with DC.GOV&lt;adams@dc.gov&gt;... Deferred: Host DC.GOV is downRunning MAA27002 (sequence 2 of 2)&lt;help@irs.dc.gov&gt;... Connecting to irs.dc.gov via ddn...Trying 123.45.67.88...  connected.220 irs.dc.gov Sendmail 5.57/3.0 ready at Mon, 27 Jan 92 09:16:38 -0400</PRE></BLOCKQUOTE></P><PCLASS="para">Here, two queued messages are being processed. The firstfails because of a connection timeout and is requeued for a laterqueue run. The second succeeds (we omit the fullSMTP dialogue). After its delivery is complete, it is removedfrom the queue.&#13;</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-23-SECT-6-2-3">23.6.2.3 Process by identifier/recipient/sender: -q[ISR]</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20867"></A>With V8 <EMCLASS="emphasis">sendmail</EM> you can process a subset of all queued messages.You can select which to process based on queue identifier, recipientaddress, or sender address:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">-qI<CODECLASS="replaceable"><I>queueid</I></CODE>-qR<CODECLASS="replaceable"><I>recipient</I></CODE>-qS<CODECLASS="replaceable"><I>sender</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">-qI</CODE> variation is followed by a queue identifier such as<EMCLASS="emphasis">KAA34556</EM>. The <CODECLASS="literal">-qR</CODE> isfollowed by the address of a recipient. The <CODECLASS="literal">-qS</CODE> is followedby the address of a sender.In all three variations there must be no space between the uppercaseletter and the identifier or address.</P><PCLASS="para">These variations are used to limit the selection of queued filesthat are processed. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -qSroot -qRbiff@here</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the queue is processed once. Only messages from <EMCLASS="emphasis">root</EM>are processed. Of those, only messages that have <EMCLASS="emphasis">biff@here</EM>as one of the recipients are processed.</P><PCLASS="para">In all three variations a partial specification of <CODECLASS="replaceable"><I>queueid</I></CODE>,<CODECLASS="replaceable"><I>recipient</I></CODE>, or <CODECLASS="replaceable"><I>sender</I></CODE> is viewed by V8 <EMCLASS="emphasis">sendmail</EM>as a substring. For example, </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">-qSroot</PRE></BLOCKQUOTE></P><PCLASS="para">matches mail from all of the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">rootben@groots.eduben@GROOTS.EDU</PRE></BLOCKQUOTE></P><PCLASS="para">The last line further illustrates that the substring match is acase-insensitive one. The substring match is literal. Wildcard characters (such as <CODECLASS="literal">*</CODE>) and regular expressions (such as <CODECLASS="literal">.*@.*edu</CODE>)won't work and may confuse the shell from which you run <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para">Multiple specifications may be combined on the command line (as shownabove), but they all AND together: </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -qI123 -qSroot -qR@host.edu</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the queue is processed only for messages with the number123 anywhere in the message identifierthat are also from <EMCLASS="emphasis">root</EM> and that are also addressedto anyone at <EMCLASS="emphasis">host.edu</EM>. </P><PCLASS="para">You can use the <EMCLASS="emphasis">mailq</EM> command to preview the effectof these switches. For example, the following command will list (but not send)the messages that would be processed by the above command line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mailq -qI123 -qSroot -qR@host.edu</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-23-SECT-6-2-4">23.6.2.4 Process the queue via ESMTP ETRN</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20918"></A><ACLASS="indexterm"NAME="AUTOID-20920"></A>The ESMTP ETRN command, based on RFC1985,causes V8.8 and above <EMCLASS="emphasis">sendmail</EM> to asynchronously process itsqueue in a manner similar to the <CODECLASS="literal">-qR</CODE> command line switch(see <ACLASS="xref"HREF="ch23_06.htm#SML2-CH-23-SECT-6-2-3"TITLE="Process by identifier/recipient/sender: -q[ISR]">Section 23.6.2.3, "Process by identifier/recipient/sender: -q[ISR]"</A>).This new command allows dial-on-demand sites to make an SMTPconnection and to force the other side to process and send anymail that is queued for them. The form of this ESMTP command looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ETRN <CODECLASS="replaceable"><I>hostname</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If the host is missing, this error message will be returned:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">550 Parameter required</PRE></BLOCKQUOTE></P><PCLASS="para">Otherwise, the queue will be processed just as if the followingcommand line argument were given:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">-qR@<CODECLASS="replaceable"><I>hostname</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;In both cases a <CODECLASS="literal">qf</CODE> file will be processedif it has a host named <CODECLASS="replaceable"><I>hostname</I></CODE> anywhere in the host part(following the <CODECLASS="literal">@</CODE>) of one of its <CODECLASS="literal">R</CODE> lines. The onlydifference here is that the former (the ETRN) operatesasynchronously. That is, <EMCLASS="emphasis">sendmail</EM> forks a copy of itself, andthe forked child processes the queue.</P><PCLASS="para">One way to use <CODECLASS="literal">ETRN</CODE> is with a simple Bourne shell script:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shOURSITE=here.uofa.eduMAILSERVER=mailhub.uofa.eduTELNET=/usr/ucb/telnetPORT=25echo &quot;etrn $OURSITE&quot; | $TELNET $MAILSERVER $PORTexit 0</PRE></BLOCKQUOTE></P><PCLASS="para">If run on a dial-on-demand host, this script will force a dial-up network connectionto be made. The mail server's <EMCLASS="emphasis">sendmail</EM> is then forced, with ETRN,to process the queue and transport back any mail destined for the local host over thejust-created network connection.&#13;</P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_05.htm"TITLE="23.5 How the Queue Is Processed"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 23.5 How the Queue Is Processed"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch23_07.htm"TITLE="23.7 Process Alternate Queues"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 23.7 Process Alternate Queues"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">23.5 How the Queue Is Processed</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">23.7 Process Alternate Queues</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>