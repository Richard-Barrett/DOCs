<HTML><HEAD><TITLE>[Chapter 24] 24.2 Forms of Alias Delivery</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:38:08Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch24_01.htm"TITLE="24. Aliases"><LINKREL="prev"HREF="ch24_01.htm"TITLE="24.1 The aliases(5) File"><LINKREL="next"HREF="ch24_03.htm"TITLE="24.3 Write a Delivery Agent Script"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_01.htm"TITLE="24.1 The aliases(5) File"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.1 The aliases(5) File"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 24<BR>Aliases</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_03.htm"TITLE="24.3 Write a Delivery Agent Script"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.3 Write a Delivery Agent Script"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-24-SECT-2">24.2 Forms of Alias Delivery</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-24-IX-DELIVERY-ALIAS-FORMS-OF"></A>The right-hand side of an alias entry can take four forms:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>local</I></CODE>:  <CODECLASS="replaceable"><I>user</I></CODE><CODECLASS="replaceable"><I>local</I></CODE>:  <CODECLASS="replaceable"><I>/file</I></CODE><CODECLASS="replaceable"><I>local</I></CODE>:  |<CODECLASS="replaceable"><I>program</I></CODE><CODECLASS="replaceable"><I>local</I></CODE>:  :include: <CODECLASS="replaceable"><I>list</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>user</I></CODE> specifies final delivery to a user's mail spool file(via the <EMCLASS="emphasis">~/.forward</EM> file), delivery to a new address (e.g.<EMCLASS="emphasis">user@newsite</EM>), or one step in further aliasing.The <CODECLASS="replaceable"><I>/file</I></CODE> specifies delivery by appending to a file.The <CODECLASS="literal">|</CODE><CODECLASS="replaceable"><I>program</I></CODE> specifies delivery by piping the message througha program.The <CODECLASS="literal">:include:</CODE> specifies processing of a mailing list.The first three are covered here. The last is covered in the next chapter.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-2-1">24.2.1 Delivery to Users</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22453"></A>Any address in the list of addresses to the right of the colon that doesnot begin with a <CODECLASS="literal">/</CODE> character or a <CODECLASS="literal">|</CODE>character is considered the addressof a user. The address can be local or remote.</P><PCLASS="para">If a user address is prefixedwith a backslash character (<CODECLASS="literal">\</CODE>)[1]and the address is a local one, all further aliasing is suppressed(including reading the user's <EMCLASS="emphasis">~/.forward</EM> file). The message isdelivered with the <CODECLASS="literal">local</CODE> delivery agent.&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Actually, a backslash anywhere in the name causes the sameimmediate delivery.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-2-2">24.2.2 Delivery to Files</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22467"></A><ACLASS="indexterm"NAME="SML2-CH-24-IX-APPENDING-TO-FILES"></A><ACLASS="indexterm"NAME="AUTOID-22471"></A>When any of the addresses to the right of a colon in the aliaslist begins with a <CODECLASS="literal">/</CODE> character, delivery is made by appendingthe mail message to a file.This is automatic with most configuration files but not with others.If your configuration file does not automatically recognizea leading <CODECLASS="literal">/</CODE> character, you will need to add a new rulenear the end of your rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6, "Rule Set 0"</A>). For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R/$+     $@ $#local $: /$1</PRE></BLOCKQUOTE></P><PCLASS="para">Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, any delivery agent for which the<CODECLASS="literal">F=/</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-9"TITLE="">Section 30.8.9, F=/ (forward slash)</A>) is set can also append messages to files.If you want to disable this ability, delete the <CODECLASS="literal">F=/</CODE> flag from all deliveryagent declarations in your configuration file.</P><PCLASS="para">In the list of addresses to the right of the colon, <EMCLASS="emphasis">sendmail</EM> considersany local address that begins with the <CODECLASS="literal">/</CODE> character to bename of a file.[2]<ACLASS="indexterm"NAME="AUTOID-22494"></A>Whenever the recipient address is a file, <EMCLASS="emphasis">sendmail</EM>attempts to deliver the mail message by appending it to the file.This ability to deliver mail to files is included primarily in <EMCLASS="emphasis">sendmail</EM> so that failed mail may be saved to a user's<EMCLASS="emphasis">~/dead.letter</EM> file. It can also be used (through use of aliases)to deliver mail to other files, but that use is less than optimum, as youwill see.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Note that an <EMCLASS="emphasis">@host</EM> prevents this interpretation. That is, <EMCLASS="emphasis">/a</EM>is a file, but <EMCLASS="emphasis">/a@host</EM> is not. This distinction is necessaryfor X.400 addresses to be handled correctly. Note that this works only if the<CODECLASS="literal">smtp</CODE> delivery agent omits the <CODECLASS="literal">F=/</CODE> flag.</P></BLOCKQUOTE><PCLASS="para">To deliver to a file, <EMCLASS="emphasis">sendmail</EM> first performsa <EMCLASS="emphasis">fork</EM>(2) and gives the child the task of delivery. The<EMCLASS="emphasis">fork</EM> is necessary so that <EMCLASS="emphasis">sendmail</EM> can change itseffective <EMCLASS="emphasis">uid</EM> and <EMCLASS="emphasis">gid</EM>, as we will show.The child then performs a <EMCLASS="emphasis">stat</EM>(3)on the file. If the file exists, its file permissions are savedfor later use.If it doesn't exist, the saved permissions are defaulted to 0666.Under V8.7 the decision to use <EMCLASS="emphasis">stat</EM>(2) versus <EMCLASS="emphasis">lstat</EM>(2)to obtain the permissions is determined by the <CODECLASS="literal">SafeFileEnvironment</CODE>option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-58"TITLE="">Section 34.8.58, SafeFileEnvironment</A>).</P><PCLASS="para">If the saved permissions have any execute bit set, the childexits with EX_CANTCREAT as defined in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>.If the file has a controlling userassociated with it, any <EMCLASS="emphasis">suid</EM> and <EMCLASS="emphasis">sgid</EM> bits are stripped fromthe saved permissions.If the file was listed in a <EMCLASS="emphasis">~/.forward</EM> file, the controllinguser is the owner of the <EMCLASS="emphasis">~/.forward</EM> file. If it was listed in a<CODECLASS="literal">:include:</CODE>'d file, the controlling user is the owner of the included file.If the message is being processed from the queue, the controllinguser may be specified in the <CODECLASS="literal">qf</CODE> file (see <ACLASS="xref"HREF="ch23_09.htm#SML2-CH-23-SECT-9-2"TITLE="">Section 23.9.2, C line</A>).</P><PCLASS="para">Then the queue <CODECLASS="literal">df</CODE> file (see <ACLASS="xref"HREF="ch23_09.htm#SML2-CH-23-SECT-9-3"TITLE="">Section 23.9.3, D line</A>) is opened for reading(if it is not already open). If that file cannot be opened, <EMCLASS="emphasis">sendmail</EM>prints the following error message but continues to attempt delivery:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mailfile: Cannot open <CODECLASS="replaceable"><I>df</I></CODE> for <CODECLASS="replaceable"><I>file</I></CODE> from <CODECLASS="replaceable"><I>sender</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="replaceable"><I>df</I></CODE> is the name of the queue data filethat cannot be opened. The <CODECLASS="replaceable"><I>file</I></CODE> is the name of thefile to which <EMCLASS="emphasis">sendmail</EM> is attempting to deliver themessage. The <CODECLASS="replaceable"><I>sender</I></CODE>is the address of the sender of the mail message.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22536"></A>Next, if the <CODECLASS="literal">SafeFileEnvironment</CODE> option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-58"TITLE="">Section 34.8.58</A>)was declared, <EMCLASS="emphasis">sendmail</EM> performs a <EMCLASS="emphasis">chroot</EM>(2) into the directoryspecified. If the <EMCLASS="emphasis">chroot</EM>(2) fails, <EMCLASS="emphasis">sendmail</EM> prints and logsthe following error and the child exits with EX_CANTCREAT:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mailfile: Cannot chroot(<CODECLASS="replaceable"><I>directory</I></CODE>)</PRE></BLOCKQUOTE></P><PCLASS="para">Next, whether the <CODECLASS="literal">df</CODE> file is opened or not, <EMCLASS="emphasis">sendmail</EM>changes its <EMCLASS="emphasis">gid</EM>: </P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">If there is a controlling user, <EMCLASS="emphasis">sendmail</EM> sets its <EMCLASS="emphasis">gid</EM> tothat of the controlling user.</P></LI><LICLASS="listitem"><PCLASS="para">Otherwise, if the <EMCLASS="emphasis">sgid</EM> bit is set in the file'ssaved permissions, <EMCLASS="emphasis">sendmail</EM>changes its <EMCLASS="emphasis">gid</EM> to that of the group of the file.</P></LI><LICLASS="listitem"><PCLASS="para">Otherwise, <EMCLASS="emphasis">sendmail</EM> checks to see whether the <CODECLASS="literal">U=</CODE> equate is set for this delivery agent(see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-13"TITLE="">Section 30.4.13, U=</A>).If the <CODECLASS="literal">U=</CODE> equate is set, <EMCLASS="emphasis">sendmail</EM> changes its <EMCLASS="emphasis">gid</EM>to that specified.</P></LI><LICLASS="listitem"><PCLASS="para">Otherwise, <EMCLASS="emphasis">sendmail</EM> changes its<EMCLASS="emphasis">gid</EM> to that specified by the <CODECLASS="literal">DefaultUser</CODE> (<CODECLASS="literal">g</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-15"TITLE="">Section 34.8.15, DefaultUser (g)(u)</A>).</P></LI></UL><PCLASS="para">After this, <EMCLASS="emphasis">sendmail</EM> changes its <EMCLASS="emphasis">uid</EM>, using the same rules that it usedfor the <EMCLASS="emphasis">gid</EM> except that the last step uses the <CODECLASS="literal">DefaultUser</CODE> (<CODECLASS="literal">u</CODE>)option.</P><PCLASS="para">The file (and possibly the path to it) is then checked to see whether itis safe to write to. This is done by using the internal <EMCLASS="emphasis">safefile</EM>() subroutine.See the <CODECLASS="literal">-d44</CODE> debugging switch (<ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-159"TITLE="">Section 37.5.159, -d44.4</A>)for a description of this process.</P><PCLASS="para">If safe, <EMCLASS="emphasis">file</EM> is then opened for writing in append mode. If <EMCLASS="emphasis">sendmail</EM>cannot open the file, it prints the following error message, andthe child exits with EX_CANTCREAT:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot open: <ICLASS="lineannotation">reason for error here</I></PRE></BLOCKQUOTE></P><PCLASS="para">If an open fails, it is attempted 10 more times (sleeping progressively longer between each try) [3]on the assumption that on busy systems there may bea temporary lack of resources (such as file descriptors).The open includes file lockingwith <EMCLASS="emphasis">flock</EM>(2) or <EMCLASS="emphasis">fcntl</EM>(2)to prevent simultaneous writes.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] The progression is 0 seconds for the first sleep, then 10 seconds,then 20 seconds, then 30 seconds, and so on.</P></BLOCKQUOTE><PCLASS="para">Once the file is opened, the header and body of the mail message are written to it.Note that translations are controlled by the <CODECLASS="literal">F=</CODE> flags of the  <CODECLASS="literal">prog</CODE> delivery agent for all but V8 <EMCLASS="emphasis">sendmail</EM>. V8 <EMCLASS="emphasis">sendmail</EM> uses the <CODECLASS="literal">F=</CODE> flags of the <CODECLASS="literal">*file*</CODE>delivery agent.For example, <CODECLASS="literal">F=l</CODE> (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-28"TITLE="">Section 30.8.28, F=l (lowercase L)</A>) marks this as final delivery.</P><PCLASS="para">If any write error occurs, <EMCLASS="emphasis">sendmail</EM> prints the followingerror message and continues:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">I/O error</PRE></BLOCKQUOTE></P><PCLASS="para">Finally, the file's permissions are restored to those that were saved above,and the file is closed with <EMCLASS="emphasis">fclose</EM>(3).If the <EMCLASS="emphasis">suid</EM> or<EMCLASS="emphasis">sgid</EM> bits were stripped because there was a controllinguser, they are restored here.[4]If the file didn't originally exist, its permissions become 0666.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] This is because some paranoid systems, such as BSD UNIX, turn off the <EMCLASS="emphasis">suid</EM>/<EMCLASS="emphasis">sgid</EM> bits when a file is written to other than by <EMCLASS="emphasis">root</EM>.</P></BLOCKQUOTE><PCLASS="para">In general, the file form of an alias is a poor way to savemail messages to a file.Instead, the use of a separateprogram <EMCLASS="emphasis">procmail</EM>(8) is recommended (see <ACLASS="xref"HREF="ch25_07.htm#SML2-CH-25-SECT-7-5-2"TITLE="The procmail program">Section 25.7.5.2, "The procmail program"</A>).<ACLASS="indexterm"NAME="AUTOID-22622"></A>&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-2-3">24.2.3 Delivery via Programs</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-24-IX-DELIVERY-TO-PROGRAMS-PROGRAMS"></A><ACLASS="indexterm"NAME="SML2-CH-24-IX-PROGRAMS-DELIVERING-TO"></A><ACLASS="indexterm"NAME="AUTOID-22632"></A>When any of the addresses to the right of a colon in the aliaslist begins with a <CODECLASS="literal">|</CODE> character, delivery is made by piping themail message through a program.This is automatic with most configuration files but not with others.If your configuration file does not automatically recognizea leading <CODECLASS="literal">|</CODE> character, you will need to add a new rulenear the end of your rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6</A>). For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R|$+     $@ $#local $: |$1</PRE></BLOCKQUOTE></P><PCLASS="para">Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, any delivery agent for which the <CODECLASS="literal">F=|</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-8"TITLE="">Section 30.8.8, F=| (vertical bar)</A>) is set can also pipe messages through programs.To disable this ability, simply remove the <CODECLASS="literal">F=|</CODE> flag from all delivery agentdeclarations in your configuration file.</P><PCLASS="para">The forms that a program address can legally take in the<EMCLASS="emphasis">aliases</EM>(5) file (or <EMCLASS="emphasis">~/.forward</EM> file; see <ACLASS="xref"HREF="ch25_07.htm#SML2-CH-25-SECT-7-4"TITLE="Piping Through Programs">Section 25.7.4, "Piping Through Programs"</A>) are as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">|prg&quot;|prg args&quot;|&quot;prg args&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">prg</CODE> is the full path of the program to be run (theenvironment variable PATH is not available).If command-line arguments are needed for the program, they mustfollow <CODECLASS="literal">prg</CODE>, and the entire expression must be quoted.The leading full quotation mark may either precede or followthe <CODECLASS="literal">|</CODE>.If the address is quoted withfull quotation marks, the leading quotation mark is ignored indetermining the leading <CODECLASS="literal">|</CODE> character.</P><PCLASS="para">To execute the program, <EMCLASS="emphasis">sendmail</EM> executes the commandin the <CODECLASS="literal">P=</CODE> equate of the <CODECLASS="literal">prog</CODE> delivery agent. Thatcommand is one of the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/bin/sh -c/bin/smrsh -c</PRE></BLOCKQUOTE></P><PCLASS="para">These tell <EMCLASS="emphasis">sendmail</EM> to run <EMCLASS="emphasis">/bin/sh</EM> (the Bourne shell)or <EMCLASS="emphasis">/bin/smrsh</EM> (the <EMCLASS="emphasis">sendmail</EM> restricted shell) toexecute the program specified by <CODECLASS="literal">prg</CODE>. The <CODECLASS="literal">-c</CODE>tells that shell to take any arguments that follow and executethem as though they were commands typed interactively to the shell.These arguments are constructed by removing theleading <CODECLASS="literal">|</CODE> from the program address and appending what remains,quotation marks and all, to the <CODECLASS="literal">P=</CODE> command. For example,if an alias looked like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">jim: &quot;|/etc/local/relo jim@otherhost&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">the Bourne shell would be executed with the following command line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/bin/sh -c &quot;/etc/local/relo jim@otherhost&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;The result of all this is that <EMCLASS="emphasis">sendmail</EM> runs the Bourne shell and thenthe Bourne shell runs the <EMCLASS="emphasis">/etc/local/relo</EM> program.</P><PCLASS="para">Mail is delivered under this scheme by attaching the outputof <EMCLASS="emphasis">sendmail</EM> to the standard input of the shell and attaching the standardoutput and standard error output of the shell to the inputof <EMCLASS="emphasis">sendmail</EM>. The <EMCLASS="emphasis">sendmail</EM> program simply printsthe mail message to the shell and reads any errors that the shellprints in return.</P><PCLASS="para">Although this process appears to be fairly straightforward, there aremany things that can go wrong. Failure usuallyresults in the mail message being bounced.&#13;</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-24-SECT-2-3-1">24.2.3.1 Possible failures</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22686"></A>To communicate with the <CODECLASS="literal">P=</CODE> program (the Bourne shell),<EMCLASS="emphasis">sendmail</EM> createstwo communications channels using <EMCLASS="emphasis">pipe</EM>(2). This can failbecause the system is out of file descriptors or because thesystem file table is full. Failure results in one of the followingerrors:&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">openmailer: pipe (to mailer)openmailer: pipe (from mailer)</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Next, <EMCLASS="emphasis">sendmail</EM> executes a <EMCLASS="emphasis">fork</EM>(2). The child later becomes the <CODECLASS="literal">P=</CODE> program. This can fail becausethe system limit on the maximum allowable number of processeshas been exceeded or because virtual memory has been exhausted.Failure causes the following error message to be printed:&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">openmailer: cannot fork</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;In establishing a communications channel, the <EMCLASS="emphasis">sendmail</EM> child processcreates a copy of its standard input file descriptor. This canfail because the system limit on available file descriptors hasbeen exceeded. When this happens, the following message is printed.Note that not all <EMCLASS="emphasis">dup</EM>(2) failures produce error messages.&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot dup to zero!</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Finally, the child transforms itself into the <CODECLASS="literal">A=</CODE> programwith <EMCLASS="emphasis">execve</EM>(2). If that transformation fails, the following errormessage is produced, where <EMCLASS="emphasis">program</EM> is <CODECLASS="literal">argv[0]</CODE> forthe <CODECLASS="literal">A=</CODE> program (in this case, usually <EMCLASS="emphasis">/bin/sh</EM>):&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot exec <CODECLASS="replaceable"><I>program</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Failure can be caused by a wide range of problems. If one occursand the deliveryagent is <CODECLASS="literal">local</CODE>, the message is queued for a later try.Otherwise, requeueing occursonly if the error return value is a transient onedefined in <EMCLASS="emphasis">transienterror</EM>() in <EMCLASS="emphasis">conf.c</EM>.[5]&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] Because of a bug in all but the IDA and V8 versions, themessage is silently discarded without being requeued or bounced.</P></BLOCKQUOTE><PCLASS="para">Programs in the <EMCLASS="emphasis">aliases</EM> file are run with the <CODECLASS="literal">prog</CODE>delivery agent. As a consequence, that delivery agent should havethe <CODECLASS="literal">F=s</CODE> (strip quotes) flag set.<ACLASS="indexterm"NAME="AUTOID-22725"></A>&#13;</P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_01.htm"TITLE="24.1 The aliases(5) File"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.1 The aliases(5) File"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_03.htm"TITLE="24.3 Write a Delivery Agent Script"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.3 Write a Delivery Agent Script"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">24.1 The aliases(5) File</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">24.3 Write a Delivery Agent Script</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>