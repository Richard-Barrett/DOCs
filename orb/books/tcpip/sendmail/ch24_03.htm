<HTML><HEAD><TITLE>[Chapter 24] 24.3 Write a Delivery Agent Script</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:38:38Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch24_01.htm"TITLE="24. Aliases"><LINKREL="prev"HREF="ch24_02.htm"TITLE="24.2 Forms of Alias Delivery"><LINKREL="next"HREF="ch24_04.htm"TITLE="24.4 Special Aliases"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_02.htm"TITLE="24.2 Forms of Alias Delivery"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.2 Forms of Alias Delivery"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 24<BR>Aliases</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_04.htm"TITLE="24.4 Special Aliases"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.4 Special Aliases"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-24-SECT-3">24.3 Write a Delivery Agent Script</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-24-IX-DELIVERY-AGENTS-MTAS-SCRIPTS-VIA"></A>The program that is driven by the <CODECLASS="literal">prog</CODE> delivery agent may be a compiledexecutable binary, a shell script, or even a <EMCLASS="emphasis">perl</EM>(1) script.The limitation on the kind of program that may be run is made bythe <EMCLASS="emphasis">sh</EM>(1) shell (if <CODECLASS="literal">sh -c</CODE> is used in the <CODECLASS="literal">A=</CODE>)or by <EMCLASS="emphasis">execve</EM>(2) (if it is launched directly from the <CODECLASS="literal">P=</CODE>).You need to read the manuals on your system to determine yourlimitations. For example, not all versions of <EMCLASS="emphasis">sh</EM>(1) allowconstructs like the following in scripts:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/usr/local/bin/perl</PRE></BLOCKQUOTE></P><PCLASS="para">When this appears as the first line of a script,the <CODECLASS="literal">#!</CODE> tells <EMCLASS="emphasis">sh</EM>(1) or <EMCLASS="emphasis">execve</EM>(2) torun the program whose pathname follows, to execute the commandsin the script.[6]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] Not all versions of UNIX support this feature, and on some of thosethat do support it, only a few shells are supported.</P></BLOCKQUOTE><PCLASS="para">In writing a program for mail delivery using the <CODECLASS="literal">prog</CODE>delivery agent, some unexpected problems can arise.We will illustrate, using fragments from a Bourne shell script.<ACLASS="indexterm"NAME="AUTOID-22750"></A><ACLASS="indexterm"NAME="AUTOID-22751"></A>&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-3-1">24.3.1 Duplicates discarded</A></H3><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> gathers its list of recipients, it views a programto run as just another recipient. Before performing any delivery, itsorts the list of recipients and discards any duplicates. Ordinarily,this is just the behavior that is desired, but discarding duplicate programsfrom the <EMCLASS="emphasis">aliases</EM>(5) file[7]can cause some users to lose mail. To illustrate, considera program thatnotifies the system administrator that mail has arrived for a retireduser:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] Under V8 <EMCLASS="emphasis">sendmail</EM> this is no longer a problem for duplicateprograms listed in <EMCLASS="emphasis">~/.forward</EM> files (see <ACLASS="xref"HREF="ch25_07.htm#SML2-CH-25-SECT-7-4"TITLE="Piping Through Programs">Section 25.7.4</A>) butstill is a problem for <EMCLASS="emphasis">aliases</EM>. The solution that <EMCLASS="emphasis">sendmail</EM> uses is to internally appendthe <EMCLASS="emphasis">uid</EM> of the <EMCLASS="emphasis">~/.forward</EM> file's owner to the program name, thus makingthe program name more unique.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/sh/usr/ucb/mail -s gone postmaster</PRE></BLOCKQUOTE></P><PCLASS="para">This script reads everything (the mail message) from its standardinput and feeds what it reads to the <EMCLASS="emphasis">/usr/ucb/mail</EM> program.The command-line arguments to <EMCLASS="emphasis">mail</EM> area subject line of <CODECLASS="literal">gone</CODE> and a recipient of <CODECLASS="literal">postmaster</CODE>. Now consider two aliases that usethis program:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">george: &quot;|/usr/local/bin/gone&quot;ben:    &quot;|/usr/local/bin/gone&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">When mail is sent to both <CODECLASS="literal">george</CODE> and <CODECLASS="literal">ben</CODE>, <EMCLASS="emphasis">sendmail</EM>aliases each to the program <CODECLASS="literal">|/usr/local/bin/gone</CODE>. But sinceboth the two addresses are identical, <EMCLASS="emphasis">sendmail</EM> discards one.</P><PCLASS="para">To avoid this problem (which is most common in user <EMCLASS="emphasis">~/.forward</EM>files), design all delivery programs to require at least oneunique argument. For example, the above program should berewritten to require the user's name as an argument:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shif [ ${#} -ne 2 ]; then        echo $0 needs a user name.        exitfi/usr/ucb/mail -s &quot;$1 gone&quot; postmaster</PRE></BLOCKQUOTE></P><PCLASS="para">By requiring a username as an argument, the once-faulty aliasesare made unique:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">george: &quot;|/usr/local/bin/gone george&quot;ben:    &quot;|/usr/local/bin/gone ben&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Although the program paths are still the same, the addresses (name andarguments together) are different, and neither is discarded.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-3-2">24.3.2 Correct exit(2) values</A></H3><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program expects its <CODECLASS="literal">A=</CODE> programs to exitwith reasonable <EMCLASS="emphasis">exit</EM>(2) values. The values that it expects arelisted in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>. Exiting with unexpected valuescauses <EMCLASS="emphasis">sendmail</EM> to bounce mail and give an unclear message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">554 Unknown status <EMCLASS="emphasis">val</EM></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>val</I></CODE> is the unexpected error value. To illustrate, considerthe following rewrite of the previous script:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shEX_OK=0                   # From &lt;sysexits.h&gt;EX_USAGE=64               # From &lt;sysexits.h&gt;if [ ${#} -ne 2 ]; then        echo $0 needs a user name.        exit $EX_USAGEfi/usr/ucb/mail -s &quot;$1 gone&quot; postmasterexit $EX_OK</PRE></BLOCKQUOTE></P><PCLASS="para">Here, if the argument count is wrong, we exit with the value EX_USAGE,thus producing a clearer (two-line) error message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/local/bin/gone needs a user name./usr/local/bin/gone... Bad usage.</PRE></BLOCKQUOTE></P><PCLASS="para">If all goes well, we then exit with EX_OK so that <EMCLASS="emphasis">sendmail</EM>knows that the mail was successfully delivered.&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-24-SECT-3-3">24.3.3 Is It Really EX_OK?</A></H3><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> sees that the <CODECLASS="literal">A=</CODE> program exited withEX_OK, it assumes that the mail message was successfully delivered.It is vital for programs that deliver mail to exit withEX_OK only if delivery was 100% successful. Failure to take precautionsto detect every possible error can result in lost mail andangry users.To illustrate, consider the following common C language statement:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">(void)fclose(fp);</PRE></BLOCKQUOTE></P><PCLASS="para">If the file that is being written to is remotely mounted, the writtendata may be cached locally. All the preceding write statementswill have succeeded, but if the remote host crashes afterthe last write (but before the close), some of the data canbe lost. The <EMCLASS="emphasis">fclose</EM>(3) fails, but the <CODECLASS="literal">(void)</CODE>prevents detection of that failure.</P><PCLASS="para">Even in writing small shell scripts, it is important to includeerror checking. The following rewrite of our <EMCLASS="emphasis">gone</EM>program includes error checking but does not handle signals.We leave that as an exercise for the reader:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shEX_OK=0                   # From &lt;sysexits.h&gt;EX_USAGE=64               # From &lt;sysexits.h&gt;EX_SOFTWARE=70            # From &lt;sysexits.h&gt;if [ ${#} -ne 2 ]; then        echo $0 needs a user name.        exit $EX_USAGEfiif /usr/ucb/mail -s &quot;$1 gone&quot; postmaster &gt;/dev/null 2&gt;&amp;1then        exit $EX_OKfiexit $EX_SOFTWARE</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22824"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_02.htm"TITLE="24.2 Forms of Alias Delivery"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 24.2 Forms of Alias Delivery"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch24_04.htm"TITLE="24.4 Special Aliases"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 24.4 Special Aliases"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">24.2 Forms of Alias Delivery</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">24.4 Special Aliases</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>