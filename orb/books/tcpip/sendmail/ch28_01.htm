<HTML><HEAD><TITLE>[Chapter 28] Rules</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:49:59Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part04.htm"TITLE="IV. Reference"><LINKREL="prev"HREF="ch27_06.htm"TITLE="27.6 Pitfalls"><LINKREL="next"HREF="ch28_02.htm"TITLE="28.2 Tokenizing Rules"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch27_06.htm"TITLE="27.6 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 27.6 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 28</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_02.htm"TITLE="28.2 Tokenizing Rules"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 28.2 Tokenizing Rules"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="SML2-CH-28">28. Rules</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="sect1"HREF="#SML2-CH-28-SECT-1"TITLE="28.1 Overview">Overview</A><BR><ACLASS="sect1"HREF="ch28_02.htm"TITLE="28.2 Tokenizing Rules">Tokenizing Rules</A><BR><ACLASS="sect1"HREF="ch28_03.htm"TITLE="28.3 The Workspace">The Workspace</A><BR><ACLASS="sect1"HREF="ch28_04.htm"TITLE="28.4 The Behavior of a Rule">The Behavior of a Rule</A><BR><ACLASS="sect1"HREF="ch28_05.htm"TITLE="28.5 The LHS">The LHS</A><BR><ACLASS="sect1"HREF="ch28_06.htm"TITLE="28.6 The RHS">The RHS</A><BR><ACLASS="sect1"HREF="ch28_07.htm"TITLE="28.7 Pitfalls">Pitfalls</A></P><P></P></DIV><PCLASS="para"></P><PCLASS="para">Rules are like little if-then clauses, existing insiderule sets, that test a patternagainst an address and change the address if the two match.The process of converting one form of an address into another is called <EMCLASS="emphasis">rewriting</EM>.<ACLASS="indexterm"NAME="SML2-CH-28-IX-RULES"></A>Most rewriting requires a sequence of many rules,because an individual rule is relatively limited in what it can do. This need for many rules, combined with the <EMCLASS="emphasis">sendmail</EM>program's need for succinct expressions, can make sequencesof rules dauntingly cryptic.</P><PCLASS="para">In this chapter we dissect the components of individual rules. Inthe previous chapterwe showed how groups of rules are combined to perform necessary tasks.</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-28-SECT-1">28.1 Overview</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26115"></A>Rules are declared in the configuration file with the <CODECLASS="literal">R</CODE> command.Like all configuration commands, the <CODECLASS="literal">R</CODE> rule configuration commandmust begin a line. The general form consists of an <CODECLASS="literal">R</CODE> command followed by three parts:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R<CODECLASS="replaceable"><I>lhs    rhs   comment</I></CODE>     <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>      <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>    <ICLASS="lineannotation">tabs</I>    <ICLASS="lineannotation">tabs</I></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">lhs</CODE> stands for <EMCLASS="emphasis">left-hand side</EM> and is most commonly expressedas <SPANCLASS="acronym">LHS</SPAN>. The <CODECLASS="literal">rhs</CODE> stands for <EMCLASS="emphasis">right-hand side</EM> and is expressedas <SPANCLASS="acronym">RHS</SPAN>.The <SPANCLASS="acronym">LHS</SPAN> and <SPANCLASS="acronym">RHS</SPAN> are mandatory.The third part (the <CODECLASS="literal">comment</CODE>) is optional. The three parts must be separated from each other by oneor more tab characters (space characters will <EMCLASS="emphasis">not</EM> work).</P><PCLASS="para">Space characters between the <CODECLASS="literal">R</CODE> and the <SPANCLASS="acronym">LHS</SPAN> are optional.If there isa tab between the <CODECLASS="literal">R</CODE> and the <SPANCLASS="acronym">LHS</SPAN>, <EMCLASS="emphasis">sendmail</EM>silently uses the <SPANCLASS="acronym">LHS</SPAN> as the <SPANCLASS="acronym">RHS</SPAN> and the <SPANCLASS="acronym">RHS</SPAN>becomes the comment.</P><PCLASS="para">The tabs leading to the comment and the comment itselfare optional and may be omitted. If the <SPANCLASS="acronym">RHS</SPAN> is absent, <EMCLASS="emphasis">sendmail</EM> prints the following warning and ignores that<CODECLASS="literal">R</CODE> line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">invalid rewrite line &quot;<ICLASS="lineannotation">bad rule here</I>&quot; (tab expected)</PRE></BLOCKQUOTE></P><PCLASS="para">This error is printed when the <SPANCLASS="acronym">RHS</SPAN> is absent, even if thereare tabs following the <SPANCLASS="acronym">LHS</SPAN>.(This warning is usually the result of tabsbeing converted to spaces when text is copied from one windowto another in a windowing system.)</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-28-SECT-1-1">28.1.1 Macros in Rules</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26160"></A>Each noncomment part of a ruleis expanded as the configuration file is read.[1]Thus any references to defined macros are replaced with the value that the macro has at thatpoint in the configuration file.To illustrate, consider this mini-configuration file (called <EMCLASS="emphasis">x.cf</EM>):</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Actually, the comment part is expanded too, but with no effect otherthan a tiny expenditure of time.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DAvalue1R$A    $A.newDAvalue2R$A    $A.new</PRE></BLOCKQUOTE></P><PCLASS="para">In it, <CODECLASS="literal">$A</CODE> will have the value <CODECLASS="literal">value1</CODE> when the first <CODECLASS="literal">R</CODE>line is expanded and <CODECLASS="literal">value2</CODE> when the second is expanded.Prove this to yourself by running <EMCLASS="emphasis">sendmail</EM> in <CODECLASS="literal">-bt</CODE> rule-testing mode onthat file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B></CODE>&gt; =S0Rvalue1                 value1 . new Rvalue2                 value2 . new</PRE></BLOCKQUOTE></P><PCLASS="para">Here, we use the <CODECLASS="literal">=S</CODE> command (see <ACLASS="xref"HREF="ch38_04.htm#SML2-CH-38-SECT-4-1"TITLE="Show Rules in a Rule Set with =S">Section 38.4.1, "Show Rules in a Rule Set with =S"</A>) to show eachrule after it has been read and expanded.</P><PCLASS="para">Another property of macros is that anundefined macro expands to an empty string.Consider this <EMCLASS="emphasis">x.cf</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DAvalue1R$A    $A.$BDAvalue2R$A    $A.$B</PRE></BLOCKQUOTE></P><PCLASS="para">and this rule-testing run of <EMCLASS="emphasis">sendmail</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B></CODE>&gt; =S0Rvalue1                 value1 . Rvalue2                 value2 .</PRE></BLOCKQUOTE></P><PCLASS="para">Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, macros can be either single-character or multicharacter.Both forms are expanded when the configuration file is read:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">D{OURDOMAIN}us.eduR${OURDOMAIN}    localhost.${OURDOMAIN}</PRE></BLOCKQUOTE></P><PCLASS="para">Multicharacter macros may be used in the <SPANCLASS="acronym">LHS</SPAN> and in the <SPANCLASS="acronym">RHS</SPAN>.When the configuration file is read, the previous example is expandedto look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; =S0Rus . edu               localhost . us . edu</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-28-SECT-1-2">28.1.2 Rules Are Treated Like Addresses</A></H3><PCLASS="para">After each side (<SPANCLASS="acronym">LHS</SPAN> and <SPANCLASS="acronym">RHS</SPAN>) is expanded, each is then normalized justas though it were an address.A check is made for any tabs that may have been introducedduring expansion. If any are found, everything from the first tab tothe end of the string is discarded. Then <SPANCLASS="acronym">RFC822</SPAN>-style commentsare removed. An <SPANCLASS="acronym">RFC822</SPAN> comment is anything between and includingan unquoted pair of parentheses:<ACLASS="indexterm"NAME="AUTOID-26207"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DAroot@my.site (Operator)R$A  <ICLASS="lineannotation">tab</I><CODECLASS="replaceable"><I> </I></CODE><SPANCLASS="acronym">RHS</SPAN>  <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v"></I>Rroot@my.site (Operator)  <ICLASS="lineannotation">tab</I><CODECLASS="replaceable"><I> </I></CODE><SPANCLASS="acronym">RHS</SPAN><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> expanded</I>  <ICLASS="lineannotation"><IMGSRC="../chars/darr.gif"ALT="-v"></I>Rroot@my.site  <ICLASS="lineannotation">tab</I><CODECLASS="replaceable"><I> </I></CODE><SPANCLASS="acronym">RHS</SPAN><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> RFC822 comment stripped</I></PRE></BLOCKQUOTE></P><PCLASS="para">Finally, a check is made for balanced quotation marks,right parentheses balanced by left,and right angle brackets balanced by left.[2]If any right-hand character appears without a correspondingleft-hand character, <EMCLASS="emphasis">sendmail</EM> prints one of the following errors,where <EMCLASS="emphasis">configfile</EM> is the name of the configuration file that is beingread, <CODECLASS="replaceable"><I>num</I></CODE> shows the line number in that file, and <CODECLASS="replaceable"><I>expression</I></CODE> is thepart of the rule that was unbalanced:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] The <CODECLASS="literal">$&gt;</CODE> operator isn't counted in checking balance.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><EMCLASS="emphasis">configfile: line </EM><CODECLASS="replaceable"><I>num: expression...Unbalanced '&quot;'</I></CODE><EMCLASS="emphasis">configfile: line </EM><CODECLASS="replaceable"><I>num: expression...Unbalanced '&gt;'</I></CODE><EMCLASS="emphasis">configfile: line </EM><CODECLASS="replaceable"><I>num: expression...Unbalanced ')'</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The first line shows that <EMCLASS="emphasis">sendmail</EM>has balanced the unbalanced quotation mark by appending a second quotation mark.Each of the last two lines shows that the unbalanced character is removed.For example, the file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Rx      RHS&quot;Ry      RHS&gt;Rz      RHS)</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;produces these errors and rules:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B></CODE>x.cf: line 1: RHS&quot;... Unbalanced '&quot;'x.cf: line 2: RHS&gt;... Unbalanced '&gt;'x.cf: line 3: RHS)... Unbalanced ')'&gt; =S0Rx              RHS &quot;&quot; Ry              RHS Rz              RHS</PRE></BLOCKQUOTE></P><PCLASS="para">Note that prior to V8.7 <EMCLASS="emphasis">sendmail</EM>,only an unbalanced right-hand character was checked:[3]Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, unbalanced left-hand characters are also detected,and <EMCLASS="emphasis">sendmail</EM> attempts to balance them for you. Consider, the following file:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] That is, for example, there must not be a <CODECLASS="literal">&gt;</CODE> before the <CODECLASS="literal">&lt;</CODE>character, and they must pair off.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Rx      &quot;RHSRy      &lt;RHSRz      (RHS</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <EMCLASS="emphasis">sendmail</EM> detects and fixes the unbalanced characters butdoes so with warnings:<ACLASS="indexterm"NAME="AUTOID-26261"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo =S0 | /usr/lib/sendmail -bt -Cx.cf</B></CODE>x.cf: line 1: &quot;RHS... Unbalanced '&quot;'x.cf: line 2: &lt;RHS... Unbalanced '&lt;'x.cf: line 3: (RHS... Unbalanced '('x.cf: line 3: R line: null RHS&gt; =S0Rx              &quot;RHS&quot; Ry              &lt; RHS &gt; Rz</PRE></BLOCKQUOTE></P><PCLASS="para">Note that in the last example (<CODECLASS="literal">Rz</CODE>), <EMCLASS="emphasis">sendmail</EM> balanced the <SPANCLASS="acronym">RHS</SPAN>by adding a rightmost parenthesis.  This caused the <SPANCLASS="acronym">RHS</SPAN> to becomean <SPANCLASS="acronym">RFC822</SPAN> comment, which was then deleted, resulting in the null <SPANCLASS="acronym">RHS</SPAN> error.</P><PCLASS="para">If you get one of these <CODECLASS="literal">Unbalanced</CODE> errors, be sure to correctthe problem at once. If you leave the faulty rule in place, <EMCLASS="emphasis">sendmail</EM>will continue to run but will likely produce erroneous mail deliveryand other odd problems.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="SML2-CH-28-SECT-1-2-1">28.1.2.1 Backslashes in rules</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26279"></A><ACLASS="indexterm"NAME="AUTOID-26282"></A>Backslash characters are used in addresses to protect certain specialcharacters from interpretation (see <ACLASS="xref"HREF="ch35_03.htm#SML2-CH-35-SECT-3-2"TITLE="Escape Character in the Header Field">Section 35.3.2, "Escape Character in the Header Field"</A>).For example, the address<EMCLASS="emphasis">blue;jay</EM> would ordinarily be interpreted as having threeparts (or tokens, which we'll discuss soon). To prevent <EMCLASS="emphasis">sendmail</EM>from treating this address as three parts and instead have itviewed as a single item, the special separating nature of the<CODECLASS="literal">;</CODE> can be <EMCLASS="emphasis">escaped</EM> by prefixing it witha backslash:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">blue\;jay</PRE></BLOCKQUOTE></P><PCLASS="para">V8 <EMCLASS="emphasis">sendmail</EM> handles backslashes differentlythan other versions have in the past. Instead of stripping a backslashand setting a high bit (see below), it leaves backslashes in place:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">blue\;jay      <ICLASS="lineannotation">becomes   <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>   blue\;jay</PRE></BLOCKQUOTE></P><PCLASS="para">Thiscauses the backslash to mask the special meaning of characters,because <EMCLASS="emphasis">sendmail</EM> always recognizes the backslash in that role.</P><PCLASS="para">The only time that V8 <EMCLASS="emphasis">sendmail</EM> strips backslashes isduring local delivery, and then only if they are not insidefull quotation marks. Mail to <EMCLASS="emphasis">\user</EM> is delivered to<EMCLASS="emphasis">user</EM> on the local machine (bypassing further aliasing) withthe backslash stripped.But for mail to <EMCLASS="emphasis">\user@otherhost</EM> the backslash is preserved in both the envelope and the header.</P><PCLASS="para">Prior to V8 <EMCLASS="emphasis">sendmail</EM>,for addresses and rules (which are normalized as addresses),the backslash was removed by <EMCLASS="emphasis">sendmail</EM> and the high bitof the character following the backslash was set (turned on).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">blue;jay    <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>    <ICLASS="lineannotation">high-bit turned on</I></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26312"></A>This practice was abandoned because of the need to supportinternational characters (such as &ouml;, <IMGSRC="../chars/ddelta.gif"ALT="[Delta]">, and <IMGSRC="../chars/phi.gif"ALT="[phi]">). Most international charactersets include many characters that have the high bit set.Escaping a character by setting its high bit is a practicethat no longer works in our modern, international world.</P></DIV></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch27_06.htm"TITLE="27.6 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 27.6 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_02.htm"TITLE="28.2 Tokenizing Rules"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 28.2 Tokenizing Rules"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">27.6 Pitfalls</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">28.2 Tokenizing Rules</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>