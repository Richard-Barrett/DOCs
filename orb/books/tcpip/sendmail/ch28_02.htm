<HTML><HEAD><TITLE>[Chapter 28] 28.2 Tokenizing Rules</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T19:50:07Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch28_01.htm"TITLE="28. Rules"><LINKREL="prev"HREF="ch28_01.htm"TITLE="28.1 Overview"><LINKREL="next"HREF="ch28_03.htm"TITLE="28.3 The Workspace"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_01.htm"TITLE="28.1 Overview"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 28.1 Overview"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 28<BR>Rules</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_03.htm"TITLE="28.3 The Workspace"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 28.3 The Workspace"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-28-SECT-2">28.2 Tokenizing Rules</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-28-IX-TOKENIZATION"></A>The <EMCLASS="emphasis">sendmail</EM> program views the text that makes up rules and addresses as being composed of individual tokens.Rules are <EMCLASS="emphasis">tokenized</EM>&nbsp;- divided up into individual parts&nbsp;- whilethe configuration file is being read and while they are beingnormalized. Addresses are tokenized at another time (as we'll showlater), but the process is the same for both.</P><PCLASS="para">The text <EMCLASS="emphasis">our.domain</EM>, for example,is composed of three tokens: <EMCLASS="emphasis">our</EM>, a dot, and <EMCLASS="emphasis">domain</EM>.These 10 characters are divided into tokensby the list of separation characters defined by the <CODECLASS="literal">OperatorChars</CODE> (pre-V8.7 <CODECLASS="literal">$o</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-45"TITLE="">Section 34.8.45, OperatorChars or $o</A>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Do.:%@!^=/[]                         <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> prior to V8.7</I>O OperatorChars=.:%@!^/[]            <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> V8.7 and above</I></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;When any of these separation characters are recognized in text,they are considered individual tokens. Any leftover text is thencombined into the remaining tokens.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx@yyy;zzz    <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;">  </I>xxx  @   yyy;zzz</PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="literal">@</CODE> is defined to be a token, but <CODECLASS="literal">;</CODE> is not.Therefore, the text is divided into three tokens.However, in addition to the characters in the <CODECLASS="literal">OperatorChars</CODE> (pre-V8.7 <CODECLASS="literal">$o</CODE>) option, <EMCLASS="emphasis">sendmail</EM>defines 10 tokenizing characters internally (in <EMCLASS="emphasis">parseaddr.c</EM>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">()&lt;&gt;,;\&quot;\r\n</PRE></BLOCKQUOTE></P><PCLASS="para">These two lists are combined into one master list that is used forall tokenizing. The above example, when divided by using this masterlist, becomes five tokens instead of just three:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx@yyy;zzz    <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;">  </I>xxx  @   yyy  ;  zzz</PRE></BLOCKQUOTE></P><PCLASS="para">In rules, quotation marks can be used to override themeaning of tokenizing characters defined in the master list. For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&quot;xxx@yyy&quot;;zzz    <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;">  </I>&quot;xxx@yyy&quot;  ;  zzz</PRE></BLOCKQUOTE></P><PCLASS="para">Here, three tokens are produced, because the <CODECLASS="literal">@</CODE> appearsinside quotation marks. Note that the quotationmarks are retained.</P><PCLASS="para">Because the configuration file is read sequentially from start to finish,the <CODECLASS="literal">OperatorChars</CODE> (pre-V8.7 <CODECLASS="literal">$o</CODE>) optionshould be defined before any rules are declared.But note that beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, omission of this option cause theseparation characters to default to</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">. : % @ ! ^ / [ ]</PRE></BLOCKQUOTE></P><PCLASS="para"></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-28-SECT-2-1">28.2.1 $ Operators Are Tokens</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26365"></A>As we progress into the details of rules, you will see that certaincharacters become operators when prefixed with a <CODECLASS="literal">$</CODE> character.Operators cause <EMCLASS="emphasis">sendmail</EM> to perform actions, such as lookingfor a match (<CODECLASS="literal">$*</CODE> is a wildcard operator) or replacing tokens with others by position(<CODECLASS="literal">$1</CODE> is a replacement operator).</P><PCLASS="para">For tokenizing purposes, operatorsalways divide one token from another, just as the characters in themaster list did. For example</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx$*zzz    <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;">  </I>xxx  $*  zzz</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-28-SECT-2-2">28.2.2 The Space Character Is Special</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26379"></A><ACLASS="indexterm"NAME="AUTOID-26382"></A>The space character is special for two reasons.First, although the space character is not in the master list,it <EMCLASS="emphasis">always</EM> separates one token from another:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx zzz    <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;">  </I>xxx  zzz</PRE></BLOCKQUOTE></P><PCLASS="para">Second, although the space character separates tokens, it is notitself a token. That is, in the above example the seven characterson the left (the seventh is the space in the middle) become twotokens of three letters each, not three tokens.Therefore the space character can be used inside the <SPANCLASS="acronym">LHS</SPAN> or <SPANCLASS="acronym">RHS</SPAN> of rulesfor improved clarity but does not itself become a token or changethe meaning of the rule.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-28-SECT-2-3">28.2.3 Pasting Addresses Back Together</A></H3><PCLASS="para">After an address has passed through all the rules (and has been modifiedby rewriting), the tokens that form it are pasted back togetherto form a single string. The pasting process is very straightforwardin that it mirrors the tokenizing process:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx  @  yyy   <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>   xxx@yyy</PRE></BLOCKQUOTE></P><PCLASS="para">The only exception to this straightforward pasting process occurs whentwo adjoining tokens are both simple text. Simple text is anythingother than the separation characters (defined by the<CODECLASS="literal">OperatorChars</CODE> (pre-V8.7, <CODECLASS="literal">$o</CODE>) option, see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-45"TITLE="">Section 34.8.45</A>,and internally by <EMCLASS="emphasis">sendmail</EM>) or the operators (characters prefixedby a <CODECLASS="literal">$</CODE> character). The <CODECLASS="literal">xxx</CODE> and <CODECLASS="literal">yyy</CODE> above areboth simple text.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-26407"></A>When two tokens of simple text are pasted together, the characterdefined by the<CODECLASS="literal">BlankSub</CODE> (<CODECLASS="literal">B</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-5"TITLE="">Section 34.8.5, BlankSub (B)</A>) is inserted between them.[4]Usually, thatoption is defined as a dot, so two tokens of simple text wouldhave a dot inserted between them when they are joined:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] In the old days (RFC733), usernames to the left of the <CODECLASS="literal">@</CODE> couldcontain spaces. But UNIX also uses spaces as command-line argumentseparators, so option <CODECLASS="literal">B</CODE> was introduced.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">xxx  yyy   <ICLASS="lineannotation">becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>   xxx.yyy</PRE></BLOCKQUOTE></P><PCLASS="para">Note that the improper use of a space character in the <SPANCLASS="acronym">LHS</SPAN> or <SPANCLASS="acronym">RHS</SPAN> of rules can lead to addresses that have a dot (or other character)inserted where one was not intended.<ACLASS="indexterm"NAME="AUTOID-26422"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_01.htm"TITLE="28.1 Overview"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 28.1 Overview"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch28_03.htm"TITLE="28.3 The Workspace"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 28.3 The Workspace"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">28.1 Overview</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">28.3 The Workspace</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>