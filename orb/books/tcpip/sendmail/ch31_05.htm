<HTML><HEAD><TITLE>[Chapter 31] 31.5 Macro Expansion: $ and $&amp;</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T20:10:55Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch31_01.htm"TITLE="31. Defined Macros"><LINKREL="prev"HREF="ch31_04.htm"TITLE="31.4 Macro Names"><LINKREL="next"HREF="ch31_06.htm"TITLE="31.6 Macro Conditionals: $?, $|, and $."></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_04.htm"TITLE="31.4 Macro Names"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.4 Macro Names"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 31<BR>Defined Macros</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_06.htm"TITLE="31.6 Macro Conditionals: $?, $|, and $."><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.6 Macro Conditionals: $?, $|, and $."BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-31-SECT-5">31.5 Macro Expansion: $ and $&amp;</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-31-IX-DOLLAR-SIGN-DOLLAR-IN-MACRO-NAMES-IN-MACRO-NAMES"></A><ACLASS="indexterm"NAME="SML2-CH-31-IX-EXPANDING-MACROS"></A>The value of a macro can be used by puttinga <CODECLASS="literal">$</CODE> character in front of the macro's name. For example,consider the following definition:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">D<CODECLASS="replaceable"><I>Xtext</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the macro named <CODECLASS="replaceable"><I>X</I></CODE> is given <CODECLASS="replaceable"><I>text</I></CODE> as its value.</P><PCLASS="para">If you later prefix a macro name with a <CODECLASS="literal">$</CODE> character, you may use that value.This is called <EMCLASS="emphasis">expanding</EM> a macro:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$X</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the expression <CODECLASS="literal">$X</CODE> tells <EMCLASS="emphasis">sendmail</EM> to usethe value stored in <CODECLASS="literal">X</CODE> (the <CODECLASS="replaceable"><I>text</I></CODE>) rather thanits name (<CODECLASS="replaceable"><I>X</I></CODE>).</P><PCLASS="para">For multicharacter names, the process is the same,but the name is surrounded with curly braces:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">D<CODECLASS="replaceable"><I>{Xxx}text        </I></CODE><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> declare {Xxx}</I>${Xxx}            <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> use {Xxx}</I></PRE></BLOCKQUOTE></P><PCLASS="para"></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-31-SECT-5-1">31.5.1 Macro Expansion Is Recursive</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-33362"></A>When <CODECLASS="replaceable"><I>text</I></CODE> contains other macros, those other macrosare also expanded. This process is recursive andcontinues until all macros have been expanded. For example,consider the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DAxxxDByyyDC$A.$BDD$C.zzz</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="replaceable"><I>text</I></CODE> for the macro <CODECLASS="literal">D</CODE> is <CODECLASS="literal">$C.zzz</CODE>.When the expression <CODECLASS="literal">$D</CODE> appears in a line in the configurationfile, it is recursively expanded like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$D            <ICLASS="lineannotation"><IMGSRC="../chars/rarr.gif"ALT="-&gt;"> becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>  $C.zzz$C.zzz        <ICLASS="lineannotation"><IMGSRC="../chars/rarr.gif"ALT="-&gt;"> becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>  $A.$B.zzz$A.$B.zzz     <ICLASS="lineannotation"><IMGSRC="../chars/rarr.gif"ALT="-&gt;"> becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>  xxx.$B.zzzxxx.$B.zzz    <ICLASS="lineannotation"><IMGSRC="../chars/rarr.gif"ALT="-&gt;"> becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>  xxx.yyy.zzz</PRE></BLOCKQUOTE></P><PCLASS="para">Notice that when <EMCLASS="emphasis">sendmail</EM> recursively expands a macro, it does soone macro at a time, always expanding the leftmost macro.</P><PCLASS="para">In rules, when <EMCLASS="emphasis">sendmail</EM> expands a macro,it also tokenizes it. For example,placing the above <CODECLASS="literal">$D</CODE> in the following rule's LHS:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+@$D      $1</PRE></BLOCKQUOTE></P><PCLASS="para">causes the LHS to contain seven tokens, rather than three:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+@xxx.yyy.zzz       $1</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-31-SECT-5-2">31.5.2 When Is a Macro Expanded?</A></H3><PCLASS="para">A macro can either be expanded immediately or at runtime, dependingon where the expansion takes place in the configuration file.</P><PCLASS="para">Macros are expanded in rule sets as the configurationfile is read and parsed by <EMCLASS="emphasis">sendmail</EM>,and (beginning with V8.7) so are macros inrule-set names (see <ACLASS="xref"HREF="ch29_01.htm#SML2-CH-29-SECT-1-4"TITLE="Macros in Rule-Set Names">Section 29.1.4, "Macros in Rule-Set Names"</A>)and in maps declared with the <CODECLASS="literal">K</CODE> configuration command (see <ACLASS="xref"HREF="ch33_03.htm"TITLE="The K Configuration Command">Section 33.3, "The K Configuration Command"</A>).In other configurationlines, expansion is deferred until <EMCLASS="emphasis">sendmail</EM> actuallyneeds to use that value. In yet others, macros are neither recognized nor expanded.</P><PCLASS="para">To illustrate, macros used in header commands are not beexpanded until the headers of a mail message are processed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">H?x?Full-Name: $x</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">$x</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-42"TITLE="">Section 31.10.42, $x</A>) may change as <EMCLASS="emphasis">sendmail</EM> is running.It contains as its value the full name of the sender. Clearly, thismacro should not be expanded until that full name is known.</P><PCLASS="para">On the other hand, macros in rules are always expanded <EMCLASS="emphasis">when the configurationfile is read</EM>. Therefore macros like <CODECLASS="literal">$x</CODE> should never be usedin rules, because the configuration file is read long beforemail is processed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$x	($x)</PRE></BLOCKQUOTE></P><PCLASS="para">Rules like this won't work because <CODECLASS="literal">$x</CODE> lacks a value whenthe configuration file is read. This rule will be expanded to becomemeaningless:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R      ()</PRE></BLOCKQUOTE></P><PCLASS="para">Note that the <CODECLASS="literal">$</CODE><CODECLASS="replaceable"><I>digit</I></CODE> positional operator (see <ACLASS="xref"HREF="ch28_06.htm#SML2-CH-28-SECT-6-1"TITLE="Copy by Position: $digit">Section 28.6.1, "Copy by Position: $digit"</A>)in the RHS may not be used toreference defined macros in the LHS. Consider this example, in which <CODECLASS="literal">{HOST}</CODE>has the value <CODECLASS="literal">myhost</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R${HOST}     &lt;$1&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">${HOST}</CODE> is expanded when the configuration file is read andis transformed into:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Rmyhost   &lt;$1&gt;   <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> error</I></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="literal">$1</CODE> has no wildcard operator in the LHS to referenceand so will produce this error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">replacement $1 out of bounds</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-31-SECT-5-3">31.5.3 Use Value as Is with $&amp;</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-31-IX-PREFIXES-DOLLAR-PREFIXES"></A>For those situations in which a macro should not be recursively expanded,but rather should be used in rules as is, V8 <EMCLASS="emphasis">sendmail</EM> offers the <CODECLASS="literal">$&amp;</CODE>prefix.For example, consider the following RHS of a rule:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R...     $w.$&amp;m</PRE></BLOCKQUOTE></P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> encounters this RHS in the configurationfile, it recursively expands <CODECLASS="literal">$w</CODE> intoits final text value (where that text value is your hostname, such as <EMCLASS="emphasis">lady</EM>). But because the <CODECLASS="literal">m</CODE> macrois prefixed with <CODECLASS="literal">$&amp;</CODE>, it is not expanded.</P><PCLASS="para">This could be useful, because it appears to offer a way to delayexpansion of macros in rules until after the configuration fileis read. Unfortunately such is not always the case, because the expandedtext returned by the <CODECLASS="literal">$&amp;</CODE> prefix is always a single token.That is, because the above is tokenized before each token is evaluated,it appears in the workspace as</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">lady . $m</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Here, the <CODECLASS="literal">$m</CODE> will expand to its current value, say, <EMCLASS="emphasis">our.domain</EM>,but that expansion will remain a single token:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">lady . our.domain</PRE></BLOCKQUOTE></P><PCLASS="para">When tokens are compared during rule-set processing, they are comparedtoken by token. Consequently, the single token above will not matchthe individual tokens of a real address, as shown on the left:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">our      <ICLASS="lineannotation">does not match</I> our.domain.        <ICLASS="lineannotation">does not match</I> our.domaindomain   <ICLASS="lineannotation">does not match</I> our.domain</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">$&amp;</CODE> prefix is intended to provide a way to accessmacros that are given values after the configuration file is read.Therefore the failure of <CODECLASS="literal">$&amp;</CODE> to <EMCLASS="emphasis">recursively</EM> expand is the result ofan implementation designed to meet the limited goal of accessing those runtime macros. (See <ACLASS="xref"HREF="ch33_08.htm#SML2-CH-33-SECT-8-4"TITLE="">Section 33.8.4, dequote</A> for ways touse the <CODECLASS="literal">dequote</CODE> database class to circumvent this restriction.)</P><PCLASS="para">To illustrate one application of <CODECLASS="literal">$&amp;</CODE>, consider the client/hubsetup described in the tutorial. In that setup, all mail sent froma client machine is forwarded to the hub for eventual delivery.If the client were to run a <EMCLASS="emphasis">sendmail</EM> daemon to receivemail for local delivery, a mail loop could (in the absence of an MX record)develop where a message would bounce backand forth between the client and the hub, eventually failing.</P><PCLASS="para">To break such a loop, a rule must be devised that recognizesthat a received message is from the hub:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$+              $: $&amp;r @ $&amp;s &lt;$1&gt;       Get protocol and hostRsmtp @ $H &lt;$+&gt;  $#local $: $1           Local delivery breaks a loopR$* &lt;$+&gt;         $#smtp  $@ $H $: $2     Punt to hub</PRE></BLOCKQUOTE></P><PCLASS="para">These rules appear in rule set 0. By the time they are reached,other rules have forwarded any nonlocal mail to the hub. What is leftin the workspace is a lone username. The first rule above matchesthe workspace and rewrites it to be the sending protocol (<CODECLASS="literal">$&amp;r</CODE>;see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-31"TITLE="">Section 31.10.31, $r</A>),an <CODECLASS="literal">@</CODE>, the sending host (<CODECLASS="literal">$&amp;s</CODE>,see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-33"TITLE="">Section 31.10.33, $s</A>), and the username inangle brackets:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">user    <ICLASS="lineannotation"><IMGSRC="../chars/rarr.gif"ALT="-&gt;"> becomes <IMGSRC="../chars/rarr.gif"ALT="-&gt;"></I>    smtp@hub&lt;user&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">The second rule checks to make sure the message was received withthe SMTP protocol from the hub. If it was, then the <CODECLASS="literal">local</CODE>delivery agent is used to deliver the message on the local machine.If it was received from any other host or by any other protocol,the second rule fails and the third forwards the lone user addressto the hub.<ACLASS="indexterm"NAME="AUTOID-33486"></A><ACLASS="indexterm"NAME="AUTOID-33487"></A><ACLASS="indexterm"NAME="AUTOID-33488"></A>&#13;</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_04.htm"TITLE="31.4 Macro Names"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.4 Macro Names"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_06.htm"TITLE="31.6 Macro Conditionals: $?, $|, and $."><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.6 Macro Conditionals: $?, $|, and $."BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">31.4 Macro Names</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">31.6 Macro Conditionals: $?, $|, and $.</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>