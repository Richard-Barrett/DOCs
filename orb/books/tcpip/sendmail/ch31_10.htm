<HTML><HEAD><TITLE>[Chapter 31] 31.10 Alphabetized Reference</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T20:13:08Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch31_01.htm"TITLE="31. Defined Macros"><LINKREL="prev"HREF="ch31_09.htm"TITLE="31.9 Pitfalls"><LINKREL="next"HREF="ch32_01.htm"TITLE="32. Class Macros"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_09.htm"TITLE="31.9 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.9 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 31<BR>Defined Macros</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch32_01.htm"TITLE="32. Class Macros"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 32. Class Macros"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-31-SECT-10">31.10 Alphabetized Reference</A></H2><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program reserves all lowercaseletters, punctuation characters, and digits for its own use. For multicharacternames it reserves all those that begin with an underscore ora lowercase letter.<ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-TAB-6"TITLE="Reserved Macros">Table 31.7</A>lists all the macro names that have special internal meaningto <EMCLASS="emphasis">sendmail</EM>.Included in this list are macros that are used by the <EMCLASS="emphasis">m4</EM>configuration technique.[9]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] Note that these are the exception to the usual rule in thatthey are all uppercase letters. In a way this makes sense, becausethey are being used by the configuration file, not by the internalsof the <EMCLASS="emphasis">sendmail</EM> program.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="SML2-CH-31-TAB-6">Table 31.7: Reserved Macros</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Macro</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$_</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-1"TITLE="">Section 31.10.1</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">RFC1413-validation &amp; IP source route (V8.1 and above)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$a</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-2"TITLE="">Section 31.10.2</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The origin date in RFC822 format</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$b</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-3"TITLE="">Section 31.10.3</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The current date in RFC822 format</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">${bodytype}</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-4"TITLE="">Section 31.10.4</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The ESMTP BODY parameter</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$B</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-5"TITLE="">Section 31.10.5</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The BITNET relay</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$c</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-6"TITLE="">Section 31.10.6, $c</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The hop count</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">${client_addr}</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-7"TITLE="">Section 31.10.7</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The connecting host's IP address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">${client_name}</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-8"TITLE="">Section 31.10.8</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The connecting host's canonical name</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$C</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-9"TITLE="">Section 31.10.9</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The hostname of the DECnet relay (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$d</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-10"TITLE="">Section 31.10.10</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The current date in UNIX <EMCLASS="emphasis">ctime</EM>(3)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$e</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-65"TITLE="">Section 34.8.65</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">SMTP greeting message (V8.6 and earlier)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">${envid}</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-12"TITLE="">Section 31.10.12</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The original DSN envelope ID (V8.8 and above)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$E</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-13"TITLE="">Section 31.10.13</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">X.400 relay (unused) (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$f</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-14"TITLE="">Section 31.10.14, $f</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The sender's address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$F</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-15"TITLE="">Section 31.10.15</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">FAX relay (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$g</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-16"TITLE="">Section 31.10.16</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The sender's address relative to recipient</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$h</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-17"TITLE="">Section 31.10.17, $h</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Host part of the recipient address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$H</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-18"TITLE="">Section 31.10.18</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The mail hub (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$i</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-19"TITLE="">Section 31.10.19, $i</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The queue identifier</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$j</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-20"TITLE="">Section 31.10.20</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Official canonical name</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$k</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-21"TITLE="">Section 31.10.21</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">UUCP node name (V8.1 and above)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$l</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-72"TITLE="">Section 34.8.72</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">UNIX <CODECLASS="literal">From</CODE> format (V8.6 and earlier)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$L</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-23"TITLE="">Section 31.10.23</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Local user relay (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$m</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-24"TITLE="">Section 31.10.24</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The DNS domain name (V8.1 and above)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$M</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-25"TITLE="">Section 31.10.25</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Who we are masquerading as (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$n</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-26"TITLE="">Section 31.10.26</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Error message sender</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$o</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-45"TITLE="">Section 34.8.45</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Token separation characters (V8.6 and earlier)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">${opMode}</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-28"TITLE="">Section 31.10.28</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The startup operating mode (V8.7 and above)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$p</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-29"TITLE="">Section 31.10.29, $p</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The <EMCLASS="emphasis">sendmail</EM> process ID</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$q</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-30"TITLE="">Section 31.10.30</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Default form of the sender address (V8.6 and earlier)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$r</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-31"TITLE="">Section 31.10.31</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The protocol used</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$R</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-32"TITLE="">Section 31.10.32</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The relay for unqualified names (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$s</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-33"TITLE="">Section 31.10.33</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Sender host's name</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$S</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-34"TITLE="">Section 31.10.34</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The Smart Host (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$t</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-35"TITLE="">Section 31.10.35</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Current time in seconds</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$u</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-36"TITLE="">Section 31.10.36, $u</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Recipient's username</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$U</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-37"TITLE="">Section 31.10.37</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The UUCP name to override $k</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$v</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-38"TITLE="">Section 31.10.38</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The <EMCLASS="emphasis">sendmail</EM> program's version</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$V</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-39"TITLE="">Section 31.10.39</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The UUCP relay (for class <CODECLASS="literal">$=V</CODE>) (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$w</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-40"TITLE="">Section 31.10.40</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The short name of this host</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$W</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-41"TITLE="">Section 31.10.41</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The UUCP relay (for class <CODECLASS="literal">$=W</CODE>) (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$x</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-42"TITLE="">Section 31.10.42</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The full name of the sender</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$X</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-43"TITLE="">Section 31.10.43</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The UUCP relay (for class <CODECLASS="literal">$=X</CODE>) (m4 technique)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$y</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-44"TITLE="">Section 31.10.44, $y</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Name of the controlling TTY</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$Y</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-45"TITLE="">Section 31.10.45</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The UUCP relay for unclassified hosts</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$z</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-46"TITLE="">Section 31.10.46, $z</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Recipient's home directory</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">$Z</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-47"TITLE="">Section 31.10.47</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The version of this m4 configuration (m4 technique)</TD></TR></TBODY></TABLE><PCLASS="para">The following pages present a complete reference for each reservedmacro. They are presented in alphabetical orderfor ease of lookup, rather than in the order in which they typically appearin configuration files.</P><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-1">31.10.1 $-</A></H3><PCLASS="refpurpose">RFC1413-validation and IP source route</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34205"></A><ACLASS="indexterm"NAME="AUTOID-34207"></A>RFC1413, <EMCLASS="emphasis">Identification Protocol</EM>, describes a methodfor identifying the user and host that initiate network connections.[10]It relies on the originating host, which must be running the <EMCLASS="emphasis">identd</EM>(8) daemon.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Bugs in Ultrix and OSF/1 (and maybe others) break the <EMCLASS="emphasis">ident</EM>protocol. For an explanation, see <EMCLASS="emphasis">conf.h</EM>.</P></BLOCKQUOTE><PCLASS="para">When the V8 <EMCLASS="emphasis">sendmail</EM> daemon receives a network connectionrequest (and if <CODECLASS="literal">Timeout.ident</CODE> option, see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-70-10"TITLE="Timeout.ident">Section 34.8.70.10, "Timeout.ident"</A>,is nonzero),it attempts to connect to the originating host's <EMCLASS="emphasis">identd</EM> service.If the originating host supports identification, <EMCLASS="emphasis">sendmail</EM>reads the login name of the user who initiated the connection.The <EMCLASS="emphasis">sendmail</EM> program then appends an <CODECLASS="literal">@</CODE> and thename of the originating host to it. If the name of the originating hostis an IP number in square brackets, <EMCLASS="emphasis">sendmail</EM> attempts to convertthe number to a hostname. The final result, in the form <EMCLASS="emphasis">user@host</EM>,is assigned to <CODECLASS="literal">$_</CODE>.</P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> is run on the local machine, it sets <CODECLASS="literal">$_</CODE>to be the name of the user that corresponds to the <EMCLASS="emphasis">uid</EM>of the process that ran <EMCLASS="emphasis">sendmail</EM>. It gets that name bycalling <EMCLASS="emphasis">getpwuid</EM>(3). If the call fails, the name is set to the string:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Unknown UID: <CODECLASS="replaceable"><I>num</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>num</I></CODE> is the <EMCLASS="emphasis">uid</EM> for which a login name couldnot be found.</P><PCLASS="para">Next, an <CODECLASS="literal">@</CODE> and the name of the localmachine are appended to the name, and the result is assigned to <CODECLASS="literal">$_</CODE>.</P><PCLASS="para">Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, attempts at IP source routing canalso be stored in this macro. If <EMCLASS="emphasis">sendmail</EM>was compiled with IP_SRCROUTE defined,that IP source routing information will be added to <CODECLASS="literal">$_</CODE> afterthe user and host described above. The format of this additionalinformation is described in <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-13"TITLE="">Section 18.8.13, IP-SRCROUTE</A>.</P><PCLASS="para">The <CODECLASS="literal">$_</CODE> macro is not used by <EMCLASS="emphasis">sendmail</EM>. Rather, it isoffered as a means for the administrator to use authenticationinformation. One possibility would be to include it in the<CODECLASS="literal">Received:</CODE> header:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">HReceived: $?sfrom $s $.<CODECLASS="userinput"><B>$?_($_) $.</B></CODE>by $j ($v/$Z) id $i; $b</PRE></BLOCKQUOTE></P><PCLASS="para">Another possibility is to customize <EMCLASS="emphasis">checkcompat</EM>() in <EMCLASS="emphasis">conf.c</EM>.One might, for example, wish to rejectany mail in which the host part of <CODECLASS="literal">$_</CODE> does not match thecontents of <CODECLASS="literal">$s</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-33"TITLE="">Section 31.10.33</A>).<ACLASS="xref"HREF="ch20_02.htm#SML2-CH-20-SECT-2-4"TITLE="Verify identd Information">Section 20.2.4, "Verify identd Information"</A> shows anexample of how to code this.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-2">31.10.2 $a</A></H3><PCLASS="refpurpose">The origin date in RFC822 format</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34269"></A>The <CODECLASS="literal">$a</CODE> macro holds the origin date ofa mail message (the date and time that the original messagewas sent).It holds a date in ARPAnet format,defined in RFC822, section 5.1, and amended by RFC1123, section 5.2.14.</P><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program obtains that date in one of the following four ways:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> first begins to run, it presets severaldate-oriented macros internally to the current date and time.Among those are the macros <CODECLASS="literal">$t</CODE>,<CODECLASS="literal">$d</CODE>, <CODECLASS="literal">$b</CODE>,and <CODECLASS="literal">$a</CODE>. This initialization is done afterthe configuration file is read, so all but <CODECLASS="literal">$b</CODE>may be given initial values in that file.</P></LI><LICLASS="listitem"><PCLASS="para">Whenever <EMCLASS="emphasis">sendmail</EM> collects information from the stored header ofa message (whether after message collection, during processing of thequeue, or when saving to the queue), it sets the value of <CODECLASS="literal">$a</CODE>.If a <CODECLASS="literal">Posted-Date:</CODE> header exists, thedate from that line is used. Otherwise, if a <CODECLASS="literal">Date:</CODE> header exists, that date is used.Note that no check is made by <EMCLASS="emphasis">sendmail</EM> to ensure that the date in<CODECLASS="literal">$a</CODE> is indeed in RFC822 format. Of necessity it must trustthat the originating program has adhered to that standard.</P></LI><LICLASS="listitem"><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> notifies the user of an error, it takes theorigin date from <CODECLASS="literal">$b</CODE> (the current date in RFC822 format,and places that value into <CODECLASS="literal">$a</CODE>.</P></LI></UL><PCLASS="para"><CODECLASS="literal">$a</CODE> is chiefly intended for use in configuration-file header definitions. It may also be used in delivery agent<CODECLASS="literal">A=</CODE> equates (argument vectors), although it is of littlevalue in that case.</P><PCLASS="para"><CODECLASS="literal">$a</CODE> is transient. If defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>..</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-3">31.10.3 $b</A></H3><PCLASS="refpurpose">The current date in RFC822 format</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34310"></A><ACLASS="indexterm"NAME="AUTOID-34312"></A>The <CODECLASS="literal">$b</CODE> macro contains the current date in ARPAnet format,as defined in RFC822, section 5.1, and amended by RFC1123, section 5.2.14.</P><PCLASS="para">Because <CODECLASS="literal">$b</CODE> holds the current date and time, <EMCLASS="emphasis">sendmail</EM>frequently updates the value in that macro.When <EMCLASS="emphasis">sendmail</EM> first starts to run, it places the current dateand time into <CODECLASS="literal">$b</CODE>. Thereafter, each time an SMTPconnection is made and each time the queue is processed, the valueof the date and time in that macro is updated.</P><PCLASS="para">If the system call to <EMCLASS="emphasis">time</EM>(3) should fail, the value stored in<CODECLASS="literal">$b</CODE> becomes Wed Dec 31 15:59:59 1969,[11]and no other indication of an error is given.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] The actual time depends on the local time zone.</P></BLOCKQUOTE><PCLASS="para"><CODECLASS="literal">$b</CODE> is chiefly intended for use in configuration-fileheader definitions that require ARPAnet format(such as <CODECLASS="literal">Received:</CODE>, see <ACLASS="xref"HREF="ch35_10.htm#SML2-CH-35-SECT-10-25"TITLE="">Section 35.10.25, Received:</A>).It may also be used in delivery agent<CODECLASS="literal">A=</CODE> equates (argument vectors), although it is of littlevalue in that case.</P><PCLASS="para"><CODECLASS="literal">$b</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-4">31.10.4 ${bodytype}</A></H3><PCLASS="refpurpose">The ESMTP BODY parameter</P>(V8.8 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34344"></A><ACLASS="indexterm"NAME="AUTOID-34347"></A><ACLASS="indexterm"NAME="AUTOID-34349"></A>MIME (multimedia) support in V8 <EMCLASS="emphasis">sendmail</EM> has been coupledto ESMTP (Extended SMTP) of the new BODY parameter for theMAIL command. That parameter tells <EMCLASS="emphasis">sendmail</EM> whether itis dealing with 7-bit or 8-bit MIME data:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">MAIL From: &lt;<CODECLASS="replaceable"><I>address</I></CODE>&gt; <CODECLASS="userinput"><B>BODY=7BIT</B></CODE>MAIL From: &lt;<CODECLASS="replaceable"><I>address</I></CODE>&gt; <CODECLASS="userinput"><B>BODY=8BITMIME</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The parameter specified for the BODY (7BIT or 8BITMIME)is the value stored in the <CODECLASS="literal">${bodytype}</CODE> macro. </P><PCLASS="para">The <CODECLASS="literal">${bodytype}</CODE> macro is intended to be used as part of the deliveryagent's <CODECLASS="literal">A=</CODE> equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1"TITLE="">Section 30.4.1, A=</A>).It provides a means to pass this informationto delivery agent programs as part of their command lines.</P><PCLASS="para"><CODECLASS="literal">${bodytype}</CODE> is transient. If defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.Note that the <CODECLASS="literal">-B</CODE> command-line switch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-1"TITLE="">Section 36.7.1, -B</A>)can be used to specify a value to be stored in <CODECLASS="literal">${bodytype}</CODE>, but thatvalue too is transient.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-5">31.10.5 $B</A></H3><PCLASS="refpurpose">The BITNET relay</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34380"></A><ACLASS="indexterm"NAME="AUTOID-34382"></A>When configuring with the <EMCLASS="emphasis">m4</EM> technique, you can specify a host that will transfer mail between the Internet and BITNET.Mail to BITNET may then be sent by appending thepseudo-domain <CODECLASS="literal">.BITNET</CODE> to an address. For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">user@ucbicsi.BITNET</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">ucbicsi</CODE> is a BITNET host.</P><PCLASS="para">To allow your configuration file to handle this form of address,you need to declare the name of your BITNET relayusing the BITNET_RELAY keyword:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`BITNET_RELAY', `<CODECLASS="replaceable"><I>relayhost</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">This statement causes the rule for BITNET to be included inyour configuration file and causes <CODECLASS="replaceable"><I>relayhost</I></CODE>to be assigned as the value of <CODECLASS="literal">$B</CODE>.(See <ACLASS="xref"HREF="ch19_04.htm#SML2-CH-19-SECT-4-5"TITLE="Relays">Section 19.4.5, "Relays"</A> for a description of how to include a deliveryagent specification with <CODECLASS="replaceable"><I>relayhost</I></CODE>.)</P><PCLASS="para">See also <CODECLASS="literal">bitdomain</CODE> FEATURE (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-9"TITLE="">Section 19.6.9, FEATURE(bitdomain)</A>)for a way to convert BITNET addresses to Internet addressesfor hosts that have both.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-6">31.10.6 $c</A></H3><PCLASS="refpurpose">The hop count</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34411"></A><ACLASS="indexterm"NAME="AUTOID-34413"></A><ACLASS="indexterm"NAME="AUTOID-34417"></A>The <CODECLASS="literal">c</CODE> macro is used to store the number of times a mailmessage has been forwarded from site to site. It is a count of thenumber of <CODECLASS="literal">Received:</CODE>,<CODECLASS="literal">Via:</CODE>, and <CODECLASS="literal">Mail-From:</CODE> header lines in a message.</P><PCLASS="para">The value in <CODECLASS="literal">$c</CODE> is not used by <EMCLASS="emphasis">sendmail</EM>. Rather,it is made available for use in configuration-file header linedefinitions. When calculating the hop count for comparisonto the <CODECLASS="literal">MaxHopCount</CODE> (<CODECLASS="literal">h</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-36"TITLE="">Section 34.8.36, MaxHopCount (h)</A>), <EMCLASS="emphasis">sendmail</EM>uses internal variables.</P><PCLASS="para"><CODECLASS="literal">$c</CODE> is transient. If defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-7">31.10.7 ${client-addr}</A></H3><PCLASS="refpurpose">The connecting host's IP address</P>(V8.8 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34442"></A><ACLASS="indexterm"NAME="AUTOID-34444"></A><ACLASS="indexterm"NAME="AUTOID-34447"></A>The <CODECLASS="literal">${client_addr}</CODE> macro is assigned its value when a host connectsto the running daemon. The value assigned is the IP addressof that connecting host and is the same as the IP addressstored in the <CODECLASS="literal">$_</CODE> macro,but without the surrounding square brackets and other non-IP information.</P><PCLASS="para">The <CODECLASS="literal">${client_addr}</CODE> macro can be useful in the <CODECLASS="literal">check_rcpt</CODE> (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-1"TITLE="The check_mail Rule Set">Section 29.10.1, "The check_mail Rule Set"</A>)and <CODECLASS="literal">check_mail</CODE> (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-2"TITLE="The check_rcpt Rule Set">Section 29.10.2, "The check_rcpt Rule Set"</A>)rule sets. It can, for example, be useddetect whether an external host is trying to send external mail throughyour outgoing firewall machine.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">D{ourdomain}123.45.6Scheck_mailR$*                 $: $(dequote &quot;&quot; $&amp;{client_addr} $)R${ourdomain}.$-    $@ Okay our domainR$*                 $#error $@ 5.7.1 $: &quot;cannot send out from the outside&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the first rule transfers the value of  <CODECLASS="literal">${client_addr}</CODE> intothe workspace. The <CODECLASS="literal">$&amp;</CODE> prefix (see <ACLASS="xref"HREF="ch31_05.htm#SML2-CH-31-SECT-5-3"TITLE="Use Value as Is with $&amp;">Section 31.5.3, "Use Value as Is with $&amp;"</A>)prevents that macro from wronglybeing expanded when the configuration file is read. The secondrule compares the domain part of your IP domain (that ofyour internal network) to the workspace.If they match, the connection is from a host in your internal domain space.If not, an error is generated in response to the SMTP MAIL command.</P><PCLASS="para">Note that this rule set rejects all mail coming from outside your network,which may be overkill (depending, of course, on what you want).It is really useful only at sites that have two firewalls, one forincoming traffic and one for outgoing traffic. This rule set might go on theoutgoing firewall.</P><PCLASS="para"><CODECLASS="literal">${client_addr}</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.Note that <CODECLASS="literal">${client_addr}</CODE> is <EMCLASS="emphasis">not</EM> guaranteed to be availablein the <CODECLASS="literal">check_compat</CODE> rule set (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-4"TITLE="The check_compat Rule Set">Section 29.10.4, "The check_compat Rule Set"</A>)or in the <CODECLASS="literal">check_relay</CODE> rule set (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-3"TITLE="The check_relay Rule Set">Section 29.10.3, "The check_relay Rule Set"</A>).</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-8">31.10.8 ${client-name}</A></H3><PCLASS="refpurpose">The connecting host's canonical name</P>(V8.8 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34483"></A><ACLASS="indexterm"NAME="AUTOID-34485"></A><ACLASS="indexterm"NAME="AUTOID-34488"></A><ACLASS="indexterm"NAME="AUTOID-34491"></A>The <CODECLASS="literal">${client_name}</CODE> macro is assigned its value when a host connectsto the running daemon. This macro holds as its value, the canonicalhostname of that connecting host, which is the same as the hostnamestored in the <CODECLASS="literal">$_</CODE> macro.</P><PCLASS="para">The <CODECLASS="literal">${client_name}</CODE> macro is useful in the <CODECLASS="literal">check_rcpt</CODE> (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-1"TITLE="The check_mail Rule Set">Section 29.10.1</A>)and <CODECLASS="literal">check_mail</CODE> (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-2"TITLE="The check_rcpt Rule Set">Section 29.10.2</A>)rule sets. It can, for example, be used to see whether the connecting host is your firewall machine:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">D{firewall}fw.our.domainScheck_mailR$*                     $: $(dequote &quot;&quot; $&amp;{client_name} $)R${firewall}            $@ Okay our firewall machineR$*                     $#error $@ 5.7.1 $: &quot;can only accept from our firewall&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the first rule transfers the value of  <CODECLASS="literal">${client_name}</CODE> intothe workspace. The <CODECLASS="literal">$&amp;</CODE> prefix (see <ACLASS="xref"HREF="ch31_05.htm#SML2-CH-31-SECT-5-3"TITLE="Use Value as Is with $&amp;">Section 31.5.3</A>)prevents that macro from wronglybeing expanded when the configuration file is read. The secondrule compares the name of the firewall to that workspace.If they match, the connecting host was indeed the firewall machine.</P><PCLASS="para"><CODECLASS="literal">${client_name}</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.Note that <CODECLASS="literal">${client_name}</CODE> is <EMCLASS="emphasis">not</EM> guaranteed to be availablein the <CODECLASS="literal">check_compat</CODE> rule set (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-4"TITLE="The check_compat Rule Set">Section 29.10.4</A>) or in the <CODECLASS="literal">check_relay</CODE> rule set (see <ACLASS="xref"HREF="ch29_10.htm#SML2-CH-29-SECT-10-3"TITLE="The check_relay Rule Set">Section 29.10.3</A>).</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-9">31.10.9 $C</A></H3><PCLASS="refpurpose">The DECnet relay</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34526"></A><ACLASS="indexterm"NAME="AUTOID-34528"></A><ACLASS="indexterm"NAME="AUTOID-34531"></A>DECnet addresses are of the form <EMCLASS="emphasis">node::user</EM>.They can be handled by defining a host that will relay theminto your DECnet network. Using the <EMCLASS="emphasis">m4</EM> technique, you enable DECnet like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`DECNET_RELAY', `<CODECLASS="replaceable"><I>relay_host</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">Mail addressed to <EMCLASS="emphasis">node::user</EM> will then be forwardedto <CODECLASS="replaceable"><I>relay_host</I></CODE>, as will any Internet-style addressesthat end in the pseudo-domain <CODECLASS="literal">.DECNET</CODE>, such as<EMCLASS="emphasis">user@domain.DECNET</EM>.<CODECLASS="literal">$C</CODE> holds the name of the <CODECLASS="replaceable"><I>relay_host</I></CODE>.(See <ACLASS="xref"HREF="ch19_04.htm#SML2-CH-19-SECT-4-5"TITLE="Relays">Section 19.4.5</A> for a description of how to include a deliveryagent specification with <CODECLASS="replaceable"><I>relay_host</I></CODE>.)</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-10">31.10.10 $d</A></H3><PCLASS="refpurpose">The current date in UNIX ctime(3) format</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34557"></A><ACLASS="indexterm"NAME="AUTOID-34561"></A>The <CODECLASS="literal">$d</CODE> macro holds the current date and time.<CODECLASS="literal">$d</CODE> is given its value at the sametime <CODECLASS="literal">$a</CODE> is defined. The only differencebetween the two is that <CODECLASS="literal">$a</CODE> contains the date inRFC822 format, whereas <CODECLASS="literal">$d</CODE> contains the samedate in UNIX <EMCLASS="emphasis">ctime</EM>(3) format.</P><PCLASS="para">The form of a date in <EMCLASS="emphasis">ctime</EM>(3) format is generally[12]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] The format produced by <EMCLASS="emphasis">ctime</EM>(3) varies depending on thearea of the world.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Sun Dec 26 01:03:52 1999\n </PRE></BLOCKQUOTE></P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> stores this form of date into <CODECLASS="literal">$d</CODE>,it converts the trailing newline (the <CODECLASS="literal">\n</CODE>) into a zero, thusstripping the newline from the date.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-11">31.10.11 $e</A></H3><PCLASS="refpurpose">The SMTP greeting message</P>(V8.6 and earlier)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34589"></A><ACLASS="indexterm"NAME="AUTOID-34591"></A><ACLASS="indexterm"NAME="AUTOID-34593"></A><ACLASS="indexterm"NAME="AUTOID-34595"></A>Prior to V8.7 <EMCLASS="emphasis">sendmail</EM> the <CODECLASS="literal">$e</CODE> macro was used to hold the SMTP greeting message.That role has been taken over by the <CODECLASS="literal">SmtpGreetingMessage</CODE>option. See <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-65"TITLE="">Section 34.8.65</A> for a description ofboth this <CODECLASS="literal">$e</CODE> macro and that new option.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-12">31.10.12 ${envid}</A></H3><PCLASS="refpurpose">The original DSN envelope ID</P>(V8.8 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34612"></A><ACLASS="indexterm"NAME="AUTOID-34614"></A><ACLASS="indexterm"NAME="AUTOID-34617"></A>RFC1891 specifies that the keyword ENVID may be givento the MAIL ESMTP command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">MAIL From: &lt;<CODECLASS="replaceable"><I>address</I></CODE>&gt; ENVID=<CODECLASS="replaceable"><I>envelopeID</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">ENVID is used to propagate a consistent envelope identifier(distinct from the <CODECLASS="literal">Message-ID:</CODE> header; see <ACLASS="xref"HREF="ch35_10.htm#SML2-CH-35-SECT-10-19"TITLE="">Section 35.10.19, Message-ID:</A>), thatwill be permanently associated with the message. The <CODECLASS="literal">envelopeID</CODE>may contain any ASCII characters between <CODECLASS="literal">!</CODE> and <CODECLASS="literal">~</CODE>,except <CODECLASS="literal">+</CODE> and <CODECLASS="literal">=</CODE>.Any characters outside that range must be encoded by prefixing an uppercase, two-digit, hexadecimal representation of it with a plus.For example, an <CODECLASS="literal">envelopeID</CODE> composed of the letter <CODECLASS="literal">X</CODE>followed by a delete character would be encoded like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">X+7F</PRE></BLOCKQUOTE></P><PCLASS="para">When mail is received over an SMTP channel and an ENVIDidentifier is specified, that identifier is saved as part of the envelopeinformation.The value of theENVID identifier is saved in and restored from the <CODECLASS="literal">qf</CODE> file's <CODECLASS="literal">Z</CODE> line(see <ACLASS="xref"HREF="ch23_09.htm#SML2-CH-23-SECT-9-17"TITLE="">Section 23.9.17, Z line</A>). For bounced mail, the ENVID identifier is printedwith the <CODECLASS="literal">Original-Envelope-Id:</CODE> DSN header(see RFC1894) as part of the DSN MIME body.Beginning with V8.8 <EMCLASS="emphasis">sendmail</EM>, an ENVID identifier can also be assigned to a message withthe <CODECLASS="literal">-V</CODE> command-line switch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-40"TITLE="">Section 36.7.40, -V</A>).</P><PCLASS="para">When mail is delivered, the value of the envelope's  ENVID identifier issaved in the <CODECLASS="literal">${envid}</CODE> macro. That macro is available for use withdelivery agents that understand DSN.</P><PCLASS="para"><CODECLASS="literal">${envid}</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-13">31.10.13 $E</A></H3><PCLASS="refpurpose">X.400 relay</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34658"></A><ACLASS="indexterm"NAME="AUTOID-34660"></A>The <CODECLASS="literal">$E</CODE> macro is reserved for the future use of the <EMCLASS="emphasis">m4</EM>technique. It will be used to hold the name of the X.400 relay.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-14">31.10.14 $f</A></H3><PCLASS="refpurpose">The sender's address</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34673"></A><ACLASS="indexterm"NAME="AUTOID-34675"></A>The <CODECLASS="literal">$f</CODE> macro is used to hold the address of the sender. Thataddress can be obtained by <EMCLASS="emphasis">sendmail</EM> from any of a variety ofplaces:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">During an SMTP conversation the sending host specifies the addressof the sender by issuing a MAIL SMTP command.</P></LI><LICLASS="listitem"><PCLASS="para">Trusted users are those declared as part of the <CODECLASS="literal">t</CODE> class (see <ACLASS="xref"HREF="ch32_05.htm#SML2-CH-32-SECT-5-7"TITLE="">Section 32.5.7, $=t</A>).[13]Those users, and programs running under the identity of those users,may specify the address of the sender by using the <CODECLASS="literal">-f</CODE> command-lineswitch when running <EMCLASS="emphasis">sendmail</EM>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] Prior to V8.1 this was set with a <CODECLASS="literal">T</CODE> configuration command.This feature was eliminated in versions V8.1 through V8.6 and restored in V8.7.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para">In processing a message from the queue, the sender's address istaken from the <CODECLASS="literal">qf</CODE> file's <CODECLASS="literal">S</CODE> line.</P></LI><LICLASS="listitem"><PCLASS="para">In processing bounced mail, the sender becomes the name specifiedby the value of <CODECLASS="literal">$n</CODE>, usually <EMCLASS="emphasis">mailer-daemon</EM>.</P></LI><LICLASS="listitem"><PCLASS="para">In the absence of the above, <EMCLASS="emphasis">sendmail</EM> tries to use theuser identity of the invoking program to determine the sender.</P></LI></UL><PCLASS="para">Once <EMCLASS="emphasis">sendmail</EM> has determined the sender (possibly aliased), it rewrites the address found with rule sets3, 1, and 4. The rewritten address is then made the value of <CODECLASS="literal">$f</CODE>.</P><PCLASS="para">&#13;<CODECLASS="literal">$f</CODE> is intended for use in both configuration-file header commands and delivery agent <CODECLASS="literal">A=</CODE> equates.<CODECLASS="literal">$f</CODE> differs from <CODECLASS="literal">$g</CODE>in that <CODECLASS="literal">$g</CODE> undergoesadditional processing to produce a true return address.When <EMCLASS="emphasis">sendmail</EM> queues a mail message and when it processes the queue,the values in <CODECLASS="literal">$f</CODE> and <CODECLASS="literal">$g</CODE> are identical.</P><PCLASS="para"><CODECLASS="literal">$f</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-15">31.10.15 $F</A></H3><PCLASS="refpurpose">The FAX relay</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34728"></A><ACLASS="indexterm"NAME="AUTOID-34730"></A><ACLASS="indexterm"NAME="AUTOID-34732"></A>At many sites, faxes can be sent via email. When the hostthat dispatches those faxes is not the local host, you needto relay FAX mail to the host that can dispatch faxes.This ability is enabled by defining that relay host withthe <EMCLASS="emphasis">m4</EM> technique:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`FAX_RELAY', `<CODECLASS="replaceable"><I>relay_host</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">This causes all mail that ends with the pseudo domain <CODECLASS="literal">.FAX</CODE>to be forwarded to <CODECLASS="replaceable"><I>relay_host</I></CODE>. It also assigns the value<CODECLASS="replaceable"><I>relay_host</I></CODE> to <CODECLASS="literal">$F</CODE>.(See <ACLASS="xref"HREF="ch19_04.htm#SML2-CH-19-SECT-4-5"TITLE="Relays">Section 19.4.5</A> for a description of how to include a deliveryagent specification with <CODECLASS="replaceable"><I>relay_host</I></CODE>.)</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-16">31.10.16 $g</A></H3><PCLASS="refpurpose">The sender's address relative to recipient</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34754"></A><ACLASS="indexterm"NAME="AUTOID-34756"></A>The <CODECLASS="literal">$g</CODE> macro is identical to <CODECLASS="literal">$f</CODE>except that it undergoes additional rule-set processingto translate it into a full return address. During delivery thesender's address is processed by rule sets 3, 1, and 4 and thenplaced into <CODECLASS="literal">$f</CODE>. That rewritten address isfurther processed by 3 and 1 again, then custom rewritten bythe rule set specified in the <CODECLASS="literal">S=</CODE> equate of the delivery agent.Finally, it is rewritten by rule set 4, and the result is placed into <CODECLASS="literal">$g</CODE>.</P><PCLASS="para"><CODECLASS="literal">$g</CODE> holds the official return address for thesender. As such, it should be used in the <CODECLASS="literal">From:</CODE> and <CODECLASS="literal">Return-Path:</CODE> header definitions.</P><PCLASS="para">The <CODECLASS="literal">S=</CODE> equate for each delivery agent must perform all necessarytranslations to produce a value for <CODECLASS="literal">$g</CODE> that is correct.Because the form of a correct return address varies depending onthe delivery agent, other rule sets should generally not beused for this translation.</P><PCLASS="para">Ordinarily, RFC822 comments (see <ACLASS="xref"HREF="ch35_03.htm#SML2-CH-35-SECT-3-4"TITLE="Comments in the Header Field">Section 35.3.4, "Comments in the Header Field"</A>)are restored when <CODECLASS="literal">$g</CODE> is used in headers. To omit those comments (perhapsfor security reasons), you may usethe <CODECLASS="literal">F=c</CODE> delivery agent flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-14"TITLE="">Section 30.8.14, F=c</A>).&#13;</P><PCLASS="para"><CODECLASS="literal">$g</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-17">31.10.17 $h</A></H3><PCLASS="refpurpose">Host part of the recipient address</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34788"></A><ACLASS="indexterm"NAME="AUTOID-34790"></A><ACLASS="indexterm"NAME="AUTOID-34793"></A>Rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6, "Rule Set 0"</A>) is used to resolve the recipient address into a triple:the delivery agent (with <CODECLASS="literal">$#</CODE>), the host part of the address(with <CODECLASS="literal">$@</CODE>), and the recipient user's name (with <CODECLASS="literal">$:</CODE>).The host part, from the <CODECLASS="literal">$@</CODE>, is made the value of <CODECLASS="literal">$h</CODE>.Once <CODECLASS="literal">$h</CODE>'s value has been set, it undergoes nofurther rule-set parsing.</P><PCLASS="para"><CODECLASS="literal">$h</CODE> is intended for use in the <CODECLASS="literal">A=</CODE> equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1"TITLE="">Section 30.4.1</A>)of delivery agent definitions.Normally, it is converted to all lowercase before use, but thatconversion can be suppressed with the <CODECLASS="literal">F=h</CODE> delivery agentflag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-23"TITLE="">Section 30.8.23, F=h</A>).</P><PCLASS="para"><CODECLASS="literal">$h</CODE> is transient. If defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-18">31.10.18 $H</A></H3><PCLASS="refpurpose">The mail hub</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34821"></A><ACLASS="indexterm"NAME="AUTOID-34824"></A>The <EMCLASS="emphasis">m4</EM> nullclient feature (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-20"TITLE="">Section 19.6.20, FEATURE(nullclient)</A>)causes all mail to be sent to a central hub machine for handling.Part of what it does is to define the <EMCLASS="emphasis">m4</EM> macroMAIL_HUB:<ACLASS="indexterm"NAME="AUTOID-34829"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`MAIL_HUB', `<CODECLASS="replaceable"><I>hub</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">This also causes <CODECLASS="literal">$H</CODE> to be defined as <CODECLASS="replaceable"><I>hub</I></CODE>. If<CODECLASS="literal">$H</CODE> has a value, and if <CODECLASS="literal">$R</CODE> (the LOCAL_RELAY, see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-32"TITLE="">Section 31.10.32</A>)does not, all local email is forwarded to <CODECLASS="replaceable"><I>hub</I></CODE>. If <CODECLASS="literal">$R</CODE>is defined it takes precedence over <CODECLASS="literal">$H</CODE> for some mail.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-41"TITLE="">Section 19.6.41, MAIL-HUB</A> for a description of MAIL_HUBand how it interacts with LOCAL_RELAY.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-19">31.10.19 $i</A></H3><PCLASS="refpurpose">The queue identifier</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34853"></A>Each queued message is identified by a unique identifier (see <ACLASS="xref"HREF="ch23_02.htm#SML2-CH-23-SECT-2-1"TITLE="The Queue Identifier">Section 23.2.1, "The Queue Identifier"</A>).The <CODECLASS="literal">$i</CODE> macro contains as its value that identifier.Prior to V8.6 <EMCLASS="emphasis">sendmail</EM>, <CODECLASS="literal">$i</CODE> had a value assigned to itonly when a file was first placed into the queue.Beginning with V8.6 <EMCLASS="emphasis">sendmail</EM>, <CODECLASS="literal">$i</CODE> is also given a value when the queue fileis processed.</P><PCLASS="para"><CODECLASS="literal">$i</CODE> is not used by <EMCLASS="emphasis">sendmail</EM> internally.It should be trusted for use only in the <CODECLASS="literal">Received:</CODE> and<CODECLASS="literal">Message-ID:</CODE> headers.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-20">31.10.20 $j</A></H3><PCLASS="refpurpose">Our official canonical name</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34875"></A><ACLASS="indexterm"NAME="AUTOID-34878"></A><ACLASS="indexterm"NAME="AUTOID-34881"></A><ACLASS="indexterm"NAME="AUTOID-34885"></A>The <CODECLASS="literal">j</CODE> macro is used to hold the fully qualified domainname of the local machine.It <EMCLASS="emphasis">must</EM> be defined in the configuration file.[14]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] Except in V8 <EMCLASS="emphasis">sendmail</EM>, where <CODECLASS="literal">$j</CODE> is automatically definedto be the fully qualified canonical name of the local host.However, it is still possible to redefine <CODECLASS="literal">$j</CODE> if necessary, for example,if <EMCLASS="emphasis">sendmail</EM> cannot figure out your fully qualified canonical name or if your machine has multiple network interfaces and <EMCLASS="emphasis">sendmail</EM> chooses the name associated with the wrong interface.</P></BLOCKQUOTE><PCLASS="para">A fully qualified domain name is one that begins with the localhostname, which is followed by a dot and all the componentsof the local domain.</P><PCLASS="para">The hostname part is the name of the localmachine. That name is defined at boot time inways that vary with the version of UNIX. </P><PCLASS="para">The local domain refers to the DNS domain, not to the NIS domain.If DNS is running, the domain is defined in the <EMCLASS="emphasis">/etc/resolv.conf</EM>file, for example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">domain wash.dc.gov</PRE></BLOCKQUOTE></P><PCLASS="para">At many sites the local hostname is already fully qualified. To tellwhether your site uses just the local hostname,run <EMCLASS="emphasis">sendmail</EM> with a <CODECLASS="literal">-d0.4</CODE> switch:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -d0.4 -bt &lt; /dev/null</B></CODE><ICLASS="lineannotation">... some output here</I>canonical name: wash            <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> not fully qualified</I>canonical name: wash.dc.gov     <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> fully qualified</I></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">j</CODE> macro is used in two ways by <EMCLASS="emphasis">sendmail</EM>. Because<CODECLASS="literal">$j</CODE> holds the fully qualified domain name, <EMCLASS="emphasis">sendmail</EM>uses that name to avoid making SMTP connections to itself. It alsouses that name in all phases of SMTP conversations that require thelocal machine's identity. One indication of an improperly formed <CODECLASS="literal">$j</CODE>is the following SMTP error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">553 wash.dc.gov.dc.gov host name configuration error</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="literal">$j</CODE> was wrongly defined by adding the local domain toa <CODECLASS="literal">$w</CODE> that already included that domain:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Our domainDDdc.gov# Our fully qualified nameDj$w.$D</PRE></BLOCKQUOTE></P><PCLASS="para">One way to tell whether <CODECLASS="literal">$j</CODE> contains the correct value isto send mail to yourself. Examine the <CODECLASS="literal">Received:</CODE> headers.The name of the local host must be fully qualified where it appearsin them:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Received: by wash.dc.gov    <EMCLASS="emphasis">...other text here</EM>             <IMGSRC="../chars/uarr.gif"ALT="-^">             <ICLASS="lineannotation">must be a fully qualified domain name</I></PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="literal">$j</CODE> is also used: in the<CODECLASS="literal">Message-Id:</CODE> header definition;and as the canonical host-name following.IX HELOthe HELO or EHLO command.</P><PCLASS="para">For all but V8 <EMCLASS="emphasis">sendmail</EM>,<CODECLASS="literal">$j</CODE> <EMCLASS="emphasis">must</EM> be defined in the configuration file.For V8 it is automatically defined.It must <EMCLASS="emphasis">never</EM> be defined in the command line.<CODECLASS="literal">$j</CODE> must appear at the beginning ofthe definition of the <CODECLASS="literal">SmtpGreetingMessage</CODE>option (formerly <CODECLASS="literal">$e</CODE>, see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-65"TITLE="">Section 34.8.65</A>).In using SunOS <EMCLASS="emphasis">sendmail.mx</EM>, <CODECLASS="literal">$w</CODE> must alsobe the fully qualified domain name.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-21">31.10.21 $k</A></H3><PCLASS="refpurpose">Our UUCP node name</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34954"></A><ACLASS="indexterm"NAME="AUTOID-34956"></A>The UUCP suite of software gets the name of the local host fromthe <EMCLASS="emphasis">uname</EM>(2) system call, whereas <EMCLASS="emphasis">sendmail</EM> getsthe name of the local host from the <EMCLASS="emphasis">gethostbyname</EM>(3) systemcall. For <EMCLASS="emphasis">sendmail</EM> to easily handle UUCP addresses,V8 <EMCLASS="emphasis">sendmail</EM> also makes use of the <EMCLASS="emphasis">uname</EM>(2) function.</P><PCLASS="para">First the host part of the fully qualified name returnedby <EMCLASS="emphasis">gethostbyname</EM>(3) is saved as the first string in theclass <CODECLASS="literal">$=w</CODE>. Then <EMCLASS="emphasis">uname</EM>(2) is called. If the call succeeds,the macro <CODECLASS="literal">$k</CODE> and the class <CODECLASS="literal">k</CODE> are both given the<EMCLASS="emphasis">nodename</EM> value returned. If the call fails, both are giventhe same hostname value that was given to the <CODECLASS="literal">$j</CODE>.If the system does not have <EMCLASS="emphasis">uname</EM>(2) available (if HASUNAMEwas <EMCLASS="emphasis">not</EM> defined when <EMCLASS="emphasis">sendmail</EM> was compiled; see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-9"TITLE="">Section 18.8.9, HAS...</A>),<EMCLASS="emphasis">sendmail</EM> simulates it. The <EMCLASS="emphasis">sendmail</EM> program's internalreplacement for <EMCLASS="emphasis">uname</EM> begins by reading <EMCLASS="emphasis">/etc/whoami</EM>. If that file doesnot exist or cannot be read, <EMCLASS="emphasis">sendmail</EM> scans<EMCLASS="emphasis">/usr/include/whoami.h</EM> for a line beginning <CODECLASS="literal">#definesysname</CODE>. If that fails and if <EMCLASS="emphasis">sendmail</EM> was compiled withTRUST_POPEN[15]defined (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-51"TITLE="">Section 18.8.51, TRUST-POPEN</A>),<EMCLASS="emphasis">sendmail</EM> executes the following command and reads its outputas the UUCP node name:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[15] TRUST_POPEN is a security risk. Instead of defining it, considercreating an <EMCLASS="emphasis">/etc/whoami</EM> file and populating it or defining<CODECLASS="literal">$k</CODE> directly in your configuration file.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">uname -l</PRE></BLOCKQUOTE></P><PCLASS="para">If all these fail, <CODECLASS="literal">$k</CODE> is set to be the sameas <CODECLASS="literal">$j</CODE>.</P><PCLASS="para"><CODECLASS="literal">$k</CODE> is assigned its value when <EMCLASS="emphasis">sendmail</EM> firstbegins to run. It can be given a new value either in the configurationfile or from the command line.The <CODECLASS="literal">-d0.22</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-6"TITLE="">Section 37.5.6, -d0.22</A>)can be used to watch <EMCLASS="emphasis">uname</EM>() fail.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-22">31.10.22 $l (lowercase L)</A></H3><PCLASS="refpurpose">The From format</P>(V8.6 and earlier)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35011"></A><ACLASS="indexterm"NAME="AUTOID-35013"></A>Prior to V8.7 <EMCLASS="emphasis">sendmail</EM>,the <CODECLASS="literal">l</CODE> macro was used to define the look of the five character &quot;<CODECLASS="literal">From&nbsp;</CODE>&quot;header, and the format of the line was used to separate one messagefrom another in a file of many mail messages.This role has been assumed by the <CODECLASS="literal">UnixFromLine</CODE>option. See <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-72"TITLE="">Section 34.8.72</A> for a description ofboth this <CODECLASS="literal">l</CODE> macro and that new option.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-23">31.10.23 $L</A></H3><PCLASS="refpurpose">The Unknown Local User relay</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35031"></A><ACLASS="indexterm"NAME="AUTOID-35033"></A><ACLASS="indexterm"NAME="AUTOID-35036"></A><ACLASS="indexterm"NAME="AUTOID-35038"></A><ACLASS="indexterm"NAME="AUTOID-35041"></A>A local user is one who evaluates to delivery on the localmachine, even after aliasing. By definingLUSER_RELAY:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`LUSER_RELAY', `<CODECLASS="replaceable"><I>relay_host</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">any username that is not found in the <EMCLASS="emphasis">passwd</EM>(5) filewill be forwarded to <CODECLASS="replaceable"><I>relay_host</I></CODE>. This check is madeafter aliasing but before processing of the <EMCLASS="emphasis">~/.forward</EM> file.The <CODECLASS="replaceable"><I>relay_host</I></CODE> is assigned to the <CODECLASS="literal">$L</CODE> macro. The <EMCLASS="emphasis">m4</EM>technique then adds rules to rule set 5 of the configuration file that causethe user to be looked up with the <CODECLASS="literal">user</CODE> database class (see the <CODECLASS="literal">name</CODE>keyword for that class in <ACLASS="xref"HREF="ch33_08.htm#SML2-CH-33-SECT-8-20"TITLE="">Section 33.8.20, user</A>). If the user's name is notfound, the message is forwarded to the host defined by <CODECLASS="literal">$L</CODE>.(See <ACLASS="xref"HREF="ch19_04.htm#SML2-CH-19-SECT-4-5"TITLE="Relays">Section 19.4.5</A> for a description of how to include a deliveryagent specification with <CODECLASS="replaceable"><I>relay_host</I></CODE>.)</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-24">31.10.24 $m</A></H3><PCLASS="refpurpose">Domain part of hostname</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35068"></A><ACLASS="indexterm"NAME="AUTOID-35070"></A><ACLASS="indexterm"NAME="AUTOID-35074"></A><ACLASS="indexterm"NAME="AUTOID-35078"></A>Under V8 <EMCLASS="emphasis">sendmail</EM>[16]the <CODECLASS="literal">$m</CODE> macro is used to storethe domain part of the local host's fully qualified name.A fully qualified name begins with the localhostname followed by a dot and all the componentsof the local DNS domain. </P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[16] <CODECLASS="literal">$m</CODE> is the NIS domain for pre-V8 versions of Sun<EMCLASS="emphasis">sendmail</EM>, and <CODECLASS="literal">$m</CODE> is the original user address forIDA <EMCLASS="emphasis">sendmail</EM>.</P></BLOCKQUOTE><PCLASS="para">The value in <CODECLASS="literal">$m</CODE> is derived from <CODECLASS="literal">$w</CODE>.When V8 <EMCLASS="emphasis">sendmail</EM> first starts to run, it calls <EMCLASS="emphasis">gethostname</EM>(3)to get the name of the local machine. If that call fails, it setsthat local name to be <EMCLASS="emphasis">localhost</EM>. Then <EMCLASS="emphasis">sendmail</EM>calls <EMCLASS="emphasis">gethostbyname</EM>(3) to find the official name forthe local host, which is assigned to <CODECLASS="literal">$w</CODE>as that macro's initial value. V8 <EMCLASS="emphasis">sendmail</EM> thenlooks for the leftmost dot in <CODECLASS="literal">$w</CODE>. If it finds one,everything from the first character following that dot to theend of the name then becomes the value for <CODECLASS="literal">$m</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">host.domain     <IMGSRC="../chars/uarr.gif"ALT="-^">     <ICLASS="lineannotation">domain part made the value of $m</I></PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="literal">$m</CODE> is initialized before the configuration fileis read. Consequently, it may be redefined in the configuration file oras a part of the command line.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-25">31.10.25 $M</A></H3><PCLASS="refpurpose">Whom we are masquerading as</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35115"></A><ACLASS="indexterm"NAME="AUTOID-35117"></A>When you define MASQUERADE_AS using the <EMCLASS="emphasis">m4</EM> configurationtechnique, you both enable masquerading (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-42"TITLE="">Section 19.6.42, MASQUERADE-AS</A>)and assign that hostname to this <CODECLASS="literal">$M</CODE> macro.Note that defining <CODECLASS="literal">$M</CODE> will not enable masquerading. You mustuse the MASQUERADE_AS <EMCLASS="emphasis">m4</EM> configuration command to enable this service.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-26">31.10.26 $n</A></H3><PCLASS="refpurpose">The error message sender</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35133"></A><ACLASS="indexterm"NAME="AUTOID-35135"></A>The <CODECLASS="literal">$n</CODE> macro contains the name of theperson from whom failed mail is returned. Traditionally, that valueis the name <EMCLASS="emphasis">mailer-daemon</EM>.</P><PCLASS="para">When delivery fails and notification of that failure is being preparedto be sent to the originating sender, <EMCLASS="emphasis">sendmail</EM> &quot;fakes up&quot;a header. That header prepends the original header (and any includederror messages). The sender of the error mail message (and thesender in the envelope) is taken from <CODECLASS="literal">$n</CODE>.</P><PCLASS="para">The <CODECLASS="literal">n</CODE> macro must contain either a real user's name ora name that resolves to a real user through aliasing. If <EMCLASS="emphasis">sendmail</EM>cannot resolve <CODECLASS="literal">$n</CODE> to a real user, the following messageis logged, and the returned error mailmessage is saved in <EMCLASS="emphasis">/usr/tmp/dead.letter</EM> (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-34"TITLE="">Section 18.8.34, PATH...</A>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Can't parse myself!</PRE></BLOCKQUOTE></P><PCLASS="para">When an error mail message is sent, <CODECLASS="literal">$f</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-14"TITLE="">Section 31.10.14</A>)is given the value of <CODECLASS="literal">$n</CODE>.Prior to V8.7, <CODECLASS="literal">$n</CODE> <EMCLASS="emphasis">must</EM> be defined in the configuration file.Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, <CODECLASS="literal">$n</CODE> is automaticallydefined as MAILER-DAEMON when <EMCLASS="emphasis">sendmail</EM> first starts up.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-27">31.10.27 $o</A></H3><PCLASS="refpurpose">Token separation operators</P>(V8.6 and earlier)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35169"></A><ACLASS="indexterm"NAME="AUTOID-35171"></A><ACLASS="indexterm"NAME="AUTOID-35174"></A><ACLASS="indexterm"NAME="AUTOID-35176"></A>Prior to V8.7the <CODECLASS="literal">$o</CODE> macro stored as its value a sequenceof characters, any one of which could be used to separate the componentsof an address into tokens (see <ACLASS="xref"HREF="ch08_03.htm"TITLE="Rule Sets">Section 8.3, "Rule Sets"</A>).That role has been taken over by the V8.7 <CODECLASS="literal">OperatorChars</CODE> option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-45"TITLE="">Section 34.8.45</A>).</P><PCLASS="para">For backward compatibility the <CODECLASS="literal">$o</CODE> macro is still honored by V8.7<EMCLASS="emphasis">sendmail</EM> in pre-version 7 configuration files (see <ACLASS="xref"HREF="ch27_05.htm"TITLE="The V Configuration Command">Section 27.5, "The V Configuration Command"</A>).</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-28">31.10.28 ${opMode}</A></H3><PCLASS="refpurpose">The startup operating mode</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35196"></A><ACLASS="indexterm"NAME="AUTOID-35198"></A><ACLASS="indexterm"NAME="AUTOID-35200"></A>Beginning with V8.7, the <CODECLASS="literal">${opMode}</CODE> holds as its valuethe operating mode that <EMCLASS="emphasis">sendmail</EM> was started with.The operating mode is set with the <CODECLASS="literal">-b</CODE> command lineswitch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-2"TITLE="">Section 36.7.2, -b</A>). For example, if <EMCLASS="emphasis">sendmail</EM> werestarted as a daemon with <CODECLASS="literal">-bd</CODE>, the value in <CODECLASS="literal">${opMode}</CODE>would become <CODECLASS="literal">d</CODE>.</P><PCLASS="para">Once set, <CODECLASS="literal">${opMode}</CODE> retains its initial value as long as<EMCLASS="emphasis">sendmail</EM> runs. It can be changed only by defining itin the configuration file. Currently, <CODECLASS="literal">${opMode}</CODE> isused only in rule sets by the <EMCLASS="emphasis">m4</EM> <CODECLASS="literal">redirect</CODE> FEATURE (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-21"TITLE="">Section 19.6.21, FEATURE(redirect)</A>).</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-29">31.10.29 $p</A></H3><PCLASS="refpurpose">The sendmail process id</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35227"></A><ACLASS="indexterm"NAME="AUTOID-35229"></A><ACLASS="indexterm"NAME="AUTOID-35233"></A>The <CODECLASS="literal">p</CODE> macro contains the process ID of the <EMCLASS="emphasis">sendmail</EM>that executes the delivery agent. Every process (running program)under UNIX has a unique identification number associated withit (a process ID). Process IDs are necessary to differentiateone incantation of a program from another. The <EMCLASS="emphasis">sendmail</EM>program <EMCLASS="emphasis">fork</EM>(2)'s often toperform tasks (like delivery) while performing other tasks(such as listening for incoming SMTP connections). All copiesshare the name <EMCLASS="emphasis">sendmail</EM>; each has a unique process ID number.</P><PCLASS="para"><CODECLASS="literal">$p</CODE> is intended for use in header definitions but mayalso be used in the <CODECLASS="literal">A=</CODE> equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1"TITLE="">Section 30.4.1</A>)of delivery agents. </P><PCLASS="para"><CODECLASS="literal">$p</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-30">31.10.30 $q</A></H3><PCLASS="refpurpose">The default format of the sender's address</P>(V8.6 and earlier)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35258"></A><ACLASS="indexterm"NAME="AUTOID-35260"></A><ACLASS="indexterm"NAME="AUTOID-35263"></A><ACLASS="indexterm"NAME="AUTOID-35266"></A>Prior to V8.7the <CODECLASS="literal">q</CODE> macro was used to specify the form that thesender's address would take in header definitions. It was mostoften used in the <CODECLASS="literal">From:</CODE> and <CODECLASS="literal">Resent-From:</CODE>header lines.</P><PCLASS="para">The definition of <CODECLASS="literal">$q</CODE> had to adhere to the standard form of addresses as defined by RFC822. It had to contain just anaddress or an address and a comment. The traditional definitionsof <CODECLASS="literal">$q</CODE> were</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Dq&lt;$g&gt;        <EMCLASS="emphasis"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> as &lt;george@wash.dc.gov&gt;</EM>Dq$g          <EMCLASS="emphasis"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> as george@wash.dc.gov</EM>Dq$x &lt;$g&gt;     <EMCLASS="emphasis"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> as George Washington &lt;george@wash.dc.gov&gt;</EM>Dq$g ($x)     <EMCLASS="emphasis"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> as george@wash.dc.gov (George Washington)</EM></PRE></BLOCKQUOTE></P><PCLASS="para">The full name is not always known and so <CODECLASS="literal">$x</CODE> can beundefined &nbsp;- pty). As a consequence, when the full name wasincluded in the <CODECLASS="literal">q</CODE> macro definition, it was oftenwrapped in a conditional test:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Dq$g$?x ($x)$.Dq$?x$x $.&lt;$g&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Of these the second form was recommended for clients that forwardall mail to a central mail-handling machine. If the full namewas unknown locally, the header and envelope were identicaland bracketed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">From: &lt;user@slave.domain&gt;         <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> header</I>MAIL From: &lt;user@slave.domain&gt;    <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> envelope</I></PRE></BLOCKQUOTE></P><PCLASS="para">At the central mail-handling machine, both versions of the <CODECLASS="literal">From:</CODE> address were recognizedas identical (only if the address was bracketed).As a consequence, the central machinedeleted and recreated the <CODECLASS="literal">From:</CODE> line and added the full name if known.</P><PCLASS="para">Prior to V8.7, <CODECLASS="literal">$q</CODE> had to be defined in the configuration file becauseit was used to define the fields of the <CODECLASS="literal">Resent-From:</CODE>and <CODECLASS="literal">From:</CODE> headers (see <ACLASS="xref"HREF="ch35_10.htm#SML2-CH-35-SECT-10-14"TITLE="">Section 35.10.14, From:</A>). Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>,those headers are defined by using the <CODECLASS="literal">$g</CODE> and <CODECLASS="literal">$x</CODE> macros directly.For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">H?F?Resent-From: $?x$x &lt;$g&gt;$|$g$.H?F?From: $?x$x &lt;$g&gt;$|$g$.</PRE></BLOCKQUOTE></P><PCLASS="para">To redefine them, you must either edit your configuration file or add new definitionsto the LOCAL_CONFIG section of your <CODECLASS="literal">mc</CODE> file (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-30"TITLE="">Section 19.6.30, LOCAL-CONFIG</A>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">LOCAL_CONFIGdivert(9)H?F?From: $?x$x $.&lt;$g&gt;divert(0)</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">divert</CODE>() statements force the new header definitions to followthe default definitions, thus replacing them.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-31">31.10.31 $r</A></H3><PCLASS="refpurpose">The protocol used</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35319"></A><ACLASS="indexterm"NAME="AUTOID-35321"></A><ACLASS="indexterm"NAME="AUTOID-35324"></A>The <CODECLASS="literal">$r</CODE> macro stores the name of the protocol that is used whena mail message is first received. If mail is received via SMTP orESMTP, <CODECLASS="literal">$r</CODE> is set accordingly. Incoming UUCP mailsets <CODECLASS="literal">$r</CODE> to &quot;UUCP&quot; (using the <CODECLASS="literal">-p</CODE> switch).With V8.7, bounced mail will now assign <CODECLASS="literal">$r</CODE> the value &quot;internal.&quot;</P><PCLASS="para"><CODECLASS="literal">$r</CODE> is intended for use in the <CODECLASS="literal">Received:</CODE> header definition:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">HReceived: $?sfrom $s $.by $j$?r with $r$. id $i</PRE></BLOCKQUOTE></P><PCLASS="para">The value in <CODECLASS="literal">$r</CODE> is saved to the <CODECLASS="literal">qf</CODE> filewhen the mail message is queued, and it is restored to <CODECLASS="literal">$r</CODE> when the queueis later processed.</P><PCLASS="para"><CODECLASS="literal">$r</CODE> is transient. It may be defined on the command linebut should not be defined in the configuration file.Under V8 the <CODECLASS="literal">-p</CODE> switch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-32"TITLE="">Section 36.7.32</A>)is the recommended way to assign a valueto <CODECLASS="literal">$r</CODE>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-32">31.10.32 $R</A></H3><PCLASS="refpurpose">The relay for unqualified names</P>(m4 technique, deprecated)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35355"></A><ACLASS="indexterm"NAME="AUTOID-35357"></A><ACLASS="indexterm"NAME="AUTOID-35360"></A><ACLASS="indexterm"NAME="AUTOID-35362"></A>Using the <EMCLASS="emphasis">m4</EM> configuration technique, the <CODECLASS="literal">$R</CODE> macrostores the hostname defined by LOCAL_RELAY (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-31"TITLE="">Section 19.6.31, LOCAL-RELAY</A>).If <CODECLASS="literal">$H</CODE> has a value and if <CODECLASS="literal">$R</CODE>does not, all local email is forwarded to <CODECLASS="replaceable"><I>hub</I></CODE> defined for <CODECLASS="literal">$H</CODE>.If <CODECLASS="literal">$R</CODE> is defined, it takes precedence over <CODECLASS="literal">$H</CODE> for some mail.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-41"TITLE="">Section 19.6.41</A> for a description of MAIL_HUBand how it interacts with LOCAL_RELAY.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-33">31.10.33 $s</A></H3><PCLASS="refpurpose">The sender host's name</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35384"></A><ACLASS="indexterm"NAME="AUTOID-35386"></A><ACLASS="indexterm"NAME="AUTOID-35390"></A>The <CODECLASS="literal">$s</CODE> macro contains the name of the sender'smachine (host). <CODECLASS="literal">$s</CODE> is given the name of the local hostas its value when <EMCLASS="emphasis">sendmail</EM> starts, unless the <CODECLASS="literal">-p</CODE>command line switch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-32"TITLE="">Section 36.7.32</A>) is used, in which case <CODECLASS="literal">$s</CODE> is given the value specified by that switch. Thereafter, <CODECLASS="literal">$s</CODE> is given a new value by <EMCLASS="emphasis">sendmail</EM>only if the mail message was received via SMTP.For bounced mail, the <CODECLASS="literal">$s</CODE> value is always <CODECLASS="literal">localhost</CODE>.</P><PCLASS="para">The <CODECLASS="literal">s</CODE> macro is intended for use in the <CODECLASS="literal">Received:</CODE>header definition:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">HReceived: $?sfrom $s $.by $j$?r with $r$. id $i</PRE></BLOCKQUOTE></P><PCLASS="para">The phrase <CODECLASS="literal">from </CODE><EMCLASS="emphasis">host</EM> will be included in thisheader line if <CODECLASS="literal">$s</CODE> has any value. Here, <EMCLASS="emphasis">host</EM>is the name of the sending machine.</P><PCLASS="para">The value in <CODECLASS="literal">$s</CODE> is saved to the <CODECLASS="literal">qf</CODE> filewhen the mail message is queued and restored to <CODECLASS="literal">$s</CODE>when the queue is later processed. </P><PCLASS="para"><CODECLASS="literal">$s</CODE> is transient. It may be defined on the command linebut should not be defined in the configuration file.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-34">31.10.34 $S</A></H3><PCLASS="refpurpose">The Smart Host</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35428"></A><ACLASS="indexterm"NAME="AUTOID-35430"></A><ACLASS="indexterm"NAME="AUTOID-35432"></A><ACLASS="indexterm"NAME="AUTOID-35435"></A>Using the <EMCLASS="emphasis">m4</EM> configuration technique the <CODECLASS="literal">$S</CODE> macrostores the hostname defined by SMART_HOST  (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-47"TITLE="">Section 19.6.47, SMART-HOST</A>).The smart host is the name of the host that can deliver all mail that thelocal host cannot. <CODECLASS="literal">$S</CODE> is most often used with UUCPsites to get DNS mail to the outside world.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-35">31.10.35 $t</A></H3><PCLASS="refpurpose">The current time in seconds</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35450"></A>The <CODECLASS="literal">$t</CODE> macro contains the current date and timerepresented as an integer.The value of <CODECLASS="literal">$t</CODE> is set in two places:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> first begins to run, it presets severaldate-oriented macros internally to the date and time it wasrun. Among those are the <CODECLASS="literal">$a</CODE>,<CODECLASS="literal">$d</CODE>, <CODECLASS="literal">$b</CODE>,and <CODECLASS="literal">$t</CODE> macros. This initialization is done afterthe configuration file is read.</P></LI><LICLASS="listitem"><PCLASS="para">Each time a new envelope is created, the <CODECLASS="literal">$d</CODE>, <CODECLASS="literal">$b</CODE>,and <CODECLASS="literal">$t</CODE> macros are given a default that isthe current time.</P></LI></UL><PCLASS="para"><CODECLASS="literal">$t</CODE> is intended for use in configuration-file header definitions.<CODECLASS="literal">$t</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition may be ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-36">31.10.36 $u</A></H3><PCLASS="refpurpose">The recipient's username</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35480"></A><ACLASS="indexterm"NAME="AUTOID-35484"></A><ACLASS="indexterm"NAME="AUTOID-35488"></A>Rule set 0 (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6</A>) is used to resolve the recipient address into a triple:the delivery agent (with <CODECLASS="literal">$#</CODE>), the host part of the address(with <CODECLASS="literal">$@</CODE>), and the recipient's username (with <CODECLASS="literal">$:</CODE>).The recipient's username is then processed by rule set 2 (the genericrule set for all recipient addresses), then by the rule set indicatedby the <CODECLASS="literal">R=</CODE> equate of the delivery agent (the custom recipientaddress processing), and finally by rule set 4 (postprocessing forall addresses).</P><PCLASS="para">If the delivery agent has the <CODECLASS="literal">F=A</CODE> flag set(see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-12"TITLE="">Section 30.8.12, F=A</A>), that rewritten recipient's username is looked up in the <EMCLASS="emphasis">aliases</EM> file and replaced with its alias ifone exists. If it is not replaced and if the <CODECLASS="literal">F=5</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-3"TITLE="">Section 30.8.3, F=5</A>) is set,the address is rewritten by rule set 5to possibly pick a new delivery agent and repeat this process.[17]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[17] Prior to V8.7 this behavior was all tied to the <CODECLASS="literal">local</CODE>delivery agent.</P></BLOCKQUOTE><PCLASS="para">After aliasing, the rewritten recipient's username is thenassigned to <CODECLASS="literal">$u</CODE>.If the delivery agent's <CODECLASS="literal">F=w</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-43"TITLE="">Section 30.8.43, F=w</A>) is set,[18]the value of <CODECLASS="literal">$u</CODE> is then usedto look up information about that user with <EMCLASS="emphasis">getpwent</EM>(3).The user's home directory from <EMCLASS="emphasis">pw_dir</EM>is made the value of the <CODECLASS="literal">$z</CODE> and used to access thatuser's <EMCLASS="emphasis">~/.forward</EM> and <EMCLASS="emphasis">dead.letter</EM> files.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[18] Prior to V8.7, looking up the user's home directory was tied to the <CODECLASS="literal">local</CODE>delivery agent.</P></BLOCKQUOTE><PCLASS="para">For all delivery agents the final value of <CODECLASS="literal">$u</CODE> maybe used as a component of the delivery agent's <CODECLASS="literal">A=</CODE> (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1"TITLE="">Section 30.4.1</A>)equate. For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">A=uux - $h!rmail ($u)</PRE></BLOCKQUOTE></P><PCLASS="para">Note that <CODECLASS="literal">$u</CODE> is special (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1-3"TITLE="$u in A=">Section 30.4.1.3, "$u in A="</A>)in delivery agent <CODECLASS="literal">A=</CODE> equates.If it is absent, <EMCLASS="emphasis">sendmail</EM> speaks SMTP. If it is present <EMCLASS="emphasis">and</EM>the <CODECLASS="literal">F=m</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-30"TITLE="">Section 30.8.30, F=m</A>) is also pres-nt, the argumentcontaining <CODECLASS="literal">$u</CODE> is repeated as many times as there are recipients.</P><PCLASS="para">In V8 <EMCLASS="emphasis">sendmail</EM>, <CODECLASS="literal">$u</CODE> is also set to the originalrecipient (prior to aliasing) while the message headers are first being read.Therefore the original recipient information is available for usein the <CODECLASS="literal">Received:</CODE> header line.[19]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[19] In this use, V8's <CODECLASS="literal">$u</CODE> is similar to IDA's <CODECLASS="literal">$m</CODE>.</P></BLOCKQUOTE><PCLASS="para"><CODECLASS="literal">$u</CODE> is transient. If it is defined in the configurationfile or in the command line, that definition is ignored by <EMCLASS="emphasis">sendmail</EM>.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-37">31.10.37 $U</A></H3><PCLASS="refpurpose">The UUCP name to override $k</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35552"></A><ACLASS="indexterm"NAME="AUTOID-35554"></A><ACLASS="indexterm"NAME="AUTOID-35557"></A><ACLASS="indexterm"NAME="AUTOID-35560"></A>When configuring with the <EMCLASS="emphasis">m4</EM> technique, you can includesupport for UUCP by using the MAILER(uucp)command (see <ACLASS="xref"HREF="ch19_03.htm#SML2-CH-19-SECT-3-2"TITLE="MAILER()">Section 19.3.2, "MAILER()"</A>) in your <CODECLASS="literal">mc</CODE> file.With that support, you can override the use of <CODECLASS="literal">$k</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-21"TITLE="">Section 31.10.21</A>)with a hostname of your choosing when prefixing a string of hostswith the local hostname:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">here!lady!sonya!user<ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I><ICLASS="lineannotation">insert local host name here</I></PRE></BLOCKQUOTE></P><PCLASS="para">If <CODECLASS="literal">$U</CODE> has a value, its value will be inserted. If it lacksa value, <CODECLASS="literal">$k</CODE> will be inserted.</P><PCLASS="para"><CODECLASS="literal">$U</CODE> can be useful when several hosts provide UUCPservices. It can be defined in your DOMAIN() file (see <ACLASS="xref"HREF="ch19_03.htm#SML2-CH-19-SECT-3-3"TITLE="DOMAIN()">Section 19.3.3, "DOMAIN()"</A>)as a single name so that all outgoing UUCP mail will appearas though it is from a common host.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-38">31.10.38 $v</A></H3><PCLASS="refpurpose">The version of sendmail</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35586"></A><ACLASS="indexterm"NAME="AUTOID-35589"></A>The <CODECLASS="literal">v</CODE> macro contains the current version of the<EMCLASS="emphasis">sendmail</EM> program, taken from the <CODECLASS="literal">Version</CODE>variable that is initialized in <EMCLASS="emphasis">version.c</EM> of the <EMCLASS="emphasis">sendmail</EM>source. In general, it is the SCCS revision number of the source.<CODECLASS="literal">$v</CODE> is used in defining the <CODECLASS="literal">SmtpGreetingMessage</CODE> (<CODECLASS="literal">$e</CODE>)option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-65"TITLE="">Section 34.8.65</A>) and in <CODECLASS="literal">Received:</CODE> header lines (see <ACLASS="xref"HREF="ch35_10.htm#SML2-CH-35-SECT-10-25"TITLE="">Section 35.10.25</A>).</P><PCLASS="para">The value given to <CODECLASS="literal">$v</CODE> can vary with the vendor.There is currently no standard for identifying variations onthe <EMCLASS="emphasis">sendmail</EM> program. Clearly, <CODECLASS="literal">$v</CODE> may not containa true picture.</P><PCLASS="para"><CODECLASS="literal">$v</CODE> is internally defined when <EMCLASS="emphasis">sendmail</EM> startsup. It may be redefined in the configuration file or as partof the command line.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-39">31.10.39 $V</A></H3><PCLASS="refpurpose">UUCP relay for class $=V</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35618"></A><ACLASS="indexterm"NAME="AUTOID-35621"></A><CODECLASS="literal">$V</CODE> holds as its value the name of the host that willhandle all UUCP mail for the class <CODECLASS="literal">$=V</CODE>.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-46"TITLE="">Section 19.6.46, SITECONFIG</A> for a discussion of UUCP relaysin general and how this macro relates to <CODECLASS="literal">$W</CODE>, <CODECLASS="literal">$X</CODE>,and <CODECLASS="literal">$Y</CODE> macros.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-40">31.10.40 $w</A></H3><PCLASS="refpurpose">The short name of this host</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35637"></A><ACLASS="indexterm"NAME="AUTOID-35641"></A><ACLASS="indexterm"NAME="AUTOID-35645"></A><ACLASS="indexterm"NAME="AUTOID-35649"></A>When <EMCLASS="emphasis">sendmail</EM> first starts to run, it calls <EMCLASS="emphasis">gethostname</EM>(3)to get the name of the local machine. If that call fails, it setsthat local name to be <CODECLASS="literal">localhost</CODE>. Then<EMCLASS="emphasis">gethostbyname</EM>(3) is called to find the official name forthe local host. If that call fails, the official name for thelocal host remains unchanged.The official name for the local host is assigned to <CODECLASS="literal">$j</CODE>.</P><PCLASS="para">If the <CODECLASS="literal">V</CODE> command's version (see <ACLASS="xref"HREF="ch27_05.htm"TITLE="The V Configuration Command">Section 27.5</A>) is 5 or higher,V8 <EMCLASS="emphasis">sendmail</EM> discards the domain and assigns the result to <CODECLASS="literal">$w</CODE> (the short name):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">here.us.edu    <EMCLASS="emphasis"><IMGSRC="../chars/uarr.gif"ALT="-^"></EM>    <ICLASS="lineannotation">from here to end of name discarded</I></PRE></BLOCKQUOTE></P><PCLASS="para">If the version is 4 or less, <CODECLASS="literal">$w</CODE> is assigned the fully qualified name(and is identical to <CODECLASS="literal">$j</CODE>).</P><PCLASS="para"><CODECLASS="literal">$w</CODE> is then appended to class <CODECLASS="literal">$=w</CODE> (see <ACLASS="xref"HREF="ch32_05.htm#SML2-CH-32-SECT-5-8"TITLE="">Section 32.5.8</A>).<CODECLASS="literal">$=w</CODE> is used internally by <EMCLASS="emphasis">sendmail</EM> toscreen all MX records that are found in delivering mail over the network.[20]Each such record is comparedin a case-insensitive fashion to <CODECLASS="literal">$=w</CODE>. If there is a match,that MX record and all additional MX records of lower priority areskipped. This prevents <EMCLASS="emphasis">sendmail</EM> from mistakenly connecting toitself.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[20] Prior to V8, only <CODECLASS="literal">$w</CODE> was checked.</P></BLOCKQUOTE><PCLASS="para">Any of the following errors (or variations on them) indicate that <CODECLASS="literal">$=w</CODE>,<CODECLASS="literal">$w</CODE>, or <CODECLASS="literal">$j</CODE> may contain a faulty value, most likely froma bad configuration file declaration:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">553 <CODECLASS="replaceable"><I>host</I></CODE> config error: mail loops back to myself553 Local configuration error, host name not recognized as local553 <CODECLASS="replaceable"><I>host</I></CODE> host name configuration error</PRE></BLOCKQUOTE></P><PCLASS="para">Note that if <CODECLASS="literal">$w</CODE> is pulled from the name serverand the host is running BIND,and a cache is being downloaded, <CODECLASS="literal">$w</CODE>could be periodically unresolved. In this instance, <EMCLASS="emphasis">sendmail</EM>sleeps and retries the lookup.</P><PCLASS="para"><CODECLASS="literal">$w</CODE> is defined when <EMCLASS="emphasis">sendmail</EM> starts up.It may be redefined in the configuration file or as part of thecommand line.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-41">31.10.41 $W</A></H3><PCLASS="refpurpose">UUCP relay for class $=W</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35703"></A><ACLASS="indexterm"NAME="AUTOID-35706"></A><CODECLASS="literal">$W</CODE> holds as its value the name of the host that willhandle all UUCP mail for the class <CODECLASS="literal">$=W</CODE>.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-46"TITLE="">Section 19.6.46</A> for a discussion of UUCP relaysin general and how this macro relates to <CODECLASS="literal">$V</CODE>, <CODECLASS="literal">$X</CODE>,and <CODECLASS="literal">$Y</CODE> macros.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-42">31.10.42 $x</A></H3><PCLASS="refpurpose">The full name of the sender</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35722"></A><ACLASS="indexterm"NAME="AUTOID-35724"></A><ACLASS="indexterm"NAME="AUTOID-35728"></A>The <CODECLASS="literal">$x</CODE> macro holds the full name of the sender.When <EMCLASS="emphasis">sendmail</EM> processes a mail message for delivery, itrewrites the sender's address using rule sets 3 and 0 so that itcan determine whether the sender is local. If the sender is local,rule set 0 provides the sender's login name with the <CODECLASS="literal">$:</CODE>operator. Then, if the delivery agent's <CODECLASS="literal">F=w</CODE> flag (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-43"TITLE="">Section 30.8.43</A>) is set,[21]<EMCLASS="emphasis">sendmail</EM> calls <EMCLASS="emphasis">getpwent</EM>(3) using thatlogin name as the argument. If the login name is known, <EMCLASS="emphasis">getpwent</EM>(3)returns the sender's full name in its <EMCLASS="emphasis">pw_gecos</EM> field.The <EMCLASS="emphasis">sendmail</EM> program then processes that <EMCLASS="emphasis">pw_gecos</EM> field,throwing away phone numbers and the like and converting the <CODECLASS="literal">&amp;</CODE>character where necessary. The result, usually fairly close to thesender's full name, is the value assigned to the <CODECLASS="literal">x</CODE> macro.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[21] Prior to V8.7 this behavior was tied to the <CODECLASS="literal">local</CODE> delivery agent.</P></BLOCKQUOTE><PCLASS="para">Under certain circumstances, <EMCLASS="emphasis">sendmail</EM>places a different value in <CODECLASS="literal">$x</CODE>:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> first starts to run, it sets the full name tobe the value of the NAME environmental variable. The <CODECLASS="literal">-F</CODE>command-line switch (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-20"TITLE="">Section 36.7.20, -F</A>) can overwritethat variable. If the operating mode is <CODECLASS="literal">-q</CODE> (see<ACLASS="xref"HREF="ch23_06.htm#SML2-CH-23-SECT-6-1"TITLE="Periodically with -q">Section 23.6.1, "Periodically with -q"</A>) or <CODECLASS="literal">-bd</CODE> (see <ACLASS="xref"HREF="ch36_07.htm#SML2-CH-36-SECT-7-5"TITLE="">Section 36.7.5, -bd</A>),the full name is reset to NULL.When mail is sent, this value is assigned to <CODECLASS="literal">$x</CODE>.</P></LI><LICLASS="listitem"><PCLASS="para">In processing the headers of a message, if <EMCLASS="emphasis">sendmail</EM> findsa <CODECLASS="literal">Full-Name:</CODE> header (see <ACLASS="xref"HREF="ch35_10.htm#SML2-CH-35-SECT-10-15"TITLE="">Section 35.10.15, Full-Name:</A>),it assigns the text of that header to the <CODECLASS="literal">$x</CODE> macro.</P></LI><LICLASS="listitem"><PCLASS="para">In sending a failed mail message, the login name of the senderis taken from <CODECLASS="literal">$n</CODE>, and the full name is set to be</P></LI></UL><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Mail Delivery Subsystem</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">$x</CODE> macro is intended for use in header definitions.If used in the <CODECLASS="literal">From:</CODE> header definition, the sender'sfull name will then also appear in the SMTP envelope <EMCLASS="emphasis">mail</EM> line.</P><PCLASS="para">Note that unusual <EMCLASS="emphasis">gecos</EM> fields in the password file cancause pre-V8 mail to fail. Consider the following <EMCLASS="emphasis">passwd</EM>(5) entry:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">happy:123:456:Happy Guy ;-),Ext 789,,:/u/happy:/bin/sh</PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">gecos</EM> field here will be parsed by all butV8 <EMCLASS="emphasis">sendmail</EM> intoa value for <CODECLASS="literal">$x</CODE> that can yield a faulty header&nbsp;- onewith unbalanced parentheses:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">From: happy@our.domain (Happy Guy ;-))</PRE></BLOCKQUOTE></P><PCLASS="para">V8 <EMCLASS="emphasis">sendmail</EM> accepts only charactersup to the first comma, semicolon, or percent as part of thefull name and quotes the result, thus avoiding this problem.</P><PCLASS="para"><CODECLASS="literal">$x</CODE> is transient. If it is defined in the configurationfile or the command line, that definition will be ignored by <EMCLASS="emphasis">sendmail</EM>.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-43">31.10.43 $X</A></H3><PCLASS="refpurpose">UUCP relay for class $=X</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35801"></A><ACLASS="indexterm"NAME="AUTOID-35804"></A><CODECLASS="literal">$X</CODE> holds as its value the name of the host that willhandle all UUCP mail for the class <CODECLASS="literal">$=X</CODE>.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-46"TITLE="">Section 19.6.46</A> for a discussion of UUCP relaysin general and how this macro relates to <CODECLASS="literal">$V</CODE>, <CODECLASS="literal">$W</CODE>,and <CODECLASS="literal">$Y</CODE> macros.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-44">31.10.44 $y</A></H3><PCLASS="refpurpose">Name of the controlling tty</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35821"></A><ACLASS="indexterm"NAME="AUTOID-35823"></A><ACLASS="indexterm"NAME="AUTOID-35826"></A>The <CODECLASS="literal">$y</CODE> macro holds the name of the controllingterminal device, if there is one. The controlling terminal isdetermined by first calling <EMCLASS="emphasis">ttyname</EM>(3) with the <EMCLASS="emphasis">sendmail</EM>program's standard error output as an argument. If <EMCLASS="emphasis">ttyname</EM>(3)returns the name of a terminal device (such as <CODECLASS="literal">/dev/ttya</CODE>),<EMCLASS="emphasis">sendmail</EM> strips everything up to and including the last <CODECLASS="literal">/</CODE>character and stores the result into <CODECLASS="literal">$y</CODE>.</P><PCLASS="para"><CODECLASS="literal">$y</CODE> is intended for use in debugging <EMCLASS="emphasis">sendmail</EM>problems. It is not used internally by <EMCLASS="emphasis">sendmail</EM>. In determiningwhether or not it can write to a user's terminal screen, <EMCLASS="emphasis">sendmail</EM>calls <EMCLASS="emphasis">ttyname</EM>(3) separately on its standard input, output,and error output without updating <CODECLASS="literal">$y</CODE>.</P><PCLASS="para">Note that the device name in <CODECLASS="literal">$y</CODE> depends on the implementationof <EMCLASS="emphasis">ttyname</EM>(3). Under BSD UNIX, all terminals are in <EMCLASS="emphasis">/dev</EM>,whereas under other versions of UNIX they may be in subdirectoriessuch as <EMCLASS="emphasis">/dev/ttys</EM>.Also note that <CODECLASS="literal">$y</CODE> is only defined if TTYNAMEis defined (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-52"TITLE="">Section 18.8.52, TTYNAME</A>) when <EMCLASS="emphasis">sendmail</EM> is compiled.</P><PCLASS="para"><CODECLASS="literal">$y</CODE> is transient. If it is defined in the configurationfile or the command line, that definition will be ignored by <EMCLASS="emphasis">sendmail</EM>.Finally, note that <CODECLASS="literal">$y</CODE> is set only when mail is being sent andso is of most value in headers.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-45">31.10.45 $Y</A></H3><PCLASS="refpurpose">UUCP relay for unclassified hosts</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35864"></A><ACLASS="indexterm"NAME="AUTOID-35866"></A><CODECLASS="literal">$Y</CODE> holds as its value the name of the host that willhandle all UUCP mail that was not otherwise handled byclass <CODECLASS="literal">$=V</CODE>, <CODECLASS="literal">$=W</CODE>, or <CODECLASS="literal">$=X</CODE>.See <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-46"TITLE="">Section 19.6.46</A> for a discussion of UUCP relaysin general and how this macro relates to <CODECLASS="literal">$V</CODE>, <CODECLASS="literal">$W</CODE>,and <CODECLASS="literal">$X</CODE> macros.</P><PCLASS="para"></P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-46">31.10.46 $z</A></H3><PCLASS="refpurpose">The recipient's home directory</P>(All versions)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35886"></A><ACLASS="indexterm"NAME="AUTOID-35889"></A><ACLASS="indexterm"NAME="AUTOID-35891"></A><ACLASS="indexterm"NAME="AUTOID-35894"></A>The <CODECLASS="literal">$z</CODE> macro holds the location of the local user's home directory.This macro is given a value only if the delivery agenthas the <CODECLASS="literal">F=w</CODE> flag set (see <ACLASS="xref"HREF="ch30_08.htm#SML2-CH-30-SECT-8-43"TITLE="">Section 30.8.43</A>)[22]and if delivery is to a user (rather than a file or a program). The homedirectory is taken from the <EMCLASS="emphasis">pw_dir</EM> field as returnedby <EMCLASS="emphasis">getpwent</EM>(3).</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[22] Prior to V8.7 this behavior was tied to the <CODECLASS="literal">local</CODE> delivery agent.</P></BLOCKQUOTE><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program uses <CODECLASS="literal">$z</CODE> toaccess a user's <EMCLASS="emphasis">~/.forward</EM> file and to save failedmail to a user's <EMCLASS="emphasis">dead-letter</EM> file.</P><PCLASS="para"><CODECLASS="literal">$z</CODE> can be passed in the <CODECLASS="literal">A=</CODE> equate toa custom written <CODECLASS="literal">local</CODE> delivery agent. One reasonto do so would be to deliver mail to a user's home directory,rather than to a central spool directory.<CODECLASS="literal">$z</CODE> is also very useful with the <CODECLASS="literal">ForwardPath</CODE> (<CODECLASS="literal">J</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-27"TITLE="">Section 34.8.27, ForwardPath (J)</A>).</P><PCLASS="para"><CODECLASS="literal">$z</CODE> is transient. If it is defined in the configurationfile or the command line, that definition will be ignored by <EMCLASS="emphasis">sendmail</EM>.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-31-SECT-10-47">31.10.47 $Z</A></H3><PCLASS="refpurpose">Version of the m4 configuration</P>(m4 technique)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-35928"></A><ACLASS="indexterm"NAME="AUTOID-35930"></A><ACLASS="indexterm"NAME="AUTOID-35933"></A>When you are configuring with the <EMCLASS="emphasis">m4</EM> technique, the version of the configurationfile can be augmented by defining confCF_VERSION in your <CODECLASS="literal">mc</CODE> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">define(`confCF_VERSION', `<CODECLASS="replaceable"><I>ver</I></CODE>')dnl</PRE></BLOCKQUOTE></P><PCLASS="para">This statement causes the value <CODECLASS="replaceable"><I>ver</I></CODE> to be appended to the defaultvalue in <CODECLASS="literal">$Z</CODE>. A forward slash character will separate the two.The default value in <CODECLASS="literal">$Z</CODE> varies depending on your <EMCLASS="emphasis">sendmail</EM>version. If your version were V8.8.4, the above <EMCLASS="emphasis">m4</EM>definition would yield the following macro definition:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DZ8.8.4/<CODECLASS="replaceable"><I>ver</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="literal">$Z</CODE> is generally used aspart of the <CODECLASS="literal">SmtpGreetingMessage</CODE> (<CODECLASS="literal">$e</CODE>)option's declaration (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-65"TITLE="">Section 34.8.65</A>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">O SmtpGreetingMessage=$j Sendmail $v/$Z; $b</PRE></BLOCKQUOTE></P><PCLASS="para">Note that this version is different from the version declaredwith the VERSIONID <EMCLASS="emphasis">m4</EM> macro (see <ACLASS="xref"HREF="ch19_06.htm#SML2-CH-19-SECT-6-50"TITLE="">Section 19.6.50, VERSIONID</A>). Also note that this is the configuration file version, rather than the version of the <EMCLASS="emphasis">sendmail</EM> program as stored in <CODECLASS="literal">$v</CODE>.</P><PCLASS="para">Prior to V8 <EMCLASS="emphasis">sendmail</EM> the configuration file version wasstored in <CODECLASS="literal">$V</CODE>.<ACLASS="indexterm"NAME="AUTOID-35965"></A></P></DIV></BLOCKQUOTE></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_09.htm"TITLE="31.9 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.9 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch32_01.htm"TITLE="32. Class Macros"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 32. Class Macros"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">31.9 Pitfalls</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">32. Class Macros</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>