<HTML><HEAD><TITLE>[Chapter 33] 33.8 Alphabetized Reference</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T20:26:11Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch33_01.htm"TITLE="33. Database Macros"><LINKREL="prev"HREF="ch33_07.htm"TITLE="33.7 Pitfalls"><LINKREL="next"HREF="ch34_01.htm"TITLE="34. Options"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch33_07.htm"TITLE="33.7 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 33.7 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 33<BR>Database Macros</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch34_01.htm"TITLE="34. Options"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 34. Options"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-33-SECT-8">33.8 Alphabetized Reference</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="SML2-CH-33-IX-DATABASES-CLASSES-FOR"></A><ACLASS="indexterm"NAME="SML2-CH-33-IX-CLASSES-DATABASE"></A>Recall that the <CODECLASS="literal">K</CODE> configuration command (see <ACLASS="xref"HREF="ch33_03.htm"TITLE="The K Configuration Command">Section 33.3</A>)is used like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name class args</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>class</I></CODE> determines the type of database that will be used.For example, the class <CODECLASS="literal">btree</CODE> causes the Berkeley <EMCLASS="emphasis">db</EM>(3) to be used,whereas the class <CODECLASS="literal">dequote</CODE> causes an internal routine of<EMCLASS="emphasis">sendmail</EM>'s to be called.</P><PCLASS="para">In this section we present all the classes in alphabetical order.They are summarized in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-2"TITLE="Possible K Command Classes">Table 33.3</A> of <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-2"TITLE="The class">Section 33.3.2</A>.Most interaction with these classes can be watched by using the<CODECLASS="literal">-d38.2</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-128"TITLE="">Section 37.5.128</A>).Some specialty maps use other debugging switches, which we indicatewhere appropriate.</P><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-1">33.8.1 btree</A></H3><PCLASS="refpurpose">Berkeley's db form of database</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38578"></A>The term btree stands for &quot;balanced tree.&quot; It is a grow-onlyform of database. Lookups and insertions are fast, but deletionsdo not shrink the database. A good description of this formof database can be found in <EMCLASS="emphasis">The Art of Computer Programming, Vol. 3: Sorting and  Searching</EM>,D.E. Knuth, 1968, pp. 471-480.The btree class is available only if <EMCLASS="emphasis">sendmail</EM> was compiledwith <CODECLASS="literal">NEWDB</CODE> defined and the new Berkeley <EMCLASS="emphasis">db</EM> librarylinked in.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-2">33.8.2 bestmx</A></H3><PCLASS="refpurpose">Look up the best MX record for a host</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38596"></A><ACLASS="indexterm"NAME="AUTOID-38599"></A>The <CODECLASS="literal">bestmx</CODE> map class looks up a hostname as the <CODECLASS="replaceable"><I>key</I></CODE>and returns the current best MX record as the <CODECLASS="replaceable"><I>value</I></CODE>.Internally, a call is made to <EMCLASS="emphasis">getmxrr</EM>() to get a list ofMX records for the host. That list is sorted in orderof the best to the worst, and <CODECLASS="literal">bestmx</CODE> returns the first.Because <EMCLASS="emphasis">bestmx</EM>is a class, not a map, you need to declare it with a <CODECLASS="literal">K</CODE> configurationcommand before you can use it:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>bestmx bestmx</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">One use for this class might be to see whether a particular host hasa usable MX at all:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kbestmx bestmx...R$*&lt; @ $+ &gt; $*                $: $1&lt;@$2&gt;$3 &lt;$(bestmx $2 $: NO $)&gt;R$*&lt; @ $+ &gt; $* &lt; NO &gt;         $#smtp  $@ $2 $: $1 &lt; @ $2 &gt; $3R$*&lt; @ $+ &gt; $* &lt; $* &gt;         $: $1&lt;@ $[ $2 $] &gt; $3</PRE></BLOCKQUOTE></P><PCLASS="para">In the first rule we look up the host part of an address (which has alreadybeen focused by rule set 3) with the <CODECLASS="literal">bestmx</CODE> database map.The result of the lookup is surrounded with angle bracketsand appended to the original address. The second rule looks forthe <CODECLASS="literal">NO</CODE> caused by an unsuccessful lookup (the <CODECLASS="literal">$:</CODE>).The original address is thensent with the <CODECLASS="literal">smtp</CODE> delivery agent. If the hostnameinside the appended angle braces is not <CODECLASS="literal">NO</CODE>,the host part of the original address is canonicalizedwith the <CODECLASS="literal">$[</CODE> and <CODECLASS="literal">$]</CODE> operators.</P><PCLASS="para">This <CODECLASS="literal">bestmx</CODE> class is a special internal one that can takeadvantage of only two of the <CODECLASS="literal">K</CODE> command switches: the <CODECLASS="literal">-a</CODE>(as you saw) and the <CODECLASS="literal">-q</CODE> (to suppress dequoting the key).This class can be watched with the <CODECLASS="literal">-d8</CODE> debugging switch(see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-30"TITLE="">Section 37.5.30, -d8.1</A>).</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-3">33.8.3 dbm</A></H3><PCLASS="refpurpose">Really ndbm supplied with most versions of UNIX</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38637"></A><ACLASS="indexterm"NAME="AUTOID-38639"></A>The dbm class, which is really the <EMCLASS="emphasis">ndbm</EM> form of database, is thetraditional form of UNIX database. Data are stored in one file, keysin another. The data must fit in blocks of fixed sizes, so there isusually a limit on the maximum size (1 kilobyte or so) on any givenstored datum. The <EMCLASS="emphasis">dbm</EM> class is available only if <EMCLASS="emphasis">sendmail</EM>was compiled with <CODECLASS="literal">NDBM</CODE> declared (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-24"TITLE="">Section 18.8.24, NDBM</A>).</P><PCLASS="para">This is the class of database traditionally used with alias files.Because of the limit on the size of a datum, you should considerusing one of the <EMCLASS="emphasis">db</EM>(3) <CODECLASS="literal">hash</CODE> or <CODECLASS="literal">btree</CODE> classes instead.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with theclass and the meaning of each switch.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-4">33.8.4 dequote</A></H3><PCLASS="refpurpose">A pseudo map for removing quotation marks</P>(V8.6 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38662"></A><ACLASS="indexterm"NAME="AUTOID-38665"></A>V8 <EMCLASS="emphasis">sendmail</EM> can remove quotation marks from aroundtokens by using the special <EMCLASS="emphasis">dequote</EM> class. Because <EMCLASS="emphasis">dequote</EM>is a class, not a map, you need to declare it with a <CODECLASS="literal">K</CODE> configurationcommand before you can use it:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>unquote dequote</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This declares a map named <CODECLASS="replaceable"><I>unquote</I></CODE> of the class <CODECLASS="replaceable"><I>dequote</I></CODE>.Once a map name has been declared, the <CODECLASS="replaceable"><I>dequote</I></CODE> class can beused in the RHS of rules to remove quotation marks. It is usedwith <CODECLASS="literal">$(</CODE> and <CODECLASS="literal">$)</CODE>, just like database lookups:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$(unquote <CODECLASS="replaceable"><I>tokens</I></CODE> $)</PRE></BLOCKQUOTE></P><PCLASS="para">Here, arbitrary <CODECLASS="replaceable"><I>tokens</I></CODE> are looked up in the databasenamed <CODECLASS="literal">unquote</CODE>. That database is special because it isof the class <CODECLASS="replaceable"><I>dequote</I></CODE>. Instead of really being looked up in adatabase, <CODECLASS="replaceable"><I>tokens</I></CODE> will just have any surrounding quotation marksremoved:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&quot;A.B.C&quot;           <ICLASS="lineannotation">becomes</I>   A.B.C&quot;A&quot;.&quot;B&quot;.&quot;C&quot;       <ICLASS="lineannotation">becomes</I>   A.B.C&quot;A B&quot;             <ICLASS="lineannotation">becomes</I>   &quot;A B&quot;&quot;A,B&quot;             <ICLASS="lineannotation">becomes</I>   &quot;A,B&quot;&quot;A&gt;B&quot;             <ICLASS="lineannotation">becomes</I>   &quot;A&gt;B&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">The first example shows that surrounding quotation marks are removed.The second shows that multiple quoted tokens are all de-quoted.The last three show that <EMCLASS="emphasis">sendmail</EM> refuses to dequote any tokensthat will form an illegal or ambiguous address when dequoted.</P><PCLASS="para">As an aid to understanding this dequoting process, runthe following two-line configuration file in rule-testing mode:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">V7Kdequote dequote</PRE></BLOCKQUOTE></P><PCLASS="para">You can then use the <CODECLASS="literal">-bt</CODE> <CODECLASS="literal">/map</CODE> command to try variousdequoting possibilities:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map dequote &quot;A.B.C&quot;</B></CODE>map_lookup: dequote (&quot;A.B.C&quot;) returns A.B.C (0)&gt; <CODECLASS="userinput"><B>/map dequote &quot;A&quot;.&quot;B&quot;.&quot;C&quot;</B></CODE>map_lookup: dequote (&quot;A&quot;.&quot;B&quot;.&quot;C&quot;) returns A.B.C (0)&gt; <CODECLASS="userinput"><B>/map dequote &quot;A B&quot;</B></CODE>map_lookup: dequote (&quot;A B&quot;) no match (0)</PRE></BLOCKQUOTE></P><PCLASS="para">Note that beginning with V8.7, specifying the <CODECLASS="literal">-s</CODE>switch causes the space character to be replaced with anothercharacter before dequoting (see <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4-10"TITLE="-s  space replacement character (V8.7 and above)">Section 33.3.4.10</A>).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">V7Kdequote dequote -s+</PRE></BLOCKQUOTE></P><PCLASS="para">In that case the last example above would become the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map dequote &quot;A B&quot;</B></CODE>map_lookup: dequote (&quot;A B&quot;) returns A+B (0)</PRE></BLOCKQUOTE></P><PCLASS="para">Also note that beginning with V8.8, specifying the <CODECLASS="literal">-a</CODE>switch causes a suffix of your choice to be appended to a successfulmatch:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">V7Kdequote dequote -a.yes</PRE></BLOCKQUOTE></P><PCLASS="para">In that case the <CODECLASS="literal">&quot;A.B.C&quot;</CODE> example would become the following:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map dequote &quot;A.B.C&quot;</B></CODE>map_lookup: dequote (&quot;A.B.C&quot;) returns A.B.C.yes (0)</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;In addition to removing quotes, the <CODECLASS="replaceable"><I>dequote</I></CODE> class also tokenizeseverything that is returned. It does this because quotes are ordinarilyused to mask the separation characters that delimit tokens.For example, consider the<CODECLASS="literal">$&amp;</CODE> operator. It prevents a macro in a rule from being expandedwhen the configuration file is read and always returns a singletoken, no matter how many tokens it really contains. Consider thisconfiguration file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">V7DXhost.domainKdequote dequoteR$*    $: $&amp;X , $(dequote &quot;&quot; $&amp;X $)</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the macro <CODECLASS="literal">X</CODE> is assigned <CODECLASS="literal">host.domain</CODE> as its value.The only rule in the file (when <EMCLASS="emphasis">sendmail</EM> is run in rule-testing mode)prints the expression <CODECLASS="literal">$&amp;X</CODE> to show that it is a singletoken, then prints the result of dequoting that same expression.Note that an empty token needs to be dequoted. Putting quotes around<CODECLASS="literal">$&amp;X</CODE> itself won't work. The output produced by rule-testing modelooks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; 0 foorewrite: ruleset  0   input: foorewrite: ruleset  0 returns: host.domain , host . domain&gt;                             <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>            <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>                             <ICLASS="lineannotation">$X</I>        <ICLASS="lineannotation">$X dequoted</I></PRE></BLOCKQUOTE></P><PCLASS="para">No debugging switch is available to watch the actions of the<CODECLASS="literal">dequote</CODE> class.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-5">33.8.5 hash</A></H3><PCLASS="refpurpose">Berkeley's db form of database</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38753"></A>The <CODECLASS="replaceable"><I>hash</I></CODE> class uses a hashing algorithm for storingdata. This approach to a database is described in<EMCLASS="emphasis">A New Hash Package for UNIX</EM>, by Margo Seltzer (USENIXProceedings, Winter 1991). The hash class is available only if<EMCLASS="emphasis">sendmail</EM> was compiled with <CODECLASS="literal">NEWDB</CODE> defined and the newBerkeley <EMCLASS="emphasis">db</EM> library linked in.</P><PCLASS="para">The <CODECLASS="literal">hash</CODE> class is the default that is used with most of theFEATURES offered by the <EMCLASS="emphasis">m4</EM> technique (see<ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-5"TITLE="Specialty Class Switches">Table 33.6</A> in <ACLASS="xref"HREF="ch33_06.htm"TITLE="Database Maps and m4">Section 33.6, "Database Maps and m4"</A>). For example, consider thefollowing:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kuudomain hash -o /etc/uudomain</PRE></BLOCKQUOTE></P><PCLASS="para">Here, a map named <CODECLASS="literal">uudomain</CODE> is declared to be of class <CODECLASS="literal">hash</CODE>.The <CODECLASS="literal">-o</CODE> says that the file <EMCLASS="emphasis">/etc/uudomain</EM> is optional.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-6">33.8.6 hesiod</A></H3><PCLASS="refpurpose">MIT network user authentication services</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38784"></A>The <CODECLASS="literal">hesiod</CODE> class of map uses the Hesiod system,a network information system developed as Project Athena.Support of <EMCLASS="emphasis">hesiod</EM> maps is available only if you declareHESIOD when compiling <EMCLASS="emphasis">sendmail</EM>. (See <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-10"TITLE="">Section 18.8.10, HESIOD</A>for a fuller description of the Hesiod system.)</P><PCLASS="para">A <CODECLASS="literal">hesiod</CODE> map is declared like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name </I></CODE>hesiod<CODECLASS="replaceable"><I> HesiodNameType</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>HesiodNameType</I></CODE> must be one that is known at your site, suchas <CODECLASS="literal">passwd</CODE> or <CODECLASS="literal">service</CODE>.An unknown <CODECLASS="replaceable"><I>HesiodNameType</I></CODE> will yield this error when <EMCLASS="emphasis">sendmail</EM>begins to run:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot initialize Hesiod map (<ICLASS="lineannotation">hesiod error number</I>)</PRE></BLOCKQUOTE></P><PCLASS="para">One example of a lookup might look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kuid2name hesiod uidR$+      $: $(uid2name $1 $)</PRE></BLOCKQUOTE></P><PCLASS="para">Here, we declare the map <CODECLASS="literal">uid2name</CODE> using the Hesiod-type<CODECLASS="literal">uid</CODE>, which converts <EMCLASS="emphasis">uid</EM> numbers into login names. If theconversion was successful, we use the login name returned; otherwise, weuse the original workspace.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-7">33.8.7 host</A></H3><PCLASS="refpurpose">Internal table used to store and look up hostnames</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38824"></A>The <CODECLASS="replaceable"><I>host</I></CODE> class is a special internal database usedby <EMCLASS="emphasis">sendmail</EM> to help it resolve hostnames. It is fullydescribed under the <CODECLASS="literal">$[</CODE> and <CODECLASS="literal">$]</CODE> operators in <ACLASS="xref"HREF="ch33_04.htm#SML2-CH-33-SECT-4-3"TITLE="$[ and $]: A Special Case">Section 33.4.3</A>.</P><PCLASS="para">The <CODECLASS="literal">-d9</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-37"TITLE="">Section 37.5.37, -d9.1</A>)can be used to watch the actions caused by this <CODECLASS="literal">host</CODE> class.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-8">33.8.8 implicit</A></H3><PCLASS="refpurpose">Search for an aliases database file</P>(V8.1 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38843"></A><ACLASS="indexterm"NAME="AUTOID-38845"></A>The <CODECLASS="replaceable"><I>implicit</I></CODE> class refers specifically to <EMCLASS="emphasis">aliases</EM>(5)files only. It causes <EMCLASS="emphasis">sendmail</EM> to first try to open a<EMCLASS="emphasis">db</EM>(3) hash-style alias file, and if that fails or ifNEWDB support was not compiled in, it tries to open a<EMCLASS="emphasis">ndbm</EM>(3)-style database.If that fails, <EMCLASS="emphasis">sendmail</EM> reads the <EMCLASS="emphasis">aliases</EM>(5) source fileinto its internal symbol table.</P><PCLASS="para">Although you can declare and use this class in a configuration file,there is no reason to do so. It is of use only to the internals of<EMCLASS="emphasis">sendmail</EM>. If <CODECLASS="replaceable"><I>implicit</I></CODE> fails to open an <EMCLASS="emphasis">aliases</EM>file (probably because of a faulty <CODECLASS="literal">AliasFile</CODE> (<CODECLASS="literal">A</CODE>) option;see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-1"TITLE="">Section 34.8.1</A>), <EMCLASS="emphasis">sendmail</EM> will issue the followingerror if it is running in verbose mode:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">WARNING: cannot open alias database <EMCLASS="emphasis">bad file name</EM></PRE></BLOCKQUOTE></P><PCLASS="para">If the source <EMCLASS="emphasis">aliases</EM> file exists but no database formexists, <EMCLASS="emphasis">sendmail</EM> will read that source file into itsinternal symbol table using the <CODECLASS="literal">stab</CODE> class (see <ACLASS="xref"HREF="ch33_08.htm#SML2-CH-33-SECT-8-16"TITLE="">Section 33.8.16</A>).</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-9">33.8.9 ldapx</A></H3><PCLASS="refpurpose">The Lightweight Directory Access Protocol</P>(V8.8 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38878"></A><ACLASS="indexterm"NAME="AUTOID-38880"></A>LDAP stands for <BCLASS="emphasis.bold">L</B>ightweight <BCLASS="emphasis.bold">D</B>irectory <BCLASS="emphasis.bold">A</B>ccess<BCLASS="emphasis.bold">P</B>rotocol and provides access to the X.500 directory. The <CODECLASS="literal">ldapx</CODE> class is used to look up items inthat directory service. It is declared like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> ldapx <CODECLASS="replaceable"><I>switches</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Lookups via LDAP are entirely defined by the switches specified.To illustrate, consider the following X.500 entry:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cn=Full Name, o=Organization, c=USsn=Nameuid=yournamecn=Full Namecommonname=Full Namemail=yourname@mailhub.your.domainobjectclass=personobjectclass=deptperson</PRE></BLOCKQUOTE></P><PCLASS="para">To look up a login name in this database and have the officialemail address for that user returned, you might use a declaration like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kldap ldapx -k&quot;uid=%s&quot; -v&quot;mail&quot; -hldap_host -b&quot;o=Organization, c=US&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Note that the <CODECLASS="literal">-k</CODE> switch is in the form of a <CODECLASS="literal">ldap_search</CODE>(3)filter, where the <CODECLASS="replaceable"><I>key</I></CODE> will replace the <CODECLASS="literal">%s</CODE> and then thewhole expression will be searched for as the <CODECLASS="replaceable"><I>key</I></CODE>. The <CODECLASS="literal">-b</CODE>is required to specify the base from which to search. Note thata base must be selected such that it ensures that <EMCLASS="emphasis">sendmail</EM> willalways get a unique result.</P><PCLASS="para">The following rule can be used with the above declaration to lookup the preferred mail address for a user:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R$* &lt;@ $+ &gt; $*       $: $(ldap $1 $: $1&lt;@$2&gt;$3 $)</PRE></BLOCKQUOTE></P><PCLASS="para">Here we presume that this rule was preceded by a call to rule set 3to focus on the host part. If the lookup succeeds, the new (unfocused)address is returned from the <CODECLASS="literal">mail=</CODE> line in the database. Otherwise,the original address is returned.</P><PCLASS="para">A few errors can occur during <EMCLASS="emphasis">sendmail</EM>'s startup that indicate afaulty <CODECLASS="literal">K</CODE> command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">LDAP map: -h flag is requiredLDAP map: -b flag is requiredNo return attribute in <ICLASS="lineannotation">map name</I></PRE></BLOCKQUOTE></P><PCLASS="para">The first two show that those switches are mandatory. The third printsonly to show that the <CODECLASS="literal">-v</CODE> switch is mandatory if the <CODECLASS="literal">-o</CODE>switch is absent.</P><PCLASS="para">In addition, each successful lookup can cause a line like the following tobe logged via <EMCLASS="emphasis">syslog</EM>(3):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>qid</I></CODE>: ldap <CODECLASS="replaceable"><I>key</I></CODE> =&gt; <CODECLASS="replaceable"><I>value</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each. Also, <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-5"TITLE="Specialty Class Switches">Table 33.6</A> listsseveral nonstandard switches that are used by this <CODECLASS="literal">ldapx</CODE> class.Finally, note that the <CODECLASS="literal">ldapx</CODE> class can be used only if LDAPMAPwas defined when <EMCLASS="emphasis">sendmail</EM> was compiled (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-15"TITLE="">Section 18.8.15, LDAPMAP</A>).</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-10">33.8.10 netinfo</A></H3><PCLASS="refpurpose">NeXT Computer's network information services</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38943"></A>NetInfo is NeXT's implementation of a network-based information service.The <CODECLASS="replaceable"><I>netinfo</I></CODE> class expects a map declaration to beof the following form:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> netinfo <CODECLASS="replaceable"><I>map</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Other switches may be used with this class, and theyhave their normal meanings (see <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>).</P><PCLASS="para">Support of <EMCLASS="emphasis">netinfo</EM> maps is available only if you declareNETINFO when compiling <EMCLASS="emphasis">sendmail</EM> (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-27"TITLE="">Section 18.8.27, NETINFO</A>).</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-11">33.8.11 nis</A></H3><PCLASS="refpurpose">Sun's Network Information Services (NIS)</P>(V8.6 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-38965"></A>Sun Microsystems offers a network information servicecalled NIS. It provides the ability to look up various kindsof information in network databases. The <CODECLASS="literal">nis</CODE> class allows youto access that network information by way of rules in rule sets.You declare an <CODECLASS="literal">nis</CODE> class map like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name </I></CODE>nis<CODECLASS="replaceable"><I> map</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>name</I></CODE> is the identifier that you will later use in rule sets.The <CODECLASS="replaceable"><I>map</I></CODE> is any <EMCLASS="emphasis">nis</EM> map. Lookups will occur in thedefault <EMCLASS="emphasis">nis</EM> domain. If you wish to specify some other domain,you may append an <CODECLASS="literal">@</CODE> character and the domain name to the <CODECLASS="replaceable"><I>map</I></CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name </I></CODE>nis<CODECLASS="replaceable"><I> map</I></CODE>@<CODECLASS="replaceable"><I>domain</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">To illustrate, consider the need to look up the name of the centralmail server for your department. If such a map were called <EMCLASS="emphasis">mailservers</EM>,you could use the following configuration file line to look upyour domain in that map:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kmailservers nis -o mailservers...R$* &lt;@ $+ &gt; $*          $: $1&lt;@$2&gt;$3 &lt;$(mailservers $2 $)&gt;R$* &lt;@ $+ &gt; $* &lt;$+&gt;     $#smtp $@ $4 $: $1 &lt; @ $2 &gt; $3...</PRE></BLOCKQUOTE></P><PCLASS="para">Here, we look up the host part of an address (<CODECLASS="literal">$2</CODE>) in the<CODECLASS="literal">mailservers</CODE> <EMCLASS="emphasis">nis</EM> map. The <CODECLASS="literal">-o</CODE> makes the existence of the map optional.If the host part is found, it is rewritten to be the name of the mail server for that host. In the last rule we forward the originaladdress to that server.</P><PCLASS="para">Without the <CODECLASS="literal">-o</CODE>, the nonexistence of a map will cause thiserror to be logged:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot bind to map <CODECLASS="replaceable"><I>name</I></CODE> in domain <CODECLASS="replaceable"><I>domain</I></CODE>: <ICLASS="lineannotation">reason here</I></PRE></BLOCKQUOTE></P><PCLASS="para">If <EMCLASS="emphasis">nis</EM> is not running at all or if <EMCLASS="emphasis">sendmail</EM> cannot bindto the <CODECLASS="replaceable"><I>domain</I></CODE> specified or the default domain, the followingerror is logged:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">NIS map <CODECLASS="replaceable"><I>name</I></CODE> specified, but NIS not running</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">nis</CODE> class is available only if <EMCLASS="emphasis">sendmail</EM> is compiled withNIS defined (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-29"TITLE="">Section 18.8.29, NIS</A>).</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-12">33.8.12 nisplus</A></H3><PCLASS="refpurpose">Sun's newer version of NIS</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39024"></A>Sun Microsystems's NIS+ is a complete redo of its earlier<EMCLASS="emphasis">nis</EM> system. The <CODECLASS="literal">nisplus</CODE> class allows you to look upinformation using NIS+. The form of that class declaration looks likethis:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> nisplus <CODECLASS="replaceable"><I>map.domain</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="replaceable"><I>map</I></CODE> is a NIS+ map name, such as <EMCLASS="emphasis">mail_aliases</EM>.[7]If the <CODECLASS="replaceable"><I>domain</I></CODE> or <CODECLASS="replaceable"><I>.domain</I></CODE> is missing, the <EMCLASS="emphasis">nisplus</EM> defaultdomain is used. If the entire <CODECLASS="replaceable"><I>map.domain</I></CODE> is missing, the defaultbecomes <EMCLASS="emphasis">mail_aliases.org_dir</EM>. The domain <EMCLASS="emphasis">org_dir</EM> containsall the systemwide administration tables.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] Note that under NIS+ map names cannot contain a dot, whereas underNIS they could&nbsp;- for example, <EMCLASS="emphasis">mail_aliases</EM> for NIS+ but<EMCLASS="emphasis">mail.aliases</EM> for NIS.</P></BLOCKQUOTE><PCLASS="para">Any lookup failures that can be retried will automatically be retried up tofive times, with a <EMCLASS="emphasis">sleep</EM>(3) of 2 seconds between each try.If the <CODECLASS="replaceable"><I>map.domain</I></CODE> doesn't exist in the local <EMCLASS="emphasis">nisplus</EM>system, this error is printed when <EMCLASS="emphasis">sendmail</EM> starts:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot find table <ICLASS="lineannotation">map</I>.<ICLASS="lineannotation">domain</I>: <ICLASS="lineannotation">reason for failure here</I></PRE></BLOCKQUOTE></P><PCLASS="para">This error is suppressed if the original <CODECLASS="literal">K</CODE> command declaration includedthe <CODECLASS="literal">-o</CODE> switch.</P><PCLASS="para">Two other errors can happen during startup:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">map</I>.<ICLASS="lineannotation">domain</I>: <ICLASS="lineannotation">reason for failure here</I> is not a tablenisplus_map_open(<ICLASS="lineannotation">map</I>): can not find key column <ICLASS="lineannotation">-k column name here</I></PRE></BLOCKQUOTE></P><PCLASS="para">You can use the <CODECLASS="literal">-k</CODE> switch to specify a <CODECLASS="replaceable"><I>key</I></CODE> column to look up.Under <EMCLASS="emphasis">nisplus</EM>, columns are named, so the <CODECLASS="literal">-k</CODE> must be followed bya valid name, or the last error above will be printed. You can also usethe <CODECLASS="literal">-v</CODE> switch to specify the <CODECLASS="replaceable"><I>value</I></CODE> column, also a name. Ifthe <CODECLASS="literal">-v</CODE> is omitted, the last column becomes the default.See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the other <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each. </P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-13">33.8.13 null</A></H3><PCLASS="refpurpose">Provide a never found service</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39085"></A>The <CODECLASS="literal">null</CODE> class is an internal database that always returnsa failed lookup. It is useful for replacing other classes to forcefailures without errors. Normally, the <CODECLASS="literal">null</CODE> class is usedinternally only.</P><PCLASS="para">Consider a tiny configuration file that does not need the useof the <EMCLASS="emphasis">aliases</EM> facilities. One way to declare aliaseswould be like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">O AliasFile=null:</PRE></BLOCKQUOTE></P><PCLASS="para">This tells <EMCLASS="emphasis">sendmail</EM> to use the <CODECLASS="literal">null</CODE> class for lookingup aliases. Therefore no aliases will ever be found.</P><PCLASS="para">None of the <CODECLASS="literal">K</CODE> command switches may be used with the <CODECLASS="literal">null</CODE>class. If you try to use any, they will be silently ignored.No debugging switch is available to watch this <CODECLASS="literal">null</CODE> class.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-14">33.8.14 program</A></H3><PCLASS="refpurpose">Run an external program to look up the key</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39108"></A>The <CODECLASS="literal">program</CODE> class allows you to perform lookups via arbitraryexternal programs. The form for the declaration of this class lookslike this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> program <CODECLASS="replaceable"><I>/path arg1 arg2 ...</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>/path</I></CODE> must be the full pathname to the program.Relative paths will not work, and attempts to use themwill log the following errorand cause the lookup to fail:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">NOQUEUE: SYSERR(bcx): <ICLASS="lineannotation">relative name</I>: cannot exec: No such file or directory</PRE></BLOCKQUOTE></P><PCLASS="para">The program is run under the <EMCLASS="emphasis">uid</EM> and <EMCLASS="emphasis">gid</EM> of the person who ran <EMCLASS="emphasis">sendmail</EM>.But if that person is <EMCLASS="emphasis">root</EM>, the program is instead run as the user and groupspecified by the <CODECLASS="literal">DefaultUser</CODE>(<CODECLASS="literal">u</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-15"TITLE="">Section 34.8.15, DefaultUser (g)(u)</A>).</P><PCLASS="para">The arguments to the program always have the key to be looked up added as a finalargument:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> program <CODECLASS="replaceable"><I>/path arg1 arg2 ...</I></CODE>                                    <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>                                    <ICLASS="lineannotation">key added here</I></PRE></BLOCKQUOTE></P><PCLASS="para">This is the only way that the key can be passed to the program. The keywill specifically not be piped to the program's standard input.</P><PCLASS="para">The value (result of the lookup) is read from the program's standard output.Only the first MAXLINE-1 characters are read (where MAXLINE isdefined in <EMCLASS="emphasis">conf.h</EM>, currently as 2048). The read result is processedas an address and placed into the workspace (unless the <CODECLASS="literal">-m</CODE> switchis used with the <CODECLASS="literal">K</CODE> command).</P><PCLASS="para">To illustrate, consider the need to look up a user's preferred addressin an external relational database:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kilook program /usr/lib/ingres_lookup -d users.database</PRE></BLOCKQUOTE></P><PCLASS="para">This program has been custom written to accept the key as its final argument.To prevent spurious errors, it exits with a zero value whether the keyis found or not. Any system errors cause it to exit with a value selected fromthose defined in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM> (those recognized by <EMCLASS="emphasis">sendmail</EM>).Error messages are printed to the standard error output, and the foundvalue (if there was one) is printed to the standard output.</P><PCLASS="para">In general, it is better to use one of the database formats known to<EMCLASS="emphasis">sendmail</EM> than to attempt to look up keys via externalprograms. The process of <EMCLASS="emphasis">fork</EM>(2)ing and <EMCLASS="emphasis">exec</EM>(2)ing theprogram can become expensive if it is done often, slowing down thehandling of mail.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-15">33.8.15 sequence</A></H3><PCLASS="refpurpose">Search a series of maps</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39162"></A>The <CODECLASS="literal">sequence</CODE> class is a more general form of the <CODECLASS="literal">implicit</CODE>class described for use with alias files. The <CODECLASS="literal">sequence</CODE> classallows you to declare a single name that will be used to search aseries of databases. It is declared like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> sequence <CODECLASS="replaceable"><I>map1 map2 ...</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, a <CODECLASS="replaceable"><I>key</I></CODE> will be looked up first in the map named <CODECLASS="replaceable"><I>map1</I></CODE>, andif not found there, it will be looked up in the map named <CODECLASS="replaceable"><I>map2</I></CODE>. The class ofeach of the listed maps should logically relate but need not be the same.Consider, for example, a rule's LHS that will matchif the workspace contains either a user's login name or the name of a host,with the hostname taking precedence:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Khosts host  -a+ /etc/hostsKpasswd user -a- /etc/passwdKboth sequence hosts passwdR$-     $: $(both $1 $)</PRE></BLOCKQUOTE></P><PCLASS="para">Here, we say that the map named <CODECLASS="literal">both</CODE> is of type <CODECLASS="literal">sequence</CODE>.Any single token in the LHS will be looked up first in themap named <CODECLASS="literal">hosts</CODE>, and if it is found there the hostname will bereturned with a <CODECLASS="literal">+</CODE> appended. If it is not found in the<CODECLASS="literal">hosts</CODE> map, it will be next looked up in the <CODECLASS="literal">passwd</CODE>map. If it is found there, the original workspace will be returnedwith a <CODECLASS="literal">-</CODE> appended. If the workspace is not found in eithermap, the lookup fails and the workspace remains unchanged.</P><PCLASS="para">If any map in the series of maps declared with the <CODECLASS="literal">K</CODE> command doesnot exist:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kboth sequence hosts passwd badname</PRE></BLOCKQUOTE></P><PCLASS="para">the following error is printed, and that map is ignored:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Sequence map <CODECLASS="replaceable"><I>both</I></CODE>: unknown member map <CODECLASS="replaceable"><I>badname</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If the number of maps that are sequenced exceeds the maximum allowed(MAXMAPSTACK in <EMCLASS="emphasis">conf.h</EM>, currently 12), the followingerror is printed, and the overflow of maps is ignored:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Sequence map <CODECLASS="replaceable"><I>name</I></CODE>: too many member maps (<CODECLASS="replaceable"><I>max</I></CODE> max)</PRE></BLOCKQUOTE></P><PCLASS="para">None of the <CODECLASS="literal">K</CODE> command switch may be used with the <CODECLASS="literal">sequence</CODE>class. If you try to use any, they will be wrongly interpreted asmap names.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-16">33.8.16 stab</A></H3><PCLASS="refpurpose">Internally load aliases into the symbol table</P>(V8.6 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39211"></A><ACLASS="indexterm"NAME="AUTOID-39214"></A><ACLASS="indexterm"NAME="AUTOID-39217"></A><ACLASS="indexterm"NAME="AUTOID-39220"></A>The <CODECLASS="literal">stab</CODE> class is used internally by <EMCLASS="emphasis">sendmail</EM> toload the raw <EMCLASS="emphasis">aliases</EM>(5) file into its internal symbol table.[8]This is a fallback position that is taken if no database form of aliasingis found.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] As such it is somewhat misnamed. One might reasonably expecta class named <CODECLASS="literal">stab</CODE> to provide access to the symbol table,but alas, it is not so.</P></BLOCKQUOTE><PCLASS="para">The <CODECLASS="literal">stab</CODE> class should <EMCLASS="emphasis">never</EM> be used in configurationfiles. </P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-17">33.8.17 switch</A></H3><PCLASS="refpurpose">Built sequences based on service switch</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39239"></A>The <CODECLASS="literal">switch</CODE> class is used internally by <EMCLASS="emphasis">sendmail</EM> to create<CODECLASS="literal">sequence</CODE> classes of maps based on external service-switchfiles. Recall that the lines inside a service-switch file look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>service  how how</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">as, for example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">aliases   files nis</PRE></BLOCKQUOTE></P><PCLASS="para">This line tells <EMCLASS="emphasis">sendmail</EM> to search for its aliases first infiles then in NIS.</P><PCLASS="para">To illustrate the <CODECLASS="literal">switch</CODE> class, consider the need to look upaliases inside rule sets in the same way that <EMCLASS="emphasis">sendmail</EM> looks upits own aliases.To do this, you would declare a <CODECLASS="literal">switch</CODE> map, as, for example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kali switch aliases</PRE></BLOCKQUOTE></P><PCLASS="para">This causes <EMCLASS="emphasis">sendmail</EM> to search for the <CODECLASS="replaceable"><I>service</I></CODE> named<CODECLASS="literal">aliases</CODE> in the service-switch file.In this example it finds such a line, sofor each <CODECLASS="replaceable"><I>how</I></CODE> that follows the <CODECLASS="literal">aliases</CODE> in that line,<EMCLASS="emphasis">sendmail</EM> creates a new map with the name <CODECLASS="literal">ali</CODE> followed by a dotand the <CODECLASS="replaceable"><I>how</I></CODE>:[9]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] Your <CODECLASS="literal">switch</CODE> map declaration references the newmaps named <CODECLASS="literal">ali.files</CODE> and <CODECLASS="literal">ali.nis</CODE>.These must be declared before the <CODECLASS="literal">switch</CODE> map is declared.Note that <CODECLASS="literal">switch</CODE> map declarations <EMCLASS="emphasis">always</EM> reference other map names!</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">aliases   files    <ICLASS="lineannotation">becomes</I>    ali.filesaliases   nis      <ICLASS="lineannotation">becomes</I>    ali.nis</PRE></BLOCKQUOTE></P><PCLASS="para">These named maps are then sequenced for you.Recall that <CODECLASS="literal">sequence</CODE> maps are declared like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> sequence <CODECLASS="replaceable"><I>map1 map2,...</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>name</I></CODE> given to the sequence is <CODECLASS="replaceable"><I>ali</I></CODE>. In ourexample the following sequence is automatically created for youfrom your original <CODECLASS="literal">switch</CODE> declaration:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kali sequence ali.files ali.nis</PRE></BLOCKQUOTE></P><PCLASS="para">In rule sets, when you look up aliases with the <CODECLASS="literal">ali</CODE> map:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">R...        $( ali $1 $)                <ICLASS="lineannotation"><IMGSRC="../chars/uarr.gif"ALT="-^"></I>          <ICLASS="lineannotation">the sequence named ali</I></PRE></BLOCKQUOTE></P><PCLASS="para">you will use the <CODECLASS="literal">sequence</CODE> named <CODECLASS="literal">ali</CODE> that was automaticallybuilt for you from a combination of your original <CODECLASS="literal">switch</CODE> definitionand your service-switch file's <CODECLASS="literal">aliases</CODE> line.That is, you declare a <CODECLASS="literal">switch</CODE>, but you use a <CODECLASS="literal">sequence</CODE>.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-18">33.8.18 text</A></H3><PCLASS="refpurpose">Look up in flat text files</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39312"></A>The <CODECLASS="literal">text</CODE> class allows you to look up keys in flat text files.This technique is vastly less efficient than looking up keys inreal databases, but it can serve as a way to test rules beforeimplementing them in database form.</P><PCLASS="para">For the <CODECLASS="literal">text</CODE> map, columns for the key and value are bothmeasured as an index. That is, the first column is number 0.To illustrate, consider the following miniconfiguration filethat can be used to check spelling:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kspell text /usr/dict/wordsSpellR$-      $: $( spell $1 $: not in dictionary $)</PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">/usr/dict/words</EM> file contains only a single column of words.The above rule shows that the key is (by default) the first column (index 0).And the value is (by default) also the first column (index 0).</P><PCLASS="para">For more sophisticated applications you can specify the key's column(with the <CODECLASS="literal">-k</CODE> switch) the value's column (with the <CODECLASS="literal">-v</CODE>switch) and the column delimiter (with the <CODECLASS="literal">-z</CODE> switch).To illustrate, consider the need to look up a <EMCLASS="emphasis">uid</EM> in the<EMCLASS="emphasis">/etc/passwd</EM> file and to return the login name of the user towhom it belongs:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kgetuid text -k2 -v0 -z: /etc/passwdR$-      $: $( getuid $1 $)</PRE></BLOCKQUOTE></P><PCLASS="para">The lines of a password file look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ftp:*:1092:255:File Transfer Protocol Program:/u/ftp:/bin/sh</PRE></BLOCKQUOTE></P><PCLASS="para">The third column (where the columns are separated by colons) isthe <EMCLASS="emphasis">uid</EM> field. The first is the login name. Note thatthe <CODECLASS="literal">-k</CODE> and <CODECLASS="literal">-v</CODE> switches show these fields asindexes, where the first is 0 and the third is 2.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with this  class and the meaning of each.No debugging switch is available to watch this <CODECLASS="literal">text</CODE> class.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-19">33.8.19 userdb</A></H3><PCLASS="refpurpose">Look up in the User Database</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39349"></A><ACLASS="indexterm"NAME="AUTOID-39351"></A><ACLASS="indexterm"NAME="AUTOID-39354"></A>The <CODECLASS="literal">userdb</CODE> class allows you to look things up in the UserDatabase (see <ACLASS="xref"HREF="ch33_05.htm"TITLE="The User Database">Section 33.5, "The User Database"</A> for a full description ofthe User Database). The <CODECLASS="literal">userdb</CODE> class is declared with the<CODECLASS="literal">K</CODE> command like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> userdb <CODECLASS="replaceable"><I>switches</I></CODE> <CODECLASS="replaceable"><I>keyword     </I></CODE><ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> V8.7 and above</I></PRE></BLOCKQUOTE></P><PCLASS="para">Here, the <CODECLASS="replaceable"><I>keyword</I></CODE> is the name of the field to search and is either<CODECLASS="literal">maildrop</CODE> or <CODECLASS="literal">mailname</CODE> (see <ACLASS="xref"HREF="ch33_05.htm"TITLE="The User Database">Section 33.5</A>).There is no need to list any files or servers with this command. Those shouldalready have been declared with the <CODECLASS="literal">UserDatabaseSpec</CODE> (<CODECLASS="literal">U</CODE>) option(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-75"TITLE="">Section 34.8.75</A>).</P><PCLASS="para">One possible use for a <CODECLASS="literal">userdb</CODE> map might be tocheck for a local account in the <CODECLASS="literal">check_rcpt</CODE> rule set(see \#sRULESETS_check_rcpt).In this example, all valid incoming recipient addresses are listed withthe User Database:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kislocal userdb maildropScheck_rcptR$*                     $: $&gt;3 $1               focus on hostR$* &lt;@ $+ &gt; $*          $: $1                   discard hostR$+                     $: $(islocal $1 $: nope $)Rnope                   $#error $@ 5.1.3 $: &quot;Recipient is not local&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with thisclass and the meaning of each.The <CODECLASS="literal">-d28</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-97"TITLE="">Section 37.5.97, -d28.1</A>) can be usedto watch this <CODECLASS="literal">userdb</CODE> class in action.</P></DIV></BLOCKQUOTE></DIV><DIVCLASS="refentry"><DIVCLASS="refnamediv"><H3CLASS="refname"><ACLASS="refname"NAME="SML2-CH-33-SECT-8-20">33.8.20 user</A></H3><PCLASS="refpurpose">Look up local passwd information</P>(V8.7 and above)</DIV><BLOCKQUOTE><DIVCLASS="refsect1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-39394"></A><ACLASS="indexterm"NAME="AUTOID-39397"></A>The <CODECLASS="literal">user</CODE> class is used to look up <EMCLASS="emphasis">passwd</EM>(5) information using<EMCLASS="emphasis">getpwent</EM>(3).  A password entry typically looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ftp:*:1092:255:File Transfer Protocol Program:/u/ftp:/bin/sh</PRE></BLOCKQUOTE></P><PCLASS="para">Here, there are seven fields, each separated from the others by coloncharacters. The key is always compared to the first field. The valuereturned is (by default) the first field unless you specify anotherfield with a <CODECLASS="literal">-v</CODE> switch:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">K<CODECLASS="replaceable"><I>name</I></CODE> user -v<ICLASS="lineannotation">field</I></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Here, <EMCLASS="emphasis">field</EM> can be either a number 1 through 7 or one of the names<CODECLASS="literal">name</CODE>, <CODECLASS="literal">passwd</CODE>, <CODECLASS="literal">uid</CODE>, <CODECLASS="literal">gid</CODE>, <CODECLASS="literal">gecos</CODE>,<CODECLASS="literal">dir</CODE>, or <CODECLASS="literal">shell</CODE>, which correspond to the numbers.For example, to look up usernames and get the full name (<EMCLASS="emphasis">gecos</EM>) fieldreturned, you could use something like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kgetgecos user -vgecos...R$-        $: $( getgecos $1 $)</PRE></BLOCKQUOTE></P><PCLASS="para">Note that this returns the full <EMCLASS="emphasis">gecos</EM> field in its rawest form.It is not cleaned up to provide a reliable full name, as is the <CODECLASS="literal">$x</CODE>macro (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-42"TITLE="">Section 31.10.42, $x</A>).</P><PCLASS="para">One possible application for the <CODECLASS="literal">user</CODE> class is in conjunction withthe <CODECLASS="literal">check_rcpt</CODE> rule set (see \#sRULESETS_check_rcpt).In the following we check to see whether a recipient is a local userand reject the mail if that is not so:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Kislocal userScheck_rcptR$*                     $: $&gt;3 $1               focus on hostR$* &lt;@ $+ &gt; $*          $: $1                   discard hostR$-                     $: $(islocal $1 $: nope $)Rnope                   $#error $@ 5.1.3 $: &quot;Recipient is not local&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, we focus on the host part with rule set 3, then discard allbut the user part in the second rule. The third rule performsthe lookup. If the user is found, that username is returned unchanged.If, on the other hand, the user is not found, the token <CODECLASS="literal">nope</CODE> isreturned. The last rule rejects any SMTP RCPT commandthat contains a nonlocal user part.</P><PCLASS="para">See <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-TAB-4"TITLE="Which Class Uses Which Switches">Table 33.5</A> in <ACLASS="xref"HREF="ch33_03.htm#SML2-CH-33-SECT-3-4"TITLE="The switches">Section 33.3.4</A>for a list of the <CODECLASS="literal">K</CODE> command switches that can be used with this  class and the meaning of each.<ACLASS="indexterm"NAME="AUTOID-39437"></A><ACLASS="indexterm"NAME="AUTOID-39438"></A><ACLASS="indexterm"NAME="AUTOID-39439"></A><ACLASS="indexterm"NAME="AUTOID-39440"></A></P></DIV></BLOCKQUOTE></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch33_07.htm"TITLE="33.7 Pitfalls"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 33.7 Pitfalls"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch34_01.htm"TITLE="34. Options"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 34. Options"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">33.7 Pitfalls</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">34. Options</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>