<HTML><HEAD><TITLE>[Chapter 36] 36.5 sendmail's exit() Status</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T21:59:22Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch36_01.htm"TITLE="36. The Command Line"><LINKREL="prev"HREF="ch36_04.htm"TITLE="36.4 Processing the Command Line"><LINKREL="next"HREF="ch36_06.htm"TITLE="36.6 Pitfalls"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch36_04.htm"TITLE="36.4 Processing the Command Line"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 36.4 Processing the Command Line"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 36<BR>The Command Line</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch36_06.htm"TITLE="36.6 Pitfalls"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 36.6 Pitfalls"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-36-SECT-5">36.5 sendmail's exit() Status</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51401"></A><ACLASS="indexterm"NAME="SML2-CH-36-IX-EXIT-VALUES-SENDMAIL"></A><ACLASS="indexterm"NAME="SML2-CH-36-IX-SENDMAIL-EXIT-VALUES"></A>Like any other program under UNIX, <EMCLASS="emphasis">sendmail</EM> can returnmeaningful values to the environment and thus to you.All of the possible exit values are documented in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>along with the values assigned to each name.Here, we provide a bit more explanation about the most commonly usednames.</P><PCLASS="para">The relationship between each exit value and its corresponding DSN<CODECLASS="literal">detail</CODE> is shown in <ACLASS="xref"HREF="ch30_05.htm#SML2-CH-30-TAB-5"TITLE="DSN Versus exit(2) Values with $@ of $#error">Table 30.6</A> in <ACLASS="xref"HREF="ch30_05.htm#SML2-CH-30-SECT-5-2"TITLE="The error Delivery Agent">Section 30.5.2, "The error Delivery Agent"</A>.That table also summarizes the values described here.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-1">36.5.1 EX_CANTCREAT   Can't Write a User's File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51417"></A><ACLASS="indexterm"NAME="AUTOID-51419"></A>An exit value of EX_CANTCREAT (the value 73) meansthat an output file could not be written to. This error generally refers to a user-specified file rather than a system- or configuration-file-specified file.Some problems that can lead to this error (without an error message)is an attempt to write to a file that has any execute bit setin its permissions, a file that has more than one link, and (if the<CODECLASS="literal">SafeFileEnvironment</CODE> option; see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-58"TITLE="">Section 34.8.58, SafeFileEnvironment</A>,is set) a file that is not a regular file.&#13;</P><PCLASS="para">If the <CODECLASS="literal">SafeFileEnvironment</CODE> option is specified and<EMCLASS="emphasis">sendmail</EM> is unable to <EMCLASS="emphasis">chroot</EM>(2) into the specified directory,the following message is logged:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mailfile: Cannot chroot(<ICLASS="lineannotation">directory</I>)</PRE></BLOCKQUOTE></P><PCLASS="para">When delivery is to a file, <EMCLASS="emphasis">sendmail</EM> will log the following errorif the file cannot be opened or <EMCLASS="emphasis">stat</EM>(3)'d:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot open: <ICLASS="lineannotation">reason here</I>cannot fstat: <ICLASS="lineannotation">reason here</I></PRE></BLOCKQUOTE></P><PCLASS="para">and the <EMCLASS="emphasis">fork</EM>(2)'d child will exit with EX_CANTCREAT.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-2">36.5.2 EX_CONFIG     A Configuration Error</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51443"></A>The EX_CONFIG exit value (the value 78) means thata fatal configuration problem was found, but this does not necessarilymean that the problem was found while reading the configurationfile. Failure of a delivery agent to function correctly can leadto this kind of failure:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">During delivery, when a rule set 0 selection of a delivery agent fails to specifya host with the <CODECLASS="literal">$@</CODE> part (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6, "Rule Set 0"</A>), the followingerror is logged and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_CONFIG:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">null host name for mailer</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">During delivery, when <CODECLASS="literal">$u</CODE> appears in the argument list for an SMTPdelivery agent (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1-3"TITLE="$u in A=">Section 30.4.1.3, "$u in A="</A>), <EMCLASS="emphasis">sendmail</EM> logsthe following error and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_CONFIG:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">non-clever IPC</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">During delivery, when an attempt is made to use an SMTP delivery agentwith a version of <EMCLASS="emphasis">sendmail</EM> that was compiled without SMTPsupport (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-41"TITLE="">Section 18.8.41, SMTP</A>), <EMCLASS="emphasis">sendmail</EM> logs  the following error and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_CONFIG:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">deliver: need SMTP compiled to use clever mailer</PRE></BLOCKQUOTE></P></LI></UL><PCLASS="para">Some apparent DNS errors are really configuration problems.In the following error, <CODECLASS="replaceable"><I>hostB</I></CODE> is an MX record that points back to yourhost. The problem is that your host doesn't know that it should beaccepting mail for <CODECLASS="replaceable"><I>hostB</I></CODE>. The solution is to add <CODECLASS="replaceable"><I>hostB</I></CODE>to your local <CODECLASS="literal">$=w</CODE> class (see <ACLASS="xref"HREF="ch32_05.htm#SML2-CH-32-SECT-5-8"TITLE="">Section 32.5.8</A>).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">MX list for <CODECLASS="replaceable"><I>hostB</I></CODE> points back to <CODECLASS="replaceable"><I>ourhost</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> processes MX records, it skips any records of absurd lengthand logs the following message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Host name <CODECLASS="replaceable"><I>ourhost</I></CODE> too long</PRE></BLOCKQUOTE></P><PCLASS="para">If an MX record points to a CNAME record, the result can beserious. The first CNAME may point to a second, the second toa third, and so on. If this list is longer than the number definedby MAXCNAMEDEPTH in <EMCLASS="emphasis">domain.c</EM>, the result is the following error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">DNS failure: CNAME loop for <ICLASS="lineannotation">bad host name here</I></PRE></BLOCKQUOTE></P><PCLASS="para">One solution is to set the <CODECLASS="literal">DontExpandCnames</CODE> option  (see<ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-18"TITLE="">Section 34.8.18, DontExpandCnames</A>) to false, thus causing only the firstCNAME to be used as if it were an A record.</P><PCLASS="para">Errors in rule set numbers are sometimes only found during actual rewriting:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">illegal ruleset number <ICLASS="lineannotation">bad number here</I>rewrite: excessive recursion (max <CODECLASS="replaceable"><I>max</I></CODE>), ruleset <ICLASS="lineannotation">bad number here</I>rewrite: ruleset <CODECLASS="replaceable"><I>num</I></CODE>: replacement $<ICLASS="lineannotation">digit</I> out of boundsUnknown ruleset <ICLASS="lineannotation">bad name here</I></PRE></BLOCKQUOTE></P><PCLASS="para">The solutions to these problems should be obvious. See <ACLASS="xref"HREF="ch29_01.htm"TITLE="Rule Sets">Chapter 29, <CITECLASS="chapter">Rule Sets</CITE></A>, for guidance.</P><PCLASS="para">Note that this EX_CONFIG and EX_SOFTWARE below cause the local <EMCLASS="emphasis">postmaster</EM> to get a copy of the message on the presumption that localerrors can only be fixed locally.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-3">36.5.3 EX_IOERR   A System I/O Error Occurred</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51510"></A><ACLASS="indexterm"NAME="AUTOID-51512"></A><ACLASS="indexterm"NAME="AUTOID-51515"></A>An exit value of EX_IOERR (the value 74) meansthat a serious operating system error occurred. This class of errorrelates mostly to disk I/O.</P><PCLASS="para">If the body of a mail message could not be read, the following errormessage is logged:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">putbody: df<ICLASS="lineannotation">qid</I>: read error</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;The file may have vanished becauseof a disk crash and may have been restored to <EMCLASS="emphasis">lost+found</EM>. The <EMCLASS="emphasis">qid</EM>is the queue identifier that will help you to find the <CODECLASS="literal">qf</CODE> file. Insidethat <CODECLASS="literal">qf</CODE> file are an <CODECLASS="literal">I</CODE> line that give the inode and major and minor device numbersof the disk that held the <CODECLASS="literal">df</CODE> file (see <ACLASS="xref"HREF="ch23_09.htm#SML2-CH-23-SECT-9-7"TITLE="">Section 23.9.7, I line</A>).</P><PCLASS="para">An error that occurs while writing to the <EMCLASS="emphasis">pipe</EM>(2) connection to adelivery agent causes the following error to be logged andfor the <EMCLASS="emphasis">fork</EM>(2)'d child to exit with EX_CONFIG:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">putbody: write error</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-4">36.5.4 EX_OK     No Problems, All Was Fine</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51537"></A>The EX_OK exit code (value 0) indicates that <EMCLASS="emphasis">sendmail</EM> did its joband there were no errors.</P><PCLASS="para">Note that this should be the exit value of all the programs that<EMCLASS="emphasis">sendmail</EM> runs when they succeed without errors. To illustrate,this C language code returns a random value:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">main(){        <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> need a ``</I>return 0<ICLASS="lineannotation">'' here</I>}</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-5">36.5.5 EX_OSERR     A System Resource Error</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51549"></A><ACLASS="indexterm"NAME="AUTOID-51551"></A><ACLASS="indexterm"NAME="AUTOID-51554"></A>The EX_OSERR exit code (value 71) results from various operating systemerrors several of which are described below.In general, this exit value is accompanied by an error messagedescribing the problem.</P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> is unable to get a <EMCLASS="emphasis">pipe</EM>(2) connection tosend the mail message to a delivery agent, it logs one of the followingerrors and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_OSERR:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): pipe (to mailer)<ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): pipe (from mailer)</PRE></BLOCKQUOTE></P><PCLASS="para">If <EMCLASS="emphasis">sendmail</EM> is unable to <CODECLASS="replaceable"><I>dup</I></CODE>(2) a file descriptor so that it canwrite to its pipe, it logs one of first three errors below.If <EMCLASS="emphasis">sendmail</EM> fails to write to its transcriptfile (as set by the <CODECLASS="literal">-X</CODE> switch; see <ACLASS="xref"HREF="ch26_04.htm"TITLE="Log Transactions with -X">Section 26.4</A>),it logs the last error below.In all four cases the current open file descriptors are logged as described in<ACLASS="xref"HREF="ch26_03.htm#SML2-CH-26-SECT-3-3"TITLE="SIGUSR1  Dump States">Section 26.3.3, "SIGUSR1  Dump States"</A>.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): cannot dup pipe <ICLASS="lineannotation">file descriptor</I> for stdout<ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): cannot dup stdout for stderr<ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): cannot dup pipe <ICLASS="lineannotation">file descriptor</I> for stdin<ICLASS="lineannotation">recipient</I>... openmailer(<ICLASS="lineannotation">delivery agent</I>): cannot dup xscript <ICLASS="lineannotation">file descriptor</I> for stdout</PRE></BLOCKQUOTE></P><PCLASS="para">If a delivery agent cannot be executed, <EMCLASS="emphasis">sendmail</EM> logs the following error message,and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_OSERR:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot exec <ICLASS="lineannotation">delivery agent: reason</I></PRE></BLOCKQUOTE></P><PCLASS="para">To save (cache) information about hosts to which connections have beenmade, <EMCLASS="emphasis">sendmail</EM> saves a copy of the file descriptors for thatconnection to its internal <EMCLASS="emphasis">mci</EM> structures (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-44"TITLE="">Section 37.5.44, -d11.1</A>).If it cannot duplicate a file descriptor it logs one of the following messagesand the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_OSERR.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">deliver: cannot create mailer output channel, fd=<ICLASS="lineannotation">file descriptor</I>deliver: cannot create mailer input channel, fd=<ICLASS="lineannotation">file descriptor</I></PRE></BLOCKQUOTE></P><PCLASS="para">When looking up the MX record for a host, the <EMCLASS="emphasis">resolv</EM> library can returnan absurd value. When that happens, the following message is logged and thatMX record is ignored:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">getmxrr: res_search (<ICLASS="lineannotation">host</I>) failed with impossible h_errno (<ICLASS="lineannotation">bad value</I>)</PRE></BLOCKQUOTE></P><PCLASS="para">To queue a message, <EMCLASS="emphasis">sendmail</EM> must save a <EMCLASS="emphasis">qf</EM> file to itsqueue directory. If it cannot create that file, if the directory exists,and if the <EMCLASS="emphasis">uid</EM> of <EMCLASS="emphasis">sendmail</EM> is 0, then the following error message will be logged and the <EMCLASS="emphasis">fork</EM>(2)'d childwill exit with EX_OSERR:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot create &quot;<ICLASS="lineannotation">qf file</I>&quot; in &quot;<ICLASS="lineannotation">directory</I>&quot; (euid=<ICLASS="lineannotation">uid</I>): <ICLASS="lineannotation">reason</I></PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-6">36.5.6 EX_OSFILE   A Critical System File Failure</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51623"></A><ACLASS="indexterm"NAME="AUTOID-51625"></A>The EX_OSFILE exit code (value 72) results when certain system filescould not be opened and when certain system programs could not beexecuted.</P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> gets a SIGHUP signal, it attemptsto re-execute itself (see <ACLASS="xref"HREF="ch26_03.htm#SML2-CH-26-SECT-3-2"TITLE="SIGHUP  Restart">Section 26.3.2, "SIGHUP  Restart"</A>). If it fails, the followingerror is logged and <EMCLASS="emphasis">sendmail</EM> exits:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">could not exec <ICLASS="lineannotation">/path/sendmail</I>: <ICLASS="lineannotation">reason</I></PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program can run a program to look up a <CODECLASS="replaceable"><I>key</I></CODE>in a database. If <EMCLASS="emphasis">sendmail</EM> fails to run the program, it printsthe following error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prog_map_lookup(<ICLASS="lineannotation">program</I>) failed (<ICLASS="lineannotation">reason</I>) - closing</PRE></BLOCKQUOTE></P><PCLASS="para">We probably don't have to mention this, but the <EMCLASS="emphasis">sendmail</EM> program has to read its configuration file.If it fails to open, stat, or read that file or if that file isnot a plain file, it prints one of the following errors:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot opencannot fstatnot a plain fileI/O read error</PRE></BLOCKQUOTE></P><PCLASS="para">and exits with an EX_OSFILE value.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-7">36.5.7 EX_SOFTWARE  An Internal Software Error</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51652"></A><ACLASS="indexterm"NAME="AUTOID-51654"></A>The EX_SOFTWARE exit code (value 70) indicates thata software error occurred.</P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> has successfully connected to a remote host,it checks to see whether it knows to whom it connected.If for some strange reason it doesn't know,it logs this error and drops the connection,and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with EX_OSERR:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">deliver: no host name</PRE></BLOCKQUOTE></P><PCLASS="para">When figuring out whether or not to speak SMTP, <EMCLASS="emphasis">sendmail</EM>looks to see whether the <CODECLASS="literal">$u</CODE> macrois present in the <CODECLASS="literal">A=</CODE> equate for the selected delivery agent(see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1-3"TITLE="$u in A=">Section 30.4.1.3</A>).If <CODECLASS="literal">$u</CODE> is absent, <EMCLASS="emphasis">sendmail</EM> will speak SMTP.If <EMCLASS="emphasis">sendmail</EM> was compiledwithout SMTP support (see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-41"TITLE="">Section 18.8.41</A>), the following erroris logged and the <EMCLASS="emphasis">fork</EM>(2)'d childexits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">SMTP style mailer not implemented</PRE></BLOCKQUOTE></P><PCLASS="para">When  <EMCLASS="emphasis">fork</EM>(2)s and <EMCLASS="emphasis">exec</EM>(2)s a deliveryagent to perform delivery, it calls <EMCLASS="emphasis">wait</EM>(2) to wait forthe delivery agent to exit. If the call to <EMCLASS="emphasis">wait</EM>(2) fails,<EMCLASS="emphasis">sendmail</EM> logs the following error and the <EMCLASS="emphasis">fork</EM>(2)'d childexits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">endmailer <ICLASS="lineannotation">delivery agent name</I>: wait</PRE></BLOCKQUOTE></P><PCLASS="para">When <EMCLASS="emphasis">sendmail</EM> first starts to run (provided that it is not in rule-testing mode), it performs a <EMCLASS="emphasis">chdir</EM>(2) into itsqueue directory. If that <EMCLASS="emphasis">chdir</EM>(2) fails, <EMCLASS="emphasis">sendmail</EM> logsthe following error and exits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot chdir(<ICLASS="lineannotation">directory</I>)</PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">sendmail</EM> program can run a program to look up a <CODECLASS="replaceable"><I>key</I></CODE>in a database. After running that program, <EMCLASS="emphasis">sendmail</EM> calls<EMCLASS="emphasis">wait</EM>(2) to wait for the program to exit. If the call to<EMCLASS="emphasis">wait</EM>(2) fails, <EMCLASS="emphasis">sendmail</EM> prints the following error andthe <EMCLASS="emphasis">fork</EM>(2)'d child exits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">prog_map_lookup(<ICLASS="lineannotation">program</I>): wait error <ICLASS="lineannotation">reason</I></PRE></BLOCKQUOTE></P><PCLASS="para">When bouncing mail,<EMCLASS="emphasis">sendmail</EM> tries to set the sender to <CODECLASS="literal">Postmaster</CODE> if nosender can be determined.Before it can use that address (<CODECLASS="literal">Postmaster</CODE>), it has to parse it withrules to select a delivery agent. If that parsing fails, <EMCLASS="emphasis">sendmail</EM>logs the following error and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Cannot parse Postmaster!</PRE></BLOCKQUOTE></P><PCLASS="para">When the sending of an error message results in an error, an attemptis made to send notification of that error to the addressdefined by the <CODECLASS="literal">DoubleBounceAddress</CODE> option (see<ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-21"TITLE="">Section 34.8.21, DoubleBounceAddress</A>). If parsing that addressfails, <EMCLASS="emphasis">sendmail</EM>logs the following error and the <EMCLASS="emphasis">fork</EM>(2)'d child exits with an EX_SOFTWARE exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot parse <ICLASS="lineannotation">double bounce address</I></PRE></BLOCKQUOTE></P><PCLASS="para">See the description of <CODECLASS="literal">$n</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-26"TITLE="">Section 31.10.26, $n</A>)for another error that results in the <EMCLASS="emphasis">fork</EM>(2)'dchild exiting with an EX_SOFTWARE exit code.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-8">36.5.8 EX_TEMPFAIL     A Recoverable Error</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51726"></A><ACLASS="indexterm"NAME="AUTOID-51728"></A><ACLASS="indexterm"NAME="AUTOID-51730"></A>The EX_TEMPFAIL exit code (value 75) is returned by <EMCLASS="emphasis">sendmail</EM>to indicate that a temporary error has occurred. Temporary errors meanthat the mail message will be put in (or remain in) the queue for the present,and another delivery attempt will be made later.</P><PCLASS="para">One example of this type of error occurs in looking up aliases via a network service,such as NIS. If all the servers are too busy to answer beforea timeout, then <EMCLASS="emphasis">sendmail</EM> should temporarily queue the messageand look up the aliases later:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias database unavailable</PRE></BLOCKQUOTE></P><PCLASS="para">Another example occurs when there is a failure to open a file descriptoras a file pointer with <EMCLASS="emphasis">fdopen</EM>(3). This can happen cachingan SMTP connection:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cannot open SMTP client channel, fd=<ICLASS="lineannotation">file descriptor</I></PRE></BLOCKQUOTE></P><PCLASS="para">In looking up hostnames with DNS, the name serveror the network might be so overloaded thatthe lookup will time out:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ICLASS="lineannotation">host</I>: Name server timeout</PRE></BLOCKQUOTE></P><PCLASS="para">DNS lookup failures can also be caused by dial-on-demand networkswhen the connect is not fast enough. If the delivery mode of <EMCLASS="emphasis">sendmail</EM>is set by the <CODECLASS="literal">DeliveryMode</CODE> (<CODECLASS="literal">d</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-16"TITLE="">Section 34.8.16, DeliveryMode (d)</A>)to <CODECLASS="literal">defer</CODE>, that failed connection is deemed temporary.</P><PCLASS="para">Normally, delivery agents exit because they have finished deliveringthe email. If one exits because of a received signal, <EMCLASS="emphasis">sendmail</EM>logs the following message and the <EMCLASS="emphasis">fork</EM>(2)'dchild exits with an EX_TEMPFAIL exit code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mailer <ICLASS="lineannotation">delivery agent name</I> died with signal <ICLASS="lineannotation">signal in octal</I></PRE></BLOCKQUOTE></P><PCLASS="para">Also, if the <CODECLASS="literal">-X</CODE> command-line switch (see <ACLASS="xref"HREF="ch26_04.htm"TITLE="Log Transactions with -X">Section 26.4</A>) was usedto specify a transcript file, the arguments to the delivery agent willbe recorded in that file.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-9">36.5.9 EX_UNAVAILABLE   A Resource</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51766"></A><ACLASS="indexterm"NAME="AUTOID-51768"></A><ACLASS="indexterm"NAME="AUTOID-51770"></A>The EX_UNAVAILABLE error code (value 69) indicates that some system resource is unavailable. Several examples follow.</P><PCLASS="para">If the body size of an incoming message is largerthan the size limit imposed by the <CODECLASS="literal">M=</CODE> equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-7"TITLE="">Section 30.4.7, M=</A>)the following error is reported:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Message is too large; <ICLASS="lineannotation">M=</I> bytes max</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;All delivery agent programs must be designed to return an exit valuethat is defined in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>. If a misdesigned deliveryagent exits with some other value, <EMCLASS="emphasis">sendmail</EM> will issue thiserror and consider the delivery to have failed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">unknown mailer error <ICLASS="lineannotation">decimal representation of the error value</I></PRE></BLOCKQUOTE></P><PCLASS="para">When delivering to a file, <EMCLASS="emphasis">sendmail</EM> forks, and the child performsthe actual delivery. If that child dies because of a signal, the parentlogs this error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">child died on signal <ICLASS="lineannotation">decimal representation of the signal value</I></PRE></BLOCKQUOTE></P><PCLASS="para">To queue a message, <EMCLASS="emphasis">sendmail</EM> must save a <EMCLASS="emphasis">qf</EM> file to its  queue directory. If it cannot open that file and if the error is otherthan that the file already exists,the following error message will be logged and the <EMCLASS="emphasis">fork</EM>(2)'d childwill exit with EX_UNAVAILABLE:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">queuename: cannot create <EMCLASS="emphasis">file</EM> in <EMCLASS="emphasis">directory</EM> (euid=<EMCLASS="emphasis">userid</EM>)</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-36-SECT-5-10">36.5.10 EX_USAGE   A Command Was Used             Incorrectly</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51801"></A><ACLASS="indexterm"NAME="AUTOID-51803"></A>The EX_USAGE error code (value 64) means that a command orconfiguration line was used incorrectly.</P><PCLASS="para">For instance, the <EMCLASS="emphasis">sendmail</EM> daemon can beexecuted only by <EMCLASS="emphasis">root</EM>. If anyone else tries to run it with<CODECLASS="literal">-bd</CODE> or <CODECLASS="literal">-bD</CODE>, the following error is printedand <EMCLASS="emphasis">sendmail</EM> exits with an EX_USAGE error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Permission denied</PRE></BLOCKQUOTE></P><PCLASS="para">Clumsy fingers can also cause problems. If a command-line switchis used that is unknown to <EMCLASS="emphasis">sendmail</EM>, the followingerror will be printed and <EMCLASS="emphasis">sendmail</EM> will exit with an EX_USAGEcode:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sendmail: illegal option - <ICLASS="lineannotation">bad option here</I></PRE></BLOCKQUOTE></P><PCLASS="para">In parsing an address, that address can be rejected if it containscontrol characters:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Address contained invalid control characters</PRE></BLOCKQUOTE></P><PCLASS="para">If the <CODECLASS="literal">EightBitMode</CODE> (<CODECLASS="literal">8</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-22"TITLE="">Section 34.8.22, EightBitMode (8)</A>)is specified with a bad character, the following error is printed and<EMCLASS="emphasis">sendmail</EM> exits with an EX_USAGE code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Unknown 8-bit mode <ICLASS="lineannotation">bad character</I></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;If the <CODECLASS="literal">DeliveryMode</CODE> (<CODECLASS="literal">d</CODE>) option (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-16"TITLE="">Section 34.8.16</A>)is given a bad mode specification with a bad character, <EMCLASS="emphasis">sendmail</EM> will print the following message and exit with an EX_USAGE code:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Unknown delivery mode <ICLASS="lineannotation">bad mode here</I></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51840"></A><ACLASS="indexterm"NAME="AUTOID-51841"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch36_04.htm"TITLE="36.4 Processing the Command Line"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 36.4 Processing the Command Line"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch36_06.htm"TITLE="36.6 Pitfalls"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 36.6 Pitfalls"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">36.4 Processing the Command Line</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">36.6 Pitfalls</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>