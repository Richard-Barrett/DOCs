<HTML><HEAD><TITLE>[Chapter 38] 38.5 Complex Actions</TITLE><METANAME="DC.title"CONTENT="sendmail"><METANAME="DC.creator"CONTENT="Bryan Costales &amp; Eric Allman"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-01-06T22:48:27Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-222-0"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch38_01.htm"TITLE="38. Rule-Set Testing with -bt"><LINKREL="prev"HREF="ch38_04.htm"TITLE="38.4 Show an Item"><LINKREL="next"HREF="ch38_06.htm"TITLE="38.6 Process-Specified Addresses"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="sendmail"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="sendmail"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ssrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_04.htm"TITLE="38.4 Show an Item"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.4 Show an Item"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 38<BR>Rule-Set Testing with -bt</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_06.htm"TITLE="38.6 Process-Specified Addresses"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.6 Process-Specified Addresses"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="SML2-CH-38-SECT-5">38.5 Complex Actions</A></H2><PCLASS="para">Beginning with V8.7 <EMCLASS="emphasis">sendmail</EM>, rule-testing mode offers six simple commands thataccomplish complex tasks. They are listed in<ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-TAB-0"TITLE="Available -bt  / Commands">Table 38.1</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="SML2-CH-38-TAB-0">Table 38.1: Available -bt  / Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Version</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/canon</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-1"TITLE="Canonify a Host with /canon">Section 38.5.1</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Canonify a host</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/mx</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-2"TITLE="Look Up MX Records with /mx">Section 38.5.2</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Look up MX records</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/map</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-3"TITLE="Look up a Database Item with /map">Section 38.5.3</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Look up a database item</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/tryflags</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-4"TITLE="Select Whom to /parse or /try with /tryflags">Section 38.5.4</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Select whom to /parse or /try</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/parse</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-5"TITLE="Parse an Address with /parse">Section 38.5.5</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Parse an address</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">/try</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">V8.7 and above</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-6"TITLE="Try a Delivery Agent with /try">Section 38.5.6</A></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Try a delivery agent</P></TD></TR></TBODY></TABLE><PCLASS="para">A lone <CODECLASS="literal">/</CODE> character will cause the following usage message to print:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /[canon|map|mx|parse|try|tryflags]</PRE></BLOCKQUOTE></P><PCLASS="para">Anything other than the commands shown in <ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-TAB-0"TITLE="Available -bt  / Commands">Table 38.1</A>(such as <CODECLASS="literal">/foo</CODE>) will producean error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Unknown &quot;/&quot; command /foo</PRE></BLOCKQUOTE></P><PCLASS="para"></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-1">38.5.1 Canonify a Host with /canon</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62040"></A><ACLASS="indexterm"NAME="AUTOID-62042"></A>The <CODECLASS="literal">/canon</CODE> rule-testing command causes <EMCLASS="emphasis">sendmail</EM> tolook up the canonical (official, fully qualified) name of a hostand print the result. The form for this command looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/canon <CODECLASS="replaceable"><I>host</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If <CODECLASS="replaceable"><I>host</I></CODE> is missing, the following usage message is printed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /canon address</PRE></BLOCKQUOTE></P><PCLASS="para">When you correctly supply the hostname as the argument, <EMCLASS="emphasis">sendmail</EM>looks up the canonical name and returns the result:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/canon icsic</B></CODE>getcanonname(icsic) returns icsic.icsi.berkeley.edu&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the hostname <CODECLASS="literal">icsic</CODE> was looked up. Because itscanonical name was found, that name is printed followingthe <CODECLASS="literal">returns</CODE>. If the hostname had not been found,<EMCLASS="emphasis">sendmail</EM> would have printed that same name after the<CODECLASS="literal">returns</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/canon foo</B></CODE>getcanonname(foo) returns foo</PRE></BLOCKQUOTE></P><PCLASS="para">If you wish to watch the actual process of a host being canonified,you can turn on the <CODECLASS="literal">-d38.20</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-135"TITLE="">Section 37.5.135, -d38.20</A>)with the rule-testing <CODECLASS="literal">-d</CODE> command (see <ACLASS="xref"HREF="ch38_07.htm"TITLE="Add Debugging for Detail">Section 38.7, "Add Debugging for Detail"</A>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; -d38.20&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">With that setting, the previous lookup of <CODECLASS="literal">icsic</CODE> produces a traceof all the steps that <EMCLASS="emphasis">sendmail</EM> takes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/canon icsic</B></CODE>getcanonname(icsic), trying dnsgetcanonname(icsic), trying filestext_getcanonname(icsic)getcanonname(icsic.icsi.berkeley.edu), foundgetcanonname(icsic) returns icsic.icsi.berkeley.edu</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <EMCLASS="emphasis">sendmail</EM> first looked up <CODECLASS="literal">icsic</CODE> using DNS. Thatlookup failed, so <EMCLASS="emphasis">sendmail</EM> fell back to looking it up in the <EMCLASS="emphasis">/etc/hosts</EM>file, where it was found. The order in which these techniques are tried is definedby your service-switch (see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-61"TITLE="">Section 34.8.61, ServiceSwitchFile</A>). If a service-switch mechanism is lacking, the order is internally defined by <EMCLASS="emphasis">sendmail</EM>and varies depending operating system used.</P><PCLASS="para">Internally, the <CODECLASS="literal">/canon</CODE> rule-testing command can be watchedin greater detail with the <CODECLASS="literal">-d38.20</CODE> debugging switch(see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-135"TITLE="">Section 37.5.135</A>) and with the <CODECLASS="literal">-d8.2</CODE> debuggingswitch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-31"TITLE="">Section 37.5.31, -d8.2</A>).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-2">38.5.2 Look Up MX Records with /mx</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62095"></A><ACLASS="indexterm"NAME="AUTOID-62097"></A>The <CODECLASS="literal">/mx</CODE> rule-testing command causes <EMCLASS="emphasis">sendmail</EM> tolook up a specified hostname and return a list of MXrecords for that host.The form for this command looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/mx <CODECLASS="replaceable"><I>host</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>host</I></CODE> is the short or fully qualified name of a host.If <CODECLASS="replaceable"><I>host</I></CODE> is missing, <EMCLASS="emphasis">sendmail</EM> prints the following usage message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /mx address</PRE></BLOCKQUOTE></P><PCLASS="para">When <CODECLASS="replaceable"><I>host</I></CODE> exists and has MX records associated withit, <EMCLASS="emphasis">sendmail</EM> will look up and print those records. The MXrecords are listed in the order in which they will be tried (lowest to highestpreference values). For example,</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/mx ourhost</B></CODE>getmxrr(ourhost) returns 2 value(s):        mx.our.domain        offsite.mx.domain&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">If no MX records are found, <EMCLASS="emphasis">sendmail</EM> &quot;<CODECLASS="literal">returns 0</CODE>.&quot;When multiple records have the same preference values, <EMCLASS="emphasis">sendmail</EM>randomizes the list. During a single run of <EMCLASS="emphasis">sendmail</EM> the randomizationwill be the same each time. You can see this by looking up  <EMCLASS="emphasis">aol.com</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/mx aol.com</B></CODE>getmxrr(aol.com) returns 8 value(s):       d.mx.AOL.COM.       h.mx.AOL.COM.       g.mx.AOL.COM.       c.mx.AOL.COM.       b.mx.AOL.COM.       f.mx.AOL.COM.       e.mx.AOL.COM.       a.mx.AOL.COM.&gt; <CODECLASS="userinput"><B>/mx aol.com</B></CODE>getmxrr(aol.com) returns 8 value(s):       d.mx.AOL.COM.       h.mx.AOL.COM.       g.mx.AOL.COM.       c.mx.AOL.COM.       b.mx.AOL.COM.       f.mx.AOL.COM.       e.mx.AOL.COM.       a.mx.AOL.COM.</PRE></BLOCKQUOTE></P><PCLASS="para">Now exit rule-testing mode and perform two separate runs of <EMCLASS="emphasis">sendmail</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo /mx aol.com | /usr/lib/sendmail -bt</B></CODE>&gt; /mx aol.comgetmxrr(aol.com) returns 8 value(s):        d.mx.AOL.COM.        g.mx.AOL.COM.        h.mx.AOL.COM.        c.mx.AOL.COM.        b.mx.AOL.COM.        f.mx.AOL.COM.        a.mx.AOL.COM.        e.mx.AOL.COM.% <CODECLASS="userinput"><B>echo /mx aol.com | /usr/lib/sendmail -bt</B></CODE>&gt; /mx aol.comgetmxrr(aol.com) returns 8 value(s):        b.mx.AOL.COM.        d.mx.AOL.COM.        g.mx.AOL.COM.        e.mx.AOL.COM.        a.mx.AOL.COM.        c.mx.AOL.COM.        h.mx.AOL.COM.        f.mx.AOL.COM.</PRE></BLOCKQUOTE></P><PCLASS="para">If you have defined the <CODECLASS="literal">FallbackMXhost</CODE> (<CODECLASS="literal">V</CODE>)(see <ACLASS="xref"HREF="ch34_08.htm#SML2-CH-34-SECT-8-25"TITLE="">Section 34.8.25, FallbackMXhost (V)</A>), the host that is specified in thatoption will always appear last in the list of mx hosts. As aside benefit, it will also be listed for hosts that do notexist:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -OFallBackMXhost=mx.our.domain -bt</B></CODE>ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)Enter &lt;ruleset&gt; &lt;address&gt;&gt; <CODECLASS="userinput"><B>/mx foo.bar</B></CODE>getmxrr(foo.bar) returns 1 value(s):        mx.our.domain&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;This <CODECLASS="literal">/mx</CODE> command is available for your use only if<EMCLASS="emphasis">sendmail</EM> was compiled with NAMED_BIND defined(see <ACLASS="xref"HREF="ch18_08.htm#SML2-CH-18-SECT-8-23"TITLE="">Section 18.8.23, NAMED-BIND</A>). If NAMED_BIND wasnot defined, <EMCLASS="emphasis">sendmail</EM> will print the following error insteadof listing MX records:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">No MX code compiled in</PRE></BLOCKQUOTE></P><PCLASS="para">Internally, the <CODECLASS="literal">/mx</CODE> rule-testing command can be watchedin a little more detail with the <CODECLASS="literal">-d8.2</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-31"TITLE="">Section 37.5.31</A>). It can be watched in hugedetail with the <CODECLASS="literal">-d8.20</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-36"TITLE="">Section 37.5.36, -d8.20</A>).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-3">38.5.3 Look up a Database Item with /map</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62156"></A><ACLASS="indexterm"NAME="AUTOID-62158"></A>The <CODECLASS="literal">/map</CODE> rule-testing command causes <EMCLASS="emphasis">sendmail</EM> tolook up a key in a database and print the value found (if there is one).The <CODECLASS="literal">/map</CODE> command is used like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/map name key</PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>name</I></CODE> is the name of a database. It is either a nameyou assigned using a <CODECLASS="literal">K</CODE> configuration command (see <ACLASS="xref"HREF="ch33_03.htm"TITLE="The K Configuration Command">Section 33.3, "The K Configuration Command"</A>) or one that is internally defined by<EMCLASS="emphasis">sendmail</EM>, such as <EMCLASS="emphasis">aliases.files</EM> (see <ACLASS="xref"HREF="ch33_08.htm#SML2-CH-33-SECT-8-17"TITLE="">Section 33.8.17, switch</A>).The <CODECLASS="replaceable"><I>key</I></CODE> is the item you wish to look up in the database.If both <CODECLASS="replaceable"><I>name</I></CODE> and <CODECLASS="replaceable"><I>key</I></CODE> are missing, <EMCLASS="emphasis">sendmail</EM>prints this usage message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /map mapname key</PRE></BLOCKQUOTE></P><PCLASS="para">If just the <CODECLASS="replaceable"><I>key</I></CODE> is missing, <EMCLASS="emphasis">sendmail</EM> prints thiserror:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">No key specified</PRE></BLOCKQUOTE></P><PCLASS="para">If the <CODECLASS="replaceable"><I>name</I></CODE> is that of a database that does not exist, <EMCLASS="emphasis">sendmail</EM> prints this error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Map named &quot;<ICLASS="lineannotation">bad name here</I>&quot; not found</PRE></BLOCKQUOTE></P><PCLASS="para">Otherwise, the database exists, so <EMCLASS="emphasis">sendmail</EM> looks up the<CODECLASS="replaceable"><I>key</I></CODE> in it. If the key is not found in the database, <EMCLASS="emphasis">sendmail</EM>prints this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">map_lookup: <ICLASS="lineannotation">name</I> (<ICLASS="lineannotation">key</I>) no match (<ICLASS="lineannotation">error number here</I>)</PRE></BLOCKQUOTE></P><PCLASS="para">The error number corresponds to error numbers listed in <EMCLASS="emphasis">&lt;sysexits.h&gt;</EM>.</P><PCLASS="para">The <CODECLASS="literal">/map</CODE> rule testing command is very useful for testingdatabases of your own design. If a rule that uses the databasefails to work as predicted, use <CODECLASS="literal">/map</CODE> to test that databaseby hand.  To illustrate, first get a list ofdatabases that are available on your local machine:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/usr/lib/sendmail -d38.4 -bt | grep map_init</B></CODE>map_init(sequence:aliases.files, NULL, 0)map_init(implicit:Alias0, /etc/aliases, 0)map_init(host:host, NULL, 0)map_init(switch:aliases, aliases, 0)map_init(dequote:dequote, NULL, 0)</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the name of each database follows the colon in each line.Your list, of course, will probably be different.</P><PCLASS="para">The <CODECLASS="literal">aliases</CODE> database, for example, is used to convert a local address intoone or more new addresses. Using the rule-testing <CODECLASS="literal">/map</CODE> command,you can see how <EMCLASS="emphasis">sendmail</EM> looks up an alias:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map aliases root</B></CODE>map_lookup: aliases (root) returns <CODECLASS="replaceable"><I>you, hans@other.site</I></CODE> (0)</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">host</CODE> database behaves the same as the <CODECLASS="literal">/canon</CODE>command shown above. It looks up a hostname by using <EMCLASS="emphasis">sendmail</EM>'sinternal <CODECLASS="literal">host</CODE> map (see <ACLASS="xref"HREF="ch33_04.htm#SML2-CH-33-SECT-4-3"TITLE="$[ and $]: A Special Case">Section 33.4.3, "$[ and $]: A Special Case"</A>), which returns thecanonical name of the looked-up host:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map host localhost</B></CODE>map_lookup: host (localhost) returns localhost.our.domain. (0)&gt; <CODECLASS="userinput"><B>/map host bogus.no.domain</B></CODE>map_lookup: host (bogus.no.domain) no match (68)</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">dequote</CODE> map (see <ACLASS="xref"HREF="ch33_08.htm#SML2-CH-33-SECT-8-4"TITLE="">Section 33.8.4, dequote</A>)is not really a database at all, buta hook into a routine that removes quotation marks from addresses:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/map dequote &quot;a&quot;@&quot;@b&quot;</B></CODE>map_lookup: dequote (&quot;a&quot;@&quot;@b&quot;) returns a@@b (0)&gt; <CODECLASS="userinput"><B>/map dequote &quot;a</B></CODE>map_lookup: dequote (&quot;a) no match (0)</PRE></BLOCKQUOTE></P><PCLASS="para">Note (in the second example) that it removes only balance quotation marks.</P><PCLASS="para">All lookups, no matter what the type, can be watched with the<CODECLASS="literal">-d38.20</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-135"TITLE="">Section 37.5.135</A>).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-4">38.5.4 Select Whom to /parse or /try with /tryflags</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62240"></A>Two additional commands are <CODECLASS="literal">/parse</CODE> and <CODECLASS="literal">/try</CODE>.We will cover them next, but first we need to mention the<CODECLASS="literal">/tryflags</CODE> rule-testing command, because it is used to selectthe sender or recipient and headers or envelope for thoseother commands. The <CODECLASS="literal">/tryflags</CODE> command is used like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/tryflags h             <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> set headers</I>/tryflags e             <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> set envelope</I>/tryflags s             <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> set sender</I>/tryflags r             <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> set recipient</I>/tryflags er            <ICLASS="lineannotation"><IMGSRC="../chars/larr.gif"ALT="&lt;-"> set envelope recipient</I></PRE></BLOCKQUOTE></P><PCLASS="para">The arguments are single letters that may appear in upper- or lowercaseand in any order. Any letter other than those shownis silently ignored.</P><PCLASS="para">&#13;The default setting when <EMCLASS="emphasis">sendmail</EM> first starts to run inrule-testing mode is <CODECLASS="literal">er</CODE> for envelope recipient.[2]Omitting the argument causes <EMCLASS="emphasis">sendmail</EM> to print the following usagestatement:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Internally,the <CODECLASS="literal">/tryflags</CODE> simply sets or clears the RF_HEADERADDRor RF_SENDERADDR flags. The meaning of these flags isdocumented in <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-TAB-9"TITLE="sendmail's Internal RF_ flags">Table 37.10</A> (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-81"TITLE="">Section 37.5.81, -d24.4</A>).</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /tryflags [Hh|Ee][Ss|Rr]</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-5">38.5.5 Parse an Address with /parse</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62269"></A><ACLASS="indexterm"NAME="AUTOID-62271"></A><ACLASS="indexterm"NAME="AUTOID-62274"></A>The <CODECLASS="literal">/parse</CODE> rule testing command instructs <EMCLASS="emphasis">sendmail</EM> topass an address through a predetermined sequence of rules to selecta delivery agent and to put the <CODECLASS="literal">$u</CODE> macro (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-36"TITLE="">Section 31.10.36, $u</A>)into its final form. The <CODECLASS="literal">/parse</CODE> command is used like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/parse address</PRE></BLOCKQUOTE></P><PCLASS="para">If the address is missing, <EMCLASS="emphasis">sendmail</EM> prints the following usage message:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /parse address</PRE></BLOCKQUOTE></P><PCLASS="para">The following example shows a local address being fed into <CODECLASS="literal">/parse</CODE>.Note that the numbers on the left are for later reference and arenot part of <EMCLASS="emphasis">sendmail</EM>'s output.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"> <CODECLASS="userinput"><B>/parse you@localhost (Your Name)</B></CODE>Cracked address = $g (Your Name)Parsing envelope recipient addressrewrite: ruleset   3   input: you @ localhostrewrite: ruleset  96   input: you &lt; @ localhost &gt;rewrite: ruleset  96 returns: you &lt; @ here . our . domain . &gt;rewrite: ruleset   3 returns: you &lt; @ here . our . domain . &gt;rewrite: ruleset   0   input: you &lt; @ here . our . domain . &gt;rewrite: ruleset   0 returns: $# local $: yourewrite: ruleset   2   input: yourewrite: ruleset   2 returns: yourewrite: ruleset  20   input: yourewrite: ruleset  20 returns: yourewrite: ruleset   4   input: yourewrite: ruleset   4 returns: youmailer local, user you</PRE></BLOCKQUOTE></P><PCLASS="para">The address <EMCLASS="emphasis">you@localhost</EM> is first fed into <EMCLASS="emphasis">crackaddr</EM> (line <EMCLASS="emphasis">2</EM>) to separateit from any surrounding RFC822 comments (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-117"TITLE="">Section 37.5.117, -d33.1</A>),such as &quot;<CODECLASS="literal">(Your Name)</CODE>.&quot;If mail were actually to be sent, the address would be stored in the<CODECLASS="literal">$g</CODE> macro before being passed to rules. This is illustratedby line <EMCLASS="emphasis">2</EM>, which uses <CODECLASS="literal">$g</CODE> as a place holder toshow where the address was found.</P><PCLASS="para">The next line (line <EMCLASS="emphasis">3</EM>) shows that the address will betreated as that of an envelope recipient. The <CODECLASS="literal">/tryflags</CODE> command (see <ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-4"TITLE="Select Whom to /parse or /try with /tryflags">Section 38.5.4</A>)sets whether it is treated asa header or envelope or as a sender or recipient address.</P><PCLASS="para">The address is passed to rule set 3 (see <ACLASS="xref"HREF="ch29_04.htm"TITLE="Rule Set 3">Section 29.4, "Rule Set 3"</A>) becauseall addresses are rewritten by rule set 3 first. The job of rule set3 is to focus on (surround in angle brackets) the host part of the address,which it does (line <EMCLASS="emphasis">5</EM>).Rule set 3, in this example, then passes the address to rule set 96 tosee whether <EMCLASS="emphasis">localhost</EM> is a synonym for the local machine's name.It is, so rule set 96 makes that translation (line <EMCLASS="emphasis">6</EM>).</P><PCLASS="para">The output of rule set 3 is passed to rule set 0 whose job is toselect a delivery agent (line <EMCLASS="emphasis">8</EM>). Because <EMCLASS="emphasis">here.our.domain</EM>is the local machine, rule set 0 selects the <CODECLASS="literal">local</CODE> delivery agent(line <EMCLASS="emphasis">9</EM>).</P><PCLASS="para">Line <EMCLASS="emphasis">9</EM> shows that the <CODECLASS="literal">$:</CODE> part of the delivery agent &quot;triple&quot; (see <ACLASS="xref"HREF="ch29_06.htm"TITLE="Rule Set 0">Section 29.6, "Rule Set 0"</A>) will eventuallybe tucked into <CODECLASS="literal">$u</CODE> (see <ACLASS="xref"HREF="ch31_10.htm#SML2-CH-31-SECT-10-36"TITLE="">Section 31.10.36</A>) for use by the delivery agent's <CODECLASS="literal">A=</CODE> equate(see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-1"TITLE="">Section 30.4.1, A=</A>). But before that happens, that address needs to bepassed though its own set of specific rules. It is given to rule set2 because all recipient addresses are given to rule set 2 (line<EMCLASS="emphasis">10</EM>). It is then given to rule set 20 because the <CODECLASS="literal">R=</CODE>equate (see <ACLASS="xref"HREF="ch30_04.htm#SML2-CH-30-SECT-4-10"TITLE="">Section 30.4.10, R=</A>)for the <CODECLASS="literal">local</CODE> delivery agent specifies rule set 20for the envelope recipient (line <EMCLASS="emphasis">12</EM>).Finally, it is given to rule set 4 (see <ACLASS="xref"HREF="ch29_05.htm"TITLE="Rule Set 4">Section 29.5, "Rule Set 4"</A>) because all addresses are lastly rewrittenby rule set 4 (line <EMCLASS="emphasis">14</EM>).</P><PCLASS="para">The last line of output shows that the <CODECLASS="literal">local</CODE> delivery agentwas selected and that the value that would be put into <CODECLASS="literal">$u</CODE>(were mail really being sent) would be <CODECLASS="literal">you</CODE>.</P><PCLASS="para">When you <CODECLASS="literal">/parse</CODE> an address that is not local, rule set0 will also select a host (<CODECLASS="literal">$@</CODE>) part for delivery.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">rewrite: ruleset   0 returns: $# smtp <CODECLASS="userinput"><B>$@ uofa . edu .</B></CODE> $: friend &lt; @ uofa . edu . &gt;</PRE></BLOCKQUOTE></P><PCLASS="para">In this instance the last line of <CODECLASS="literal">/parse</CODE> output will also includethe host information that will be placed into <CODECLASS="literal">$h</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mailer smtp, <CODECLASS="userinput"><B>host there.domain.,</B></CODE> user friend@there.domain</PRE></BLOCKQUOTE></P><PCLASS="para">When you <CODECLASS="literal">/parse</CODE> an address that is illegal (from the point ofview of rules), <EMCLASS="emphasis">sendmail</EM> selects the <CODECLASS="literal">#error</CODE> deliveryagent:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/parse @host</B></CODE>Cracked address = $gParsing envelope recipient addressrewrite: ruleset   3   input: @ hostrewrite: ruleset  96   input: &lt; @ host &gt;rewrite: ruleset  96 returns: &lt; @ host &gt;rewrite: ruleset   3 returns: &lt; @ host &gt;rewrite: ruleset   0   input: &lt; @ host &gt;rewrite: ruleset   0 returns: $# error $@ 5 . 1 . 1 $: &quot;user address required&quot;@host... user address requiredmailer *error*, user</PRE></BLOCKQUOTE></P><PCLASS="para">The error here was that the address lacked a user part. The meanings ofall the parts of the <CODECLASS="literal">#error</CODE> delivery agent are describedin <ACLASS="xref"HREF="ch30_05.htm#SML2-CH-30-SECT-5-2"TITLE="The error Delivery Agent">Section 30.5.2, "The error Delivery Agent"</A>.The second from the last line in this example shows the message thatwould be printed or returned if such an address appeared in actual mail.The delivery agent <CODECLASS="literal">*error*</CODE> is internal to <EMCLASS="emphasis">sendmail</EM>and cannot be directly used.</P><PCLASS="para">Internally, the <CODECLASS="literal">/parse</CODE> command first calls <EMCLASS="emphasis">crackaddr</EM>(),prints the result, then passes the original address to <EMCLASS="emphasis">parseaddr</EM>(). The entry into and exitfrom <EMCLASS="emphasis">crackaddr</EM>() can be watched with the <CODECLASS="literal">-d33.1</CODE> debuggingswitch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-117"TITLE="">Section 37.5.117</A>). The selection of a delivery agentwith <EMCLASS="emphasis">parseaddr</EM>() can be watched with the <CODECLASS="literal">-d20.1</CODE> debuggingswitch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-66"TITLE="">Section 37.5.66, -d20.1</A>). The rewriting of the user intoa suitable <CODECLASS="literal">$u</CODE> is handled by <EMCLASS="emphasis">buildaddr</EM>() which can be watched with the <CODECLASS="literal">-d24.5</CODE> debugging switch (see<ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-82"TITLE="">Section 37.5.82, -d24.5</A>).&#13;</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="SML2-CH-38-SECT-5-6">38.5.6 Try a Delivery Agent with /try</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-62376"></A><ACLASS="indexterm"NAME="AUTOID-62378"></A><ACLASS="indexterm"NAME="AUTOID-62381"></A>In the SMTP RCPT command, <EMCLASS="emphasis">sendmail</EM> is requiredto express the recipient's address relative to the localhost. For domain addresses, this simply means that the addressshould be RFC822-compliant (such as <EMCLASS="emphasis">you@here.our.domain</EM>). For UUCP addresses,this may mean reversing the path (such as <EMCLASS="emphasis">you@there</EM> reverses to <EMCLASS="emphasis">there!you</EM>).The <CODECLASS="literal">/try</CODE> rule testing command causes an address to be rewritten so that itappears to be correct relative to the local host. </P><PCLASS="para">The <CODECLASS="literal">/try</CODE> command is used like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/try <CODECLASS="replaceable"><I>agent address</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here, <CODECLASS="replaceable"><I>agent</I></CODE> is the delivery agent, and <CODECLASS="replaceable"><I>address</I></CODE> isthe address to rewrite.The following usage message is produced if both <CODECLASS="replaceable"><I>agent</I></CODE> and <CODECLASS="replaceable"><I>address</I></CODE> are missing or if just the <CODECLASS="replaceable"><I>address</I></CODE> ismissing:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Usage: /try mailer address</PRE></BLOCKQUOTE></P><PCLASS="para">The delivery agent (<CODECLASS="literal">mailer</CODE>) is used to select only the<CODECLASS="literal">R=</CODE> or <CODECLASS="literal">S=</CODE> rule set for the address.The <CODECLASS="literal">/tryflags</CODE> command (see <ACLASS="xref"HREF="ch38_05.htm#SML2-CH-38-SECT-5-4"TITLE="Select Whom to /parse or /try with /tryflags">Section 38.5.4</A>)determines which is selected (by selecting recipient or sender).</P><PCLASS="para">In the following example the numbers to the left are for reference onlyand are not part of <EMCLASS="emphasis">sendmail</EM>'s output:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/try smtp you</B></CODE>Trying envelope recipient address you for mailer smtprewrite: ruleset   3   input: yourewrite: ruleset  96   input: yourewrite: ruleset  96 returns: yourewrite: ruleset   3 returns: yourewrite: ruleset   2   input: yourewrite: ruleset   2 returns: yourewrite: ruleset  21   input: yourewrite: ruleset  21 returns: you &lt; @ *LOCAL* &gt;rewrite: ruleset   4   input: you &lt; @ *LOCAL* &gt;rewrite: ruleset   4 returns: you @ here . our . domainRcode = 0, addr = you@here.our.domain</PRE></BLOCKQUOTE></P><PCLASS="para">Here, the envelope-recipient address <EMCLASS="emphasis">you</EM> is rewrittenon the basis of the <CODECLASS="literal">smtp</CODE> delivery agent.  Rule set 3 is called first(line <EMCLASS="emphasis">31</EM>) because all addresses are rewritten by it first.Rule set 2 (line <EMCLASS="emphasis">32</EM>) is called because all recipientaddresses get rewritten by it. Rule set 21 is called because thatrule set was indicated by the <CODECLASS="literal">smtp</CODE> delivery agent's <CODECLASS="literal">R=</CODE>equate. That rule set detects that the envelope recipient address (<EMCLASS="emphasis">you</EM>) is local (line <EMCLASS="emphasis">33</EM>).Rule set 4 (always the last to rewrite) sees the special tag<CODECLASS="literal">*LOCAL*</CODE> and converts that tagto the canonical name of your local machine (line <EMCLASS="emphasis">34</EM>).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>/try uucp localhost!there!you</B></CODE>Trying envelope recipient address localhost!there!you for mailer uucprewrite: ruleset   3   input: localhost ! there ! yourewrite: ruleset  96   input: there ! you &lt; @ localhost . UUCP &gt;rewrite: ruleset  96 returns: there ! you &lt; @ here . our . domain . &gt;rewrite: ruleset   3 returns: there ! you &lt; @ here . our . domain . &gt;rewrite: ruleset   2   input: there ! you &lt; @ here . our . domain . &gt;rewrite: ruleset   2 returns: there ! you &lt; @ here . our . domain . &gt;rewrite: ruleset  22   input: there ! you &lt; @ here . our . domain . &gt;rewrite: ruleset  22 returns: there ! yourewrite: ruleset   4   input: there ! yourewrite: ruleset   4 returns: there ! youRcode = 0, addr = there!you</PRE></BLOCKQUOTE></P><PCLASS="para">Here we try a UUCP address to examine what might be different.This time, rule set 96 recognizedthe <CODECLASS="literal">!</CODE> character as meaning this is a UUCP form of address.That rule set recognizes that <EMCLASS="emphasis">localhost</EM> is one of the names for the localmachine and converts the address to Internet form with your host's canonicalname (line <EMCLASS="emphasis">51</EM>). Another difference is that rule set 22 is calledbecause that is the <CODECLASS="literal">R=</CODE> rule set for the <CODECLASS="literal">uucp</CODE> delivery agent.That special rule set throws away the local host information, thus forminga correct UUCP-style relative address (line <EMCLASS="emphasis">52</EM>).</P><PCLASS="para">Internally, the <CODECLASS="literal">/try</CODE> rule-testing commandcalls the <EMCLASS="emphasis">remotename</EM>() routine, which can be watched withthe <CODECLASS="literal">-d12.1</CODE> debugging switch (see <ACLASS="xref"HREF="ch37_05.htm#SML2-CH-37-SECT-5-47"TITLE="">Section 37.5.47, -d12.1</A>).&#13;</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_04.htm"TITLE="38.4 Show an Item"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.4 Show an Item"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="sendmail"><IMGSRC="../gifs/txthome.gif"ALT="sendmail"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_06.htm"TITLE="38.6 Process-Specified Addresses"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.6 Process-Specified Addresses"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">38.4 Show an Item</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">38.6 Process-Specified Addresses</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="../tcpip/index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>