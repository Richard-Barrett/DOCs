<HTML><HEAD><TITLE>[Appendix A] PPP Tools</TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:42:23Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="index.htm"TITLE="TCP/IP Network Administration"><LINKREL="prev"HREF="ch13_07.htm"TITLE="13.7 Summary "><LINKREL="next"HREF="appa_02.htm"TITLE="A.2 The PPP Daemon"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch13_07.htm"TITLE="13.7 Summary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 13.7 Summary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Appendix A</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_02.htm"TITLE="A.2 The PPP Daemon"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A.2 The PPP Daemon"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="APPENDIX"><H1CLASS="appendix"><ACLASS="title"NAME="TCP2-AP-1">A. PPP Tools</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="SECT1"HREF="#TCP2-AP-1-SECT-1"TITLE="A.1 Dial-Up IP">Dial-Up IP</A><BR><ACLASS="SECT1"HREF="appa_02.htm"TITLE="A.2 The PPP Daemon">The PPP Daemon</A><BR><ACLASS="SECT1"HREF="appa_03.htm"TITLE="A.3 chat">chat</A></P><P></P></DIV><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-1-IX-POINT-TO-POINT-PROTOCOL-PPP-TOOLS-REFERENCE"></A>This appendix is a reference for <BCLASS="emphasis.bold">dip</B>, <BCLASS="emphasis.bold">pppd</B>, and <BCLASS="emphasis.bold">chat</B>.These tools are used to create dial-up IP connection for the <EMCLASS="emphasis">Pointto Point Protocol</EM> (PPP). <BCLASS="emphasis.bold">dip</B> and <BCLASS="emphasis.bold">chat</B> are both scriptinglanguages. Creating a script that initializes the modem, dials the remoteserver, logs in, and configures the remote server is the biggest task inconfiguring a PPP connection. <ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6, <CITECLASS="chapter">Configuring the Interface </CITE></A>, provides examples and tutorialinformation about all three of the programs covered here.This appendix provides a reference to the programs.</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-AP-1-SECT-1">A.1 Dial-Up IP</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-TOOLS-REFERENCE"></A><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-TOOLS-REFERENCE2"></A><BCLASS="emphasis.bold">dip</B> is a scripting tool designed specifically for creating SLIP andPPP connections.[1]The syntax of the <BCLASS="emphasis.bold">dip</B> command is:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] <EMCLASS="emphasis">Serial Line IP</EM> (SLIP) predates PPP. Today most serial connectionsare PPP, which is what this appendix emphasizes.</P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term"></DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">dip</B> [<CODECLASS="replaceable"><I>options</I></CODE>] [<CODECLASS="replaceable"><I>scriptfile</I></CODE>]</P></DD></DL><PCLASS="para">The <BCLASS="emphasis.bold">dip</B> command is invoked with either an option set or a<ACLASS="indexterm"NAME="AUTOID-19342"></A><ACLASS="indexterm"NAME="AUTOID-19344"></A>script file specified, or with both. When <CODECLASS="replaceable"><I>scriptfile</I></CODE> is specified,<BCLASS="emphasis.bold">dip</B> executes the commands contained in the script file to createa point-to-point connection. Examples of scripts and <BCLASS="emphasis.bold">dip</B> are shown in <ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6</A>. The <CODECLASS="replaceable"><I>options</I></CODE> valid with script files are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">-v</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19358"></A>Runs <BCLASS="emphasis.bold">dip</B> in verbose mode. In this mode, <BCLASS="emphasis.bold">dip</B> echos each line ofthe script file as it is executed, and displays enhanced status messages.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">-m</B> <CODECLASS="replaceable"><I>mtu</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19368"></A>Sets the Maximum Transmission Unit (MTU) to the number of bytes specifiedby <CODECLASS="replaceable"><I>mtu</I></CODE>. The default MTU is 296 bytes.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">-p</B> <CODECLASS="replaceable"><I>proto</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19377"></A>Selects the serial line protocol. Possible values for <CODECLASS="replaceable"><I>proto</I></CODE> are:SLIP, CSLIP, PPP, or TERM.</P></DD></DL><PCLASS="para">The other <BCLASS="emphasis.bold">dip</B> command line options are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">-k</B></DT><DDCLASS="listitem"><PCLASS="para">Kills the last <BCLASS="emphasis.bold">dip</B> process you started. You can only kill aprocess you own, unless of course you're <EMCLASS="emphasis">root</EM>.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">-l</B> <CODECLASS="replaceable"><I>device</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Identifies that the process to be killed is the one that has locked thespecified <CODECLASS="replaceable"><I>device</I></CODE>. This option is only valid when used with the<BCLASS="emphasis.bold">-k</B> option.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">-i </B>[<CODECLASS="replaceable"><I>username</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Runs <BCLASS="emphasis.bold">dip</B> as a login shell to provide a PPP or SLIP server. The<BCLASS="emphasis.bold">diplogin</B> command is equivalent to <BCLASS="emphasis.bold">dip -i</B>. These two formsof the command are used interchangeably, but <BCLASS="emphasis.bold">diplogin</B> is themost common form. <BCLASS="emphasis.bold">diplogin</B> is placed in the login shell field ofthe <EMCLASS="emphasis">/etc/passwd</EM> file entry for each PPP client. From there it isrun by <BCLASS="emphasis.bold">login</B>. The username from the <EMCLASS="emphasis">/etc/passwd</EM> file isused to retrieve additional configuration information from<EMCLASS="emphasis">/etc/diphosts</EM>. If the optional <CODECLASS="replaceable"><I>username</I></CODE> is specifiedwith the <BCLASS="emphasis.bold">diplogin</B> command, that username is used to retrieve theinformation from the <EMCLASS="emphasis">/etc/diphosts</EM> file. <ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6</A> providesa tutorial and examples of running <BCLASS="emphasis.bold">diplogin</B> to create a PPPserver, and of using the <EMCLASS="emphasis">/etc/diphosts</EM> file.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">-a</B></DT><DDCLASS="listitem"><PCLASS="para">Prompts for the username and password. The <BCLASS="emphasis.bold">-a</B> option is validonly when used with the <BCLASS="emphasis.bold">-i</B> option. The <BCLASS="emphasis.bold">diplogini</B> commandis equivalent to <BCLASS="emphasis.bold">dip -i -a</B>. <BCLASS="emphasis.bold">diplogini</B> is used as a loginshell in the <EMCLASS="emphasis">/etc/passwd</EM> file where it is run by <BCLASS="emphasis.bold">login</B>.Runs <BCLASS="emphasis.bold">dip</B> in test mode, which allows you to input individualscript language commands directly from the keyboard. The <BCLASS="emphasis.bold">-t</B>option is frequently used in combination with <BCLASS="emphasis.bold">-v</B> so that theresult of each command can be better observed. As shown in<ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6</A>, this option is used to debug a <BCLASS="emphasis.bold">dip</B> script.</P></DD></DL><PCLASS="para"><BCLASS="emphasis.bold">diplogin</B> and <BCLASS="emphasis.bold">diplogini</B> are used only on servers and are notused with a script file. The script file is used on the PPP clientswhen <BCLASS="emphasis.bold">dip</B> is configured to dial into a remote server. The scriptfile contains the instructions used to do this.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-AP-1-SECT-1.1">A.1.1 The dip Script File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE"></A><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE2"></A>The script file is made up of comments, labels, variables, and commands.Any line that begins with a sharp sign (#) is a comment. A label is a<ACLASS="indexterm"NAME="AUTOID-19449"></A><ACLASS="indexterm"NAME="AUTOID-19451"></A><ACLASS="indexterm"NAME="AUTOID-19453"></A><ACLASS="indexterm"NAME="AUTOID-19455"></A>line that contains only a string ending in a colon. Labels are usedto divide the script into separate procedures. For example, the section of the script that dials theremote host might begin with the label:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Dial-in:</PRE></BLOCKQUOTE></P><PCLASS="para">A variable stores a value. A variable name is a string that beginswith a dollar sign ($). You might, for example, create a variable tohold a loop counter and give it the name <BCLASS="emphasis.bold">$loopcntr</B>. It is possible tocreate your own variables, but this is rarely done. The variables that<ACLASS="indexterm"NAME="AUTOID-19461"></A>are used in most scripts are the special variables defined by <BCLASS="emphasis.bold">dip</B>.<ACLASS="xref"HREF="appa_01.htm#TCP2-AP-1-TAB-0"TITLE="dip Special Variables">Table 13.1</A>lists the special variables and the value that each holds.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-AP-1-TAB-0">Table A.1: dip Special Variables</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Variable</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Value Stored</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$errlvl</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The return code of the last command</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$locip</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The IP address of the local host</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$local</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The fully qualified domain name of the local host</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$rmtip</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The IP address of the remote host</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$remote</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The fully qualified domain name of the remote host</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$mtu</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The Maximum Transmission Unit in bytes</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$modem</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The modem type; currently this must be HAYES</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$port</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The name of the serial device, e.g., cua0</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$speed</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The transmission speed of the port</TD></TR></TBODY></TABLE><PCLASS="para">The final component of the script file is the command list. There are manyscript commands. Because this appendix is a reference, we cover them all.However, most scripts are built using only a few of these commands.See the sample scripts in <ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6</A> and at the end of this section forrealistic <BCLASS="emphasis.bold">dip</B> scripts. The complete list of script commands is:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">beep</B> [<CODECLASS="replaceable"><I>n</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Tells the system to beep the user. Repeat <CODECLASS="replaceable"><I>n</I></CODE> times.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">bootp</B></DT><DDCLASS="listitem"><PCLASS="para">Tells the system to use the BOOTP protocol to obtain the local and remote IP addresses.<ACLASS="indexterm"NAME="AUTOID-19527"></A>This command applies only to SLIP. PPP has its own protocol forassigning addresses; SLIP does not. Usually SLIP addresses arestatically set inside the script. However, some SLIP servers haveevolved techniques for dynamic address assignment. The most commonmethod is for the server to display the address as clear textimmediately after the connection is made. Use the <BCLASS="emphasis.bold">get $locipremote</B> command to retrieve the address from this type of SLIPserver. Other SLIP servers require you to send them a command beforethey will display the address. Put the required server command in thescript and follow it with the <BCLASS="emphasis.bold">get</B> command. Finally, a few SLIPservers use BOOTP to distribute addresses. Use the <BCLASS="emphasis.bold">bootp</B>command in your script to enable BOOTP when it is required by your SLIPserver.Sends a BREAK. Some remote servers may require a BREAK as an attentioncharacter.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">chatkey</B> <CODECLASS="replaceable"><I>keyword code</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Maps a modem response <CODECLASS="replaceable"><I>keyword</I></CODE> to a numeric <CODECLASS="replaceable"><I>code</I></CODE>.The predefined mappings are:</P><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout">0	OK<BR>1	CONNECT<BR>2	ERROR<BR>3	BUSY<BR>4	NO CARRIER<BR>5	NO DIALTONE</P></BLOCKQUOTE><PCLASS="para"></P></DD><DTCLASS="term"><BCLASS="emphasis.bold">config</B> [<BCLASS="emphasis.bold">interface</B>|<BCLASS="emphasis.bold">routing</B>] [<BCLASS="emphasis.bold">pre</B>|<BCLASS="emphasis.bold">up</B>|<BCLASS="emphasis.bold">down</B>|<BCLASS="emphasis.bold">post</B>] <CODECLASS="replaceable"><I>arguments...</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Modifies interface characteristics (<BCLASS="emphasis.bold">interface</B>) or the routingtable (<BCLASS="emphasis.bold">routing</B>) either before (<BCLASS="emphasis.bold">pre</B>) the link comes up, whenit is <BCLASS="emphasis.bold">up</B>, when it goes <BCLASS="emphasis.bold">down</B>,  or after (<BCLASS="emphasis.bold">post</B>) thelink is shutdown.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="literal">config up routing add canary gw ibis</CODE></PRE></BLOCKQUOTE></P><PCLASS="para">adds a route to <EMCLASS="emphasis">canary</EM> using <EMCLASS="emphasis">ibis</EM> as the gateway when thelink is up. Allowing users to modify the routing table or interfacecharacteristics is very dangerous. The <BCLASS="emphasis.bold">config</B> command isdisabled in the DIP code and requires re-compilation to be enabled.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">databits 7</B>|<BCLASS="emphasis.bold">8</B></DT><DDCLASS="listitem"><PCLASS="para">Sets the number of data bits to 7 or 8. 8 bits is recommended for PPPand SLIP links.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">dec</B> <CODECLASS="replaceable"><I>$variable</I></CODE> [<CODECLASS="replaceable"><I>value</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Decrements <CODECLASS="replaceable"><I>$variable</I></CODE> by <CODECLASS="replaceable"><I>value</I></CODE>. The default value is 1.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">default</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19587"></A>Sets the PPP connection as the default route.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">dial</B> <CODECLASS="replaceable"><I>phonenumber</I></CODE> [<CODECLASS="replaceable"><I>timeout</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Dials the <CODECLASS="replaceable"><I>phonenumber</I></CODE>. If the remote modem does not answerwithin <CODECLASS="replaceable"><I>timeout</I></CODE> seconds, the connection aborts.  <BCLASS="emphasis.bold">$errlvl</B>is set to a numeric value based on the keyword returned by the local<ACLASS="indexterm"NAME="AUTOID-19600"></A>modem.  Set <BCLASS="emphasis.bold">chatkey</B> for the keyword to numeric mappings.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">echo</B> <BCLASS="emphasis.bold">on</B>|<BCLASS="emphasis.bold">off</B></DT><DDCLASS="listitem"><PCLASS="para">Enables or disables the display of modem commands.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">exit</B> [<CODECLASS="replaceable"><I>n</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Exits the script, optionally returning the number <CODECLASS="replaceable"><I>n</I></CODE> as the exitstatus.Clears the input buffer.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">get</B> <CODECLASS="replaceable"><I>$variable</I></CODE> [<BCLASS="emphasis.bold">ask</B> | <BCLASS="emphasis.bold">remote</B> [<CODECLASS="replaceable"><I>timeout</I></CODE>]] <CODECLASS="replaceable"><I>value</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Sets <CODECLASS="replaceable"><I>$variable</I></CODE> to <CODECLASS="replaceable"><I>value</I></CODE>, unless <BCLASS="emphasis.bold">ask</B> or <BCLASS="emphasis.bold">remote</B> isspecified. When <BCLASS="emphasis.bold">ask</B> is specified, the user is prompted for the value.When <BCLASS="emphasis.bold">remote</B> is specified, the value is read from the remote machine,optionally waiting <CODECLASS="replaceable"><I>timeout</I></CODE> seconds for the remote system to respond.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">goto</B> <CODECLASS="replaceable"><I>label</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Jumps to the section of the script identified by <CODECLASS="replaceable"><I>label</I></CODE>.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">help</B></DT><DDCLASS="listitem"><PCLASS="para">Lists the <BCLASS="emphasis.bold">dip</B> script commands.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">if</B> <CODECLASS="replaceable"><I>expr</I></CODE> <BCLASS="emphasis.bold">goto</B> <CODECLASS="replaceable"><I>label</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">A conditional statement that jumps to the section of the script identifiedby <CODECLASS="replaceable"><I>label</I></CODE> if the <CODECLASS="replaceable"><I>expression</I></CODE> evaluates to true. The expressionmust compare a variable to a constant using one of these operators: ==(equal), != (not equal), &lt; (less than), &gt; (greater than), &lt;= (less thanor equal to), &gt;= (greater than or equal to).</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">inc</B> <CODECLASS="replaceable"><I>$variable</I></CODE> [<CODECLASS="replaceable"><I>value</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Increments <CODECLASS="replaceable"><I>$variable</I></CODE> by <CODECLASS="replaceable"><I>value</I></CODE>. The default value is 1.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">init</B> <CODECLASS="replaceable"><I>command</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Sets the command string used to initialize the modem. The default isATE0 Q0 V1 X1.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">mode SLIP</B>|<BCLASS="emphasis.bold">CSLIP</B>|<BCLASS="emphasis.bold">PPP</B>|<BCLASS="emphasis.bold">TERM</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19680"></A>Selects the serial protocol. The default is SLIP.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">modem</B> <CODECLASS="replaceable"><I>type</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Sets the modem type. Ignore this command. The only legal value isHAYES, and that is the default.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">netmask</B> <CODECLASS="replaceable"><I>mask</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19696"></A>Sets the subnet mask.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">parity E</B>|<BCLASS="emphasis.bold">O</B>|<BCLASS="emphasis.bold">N</B></DT><DDCLASS="listitem"><PCLASS="para">Sets the parity to even (<BCLASS="emphasis.bold">E</B>), odd (<BCLASS="emphasis.bold">O</B>), or no (<BCLASS="emphasis.bold">N</B>).No parity (<BCLASS="emphasis.bold">N</B>) is recommended for SLIP and PPP links.Prompts the user for the password.<ACLASS="indexterm"NAME="AUTOID-19711"></A>Installs a proxy ARP entry for the remote system in the local host'sARP table.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">print</B> <CODECLASS="replaceable"><I>$variable</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Displays the contents of <CODECLASS="replaceable"><I>$variable</I></CODE>.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">psend</B> <CODECLASS="replaceable"><I>command</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Executes <CODECLASS="replaceable"><I>command</I></CODE> through the default shell passing the output tothe serial device. The command runs using the user's real UID.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">port</B> <CODECLASS="replaceable"><I>device</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Identifies the serial device, such as cua0, that attaches the modem.Exits the script with a nonzero exit status, aborting the connection.Resets the modem.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">send</B> <CODECLASS="replaceable"><I>string</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Passes <CODECLASS="replaceable"><I>string</I></CODE> to the serial device.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">shell</B> <CODECLASS="replaceable"><I>command</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Executes <CODECLASS="replaceable"><I>command</I></CODE> through the default shell. The command runs usingthe user's real UID.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">skey</B> [<CODECLASS="replaceable"><I>timeout</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Waits for an S/Key challenge from the remote terminal server,prompts the user for the secret key, and generates and sends the response.Waits <CODECLASS="replaceable"><I>timeout</I></CODE> seconds for the challenge. If the timer expires,<BCLASS="emphasis.bold">$errlvl</B> is set to 1; otherwise, it is set to 0. S/Key must becompiled into <BCLASS="emphasis.bold">dip</B>.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">sleep</B> <CODECLASS="replaceable"><I>time</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Delays <CODECLASS="replaceable"><I>time</I></CODE> seconds.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">speed</B> <CODECLASS="replaceable"><I>bits-per-second</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Sets the port speed. The default is 38400.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">stopbits 1</B>|<BCLASS="emphasis.bold">2</B></DT><DDCLASS="listitem"><PCLASS="para">Sets the number of stop bits to 1 or 2.Enables terminal mode. In terminal mode, keyboard input is passed directlyto the serial device.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">timeout</B> <CODECLASS="replaceable"><I>time</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Sets the <CODECLASS="replaceable"><I>time</I></CODE> in seconds that the line is allowed to remaininactive. When this timer expires, the link is closed.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">wait</B> <CODECLASS="replaceable"><I>text </I></CODE>[<CODECLASS="replaceable"><I>timeout</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Waits <CODECLASS="replaceable"><I>timeout</I></CODE> seconds for the <CODECLASS="replaceable"><I>text</I></CODE> string to arrive fromthe remote system. If <CODECLASS="replaceable"><I>timeout</I></CODE> is not specified, the script willwait forever.</P></DD></DL><PCLASS="para">In the next section we put some of these commands to work in a realisticscript.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-1-SECT-1.1.1">A.1.1.1 A sample dip script</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE-SAMPLE"></A><ACLASS="indexterm"NAME="TCP2-AP-1-IX-DIAL-UP-IP-DIP-SCRIPT-FILE-SAMPLE2"></A>This script is based on the PPP sample from <ACLASS="xref"HREF="ch06_01.htm"TITLE="Configuring the Interface ">Chapter 6</A>. Labels and errordetection have been added to create a more robust script.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Select configuration settingssetup:# Ask PPP to provide the addressesget $local 0.0.0.0# Select the portport cua1# Set the port speedspeed 57600# Create a loop counterget $loopcntr 0# Dial the remote serverdialin:# Reset the modem and clear the input bufferresetflush# Dial the PPP server and check the modem responsedial *70,301-555-1234# If BUSY, dial againif $errlvl == 3 goto redial# If some other error, abortif $errlvl != 1 goto dial-error# Otherwise rest loop counterget $loopcntr 0# Give the server 2 seconds to get readysleep 2# Login to the remote serverlogin:# Send a carriage-return to wake up the serversend \r# Wait for the Username&gt; prompt and send the usernamewait name&gt; 20if $errlvl != 0 goto try-againsend kristin\r# Wait for the Password&gt; prompt and send the passwordwait word&gt; 10if $errlvl != 0 goto server-failurepassword# Wait for the PPP server's command line promptwait &gt; 20if $errlvl != 0 goto server-failure# Send the command required by the PPP serversend ppp enabled\r# Success! We're on-lineconnected:# Set the interface to PPP modemode PPP# Exit the scriptexit# Error processing routines# Try dialing 3 times.  Wait 5 seconds between attemptsredial:inc $loopcntrif $loopcntr &gt; 3 goto busy-failuresleep 5goto dialin# Try a second carriage returntry-again:inc $loopcntrif $loopcntr &gt; 1 goto server-failuregoto logindial-error:print Dial up of $remote failed.quitserver-failure:print $remote failed to respond.quitbusy-failure:print $remote is busy.  Try again later.quit</PRE></BLOCKQUOTE></P><PCLASS="para">This script provides a realistic example of the commands used in mostscripts.  However, you may encounter a particularly tough scriptingproblem. If you do, the abundance of scripting commands available with<BCLASS="emphasis.bold">dip</B> should be able to handle it. If <BCLASS="emphasis.bold">dip</B> can't do the job,try <BCLASS="emphasis.bold">expect</B>. See <EMCLASS="emphasis">Exploring Expect</EM> by Don Libes (O'Reilly &amp;amp;amp;amp;amp;Associates) for a full description of the <BCLASS="emphasis.bold">expect</B> scriptinglanguage.<ACLASS="indexterm"NAME="AUTOID-19814"></A><ACLASS="indexterm"NAME="AUTOID-19815"></A><ACLASS="indexterm"NAME="AUTOID-19816"></A><ACLASS="indexterm"NAME="AUTOID-19817"></A><ACLASS="indexterm"NAME="AUTOID-19818"></A><ACLASS="indexterm"NAME="AUTOID-19819"></A><ACLASS="indexterm"NAME="AUTOID-19820"></A></P></DIV></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch13_07.htm"TITLE="13.7 Summary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 13.7 Summary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_02.htm"TITLE="A.2 The PPP Daemon"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A.2 The PPP Daemon"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">13.7 Summary </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">A.2 The PPP Daemon</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>