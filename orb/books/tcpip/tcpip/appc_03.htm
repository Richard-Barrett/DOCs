<HTML><HEAD><TITLE>[Appendix C] C.3 Zone File Records</TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:43:38Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="appc_01.htm"TITLE="C. A named Reference"><LINKREL="prev"HREF="appc_02.htm"TITLE="C.2 named.boot Configuration Commands"><LINKREL="next"HREF="appd_01.htm"TITLE="D. A dhcpd Reference"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appc_02.htm"TITLE="C.2 named.boot Configuration Commands"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: C.2 named.boot Configuration Commands"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Appendix C<BR>A named Reference</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="APPENDIX"HREF="appd_01.htm"TITLE="D. A dhcpd Reference"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: D. A dhcpd Reference"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-AP-3-SECT-3">C.3 Zone File Records</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-ZONE-FILES-IN-NAMED"></A>Two types of entries are used to construct a zone file: <EMCLASS="emphasis">controlentries</EM> that simplify constructing the file, and <EMCLASS="emphasis">standardresource records</EM> that define the domain data contained in the zonefile. While there are several types of standard resource records, thereare only two control statements. These are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">$INCLUDE</B> <CODECLASS="replaceable"><I>filename</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Identifies a file that contains data to beincluded in the zone file. The data in the included file mustbe valid control entries or standard resource records. $INCLUDEallows a large zone file to be divided into smaller, moremanageable units.</P><PCLASS="para">The <CODECLASS="replaceable"><I>filename</I></CODE> specified on the command line is relative to thedirectory named on the directory statement in the <EMCLASS="emphasis">named.boot</EM>file. For example: if the <EMCLASS="emphasis">named.boot</EM> file for <EMCLASS="emphasis">almond</EM>contains a <BCLASS="emphasis.bold">directory /etc</B> statement, and a zone file on<EMCLASS="emphasis">almond</EM> contains an <BCLASS="emphasis.bold">$INCLUDE sales.hosts</B> statement, thenthe file <EMCLASS="emphasis">/etc/sales.hosts</EM> would be included in that zonefile. If you don't want the filename to be relative to that directory,specify a fully qualified name, such as <EMCLASS="emphasis">/usr/dns/sales.hosts</EM>.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">$ORIGIN</B> <CODECLASS="replaceable"><I>domainname</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Changes the default domain name used by subsequentrecords in the zone file. Use this command to put more than one domainin a zone file. For example, an <BCLASS="emphasis.bold">$ORIGIN sales</B> statement in the<EMCLASS="emphasis">nuts.com</EM> zone file sets the domain name to <EMCLASS="emphasis">sales.nuts.com</EM>.All subsequent resource records would be relative to this new domain.</P><PCLASS="para">The <BCLASS="emphasis.bold">named</B> software uses <BCLASS="emphasis.bold">$ORIGIN</B> statements to organize itsown information. Dumping the <BCLASS="emphasis.bold">named</B> database, with the SIGINTsignal, produces a single file containing all the information that theserver knows. This file, <EMCLASS="emphasis">named_dump.db</EM>, contains many<BCLASS="emphasis.bold">$ORIGIN</B> entries used to place all of the domains that<BCLASS="emphasis.bold">named</B> knows about into a single file.</P></DD></DL><PCLASS="para">These two control entries are helpful for organizing and controllingthe data in a zone file, but all of the actual database informationcomes from standard resource records. All of the files pointed to by<EMCLASS="emphasis">named.boot</EM> contribute to the DNS database, so all ofthese files are constructed from standard resource records.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1">C.3.1 Standard Resource Records</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-STANDARD-RESOURCE-RECORDS-RRS-IN-NAMED"></A><ACLASS="indexterm"NAME="TCP2-AP-3-IX-STANDARD-RESOURCE-RECORDS-RRS-IN-NAMED2"></A>The format of standard resource records, sometimes called RRs, isdefined in RFC 1033, the <EMCLASS="emphasis">Domain Administrators Operations Guide</EM>.The format is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>name</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <CODECLASS="replaceable"><I>class</I></CODE> <CODECLASS="replaceable"><I>type data</I></CODE></P><PCLASS="para">The individual fields in the standard resource record are:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the name of the object affected by this resource record. Thenamed object can be as specific as an individual host, or as generalas an entire domain. The string entered for <CODECLASS="replaceable"><I>name</I></CODE> is relativeto the current domain unless a fully qualified domain name is used.[4]Certain <CODECLASS="replaceable"><I>name</I></CODE> values have special meaning. These are:<DLCLASS="variablelist"><DTCLASS="term">&nbsp;</DT><DDCLASS="listitem"><PCLASS="para">A blank name field denotes the current named object. The current namestays in force until a new name value is encountered in the namefield. This permits multiple RRs to be applied to a single objectwithout having to repeat the object's name for each record.</P></DD><DTCLASS="term"><CODECLASS="literal">..</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24437"></A><ACLASS="indexterm"NAME="AUTOID-24439"></A><ACLASS="indexterm"NAME="AUTOID-24441"></A>Two dots in the name field refer to the root domain. However, a singledot (the actual name of the root) also refers to the root domain, andis more commonly used.</P></DD><DTCLASS="term"><CODECLASS="literal">@</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24448"></A><ACLASS="indexterm"NAME="AUTOID-24451"></A>A single at-sign (<CODECLASS="literal">@</CODE>) in the name field refers to the currentorigin.  The origin is a domain name derived by the system from thecurrent domain name or explicitly set by the system administratorusing the <BCLASS="emphasis.bold">$ORIGIN</B> command.</P></DD><DTCLASS="term"><CODECLASS="literal">*</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24461"></A><ACLASS="indexterm"NAME="AUTOID-24464"></A>An asterisk in the name field is a wildcard character. It stands for aname composed of any string. It can be combined with a domain nameor used alone. Used alone,an asterisk in the named field means that the resource record applies toobjects with names composed of any string of characters plus the nameof the current domain. Used with a domain name, the asterisk isrelative to that domain. For example, <EMCLASS="emphasis">*.bitnet.</EM> in the name fieldmeans any string plus the string <EMCLASS="emphasis">.bitnet</EM>.</P></DD></DL>&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] The FQDN must be specified all the way to the root; i.e., it must endwith a dot.</P></BLOCKQUOTE></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24474"></A>Time-to-live defines the length of time in seconds that the informationin this resource record should be kept in the cache. <CODECLASS="replaceable"><I>ttl</I></CODE> isspecified as a numeric value up to eight characters in length. If novalue is set for <CODECLASS="replaceable"><I>ttl</I></CODE>, it defaults to the value defined for theentire zone file in the minimum field of the SOA record.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>class</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This field defines the address class of the resource record. TheInternet address class is IN. All resource records used by InternetDNS have IN in this field, but it is possible for azone file to hold non-Internet information. For example, informationused by the Hesiod server, a name server developed at MIT, isidentified by HS in the class field, and chaosnet information isidentified by a CH in the class field. All resource records used inthis book have an address class of IN.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>type</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This field indicates the type of data this record provides.For example, the A type RR providesthe address of the host identified in the name field. All of thestandard resource record types are discussed in this appendix.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>data</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This field contains the information specific tothe resource record.The format and content of the data field vary according to theresource record type. The data field is the meat of the RR. For example,in an A record, the data field contains the IP address.</P></DD></DL><PCLASS="para">In addition to the special characters that have meaning in the namefield, zone file records use these other special characters:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">;</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24500"></A><ACLASS="indexterm"NAME="AUTOID-24503"></A>The semicolon is the comment character. Use the semicolon to indicatethat the remaining data on the line is a comment.</P></DD><DTCLASS="term"><CODECLASS="literal">( )</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24511"></A><ACLASS="indexterm"NAME="AUTOID-24513"></A>Parentheses are the continuation characters. Use parentheses tocontinue data beyond a single line. After an opening parenthesis, alldata on subsequent lines is considered part of the current line until aclosing parenthesis.</P></DD><DTCLASS="term"><CODECLASS="literal">\x</CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24520"></A><ACLASS="indexterm"NAME="AUTOID-24522"></A>The backslash is an escape character. A non-numeric characterfollowing a backslash (\) is taken literally and any specialmeaning that the character may ordinarily have is ignored. Forexample, <CODECLASS="literal">\;</CODE> means a semicolon&nbsp;- not a comment.</P></DD><DTCLASS="term"><CODECLASS="literal">\ddd</CODE></DT><DDCLASS="listitem"><PCLASS="para">The backslash can also be followed by three decimal numbers. When theescape character is used in this manner the decimal numbers areinterpreted as an absolute byte value. For example, <CODECLASS="literal">\255</CODE>means the byte value 11111111.</P></DD></DL><PCLASS="para">The same general resource record format is used for each of theresource records in a zone file. Each resource record is describedbelow.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.1">C.3.1.1 Start of Authority record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-START-OF-AUTHORITY-SOA-RECORD"></A>The Start of Authority (SOA) record marks the beginning of a zone, andis usually the first record in a zone file. All of the records thatfollow are part of the zone declared by the SOA. Each zone has only oneSOA record; the next SOA record encountered marks the beginning ofanother zone. Because a zone file is normally associated with a singlezone, it normally contains only one SOA record.</P><PCLASS="para">The format of the SOA record is:</P><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout">[<CODECLASS="replaceable"><I>zone</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN  SOA</B>  <CODECLASS="replaceable"><I>origin contact </I></CODE><BCLASS="emphasis.bold">(</B><BR>         <CODECLASS="replaceable"><I>serial<BR>          refresh<BR>          retry<BR>          expire<BR>          minimum</I></CODE><BR>          <BCLASS="emphasis.bold"> )</B></P></BLOCKQUOTE><PCLASS="para">The components of the SOA record are:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>zone</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the name of the zone. Usually the SOA name field contains anat-sign (@). When used in an SOA record, the at-sign refers back tothe domain name declared in the <EMCLASS="emphasis">named.boot</EM> primary statementthat points to this zone file.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is left blank on the SOA record.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN for all Internet RRs.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">SOA</B></DT><DDCLASS="listitem"><PCLASS="para">SOA is the resource record type. All the information that follows thisis part of the data field and is specific to the SOA record.</P></DD><DTCLASS="term"><CODECLASS="literal">Iorigin</CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the hostname of the primary master server for this domain. Itis normally written as a fully qualified domain name. For example,<EMCLASS="emphasis">almond</EM> is the master server for <EMCLASS="emphasis">nuts.com</EM>, so this fieldcontains <EMCLASS="emphasis">almond.nuts.com.</EM> in the SOA record for <EMCLASS="emphasis">nuts.com</EM>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>contact</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The email address of the person responsible for thisdomain is entered in this field. The address is modifiedslightly. The at-sign (@) that usually appears in an Internet emailaddress is replaced by a dot. Therefore, if <EMCLASS="emphasis">david@almond.nuts.com</EM>is the mailing address of the administrator of the <EMCLASS="emphasis">nuts.com</EM>domain, the <EMCLASS="emphasis">nuts.com</EM> SOA record contains<EMCLASS="emphasis">david.almond.nuts.com</EM>. in the contact field.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>serial</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the version number of the zone file. It is an eight-digitnumeric field usually entered as a simple number, e.g., 117. However, thecomposition of the number is up to the administrator. Some choose a formatthat shows the date the zone was updated, e.g., 92031100. Regardless ofthe format, the important thing is that the serial number must increaseevery time the data in the zone file is modified.</P><PCLASS="para">The serial field is extremely important. It is used by the secondarymaster servers to determine if the zone file has been updated. To makethis determination, a secondary server requests the SOA record from theprimary server and compares the serial number of the data it has storedto the serial number received from the primary server. If the serialnumber has increased, the secondary server requests a full zonetransfer. Otherwise it assumes that it has the most current zone data.You must increment the serial number each time you update the zone data.If you don't, the new data will not be disseminated to the secondaryservers.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>refresh</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This specifies the length of time that the secondary server should waitbefore checking with the primary server to see if the zone has beenupdated. Every <CODECLASS="replaceable"><I>refresh</I></CODE> seconds, the secondary server checks theSOA serial number to see if the zone file needs to be reloaded.Secondary servers check the serial numbers of their zones whenever theyrestart or receive a SIGHUP signal. But it is important to keep thesecondary server's database current with the primary server, so<BCLASS="emphasis.bold">named</B> does not rely on these unpredictable events. The<CODECLASS="replaceable"><I>refresh</I></CODE> interval provides a predictable cycle for reloading thezone that is controlled by the domain administrator.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24602"></A>The value used in <CODECLASS="replaceable"><I>refresh</I></CODE> is a number, up to eight digitslong, that is the maximum number of seconds that the primary andsecondary servers' databases can be out of sync. A low <CODECLASS="replaceable"><I>refresh</I></CODE>value keeps the data on the servers closely synchronized, but a verylow <CODECLASS="replaceable"><I>refresh</I></CODE> value is not usually required. A value set lowerthan needed places an unnecessary burden on the network and thesecondary servers. The value used in <CODECLASS="replaceable"><I>refresh</I></CODE> should reflectthe reality of how often your domain database is updated.</P></DD></DL><PCLASS="para">Most sites' domain databases are very stable. Systems are addedperiodically, but not generally on an hourly basis. When you areadding a new system, you can assign the hostname and address of thatsystem before the system is operational. You can then install thisinformation in the name server database before it is actually needed,ensuring that it is disseminated to the secondary servers long beforeit has to be used.</P><PCLASS="para">If extensive changes are planned, the <CODECLASS="replaceable"><I>refresh</I></CODE> time can betemporarily reduced while the changes are underway. Therefore, you cannormally set <CODECLASS="replaceable"><I>refresh</I></CODE> time high, reducing load on the networkand servers. Two (43200 seconds) to four (21600 seconds) times a dayfor <CODECLASS="replaceable"><I>refresh</I></CODE> is adequate for many sites.</P><PCLASS="para">The process of retrieving the SOA record, evaluating the serial numberand, if necessary, downloading the zone file is called a <EMCLASS="emphasis">zonerefresh</EM>. Thus the name <EMCLASS="emphasis">refresh</EM> is used for this value.</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>retry</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This defines how long secondary servers should wait before trying againif the primary server fails to respond to a request for a zone refresh.<CODECLASS="replaceable"><I>retry</I></CODE> is specified in seconds and can be up to eight digitslong.</P><PCLASS="para">You should not set the <CODECLASS="replaceable"><I>retry</I></CODE> value too low. If a primaryserver fails to respond, the server or the network could bedown. Quickly retrying a down system gains nothing and costs networkresources.  A secondary server that backs up a large number of zonescan have problems when <EMCLASS="emphasis">retry</EM> values are short. If the secondaryserver cannot reach the primary servers for several of its zones, itcan become stuck in a retry loop.[5]Avoid problems; use an hour (3600) or a half hour (1800) for the<EMCLASS="emphasis">retry</EM> value.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] The server may alternate between periods when it fails to respond andwhen it resolves queries, or it may display the error &quot;too many openfiles.&quot;</P></BLOCKQUOTE></DD><DTCLASS="term"><CODECLASS="replaceable"><I>expire</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This defines how long the zone's data should be retained by thesecondary servers without receiving a zone refresh. The value isspecified in seconds and is up to eight digits long. If after<CODECLASS="replaceable"><I>expire</I></CODE> seconds the secondary server has been unable to refreshthis zone, it should discard all of the data.</P><PCLASS="para"><CODECLASS="replaceable"><I>expire</I></CODE> is normally a very large value. 3600000 seconds (about42 days) is commonly used. This says that if there has been no answerfrom the primary server to refresh requests repeated every<CODECLASS="replaceable"><I>retry</I></CODE> seconds for the last 42 days, discard the data. 42 daysis a good value.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>minimum</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the value used as the default ttl in all resource recordswhere an explicit ttl value is not provided. This is a number, upto eight digits long, that specifies how many seconds resource recordsfrom this zone should be held in a remote host's cache.</P><PCLASS="para">Make this a large value. Most of the records in a zone remain unchangedfor long periods of time. Hosts are added to a zone, but hostnames (ifthey are well chosen) and addresses are not frequently changed. Forcingremote servers to query again for data that has not changed, justbecause it had a short ttl, is a waste of resources. If you planto change a record, put a short ttl on that record; don't set theentire zone to a short ttl by setting a low minimum. Usea short minimum only if the entire database is being replaced.Use at least a week (604800) for normal operation.</P></DD></DL><PCLASS="para">A sample SOA record for the <EMCLASS="emphasis">nuts.com</EM> domain is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">@    IN  SOA  almond.nuts.com. david.almond.nuts.com. (              92031101               ; serial              43200                  ; refresh twice a day              3600                   ; retry every hour              3600000                ; expire after 1000 hours              2419200                ; default ttl is one month              )</PRE></BLOCKQUOTE></P><PCLASS="para">Notice the serial number in this SOA. The serial number is in theformat <EMCLASS="emphasis">yymmddvv</EM>&nbsp;- where <EMCLASS="emphasis">yy</EM> is the year, <EMCLASS="emphasis">mm</EM> is themonth, <EMCLASS="emphasis">dd</EM> is the day, and <EMCLASS="emphasis">vv</EM> is the version written thatday. This type of serial number allows the administrator to track whatday the zone was updated. Adding the version number allows for multipleupdates in a single day. This zone file was created March 11, 1992, andit is the first update that day.</P><PCLASS="para">This SOA record also says that <EMCLASS="emphasis">almond</EM> is the primary server forthis zone and that the person responsible for this zone can be reachedat the email address <EMCLASS="emphasis">david@almond.nuts.com</EM>. The SOA tells thesecondary servers to check the zone for changes twice a day and toretry every hour if they don't get an answer. If theyretry a thousand times and never get an answer, they should discard thedata for this zone. Finally, if an RR in this zone does not have anexplicit <EMCLASS="emphasis">ttl</EM>, it will default to 1 month.<ACLASS="indexterm"NAME="AUTOID-24658"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.2">C.3.1.2 Name server record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-NAME-SERVER-NS-RESOURCE-RECORDS"></A>Name server (NS) resource records identify the authoritative serversfor a zone. These records are the pointers that link the domainhierarchy together. NS records in the top-level domains point to theservers for the second-level domains, which in turn contain NS recordsthat point to the servers for their subdomains. Name server recordspointing to the servers for subordinate domains are required for thesedomains to be accessible. Without NS records, the servers for a domainwould be unknown.</P><PCLASS="para">The format of the NS RR is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>domain</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN NS</B> <CODECLASS="replaceable"><I>server</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>domain</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The name of the domain for which the host specified in theserver field is an authoritative name server.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">NS</B></DT><DDCLASS="listitem"><PCLASS="para">The name server resource record type is NS.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>server</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The hostname of a computer that provides authoritative nameservice for this domain.</P><PCLASS="para">Usually domains have at least one server that is located outside ofthe local domain. The server name cannot be specified relativeto the local domain; it must be specified as a fully qualified domainname. To be consistent, many administrators use fully qualified namesfor all servers, even though it is not necessary for servers within thelocal domain.<ACLASS="indexterm"NAME="AUTOID-24697"></A></P></DD></DL></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.3">C.3.1.3 Address record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-ADDRESSES-RECORDS-OF"></A>The majority of the resource records in a <EMCLASS="emphasis">named.hosts</EM> zone file[6]are address records. Address records are used to convert hostnames toIP addresses, which is the most common use of the DNS database.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] <ACLASS="xref"HREF="ch08_01.htm"TITLE="Configuring DNS Name Service ">Chapter 8</A> describes the various <BCLASS="emphasis.bold">named</B> configuration files.</P></BLOCKQUOTE><PCLASS="para">The address RR contains the following:</P><PCLASS="para">&#13;[<CODECLASS="replaceable"><I>host</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN A</B> <CODECLASS="replaceable"><I>address</I></CODE>&#13;</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The name of the host whose address is provided in the data field ofthis record. Most often the hostname is written relative to thecurrent domain.&#13;</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.&#13;</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.&#13;</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">A</B></DT><DDCLASS="listitem"><PCLASS="para">The address resource record type is A.&#13;</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>address</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The IP address of the host is written here in dotted decimal form, e.g.,128.66.12.2.</P></DD></DL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-24742"></A>A <EMCLASS="emphasis">glue record</EM> is a special type of address record.Most address records refer to hosts within the zone, but sometimes anaddress record needs to refer to a host in another zone. This is done to provide the address of a name server for a subordinatedomain. Recall that the NS record for a subdomain server identifies theserver by name. An address is needed to communicate with that server, soan A record must also be provided. The address record, combined with thename server record, links the domains together&nbsp;- thus the term &quot;gluerecord.&quot;<ACLASS="indexterm"NAME="AUTOID-24745"></A>&#13;</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.4">C.3.1.4 Mail exchanger record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-MAIL-EXCHANGER-MX-RECORD"></A><ACLASS="indexterm"NAME="TCP2-AP-3-IX-MAIL-EXCHANGER-MX-RECORD2"></A>The mail exchanger (MX) record redirects mail to a mail server. It canredirect mail for an individual computer or an entire domain. MXrecords are extremely useful for domains that contain some systemsthat don't run mail software. Mail addressed to those systemscan be redirected to computers that do run mail software. MX recordsare also used to simplify mail addressing by redirecting mail toservers that understand the simplified addresses.</P><PCLASS="para">The format of the MX RR is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>name</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN MX</B> <CODECLASS="replaceable"><I>preference host</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The name of a host or domain to which the mail is addressed.Think of this as the value that occurs after the @ in a mailingaddress. Mail addressed to this name is sent to the mail serverspecified by the MX record's host field.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">MX</B></DT><DDCLASS="listitem"><PCLASS="para">The Mail Exchanger resource record type is MX.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>preference</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">A host or domain may have more than one MX record associated with it.The preference field specifies the order in which the mailservers are tried. Servers with low preference numbers are triedfirst, so the most preferred server has a preference of 0.Preference values are usually assigned in increments of 5 or 10, sothat new servers can be inserted between existing servers withoutediting the old MX records.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The name of the mail server to which mail is delivered when itis addressed to the host or domain identified in the name field.</P></DD></DL><PCLASS="para">Here is how MX records work. If a remote system understands how to useMX records and has mail to send to ahost, it requests the host's MX records.DNS returns all of the MX records for the specified host. Theremote server chooses the MX with the lowest preference value andattempts to deliver the mail to that server. If it cannot connect tothat server, it will try each of the remaining servers inpreference order until it can deliver the mail. If no MX recordsare returned by DNS, the remote server delivers the mail directly tothe host to which the mail is addressed. MX records only define how toredirect mail. The remote system and the mail server perform all of theprocessing that actually delivers the mail.</P><PCLASS="para">Because the remote system will first try to use an MX record, manydomain administrators include MX records for every host in the zone.Many of these MX records point right back to the host to which the mailis addressed, e.g., an MX for <EMCLASS="emphasis">almond</EM> with a host field of<EMCLASS="emphasis">almond.nuts.com</EM>. These records are used to reduce the processingload of the remote computer. A nice gesture!</P><PCLASS="para">An important use for MX records is to allow mail to non-Internet sites<ACLASS="indexterm"NAME="AUTOID-24795"></A>to be delivered using Internet-style addressing. MX records do this byredirecting the mail to computers that know how to deliver the mail tonon-Internet networks. For example, sites using <BCLASS="emphasis.bold">uucp</B> can registeran Internet domain name with UUNET. UUNET uses MX records to redirectInternet mail addressed to these non-connected sites to<EMCLASS="emphasis">uunet.uu.net</EM>, which delivers the mail to its final destination via<BCLASS="emphasis.bold">uucp</B>.</P><PCLASS="para">Here are some MX examples. All of these examples are for theimaginary domain <EMCLASS="emphasis">nuts.com</EM>. In the first example, mail addressedto <EMCLASS="emphasis">hazel.nuts.com</EM> is redirected to <EMCLASS="emphasis">almond.nuts.com</EM> withthis MX record:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hazel        IN    MX    10 almond</PRE></BLOCKQUOTE></P><PCLASS="para">The second example is an MX record used to simplify mail addressing.People can send mail to any user in this domain without knowing thespecific computer that the user reads his mail on. Mail addressed to<EMCLASS="emphasis">user@nuts.com</EM> is redirected by this MX record to <EMCLASS="emphasis">almond</EM>, which is amail server that knows how to deliver mail to every individual user inthe domain.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">nuts.com.  IN    MX    10 almond.nuts.com.</PRE></BLOCKQUOTE></P><PCLASS="para">The last example is an MX record that redirects mail addressed to any<CODECLASS="replaceable"><I>host</I></CODE> within the domain to a central mail server. Mail addressedto any host, <EMCLASS="emphasis">pecan.nuts.com</EM>, <EMCLASS="emphasis">acorn.nuts.com</EM>, or<EMCLASS="emphasis">anything.nuts.com</EM>, is redirected to <EMCLASS="emphasis">almond</EM>. This is the mostcommon use of the wildcard character (<CODECLASS="literal">*</CODE>).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">*.nuts.com.  IN    MX    10 almond.nuts.com.</PRE></BLOCKQUOTE></P><PCLASS="para">In these examples, the <CODECLASS="replaceable"><I>preference</I></CODE> is 10so that a mail server with a lower preference number can be added to thezone without changing the existing MX record. Also notice that the hostnames in the first example are specified relative to the <EMCLASS="emphasis">nuts.com</EM>domain, but the other names are not relative because they end in a dot.All of these names <EMCLASS="emphasis">could</EM> have been entered as relative names,because they all are hosts in the <EMCLASS="emphasis">nuts.com</EM> domain. Fully qualifiednames were used only to vary the examples. Finally, the wildcard MXrecord applies only to hosts that do not have a specific MX record.If the specific record for <EMCLASS="emphasis">hazel</EM> is in the same configuration asthe wildcard record, the wildcard MX does not apply to <EMCLASS="emphasis">hazel</EM>.<ACLASS="indexterm"NAME="AUTOID-24827"></A><ACLASS="indexterm"NAME="AUTOID-24828"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.5">C.3.1.5 Canonical Name record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-CANONICAL-NAME-CNAME-RESOURCE-RECORDS"></A>The Canonical Name (CNAME) resource record defines an alias for theofficial name of a host. The CNAME record provides a facility similarto nicknames in the host table. The facility provides alternate hostnames for the convenience of users, and generic hostnames used byapplications (such as <EMCLASS="emphasis">loghost</EM> used by <BCLASS="emphasis.bold">syslogd</B>).</P><PCLASS="para">The CNAME record is frequently used to ease the transition from an old<ACLASS="indexterm"NAME="AUTOID-24837"></A>hostname to a new hostname. While it is best to avoid hostnamechanges by carefully choosing hostnames in the first place, not allchanges can be avoided. When you do make a name change, it can take a longtime before it becomes completely effective, particularly if the hostname is embedded in a mailing list run at a remote site. To reduceproblems for the remote site, use a CNAME record until they can make thechange.</P><PCLASS="para">The format of the CNAME record is:</P><PCLASS="para"><CODECLASS="replaceable"><I>nickname</I></CODE> [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN CNAME</B> <CODECLASS="replaceable"><I>host</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>nickname</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This hostname is an alias for the official hostname defined in the<CODECLASS="replaceable"><I>host</I></CODE> field. The <CODECLASS="replaceable"><I>nickname</I></CODE> can be any valid hostname.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">CNAME</B></DT><DDCLASS="listitem"><PCLASS="para">The Canonical Name resource record type is CNAME.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The canonical name of the host is provided here. This hostname must bethe official hostname; it cannot be an alias.</P></DD></DL><PCLASS="para">One important thing to remember about the CNAME record is that allother resource records must be associated with the official hostnameand not with the nickname. This means that the CNAME record should not beplaced between a host and the list of RRs associated with that host.The example below shows a correctly placed CNAME record:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">peanut     IN    A       128.66.12.2           IN    MX      5 peanut.nuts.com.           IN    HINFO   SUN-3/60 &quot;SUN OS 4.0&quot;           IN    WKS     129.6.16.2 TCP ftp telnet smtp domain           IN    WKS     128.66.12.2 UDP domaingoober     IN    CNAME   peanut.nuts.com.</PRE></BLOCKQUOTE></P><PCLASS="para">In this example, the hostname <EMCLASS="emphasis">peanut</EM> stays in force for the MX,HINFO, and WKS records because they all have blank name fields. TheCNAME record changes the name field value to <EMCLASS="emphasis">goober</EM>, which is anickname for <EMCLASS="emphasis">peanut</EM>. Any RRs with blank name fields followingthis CNAME record would associate themselves with the nickname<EMCLASS="emphasis">goober</EM>, which is illegal. An improper CNAME placement is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">peanut     IN    A       128.66.12.2goober     IN    CNAME   peanut.nuts.com.           IN    MX      5 peanut.nuts.com.           IN    HINFO   SUN-3/60 &quot;SUN OS 4.0&quot;           IN    WKS     128.66.12.2 TCP ftp telnet smtp domain           IN    WKS     128.66.12.2 UDP domain</PRE></BLOCKQUOTE></P><PCLASS="para">This improperly placed CNAME record causes <BCLASS="emphasis.bold">named</B> to display theerror message &quot;goober.nuts.com has CNAME and other data (illegal).&quot;Check <EMCLASS="emphasis">/usr/adm/messages</EM> for <BCLASS="emphasis.bold">named</B> error messages to ensurethat you have not misplaced any CNAME records.<ACLASS="indexterm"NAME="AUTOID-24889"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.6">C.3.1.6 Domain Name Pointer record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-DOMAIN-NAME-POINTER-PTR-RESOURCE-RECORDS"></A>The Domain Name Pointer (PTR) resource records are used to convertnumeric IP addresses to hostnames. This is the opposite of what isdone by the address record that converts hostnames to addresses. PTRrecords are used to construct the <EMCLASS="emphasis">in-addr.arpa</EM> reverse domain files.<ACLASS="indexterm"NAME="AUTOID-24896"></A><ACLASS="indexterm"NAME="AUTOID-24899"></A></P><PCLASS="para">Many administrators ignore the reverse domains, because things appearto run fine without them. Don't ignore them. Keep these zones up-to-date.Several programs use the reverse domains to map IP addresses tohostnames when preparing status displays. A good example is the<BCLASS="emphasis.bold">netstat</B> command. Some service providers&nbsp;- <EMCLASS="emphasis">ftp.uu.net</EM> isthe best example&nbsp;- use the reverse domains to track who is using theirservice. If they cannot map your IP address back to a hostname, theyreject your connection.</P><PCLASS="para">The format of the PTR record is:</P><PCLASS="para"><CODECLASS="replaceable"><I>name</I></CODE> [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN PTR</B> <CODECLASS="replaceable"><I>host</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The <CODECLASS="replaceable"><I>name</I></CODE> specified here is actually a number. The number isdefined relative to the current <EMCLASS="emphasis">in-addr.arpa</EM> domain. Names inan <EMCLASS="emphasis">in-addr.arpa</EM> domain are IP addresses specified in reverseorder. If the current domain is <EMCLASS="emphasis">66.128.in-addr.arpa</EM>, then thename field for <EMCLASS="emphasis">peanut</EM> (128.66.12.2) is 2.12. These digits (2.12)are added to the current domain (<EMCLASS="emphasis">66.128.in-addr.arpa</EM>) to makethe name <EMCLASS="emphasis">2.12.66.128.in-addr.arpa</EM>. <ACLASS="xref"HREF="ch04_01.htm"TITLE="Getting Started ">Chapter 4, <CITECLASS="chapter">Getting Started </CITE></A>, discusses the uniquestructure of <EMCLASS="emphasis">in-addr.arpa</EM> domain names.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">PTR</B></DT><DDCLASS="listitem"><PCLASS="para">The Domain Name Pointer resource record type is PTR.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the fully qualified domain name of the computer whose addressis specified in the name field. The host must be specified as a fullyqualified name because the name cannot be relative to the current<EMCLASS="emphasis">in-addr.arpa</EM> domain.</P></DD></DL><PCLASS="para">There are many examples of PTR records in the sample <EMCLASS="emphasis">named.rev</EM>file shown in <ACLASS="xref"HREF="ch08_01.htm"TITLE="Configuring DNS Name Service ">Chapter 8</A>.<ACLASS="indexterm"NAME="AUTOID-24950"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.7">C.3.1.7 Host Information record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-HOST-INFORMATION-HINFO-RESOURCE-RECORD"></A>The Host Information (HINFO) resource record provides a shortdescription of the hardware and operating system used by a specifichost. The hardware and software are described using standard<ACLASS="indexterm"NAME="AUTOID-24956"></A>terminology defined in the <EMCLASS="emphasis">Assigned Numbers</EM> RFC in the sectionson <EMCLASS="emphasis">Machine Names</EM> (hardware) and <EMCLASS="emphasis">System Names</EM> (software).There are a large number of hardware and software designators listed inthe RFC. Most name use the same general format. Names withembedded blanks must be enclosed in quotes, so some names have a dash(-) where you might expect a blank. A machine name is usually themanufacturer's name in uppercase letters separated from the modelnumber by a dash; e.g., IBM-PC/AT or SUN-3/60. The system name is usually the manufacturer's operating system name written in uppercaseletters; e.g., DOS or &quot;SUN OS 4.0.&quot; Naturally the rapid changes in thecomputer market constantly make the data in the <EMCLASS="emphasis">Assigned Numbers</EM>RFC out-of-date. Because of this, many administrators make up theirown values for machine names and system names.</P><PCLASS="para">The format of the HINFO record is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>host</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN HINFO</B> <CODECLASS="replaceable"><I>hardware software</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The hostname of the computer whose hardware and software isdescribed in the data section of this resource record.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">HINFO</B></DT><DDCLASS="listitem"><PCLASS="para">HINFO is the resource record type. All of the information that followsis part of the HINFO data field.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>hardware</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This field identifies the hardware used by this host. It contains themachine name defined in the <EMCLASS="emphasis">Assigned Numbers</EM> RFC. This field mustbe enclosed in quotes if it contains any blanks. A single blank spaceseparates the hardware field from the software field that follows it.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>software</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This field identifies the operating system software this host runs. Itcontains the system name defined for this operating system in the<EMCLASS="emphasis">Assigned Numbers</EM> RFC. Use quotes if the system name contains anyblanks.</P></DD></DL><PCLASS="para">No widely used application makes use of the HINFO record; the record justprovides information. Some security-conscious sites discourage its use.They fear that this additional information helps intruders narrow theirattacks to the specific hardware and operating system that they wish tocrack.<ACLASS="indexterm"NAME="AUTOID-25002"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.8">C.3.1.8 Well-Known Services record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-AP-3-IX-WELL-KNOWN-SERVICES-WKS-RESOURCE-RECORD"></A><ACLASS="indexterm"NAME="TCP2-AP-3-IX-WELL-KNOWN-SERVICES-WKS-RESOURCE-RECORD2"></A>The Well-Known Services (WKS) resource record names the network servicessupported by the specified host. The official protocol names and servicesnames used on the WKS record are defined in the <EMCLASS="emphasis">Assigned Numbers</EM>RFC. The simplest way to list the names of the well-known services isto <BCLASS="emphasis.bold">cat</B> the <EMCLASS="emphasis">/etc/services</EM> file on your system. Each hostcan have no more than two WKS records; one record for TCP and one forUDP. Because several services are usually listed on the WKS record,each record may extend through multiple lines.</P><PCLASS="para">The format of the WKS record is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>host</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN WKS</B> <CODECLASS="replaceable"><I>address protocol services</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The hostname of the computer that provides the advertisedservices.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">WKS</B></DT><DDCLASS="listitem"><PCLASS="para">The resource record type is WKS. All of the information that follows isvariable information for the WKS record.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>address</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The IP address of the host written in dotted decimal format,e.g., 128.66.12.2.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>protocol</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The transport level protocol through which the servicecommunicates&nbsp;- either TCP or UDP.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>services</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The list of services provided by this host. As few or as manyservices as you choose may be advertised, but the names used toadvertise the services must be the names found in the<EMCLASS="emphasis">/etc/services</EM> file. Items in the list of services are separatedby spaces. Parentheses are used to continue the list beyond a singleline.</P></DD></DL><PCLASS="para">There are no widely used applications that make use of this record. Itis only used to provide general information about the system. Again,security-conscious sites may not wish to advertise all of their<ACLASS="indexterm"NAME="AUTOID-25057"></A><ACLASS="indexterm"NAME="AUTOID-25060"></A>services. Some protocols, such as <BCLASS="emphasis.bold">tftp</B> and <BCLASS="emphasis.bold">finger</B>, areprime targets for intruders.<ACLASS="indexterm"NAME="AUTOID-25065"></A><ACLASS="indexterm"NAME="AUTOID-25066"></A><ACLASS="indexterm"NAME="AUTOID-25067"></A><ACLASS="indexterm"NAME="AUTOID-25068"></A><ACLASS="indexterm"NAME="AUTOID-25069"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-AP-3-SECT-3.1.9">C.3.1.9 Text record</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-25073"></A><ACLASS="indexterm"NAME="AUTOID-25075"></A>The Text (TXT) resource record holds string data. The text data can bein any format. There are no standard TCP/IP applications for processingTXT records. These records are used to provide free-form informationabout the named object. Some sites create local processes for TXTrecords and define a local format for the information. For example,a TXT record could hold the Ethernet address of a host at one site anda room number at another site.</P><PCLASS="para">The format of the TXT record is:</P><PCLASS="para">[<CODECLASS="replaceable"><I>name</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN TXT</B> <CODECLASS="replaceable"><I>string</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The name of the domain object with which the string data is associated.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Time-to-live is usually blank.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">The address class is IN.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">TXT</B></DT><DDCLASS="listitem"><PCLASS="para">The resource record type is TXT.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>string</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The <CODECLASS="replaceable"><I>string</I></CODE> field contains text data enclosed in quotation marks.<ACLASS="indexterm"NAME="AUTOID-25110"></A></P></DD></DL></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appc_02.htm"TITLE="C.2 named.boot Configuration Commands"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: C.2 named.boot Configuration Commands"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="APPENDIX"HREF="appd_01.htm"TITLE="D. A dhcpd Reference"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: D. A dhcpd Reference"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">C.2 named.boot Configuration Commands</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">D. A dhcpd Reference</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>