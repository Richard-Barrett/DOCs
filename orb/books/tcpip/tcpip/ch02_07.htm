<HTML><HEAD><TITLE>[Chapter 2] 2.7 Protocols, Ports, and Sockets</TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:31:26Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch02_01.htm"TITLE="2. Delivering the Data"><LINKREL="prev"HREF="ch02_06.htm"TITLE="2.6 Address Resolution"><LINKREL="next"HREF="ch02_08.htm"TITLE="2.8 Summary"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_06.htm"TITLE="2.6 Address Resolution"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.6 Address Resolution"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 2<BR>Delivering the Data</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_08.htm"TITLE="2.8 Summary"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.8 Summary"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-2-SECT-7">2.7 Protocols, Ports, and Sockets</A></H2><PCLASS="para">Once data is routed through the network and delivered to a specifichost, it must be delivered to the correct user or process.As the data moves up or down the TCP/IP layers, a mechanism isneeded to deliver it to the correct protocols in each layer. Thesystem must be able to combine data from many applications into a fewtransport protocols, and from the transport protocols into the InternetProtocol. Combining many sources of data into a single data stream iscalled <EMCLASS="emphasis">multiplexing</EM>.<ACLASS="indexterm"NAME="AUTOID-2132"></A></P><PCLASS="para">Data arriving from the network must be <EMCLASS="emphasis">demultiplexed</EM>:<ACLASS="indexterm"NAME="AUTOID-2136"></A>divided for delivery to multiple processes. To accomplish this task,IP uses <EMCLASS="emphasis">protocol numbers</EM> to identify transport protocols, andthe transport protocols use <EMCLASS="emphasis">port numbers</EM><ACLASS="indexterm"NAME="AUTOID-2140"></A>to identify applications.</P><PCLASS="para">Some protocol and port numbers are reserved to identify <EMCLASS="emphasis">well-knownservices</EM>.<ACLASS="indexterm"NAME="AUTOID-2145"></A><ACLASS="indexterm"NAME="AUTOID-2147"></A>Well-known services are standard network protocols, such as FTP andtelnet, that are commonly used throughout the network. The protocolnumbers and port numbers allocated to well-known services aredocumented in the <EMCLASS="emphasis">Assigned Numbers</EM> RFC.<ACLASS="indexterm"NAME="AUTOID-2150"></A>UNIX systems define protocol and port numbers in two simple textfiles.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-2-SECT-7.1">2.7.1 Protocol Numbers</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-2-IX-PROTOCOL-NUMBER"></A>The protocol number is a single byte in the third word of the datagram<ACLASS="indexterm"NAME="AUTOID-2158"></A>header. The value identifies the protocol in the layer above IP towhich the data should be passed.</P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-2-IX-ETC-PROTOCOLS-FILE"></A><ACLASS="indexterm"NAME="AUTOID-2165"></A>On a UNIX system, the protocol numbers are defined in<EMCLASS="emphasis">/etc/protocols</EM>. This file is a simple table containing theprotocol name and the protocol number associated with that name. Theformat of the table is a single entry per line, consisting of theofficial protocol name, separated by whitespace from the protocolnumber. The protocol number is separated by whitespace from<ACLASS="indexterm"NAME="AUTOID-2168"></A>the &quot;alias&quot; for the protocol name. Comments in the table begin with<CODECLASS="literal">#</CODE>. An <EMCLASS="emphasis">/etc/protocols</EM> file is shown below:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cat /etc/protocols</B></CODE>#ident  &quot;@(#)protocols  1.2     90/02/03 SMI&quot;   /* SVr4.0 1.1   */## Internet (IP) protocols#ip      0       IP      # internet protocol, pseudo protocol numbericmp    1       ICMP    # internet control message protocolggp     3       GGP     # gateway-gateway protocoltcp     6       TCP     # transmission control protocolegp     8       EGP     # exterior gateway protocolpup     12      PUP     # PARC universal packet protocoludp     17      UDP     # user datagram protocolhmp     20      HMP     # host monitoring protocolxns-idp 22      XNS-IDP # Xerox NS IDPrdp     27      RDP     # &quot;reliable datagram&quot; protocol</PRE></BLOCKQUOTE></P><PCLASS="para">The listing shown above is the contents of the <EMCLASS="emphasis">/etc/protocols</EM>file from a Solaris 2.5.1 workstation.<ACLASS="indexterm"NAME="AUTOID-2178"></A>This list of numbers is by no meanscomplete. If you refer to the Protocol Numbers section of the<EMCLASS="emphasis">Assigned Numbers</EM> RFC, you'll see many more protocol numbers.However, a system needs to include onlythe numbers of the protocols that it actually uses. Even the listshown above is more than this specific workstation needed, but theadditional entries do no harm.</P><PCLASS="para">What exactly does this table mean? When a datagram arrives and itsdestination address matches the local IP address, the IP layer knowsthat the datagram has to be delivered to one of the transport protocolsabove it. To decide which protocol should receive the datagram, IPlooks at the datagram's protocol number. Using this table you can seethat, if the datagram's protocol number is 6, IP delivers the datagramto TCP. If the protocol number is 17, IP delivers the datagram to UDP.TCP and UDP are the two transport layer services we are concerned with,but all of the protocols listed in the table use IP datagram deliveryservice directly. Some, such as ICMP, EGP, and GGP, have already beenmentioned. You don't need to be concerned with the minor protocols.<ACLASS="indexterm"NAME="AUTOID-2182"></A><ACLASS="indexterm"NAME="AUTOID-2185"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-2-SECT-7.2">2.7.2 Port Numbers</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-2-IX-PORT-NUMBERS"></A>After IP passes incoming data to the transport protocol, the transportprotocol passes the data to the correct application process.Application processes (also called <EMCLASS="emphasis">network services</EM>) are<ACLASS="indexterm"NAME="AUTOID-2193"></A><ACLASS="indexterm"NAME="AUTOID-2196"></A>identified by port numbers, which are 16-bit values. Thesource port number, which identifies the process that sent the data, andthe destination port number, which identifies the process that is toreceive the data, are contained in the first header word of each TCPsegment and UDP packet.</P><PCLASS="para">On UNIX systems, port numbers are defined in the <EMCLASS="emphasis">/etc/services</EM>file. There are many more network applications than there aretransport layer protocols, as the size of the table shows. Port numbersbelow 256 are reserved for well-known services (like FTP and telnet)and are defined in the <EMCLASS="emphasis">Assigned Numbers</EM> RFC. Ports numbered from256 to 1024 are used for UNIX-specific services,<ACLASS="indexterm"NAME="AUTOID-2202"></A>services like <BCLASS="emphasis.bold">rlogin</B> that were originally developed for UNIX<ACLASS="indexterm"NAME="AUTOID-2206"></A>systems. However, most of them are no longer UNIX-specific.</P><PCLASS="para">Port numbers are not unique between transport layer protocols; thenumbers are only unique within a specific transport protocol. In otherwords, TCP and UDP can, and do, both assign the same port numbers. It isthe combination of protocol and port numbers that uniquelyidentifies the specific process to which the data should be delivered.</P><PCLASS="para">A partial <EMCLASS="emphasis">/etc/services</EM> file from a Solaris 2.5.1 workstationis shown below. The format of this file is very similar to the<EMCLASS="emphasis">/etc/protocols</EM> file. Each single-line entry starts with theofficial name of the service, separated by whitespace from the portnumber/protocol pairing associated with that service. The port numbersare paired with transport protocol names, because different transportprotocols may use the same port number. An optional list of aliases for<ACLASS="indexterm"NAME="AUTOID-2213"></A>the official service name may be provided after the port number/protocolpair.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">peanut% <CODECLASS="userinput"><B>cat head -20 /etc/services</B></CODE>#ident  &quot;@(#)services   1.13    95/07/28 SMI&quot;   /* SVr4.0 1.8   */## Network services, Internet style#tcpmux          1/tcpecho            7/tcpecho            7/udpdiscard         9/tcp           sink nulldiscard         9/udp           sink nullsystat          11/tcp          usersdaytime         13/tcpdaytime         13/udpnetstat         15/tcpchargen         19/tcp          ttytst sourcechargen         19/udp          ttytst sourceftp-data        20/tcpftp             21/tcptelnet          23/tcpsmtp            25/tcp          mail</PRE></BLOCKQUOTE></P><PCLASS="para">This table, combined with the <EMCLASS="emphasis">/etc/protocols</EM> table, provides allof the information necessary to deliver data to the correctapplication. A datagram arrives at its destination based on thedestination address in the fifth word of the datagram header. Using<ACLASS="indexterm"NAME="AUTOID-2220"></A>the protocol number in the third word of the datagram header, IP deliversthe data from the datagram to the proper transport layer protocol. Thefirst word of the data delivered to the transport protocol contains thedestination port number that tells the transport protocol to pass thedata up to a specific application. <ACLASS="xref"HREF="ch02_07.htm#TCP2-CH-2-FIG-5"TITLE="Protocol and port numbers">Figure 2.6</A>shows this delivery process.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-2-FIG-5">Figure 2.6: Protocol and port numbers</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_0206.gif"ALT="Figure 2.6"><PCLASS="para">Despite its size, the <EMCLASS="emphasis">/etc/protocols</EM> file does not contain theport number of every well-known application. You won't find the portnumber of every <EMCLASS="emphasis">Remote Procedure Call</EM> (RPC) service in the<ACLASS="indexterm"NAME="AUTOID-2230"></A><ACLASS="indexterm"NAME="AUTOID-2232"></A><EMCLASS="emphasis">services</EM> file. Sun developed a different technique for reservingports for RPC services that doesn't involve registering well-knownport numbers. When an RPC service starts, it picks any unused portnumber and registers that number with the <BCLASS="emphasis.bold">portmapper</B>. The<ACLASS="indexterm"NAME="AUTOID-2236"></A><BCLASS="emphasis.bold">portmapper</B> is a program that keeps track of the port numbersbeing used by RPC services. When a client wants to use an RPC service,it queries the <BCLASS="emphasis.bold">portmapper</B> running on the server to discover theport assigned to the service. The client can find <BCLASS="emphasis.bold">portmapper</B>because it is assigned well-known port 111.  <BCLASS="emphasis.bold">portmapper</B> makes itpossible to install well-known services without formally obtaining awell-known port.<ACLASS="indexterm"NAME="AUTOID-2242"></A><ACLASS="indexterm"NAME="AUTOID-2243"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-2-SECT-7.3">2.7.3 Sockets</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-2-IX-SOCKET"></A><EMCLASS="emphasis">Well-known ports</EM> are standardized port numbers that enable<ACLASS="indexterm"NAME="AUTOID-2250"></A><ACLASS="indexterm"NAME="AUTOID-2252"></A>remote computers to know which port to connect to for a particularnetwork service.  This simplifies the connection process because boththe sender and receiver know in advance that data bound for a specificprocess will use a specific port.  For example, all systems that offertelnet do so on port 23.<ACLASS="indexterm"NAME="AUTOID-2254"></A></P><PCLASS="para">There is a second type of port number called a <EMCLASS="emphasis">dynamically allocated<ACLASS="indexterm"NAME="AUTOID-2258"></A>port</EM>. As the name implies, dynamically allocated ports are notpre-assigned. They are assigned to processes when needed. The systemensures that it does not assign the same port number to two processes,and that the numbers assigned are above the range of standard portnumbers.</P><PCLASS="para">Dynamically allocated ports provide the flexibility needed to supportmultiple users. If a telnet user is assigned port number 23 for boththe source and destination ports, what port numbers are assigned to thesecond concurrent telnet user? To uniquely identify every connection,the source port is assigned a dynamically allocated port number, andthe well-known port number is used for the destination port.</P><PCLASS="para">In the telnet example, the first user is given a random source portnumber and a destination port number of 23 (telnet). The second useris given a different random source port number and the samedestination port. It is the pair of port numbers, source anddestination, that uniquely identifies each network connection. Thedestination host knows the source port, because it is provided in boththe TCP segment header and the UDP packet header. Both hosts know thedestination port because it is a well-known port.</P><PCLASS="para"><ACLASS="xref"HREF="ch02_07.htm#TCP2-CH-2-FIG-6"TITLE="Passing port numbers">Figure 2.7</A>shows the exchange of port numbers during the TCP handshake. The<ACLASS="indexterm"NAME="AUTOID-2264"></A><ACLASS="indexterm"NAME="AUTOID-2268"></A>source host randomly generates a source port, in this example 3044. Itsends out a segment with a source port of 3044 and a destination portof 23. The destination host receives the segment, and responds backusing 23 as its source port and 3044 as its destination port.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-2-FIG-6">Figure 2.7: Passing port numbers</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_0207.gif"ALT="Figure 2.7"><PCLASS="para">The combination of an IP address and a port number is called a<EMCLASS="emphasis">socket</EM>. A socket uniquely identifies a single network processwithin the entire Internet. Sometimes the terms &quot;socket&quot; and &quot;portnumber&quot; are used interchangeably. In fact, well-known services arefrequently referred to as &quot;well-known sockets.&quot; In the context of thisdiscussion, a &quot;socket&quot; is the combination of an IP address and a portnumber. A pair of sockets, one socket for the receiving host and onefor the sending host, define the connection for connection-orientedprotocols such as TCP.<ACLASS="indexterm"NAME="AUTOID-2276"></A></P><PCLASS="para">Let's build on the example of dynamically assigned ports and well-knownports. Assume a user on host 172.16.12.2 uses telnet to connect to host192.168.16.2. Host 172.16.12.2 is thesource host. The user is dynamically assigned a unique portnumber&nbsp;- 3382. The connection is made to the telnet service on theremote host whichis, according to the standard, assigned well-known port 23. The socketfor the source side of the connection is 172.16.12.2.3382 (IP address172.16.12.2 plus port number 3382). For the destination side of theconnection, the socket is 192.168.16.2.23 (address 192.168.16.2 plusport 23). The port of the destination socket is known by both systemsbecause it is a well-known port. The port of the source socket is known,because the source host informed the destination host of the sourcesocket when the connection request was made. The socket pair istherefore known by both the source and destination computers. Thecombination of the two sockets uniquely identifies this connection; noother connection in the Internet has this socket pair.<ACLASS="indexterm"NAME="AUTOID-2278"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_06.htm"TITLE="2.6 Address Resolution"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.6 Address Resolution"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_08.htm"TITLE="2.8 Summary"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.8 Summary"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">2.6 Address Resolution</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">2.8 Summary</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>