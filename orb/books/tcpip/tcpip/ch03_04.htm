<HTML><HEAD><TITLE>[Chapter 3] 3.4 Mail Services</TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:31:45Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch03_01.htm"TITLE="3. Network Services"><LINKREL="prev"HREF="ch03_03.htm"TITLE="3.3 Domain Name Service"><LINKREL="next"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_03.htm"TITLE="3.3 Domain Name Service"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.3 Domain Name Service"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 3<BR>Network Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.5 Configuration Servers"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-3-SECT-4">3.4 Mail Services</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-MAIL-SERVERS"></A>Users consider electronic mail the most important network service becausethey use it for interpersonal communications. Some applications arenewer and fancier. Other applications consume more network bandwidth.Others are more important for the continued operation of the network. Butemail is the application people use to communicate with each other.It isn't very fancy, but it's vital.</P><PCLASS="para">TCP/IP provides a reliable, flexible email system built on a few basicprotocols. These are: <EMCLASS="emphasis">Simple Mail Transfer Protocol</EM> (SMTP),<EMCLASS="emphasis">Post Office Protocol</EM> (POP), and <EMCLASS="emphasis">Multipurpose Internet MailExtensions</EM> (MIME). There are other TCP/IP mailprotocols. <EMCLASS="emphasis">Interactive Mail Access Protocol</EM>, defined in RFC1176, is an interesting protocol designed to supplant POP. It providesremote text searches and message parsing features not found in POP. Wewill touch only briefly on IMAP.  It and other protocols have somevery interesting features, but they are not yet widelyimplemented.</P><PCLASS="para">Our coverage concentrates on the three protocols you aremost likely to use building your network: SMTP, POP, and MIME. Westart with SMTP, the foundation of all TCP/IP email systems.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-3-SECT-4.1">3.4.1 Simple Mail Transfer Protocol</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-SIMPLE-MAIL-TRANSFER-PROTOCOL-SMTP"></A>SMTP is the TCP/IP mail delivery protocol. It moves mail across theInternet and across your local network. SMTP is defined in RFC 821,<EMCLASS="emphasis">A Simple Mail Transfer Protocol</EM>. It runs over the reliable,connection-oriented service provided by <EMCLASS="emphasis">Transmission ControlProtocol</EM> (TCP), and it uses well-known port number 25.[7]<ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-0"TITLE="SMTP Commands">Table 3.1</A>lists some of the simple, human-readable commands used by SMTP.<ACLASS="indexterm"NAME="AUTOID-2906"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] Most standard TCP/IP applications are assigned a well-known port inthe <EMCLASS="emphasis">Assigned Numbers RFC</EM>, so that remote systems know how toconnect the service.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-3-TAB-0">Table 3.1: SMTP Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Syntax</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Hello</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">HELO</B> &lt;<CODECLASS="replaceable"><I>sending-host</I></CODE><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Identify sending SMTP</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">From</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">MAIL FROM:&lt;</B><CODECLASS="replaceable"><I>from-address</I></CODE><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Sender address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Recipient</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">RCPT TO:&lt;</B><CODECLASS="replaceable"><I>to-address</I></CODE><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Recipient address</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Data</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">DATA</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Begin a message</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reset</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">RSET</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Abort a message</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Verify</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">VRFY &lt;</B><CODECLASS="replaceable"><I>string</I></CODE><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Verify a username</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Expand</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">EXPN &lt;</B><CODECLASS="replaceable"><I>string</I></CODE><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Expand a mailing list</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Help</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">HELP </B>[<CODECLASS="replaceable"><I>string</I></CODE>]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Request online help</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Quit</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">QUIT</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End the SMTP session</TD></TR></TBODY></TABLE><PCLASS="para">SMTP is such a simple protocol you can literally do it yourself.<BCLASS="emphasis.bold">telnet</B> to port 25 on a remote host and type mail in from thecommand line using the SMTP commands. This technique is sometimes usedto test a remote system's SMTP server, but we use it here toillustrate how mail is delivered between systems. The example belowshows mail manually input from Daniel on <EMCLASS="emphasis">peanut.nuts.com </EM> toTyler on <EMCLASS="emphasis">almond.nuts.com</EM>.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet almond.nuts.com 25</B>Trying 172.16.12.1 ...Connected to almond.nuts.com.Escape character is '^]'.220 almond Sendmail 4.1/1.41 ready at Tue, 29 Mar 94 17:21:26 EST<BCLASS="emphasis.bold">helo peanut.nuts.com</B>250 almond Hello peanut.nuts.com, pleased to meet you<BCLASS="emphasis.bold">mail from:&lt;daniel@peanut.nuts.com&gt;</B>250 &lt;daniel@peanut.nuts.com&gt;... Sender ok<BCLASS="emphasis.bold">rcpt to:&lt;tyler@almond.nuts.com&gt;</B>250 &lt;tyler@almond.nuts.com&gt;... Recipient ok<BCLASS="emphasis.bold">data</B>354 Enter mail, end with &quot;.&quot; on a line by itself<BCLASS="emphasis.bold">Hi Tyler!.</B>250 Mail accepted<BCLASS="emphasis.bold">quit</B>221 almond delivering mailConnection closed by foreign host.</PRE></BLOCKQUOTE></P><PCLASS="para">The user input is shown in bold type. All of the other lines areoutput from the system. This example shows how simple it is. A TCPconnection is opened. The sending system identifies itself. The<EMCLASS="emphasis">From</EM> address and the <EMCLASS="emphasis">To</EM> address are provided. The messagetransmission begins with the <BCLASS="emphasis.bold">DATA</B> command<ACLASS="indexterm"NAME="AUTOID-2991"></A>and ends with a line<ACLASS="indexterm"NAME="AUTOID-2993"></A>that contains only a period (.). The session terminates with a QUITcommand. Very simple, and very few commands are used.</P><PCLASS="para">There are other commands (<BCLASS="emphasis.bold">SEND</B>, <BCLASS="emphasis.bold">SOML</B>, <BCLASS="emphasis.bold">SAML</B>, and <BCLASS="emphasis.bold">TURN</B>)defined in RFC821 that are optional and not widely implemented. Even some of thecommands that are implemented are not commonly used. The commands<BCLASS="emphasis.bold">HELP</B>, <BCLASS="emphasis.bold">VRFY</B>, and <BCLASS="emphasis.bold">EXPN</B>are designed more for interactive use than forthe normal machine-to-machine interaction used by SMTP. The followingexcerpt from a SMTP session shows how these odd commands work.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><BCLASS="emphasis.bold">HELP</B>214-Commands:214-    HELO    MAIL    RCPT    DATA    RSET214-    NOOP    QUIT    HELP    VRFY    EXPN214-For more info use &quot;HELP &lt;topic&gt;&quot;.214-For local information contact postmaster at this site.214 End of HELP info<BCLASS="emphasis.bold">HELP RSET</B>214-RSET214-    Resets the system.214 End of HELP info<BCLASS="emphasis.bold">VRFY &lt;jane&gt;</B>250 &lt;jane@brazil.nuts.com&gt;<BCLASS="emphasis.bold">VRFY &lt;mac&gt;</B>250 Kathy McCafferty &lt;&lt;mac&gt;&gt;<BCLASS="emphasis.bold">EXPN &lt;admin&gt;</B>250-&lt;sara@pecan.nuts.com&gt;250 David Craig &lt;&lt;david&gt;&gt;250-&lt;tyler@nuts.com&gt;</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3012"></A>The <BCLASS="emphasis.bold">HELP</B> command prints out a summary of the commands implemented onthe system. The <BCLASS="emphasis.bold">HELP RSET</B> command specifically requests informationabout the <BCLASS="emphasis.bold">RSET</B> command. Frankly, this help system isn't very helpful!</P><PCLASS="para">The <BCLASS="emphasis.bold">VRFY</B> and <BCLASS="emphasis.bold">EXPN</B>commands are more useful, but are often disabled forsecurity reasons because they provide user account information thatmight be exploited by network intruders. The <BCLASS="emphasis.bold">EXPN &lt;admin&gt;</B><ACLASS="indexterm"NAME="AUTOID-3022"></A>command asks for a listing of the email addresses in the mailing list<EMCLASS="emphasis">admin</EM>, and that is what the system provides. The <BCLASS="emphasis.bold">VRFY</B> command<ACLASS="indexterm"NAME="AUTOID-3027"></A>asks for information about an individual instead of a mailing list. Inthe case of the  <BCLASS="emphasis.bold">VRFY &lt;mac&gt;</B> command, <EMCLASS="emphasis">mac</EM> is a local useraccount and the user's account information is returned.In the case of <BCLASS="emphasis.bold">VRFY &lt;jane&gt;</B>, <EMCLASS="emphasis">jane</EM> is an alias in the<ACLASS="indexterm"NAME="AUTOID-3033"></A><ACLASS="indexterm"NAME="AUTOID-3036"></A><EMCLASS="emphasis">/etc/aliases</EM> file. The value returned is the email address for<EMCLASS="emphasis">jane</EM> found in that file. The three commands in this example areinteresting, but rarely used. SMTP depends on the other commands toget the real work done.</P><PCLASS="para">SMTP provides direct end-to-end mail delivery. This is unusual. Mostmail systems use <EMCLASS="emphasis">store and forward</EM> protocols<ACLASS="indexterm"NAME="AUTOID-3042"></A>like UUCP<ACLASS="indexterm"NAME="AUTOID-3044"></A>and X.400<ACLASS="indexterm"NAME="AUTOID-3046"></A>that move mail toward its destination one hop at a time, storing thecomplete message at each hop and then forwarding it on to the nextsystem. The message proceeds in this manner until final delivery ismade.<ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-FIG-2"TITLE="Mail delivery systems">Figure 3.3</A>illustrates both store and forwardand direct delivery mail systems. The UUCP address clearly shows thepath that the mail takes to its destination, while the SMTP mail<ACLASS="indexterm"NAME="AUTOID-3049"></A><ACLASS="indexterm"NAME="AUTOID-3052"></A>address implies direct delivery.[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] The address doesn't have anything to do with whether or not a systemis store and forward or direct delivery. It just happens that UUCPprovides an address that helps to illustrate this point.</P></BLOCKQUOTE><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-3-FIG-2">Figure 3.3: Mail delivery systems</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_0303.gif"ALT="Figure 3.3"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3060"></A>Direct delivery allows SMTP to deliver mail without relying onintermediate hosts. If the delivery fails, the local system knows itright away. It can inform the user that sent the mail or queue themail for later delivery without reliance on remote systems. Thedisadvantage of direct delivery is that it requires both systems to befully capable of handling mail. Some systems cannot handle mail,particularly small systems such as PCs or mobile systems such aslaptops.  These systems are usually shut down at the end of the dayand are frequently offline. Mail directed from a remote host failswith a &quot;cannot connect&quot; error<ACLASS="indexterm"NAME="AUTOID-3062"></A>when the local system is turned off or offline.  To handle thesecases, features in the DNS system are used to route the message to amail server in lieu of direct delivery. The mail is then moved fromthe server to the client system when the client is back online. Theprotocol most TCP/IP networks use for this task is POP.<ACLASS="indexterm"NAME="AUTOID-3064"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-3-SECT-4.2">3.4.2 Post Office Protocol</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-POST-OFFICE-PROTOCOL-POP"></A>There are two versions of POP in widespread use: POP2 and POP3. POP2 isdefined in RFC 937 and POP3 is defined in RFC 1725. POP2 uses port109 and POP3 uses port 110. These are incompatible protocols that usedifferent commands, but they perform the same basic functions. The POPprotocols verify the user's login name and password, and move the user'smail from the server to the user's local mail reader.</P><PCLASS="para">A sample POP2 session clearly illustrates how a POP protocol works.POP2 is a simple request/response protocol, and just as with SMTP, youcan type POP2 commands directly into its well-known port (109) and observetheir effect. Here's an example with the user input shown in bold type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet almond.nuts.com 109</B>Trying 172.16.12.1 ...Connected to almond.nuts.com.Escape character is '^]'.+ POP2 almond POP2 Server at Wed 30-Mar-94 3:48PM-EST<BCLASS="emphasis.bold">HELO hunt WatsWatt</B>#3  ...(From folder 'NEWMAIL')<BCLASS="emphasis.bold">READ</B>=496<BCLASS="emphasis.bold">RETR</B><EMCLASS="emphasis">{The full text of message 1}</EM><BCLASS="emphasis.bold">ACKD</B>=929<BCLASS="emphasis.bold">RETR</B><EMCLASS="emphasis">{The full text of message 2}</EM><BCLASS="emphasis.bold">ACKD</B>=624<BCLASS="emphasis.bold">RETR</B><EMCLASS="emphasis">{The full text of message 3}</EM><BCLASS="emphasis.bold">ACKD</B>=0<BCLASS="emphasis.bold">QUIT</B>+OK POP2 Server exiting (0 NEWMAIL messages left)Connection closed by foreign host.</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">HELO</B> command<ACLASS="indexterm"NAME="AUTOID-3088"></A>provides the username and password for the account of the mailbox thatis being retrieved. (This is the same username and password used tolog into the mail server.) In response to the <BCLASS="emphasis.bold">HELO</B> command the serversends a count of the number of messages in the mailbox, three (#3) inour example. The <BCLASS="emphasis.bold">READ</B> command<ACLASS="indexterm"NAME="AUTOID-3092"></A>begins reading the mail. <BCLASS="emphasis.bold">RETR</B><ACLASS="indexterm"NAME="AUTOID-3095"></A>retrieves the full text of the current message. <BCLASS="emphasis.bold">ACKD</B><ACLASS="indexterm"NAME="AUTOID-3098"></A>acknowledges receipt of the message and deletes it from the server.After each acknowledgment the server sends a count of the number ofbytes in the new message. If the byte count is zero (=0) it indicatesthat there are no more messages to be retrieved and the client endsthe session with the <BCLASS="emphasis.bold">QUIT</B> command. Simple!<ACLASS="indexterm"NAME="AUTOID-3101"></A><ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-1"TITLE="POP2 Commands">Table 3.2</A>lists the full set of POP2 commands.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-3-TAB-1">Table 3.2: POP2 Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Syntax</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Hello</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">HELO </B><CODECLASS="replaceable"><I>user password</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Identify user account</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Folder</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">FOLD </B><CODECLASS="replaceable"><I>mail-folder</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Select mail folder</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Read</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">READ </B>[<CODECLASS="replaceable"><I>n</I></CODE>]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Read mail, optionally start with message <CODECLASS="replaceable"><I>n</I></CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Retrieve</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">RETR</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Retrieve message</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Save</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">ACKS</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Acknowledge and save</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">ACKD</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Acknowledge and delete</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Failed</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">NACK</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Negative acknowledgement</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Quit</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">QUIT</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End the POP2 session</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3159"></A>The commands for POP3 are completely different from the commands usedfor POP2. <ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-2"TITLE="POP3 Commands">Table 3.3</A>shows the set of POP3 commands defined in RFC 1725.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-3-TAB-2">Table 3.3: POP3 Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">USER </B><CODECLASS="replaceable"><I>username</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user's account name</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">PASS </B><CODECLASS="replaceable"><I>password</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user's password</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">STAT</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the number of unread messages/bytes</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">RETR </B><CODECLASS="replaceable"><I>n</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Retrieve message number <CODECLASS="replaceable"><I>n</I></CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">DELE </B><CODECLASS="replaceable"><I>n</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete message number <CODECLASS="replaceable"><I>n</I></CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">LAST</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the number of the last message accessed</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">LIST</B> [<CODECLASS="replaceable"><I>n</I></CODE>]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the size of message <CODECLASS="replaceable"><I>n</I></CODE> or of all messages</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">RSET</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Undelete all messages; reset message number to 1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">TOP </B><CODECLASS="replaceable"><I>n l</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Print the headers and <CODECLASS="replaceable"><I>l</I></CODE> lines of message <CODECLASS="replaceable"><I>n</I></CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">NOOP</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Do nothing</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">QUIT</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End the POP3 session</TD></TR></TBODY></TABLE><PCLASS="para">Despite the fact that these commands are different from those used byPOP2, they can be used to perform similar functions. In the POP2example we logged into the server and read and deleted three mailmessages. Here's a similar session using POP3:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <BCLASS="emphasis.bold">telnet almond 110</B>Trying 172.16.12.1 ...Connected to almond.nuts.com.Escape character is '^]'.+OK almond POP3 Server Process 3.3(1) at Mon 15-May-95 4:48PM-EDT<BCLASS="emphasis.bold">user hunt</B>+OK User name (hunt) ok. Password, please.<BCLASS="emphasis.bold">pass Watts?Watt?</B>+OK 3 messages in folder NEWMAIL (V3.3 Rev B04)<BCLASS="emphasis.bold">stat</B>+OK 3 459<BCLASS="emphasis.bold">retr 1</B>+OK 146 octets  <ICLASS="lineannotation">The full text of message 1</I><BCLASS="emphasis.bold">dele 1</B>+OK message # 1 deleted<BCLASS="emphasis.bold">retr 2</B>+OK 155 octets  <ICLASS="lineannotation">The full text of message 2</I><BCLASS="emphasis.bold">dele 2</B>+OK message # 2 deleted<BCLASS="emphasis.bold">retr 3</B>+OK 158 octets  <ICLASS="lineannotation">The full text of message 3</I><BCLASS="emphasis.bold">dele 3</B>+OK message # 3 deleted<BCLASS="emphasis.bold">quit</B>+OK POP3 almond Server exiting (0 NEWMAIL messages left)Connection closed by foreign host.</PRE></BLOCKQUOTE></P><PCLASS="para">Naturally you don't really type these commands in yourself, butexperiencing hands-on interaction with SMTP and POP gives you a clearerunderstanding of what these programs do and why they are needed.<ACLASS="indexterm"NAME="AUTOID-3244"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-3-SECT-4.3">3.4.3 Multipurpose Internet Mail Extensions</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-MULTIPURPOSE-INTERNET-MAIL-EXTENSIONS-MIME"></A>The last email protocol on our quick tour is MIME.[9]As its name implies, <EMCLASS="emphasis">Multipurpose Internet Mail Extensions</EM> is anextension of the existing TCP/IP mail system, not a replacement forit. MIME is more concerned with what the mail system delivers then itis with the mechanics of delivery. It doesn't attempt to replace SMTPor TCP; it extends the definition of what constitutes &quot;mail.&quot;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] MIME is also an integral part of the Web and HTTP.</P></BLOCKQUOTE><PCLASS="para">The structure of the mail message carried by SMTP is defined in RFC822, <EMCLASS="emphasis">Standard for the Format of ARPA Internet Text Messages</EM>.<ACLASS="indexterm"NAME="AUTOID-3255"></A>RFC 822 defines a set of mail headers that are so widely accepted theyare used by many mail systems that do not use SMTP. This is a greatbenefit to email because it provides a common ground for mailtranslation and delivery through gateways to different mail networks.MIME extends RFC 822 into two areas not covered by the original RFC:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Support for various data types. The mail system defined by RFC 821 andRFC 822 transfers only 7-bit ASCII data. This is suitable forcarrying text data composed of US ASCII characters, but it does notsupport several languages that have richer character sets and it doesnot support binary data transfer.</P></LI><LICLASS="listitem"><PCLASS="para">Support for complex message bodies. RFC 822 does not provide adetailed description of the body of an electronic message. Itconcentrates on the mail headers.</P></LI></UL><PCLASS="para">&#13;MIME addresses these two weaknesses by defining encoding techniquesfor carrying various forms of data, and by defining a structure forthe message body that allows multiple objects<ACLASS="indexterm"NAME="AUTOID-3263"></A>to be carried in a single message. The RFC 1521, <EMCLASS="emphasis">MIME (MultipurposeInternet Mail Extensions) Part One: Mechanisms for Specifying andDescribing the Format of Internet Message Bodies</EM>, defines twoheaders that give structure to the mail message body and allow it tocarry various forms of data.  These are the <EMCLASS="emphasis">Content-Type</EM> headerand the <EMCLASS="emphasis">Content-Transfer-Encoding</EM> header.</P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-CONTENT-TYPE-HEADERS"></A><ACLASS="indexterm"NAME="TCP2-CH-3-IX-HEADERS"></A>As the name implies, the Content-Type header defines the type of databeing carried in the message. The header has a Subtype field thatrefines the definition. Many subtypes have been defined since theoriginal RFC was released. A current list of MIME types<ACLASS="indexterm"NAME="AUTOID-3274"></A>can be obtained from the Internet.[10]The original RFC defines seven initial content types<ACLASS="indexterm"NAME="AUTOID-3281"></A>and a few subtypes:<ACLASS="indexterm"NAME="AUTOID-3283"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Go to <ACLASS="systemitem.url"HREF="ftp://ftp.isi.edu/in-notes/iana/assignments/media-types">ftp://ftp.isi.edu/in-notes/iana/assignments/media-types</A> andretrieve the file <EMCLASS="emphasis">media-types</EM>.</P></BLOCKQUOTE><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">text</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3291"></A>Text data. RFC 1521 defines text subtypes <EMCLASS="emphasis">plain</EM><ACLASS="indexterm"NAME="AUTOID-3294"></A>and <EMCLASS="emphasis">richtext</EM>.<ACLASS="indexterm"NAME="AUTOID-3297"></A>Several subtypes have since been added, including <EMCLASS="emphasis">enriched</EM><ACLASS="indexterm"NAME="AUTOID-3300"></A>and <EMCLASS="emphasis">html</EM>.<ACLASS="indexterm"NAME="AUTOID-3303"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">application</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3310"></A><ACLASS="indexterm"NAME="AUTOID-3313"></A>Binary data. The primary subtype defined in RFC 1521 is<EMCLASS="emphasis">octet-stream</EM>,<ACLASS="indexterm"NAME="AUTOID-3317"></A>which indicates the data is a stream of 8-bit binary bytes. One othersubtype, <EMCLASS="emphasis">PostScript</EM>,<ACLASS="indexterm"NAME="AUTOID-3320"></A>is defined in the standard.  Since thenmore than 90 subtypes have been defined. They specify binary dataformatted for a particular application. For example, <EMCLASS="emphasis">msword</EM> isan application subtype.</P></DD><DTCLASS="term"><EMCLASS="emphasis">image</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3328"></A><ACLASS="indexterm"NAME="AUTOID-3330"></A>Still graphic images. Two subtypes are defined in RFC 1521: <EMCLASS="emphasis">jpeg</EM><ACLASS="indexterm"NAME="AUTOID-3334"></A><ACLASS="indexterm"NAME="AUTOID-3336"></A>and <EMCLASS="emphasis">gif</EM>. More than 10 additional subtypes have since been added,including widely used image data standards such as <EMCLASS="emphasis">tiff</EM>,<ACLASS="indexterm"NAME="AUTOID-3340"></A><EMCLASS="emphasis">cgm</EM>, and <EMCLASS="emphasis">g3fax</EM>.<ACLASS="indexterm"NAME="AUTOID-3344"></A><ACLASS="indexterm"NAME="AUTOID-3346"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">video</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3353"></A><ACLASS="indexterm"NAME="AUTOID-3355"></A>Moving graphic images. The initially defined subtype was <EMCLASS="emphasis">mpeg</EM>,<ACLASS="indexterm"NAME="AUTOID-3359"></A>which is a widely used standard for computer video data. A few othershave since been added, including <EMCLASS="emphasis">quicktime</EM>.<ACLASS="indexterm"NAME="AUTOID-3362"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">audio</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3369"></A>Audio data. The only subtype initially defined for audio was <EMCLASS="emphasis">basic</EM>,<ACLASS="indexterm"NAME="AUTOID-3372"></A>which means the sounds are encoded using pulse code modulation (PCM).<ACLASS="indexterm"NAME="AUTOID-3374"></A><ACLASS="indexterm"NAME="AUTOID-3376"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">multipart</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3383"></A>Data composed of multiple independent sections. A multipart messagebody is made up of several independent parts. RFC 1521 defines foursubtypes. The primary subtype is <EMCLASS="emphasis">mixed</EM>,<ACLASS="indexterm"NAME="AUTOID-3386"></A>which means that each part of the message can be data of any contenttype. Other subtypes are: <EMCLASS="emphasis">alternative</EM>,<ACLASS="indexterm"NAME="AUTOID-3389"></A>meaning that the same data is repeated in each section in differentformats; <EMCLASS="emphasis">parallel</EM>,<ACLASS="indexterm"NAME="AUTOID-3392"></A>meaning that the data in the various parts is to be viewedsimultaneously; and <EMCLASS="emphasis">digest</EM>,<ACLASS="indexterm"NAME="AUTOID-3395"></A>meaning that each section is data of the type <EMCLASS="emphasis">message</EM>.<ACLASS="indexterm"NAME="AUTOID-3398"></A>Several subtypes have since been added, including support for voicemessages (<EMCLASS="emphasis">voice-message</EM>)<ACLASS="indexterm"NAME="AUTOID-3402"></A>and <EMCLASS="emphasis">encrypted</EM> messages.<ACLASS="indexterm"NAME="AUTOID-3405"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">message</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3413"></A><ACLASS="indexterm"NAME="AUTOID-3416"></A><ACLASS="indexterm"NAME="AUTOID-3419"></A>Data that is an encapsulated mail message. RFC 1521 defines threesubtypes. The primary subtype, <EMCLASS="emphasis">rfc822</EM>,<ACLASS="indexterm"NAME="AUTOID-3423"></A>indicates that the data is a complete RFC 822 mail message. The othersubtypes, <EMCLASS="emphasis">partial</EM><ACLASS="indexterm"NAME="AUTOID-3426"></A>and <EMCLASS="emphasis">External-body</EM>,<ACLASS="indexterm"NAME="AUTOID-3429"></A>are both designed to handle large messages.  <EMCLASS="emphasis">partial</EM> allowslarge encapsulated messages to be split among multiple MIMEmessages. <EMCLASS="emphasis">External-body</EM> points to an external source for thecontents of a large message body, so that only the pointer, not themessage itself, is contained in the MIME message. Two additionalsubtypes have been defined: <EMCLASS="emphasis">news</EM><ACLASS="indexterm"NAME="AUTOID-3434"></A>for carrying network news, and<EMCLASS="emphasis">http</EM><ACLASS="indexterm"NAME="AUTOID-3437"></A>for HTTP traffic formatted to comply with MIME content typing.<ACLASS="indexterm"NAME="AUTOID-3440"></A></P></DD></DL><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-CONTENT-TRANSFER-ENCODING-HEADERS"></A>The Content-Transfer-Encoding header identifies the type of encodingused on the data. Traditional SMTP systems only forward 7-bit ASCIIdata with a line length of less than 1000 bytes. To ensure that thedata from a MIME system is forwarded throughgateways that may only support 7-bit ASCII, the data can be encoded.RFC 1521 defines six types of encoding. Some types are used toidentify the encoding inherent in the data. Only two types are actualencoding techniques defined in the RFC. The six encoding types are:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">7bit</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3450"></A><ACLASS="indexterm"NAME="AUTOID-3452"></A>US ASCII data. No encoding is performed on 7-bit ASCII data.</P></DD><DTCLASS="term"><EMCLASS="emphasis">8bit</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3459"></A><ACLASS="indexterm"NAME="AUTOID-3461"></A>Octet data. No encoding is performed. The data is binary, but thelines of data are short enough for SMTP transport; i.e., the lines arefewer than 1000 bytes long.</P></DD><DTCLASS="term"><EMCLASS="emphasis">binary</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3468"></A><ACLASS="indexterm"NAME="AUTOID-3471"></A>Binary data. No encoding is performed. The data is binary and thelines may be longer than 1000 bytes. There is no difference between<EMCLASS="emphasis">binary</EM> and <EMCLASS="emphasis">8bit</EM> data except the line length restriction;<ACLASS="indexterm"NAME="AUTOID-3475"></A>both types of data are unencoded byte (octet) streams. MIME does nothandle unencoded bitstream data.</P></DD><DTCLASS="term"><EMCLASS="emphasis">quoted-printable</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3482"></A><ACLASS="indexterm"NAME="AUTOID-3484"></A>Encoded text data. This encoding technique handles data that islargely composed of printable ASCII text. The ASCII text is sentunencoded, while bytes with a value greater than 127 or less than 33are sent encoded as strings made up of the equal sign followed by thehexadecimal value of the byte. For example: the ASCII form feedcharacter, which has the hexadecimal value of 0C, is sent as<EMCLASS="emphasis">=0C</EM>. Naturally there's more to it than this&nbsp;- for example, theliteral equal sign has to be sent as <EMCLASS="emphasis">=3D</EM>, and the newline at theend of each line is not encoded. But this is the general idea of how<EMCLASS="emphasis">quoted-printable</EM> data is sent.</P></DD><DTCLASS="term"><EMCLASS="emphasis">base64</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3495"></A><ACLASS="indexterm"NAME="AUTOID-3497"></A>Encoded binary data. This encoding technique can be used on anybyte-stream data. Three octets of data are encoded as four 6-bitcharacters, which increases the size of the file by one-third. The6-bit characters are a subset of US ASCII, chosen because they can behandled by any type of mail system. The maximum line length for<EMCLASS="emphasis">base64</EM> data is 76 characters.<ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-FIG-3"TITLE="base64 encoding">Figure 3.4</A>illustrates this 3 to 4 encoding technique.</P></DD><DTCLASS="term"><EMCLASS="emphasis">x-token</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3507"></A>Specially encoded data. It is possible for software developers todefine their own private encoding techniques.If they do so, the name of the encoding technique must begin with<EMCLASS="emphasis">X-</EM>. Doing this is strongly discouraged because it limits<ACLASS="indexterm"NAME="AUTOID-3510"></A>interoperability between mail systems.<ACLASS="indexterm"NAME="AUTOID-3514"></A><ACLASS="indexterm"NAME="AUTOID-3515"></A></P></DD></DL><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-3-FIG-3">Figure 3.4: base64 encoding</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_0304.gif"ALT="Figure 3.4"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3520"></A>The number of supported data types and encoding techniques grows as newdata formats appear and are used in message transmissions. New RFCsconstantly define new data types and encoding. Read the latest RFCs tokeep up with MIME developments.</P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-SIMPLE-MAIL-TRANSFER-PROTOCOL-SMTP-SERVICE-EXTENSIONS-TO"></A>MIME defines data types that SMTP was not designed to carry. To handlethese and other future requirements, RFC 1869, <EMCLASS="emphasis">SMTP ServiceExtensions</EM>, defines a technique for making SMTP <EMCLASS="emphasis">extensible</EM>.<ACLASS="indexterm"NAME="AUTOID-3529"></A>The RFC does not define new services for SMTP; in fact, the only serviceextensions mentioned in the RFC are defined in other RFCs. What thisRFC does define is a simple mechanism for systems to negotiate whichSMTP extensions are supported. The RFC defines a new <EMCLASS="emphasis">hello</EM><ACLASS="indexterm"NAME="AUTOID-3533"></A><ACLASS="indexterm"NAME="AUTOID-3536"></A>command (<BCLASS="emphasis.bold">EHLO</B>) and the legal responses to that command. One responseis for the receiving system to return a list of the SMTP extensions itsupports. This response allows the sending system to know whatextended services can be used, and to avoid those that are notimplemented on the remote system. SMTP implementations that supportthe <BCLASS="emphasis.bold">EHLO</B> command are called Extended SMTP (ESMTP).<ACLASS="indexterm"NAME="AUTOID-3540"></A><ACLASS="indexterm"NAME="AUTOID-3542"></A><ACLASS="indexterm"NAME="AUTOID-3544"></A></P><PCLASS="para">Several ESMTP service extensions have been defined for MIME mailers. <ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-3"TITLE="SMTP Service Extensions">Table 3.4</A>lists some of these. The table lists the <BCLASS="emphasis.bold">EHLO</B> keyword associated witheach extension, the number of the RFC that defines it, and its purpose.These service extensions are just the beginning. Undoubtedly more willbe defined to support MIME and other SMTP enhancements.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-3-TAB-3">Table 3.4: SMTP Service Extensions</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Keyword</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">RFC</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Server Extension </TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">8BITMIME</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1652</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Accept 8bit binary data</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CHUNKING</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1830</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Accept messages cut into chunks</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CHECKPOINT</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1845</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Checkpoint/restart mail transactions</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">PIPELINING</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1854</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Accept multiple commands in a single send</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">SIZE</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1870</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display maximum acceptable message size</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">DSN</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1891</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Provide delivery status notifications</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ETRN</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1985</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Accept remote queue processing requests</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ENHANCEDSTATUSCODES</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">2034</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Provide enhanced error codes</TD></TR></TBODY></TABLE><PCLASS="para">It is easy to check which extensions are supported by your server byusing the <BCLASS="emphasis.bold">EHLO</B> command. The following example is from a sendmail 8.8.5.system:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <CODECLASS="userinput"><B>telnet localhost 25</B></CODE>Trying 127.0.0.1...Connected to localhost.Escape character is '^]'.220 peanut ESMTP Sendmail 8.7.5/8.7.3; Tue, 11 Nov 1997 15:22:34 -0500<CODECLASS="userinput"><B>ehlo peanut</B></CODE>250-peanut Hello craig@localhost [127.0.0.1], pleased to meet you250-EXPN250 HELP250-8BITMIME250-SIZE250-DSN250-ETRN250-VERB250-ONEX250-XUSR<CODECLASS="userinput"><B>quit</B></CODE>221 peanut closing connectionConnection closed by foreign host.</PRE></BLOCKQUOTE></P><PCLASS="para">The sample system lists nine commands in response to the <BCLASS="emphasis.bold">EHLO</B> greeting.Two of these, <BCLASS="emphasis.bold">EXPN</B><ACLASS="indexterm"NAME="AUTOID-3601"></A><ACLASS="indexterm"NAME="AUTOID-3604"></A>and <BCLASS="emphasis.bold">HELP</B>, are standard SMTP commands that aren'timplemented on all systems (the standard commands are listed in <ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-0"TITLE="SMTP Commands">Table 3.1</A>8BITMIME, SIZE, DSN, and ETRN are ESMTP extensions, all of which aredescribed in <ACLASS="xref"HREF="ch03_04.htm#TCP2-CH-3-TAB-3"TITLE="SMTP Service Extensions">Table 3.4</A>The last three keywords in the response are VERB, ONEX, and XUSR. Allof these are specific to sendmail version 8.  None is defined in anRFC. VERB<ACLASS="indexterm"NAME="AUTOID-3610"></A>simply places the sendmail server in verbose mode. ONEX<ACLASS="indexterm"NAME="AUTOID-3612"></A>limits the session to a single message transaction.  XUSR is as yet<ACLASS="indexterm"NAME="AUTOID-3614"></A>unimplemented, but it will be equivalent to the <BCLASS="emphasis.bold">-U</B> sendmailcommand-line argument.[11]As the last three keywords indicate, the RFCs allow for private ESMTPextensions.<ACLASS="indexterm"NAME="AUTOID-3620"></A><ACLASS="indexterm"NAME="AUTOID-3623"></A><ACLASS="indexterm"NAME="AUTOID-3627"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] See <ACLASS="xref"HREF="appe_01.htm"TITLE="A sendmail Reference">Appendix E, <CITECLASS="appendix">A sendmail Reference</CITE></A>, for a list of the sendmail command-line arguments.</P></BLOCKQUOTE><PCLASS="para">The specific extensions implemented on each operating systems aredifferent. For example, on a Solaris 2.5.1 system<ACLASS="indexterm"NAME="AUTOID-3631"></A>only three keywords(EXPN, SIZE, and HELP) are displayed in response to <BCLASS="emphasis.bold">EHLO</B>. The purposeof <BCLASS="emphasis.bold">EHLO</B> is to identify these differences at the begining of the SMTPmail exchange.</P><PCLASS="para">ESMTP and MIME are important because they provide a standard way totransfer non-ASCII data through email. Users share lots of applicationspecific data that are not 7-bit ASCII. Many users depend on email asa file transfer mechanism.<ACLASS="indexterm"NAME="AUTOID-3636"></A><ACLASS="indexterm"NAME="AUTOID-3639"></A></P><PCLASS="para">SMTP, POP, and MIME are essential parts of the mail system, but otheremail protocols may also be essential in the future. The one certainty is that the network will continue to change. You needto track current developments and include helpful technologies intoyour planning. In the next section we look at the various types of TCP/IPconfiguration servers. Unlike DNS and email, configuration servers arenot used on most networks. This is changing, however. The demand for easierinstallation and improved mobility may make configuration servers partof your network's future.<ACLASS="indexterm"NAME="AUTOID-3641"></A><ACLASS="indexterm"NAME="AUTOID-3642"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_03.htm"TITLE="3.3 Domain Name Service"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.3 Domain Name Service"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.5 Configuration Servers"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">3.3 Domain Name Service</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">3.5 Configuration Servers</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>