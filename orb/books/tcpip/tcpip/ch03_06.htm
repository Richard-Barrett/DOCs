<HTML><HEAD><TITLE>[Chapter 3] 3.6 Bootstrap Protocol</TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:31:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch03_01.htm"TITLE="3. Network Services"><LINKREL="prev"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"><LINKREL="next"HREF="ch03_07.htm"TITLE="3.7 File and Print Servers"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.5 Configuration Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 3<BR>Network Services</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_07.htm"TITLE="3.7 File and Print Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.7 File and Print Servers"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-3-SECT-6">3.6 Bootstrap Protocol</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-BOOTSTRAP-PROTOCOL-BOOTP"></A>Bootstrap Protocol (BOOTP) is defined in RFCs 951 and 1532. The RFCsdescribe BOOTP as an alternative to RARP, and when BOOTP is used RARPis not needed. BOOTP, however, is a more comprehensive configurationprotocol than RARP. It provides much more configuration informationand has the potential to offer still more.  The original specificationallowed vendor extensions as a vehicle for the protocol'sevolution. RFC 1048 first formalized the definition of theseextensions, which have been updated over time and are currentlydefined in RFC 2132. BOOTP and its extensions became the basis for theDynamic Host Configuration Protocol (DHCP). (More on DHCP later.)</P><PCLASS="para">The BOOTP client broadcasts a single packet called a <EMCLASS="emphasis">BOOTREQUEST</EM><ACLASS="indexterm"NAME="AUTOID-3712"></A>packet that contains, at a minimum, the client's physical networkaddress. The client sends the broadcast using the address255.255.255.255, which is a special address called the <EMCLASS="emphasis">limited<ACLASS="indexterm"NAME="AUTOID-3715"></A>broadcast address</EM>.[14]The client waits for a response from the server. If a response is notreceived within a specified time interval, the client retransmits therequest. BOOTP uses UDP as a transport protocol and, unlike RARP, itdoes not require any special Network Access Layer protocols.<ACLASS="indexterm"NAME="AUTOID-3721"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] This address is useful because, unlike the normal broadcast address,it doesn't require the system to know the address of the network it ison.</P></BLOCKQUOTE><PCLASS="para">The server responds to the client's request with a <EMCLASS="emphasis">BOOTREPLY</EM><ACLASS="indexterm"NAME="AUTOID-3726"></A>packet. BOOTP uses two different well-known port numbers. UDP portnumber 67 is used for the server and UDP port number 68 is used for theclient. This is very unusual. Most software uses a well-known port on<ACLASS="indexterm"NAME="AUTOID-3728"></A>the server side and a randomly generated port<ACLASS="indexterm"NAME="AUTOID-3730"></A>on the client side.[15]The random port number ensures that each pair of source/destinationports identifies a unique path for exchanging information. A BOOTPclient, however, is still in the process of booting. It may not knowits IP address. Even if the client generates a source port for the<EMCLASS="emphasis">BOOTREQUEST</EM> packet, a server response that is addressed to thatport and the client's IP address won't be read by a client thatdoesn't recognize the address. Therefore, BOOTP sends the response toa specific port on all hosts. A broadcast sent to UDP port 68 is readby all hosts, even by a system that doesn't know its specificaddress. The system then determines if it is the intended recipient bychecking the physical network address embedded in the response.<ACLASS="indexterm"NAME="AUTOID-3737"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[15] How and why random source port numbers are used is described in<ACLASS="xref"HREF="ch01_01.htm"TITLE="Overview of TCP/IP">Chapter 1</A>.</P></BLOCKQUOTE><PCLASS="para">The server fills in all of the fields in the packet for which it hasdata. BOOTP can provide every essential TCP/IP configuration value.<ACLASS="xref"HREF="ch09_01.htm"TITLE="Configuring Network Servers ">Chapter 9</A> provides a tutorial on setting up a BOOTP server,as well as a complete list of all of the configuration parameters thatBOOTP can provide. In the next section we look at DHCP, which is basedon BOOTP.&#13;</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-3-SECT-6.1">3.6.1 Dynamic Host Configuration Protocol</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-3-IX-DYNAMIC-HOST-CONFIGURATION-PROTOCOL-DHCP"></A><EMCLASS="emphasis">Dynamic Host Configuration Protocol</EM> (DHCP) is defined in RFCs2131 and 2132. It's designed to be compatible with BOOTP. RFC 1534 outlinesinteractions between BOOTP clients and DHCP servers, and between DHCPclients and BOOTP servers.<ACLASS="indexterm"NAME="AUTOID-3749"></A>But interoperability problems are possible; many network administrators<ACLASS="indexterm"NAME="AUTOID-3752"></A>limit DHCP servers to DHCP clients. That's not necessary.See <ACLASS="xref"HREF="ch09_01.htm"TITLE="Configuring Network Servers ">Chapter 9</A> and <ACLASS="xref"HREF="appd_01.htm"TITLE="A dhcpd Reference">Appendix D, <CITECLASS="appendix">A dhcpd Reference</CITE></A> for information onsupporting BOOTP clients with DHCP servers.</P><PCLASS="para">DHCP uses the same UDP ports, 67 and 68, as BOOTP and the same<EMCLASS="emphasis">BOOTREQUEST</EM> and <EMCLASS="emphasis">BOOTREPLY</EM> packet format. But DHCP is morethen just an update of BOOTP. The new protocol expands the function of<ACLASS="indexterm"NAME="AUTOID-3759"></A>BOOTP in two areas:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The configuration parameters provided by a DHCP server includeeverything defined in the <EMCLASS="emphasis">Requirements for Internet Hosts</EM> RFC.DHCP provides a client with a complete set of TCP/IP configurationvalues.&#13;</P></LI><LICLASS="listitem"><PCLASS="para">DHCP permits automated allocation of IP addresses.</P></LI></UL><PCLASS="para">&#13;DHCP uses the portion of the BOOTP packet originally set aside forvendor extensions to indicate the DHCP packet type and to carry acomplete set of configuration information. DHCP calls the values inthis part of the packet <EMCLASS="emphasis">options</EM><ACLASS="indexterm"NAME="AUTOID-3770"></A>instead of <EMCLASS="emphasis">vendorextensions</EM>.  This is a more accurate description because DHCPdefines how the options are used and does not leave their definitionup to the vendors. To handle the full set of configuration values fromthe <EMCLASS="emphasis">Requirements for Internet Hosts</EM> RFC, the Options field is<ACLASS="indexterm"NAME="AUTOID-3775"></A>expanded to 312 bytes from the original 64 bytes of the BOOTP VendorExtensions field.<ACLASS="indexterm"NAME="AUTOID-3778"></A></P><PCLASS="para">You don't usually need to use this full set of configuration values.Don't get me wrong. The parameters are needed for a complete TCP/IPconfiguration. It's just that you don't need to define values forthem. Default values<ACLASS="indexterm"NAME="AUTOID-3781"></A>are provided in most TCP/IP implementations, and the defaults onlyneed to be changed in special circumstances.  Frankly, you don't needmost of the parameters defined by BOOTP, let alone any additionalparameters. The expanded configuration parameters of DHCP make it amore complete protocol than BOOTP, but they are of only marginalvalue.</P><PCLASS="para">For most network administrators, automatic allocation of IP addresses isa more interesting feature. DHCP allows addresses to be assigned in<ACLASS="indexterm"NAME="AUTOID-3785"></A>three ways:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">Manual allocation</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3795"></A>The network administrator keeps complete control over addresses byspecifically assigning them to clients. This is exactly the same waythat addresses are handled under BOOTP.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Automatic allocation</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3804"></A>The DHCP server permanently assigns an address from a pool ofaddresses. The administrator is not involved in the details ofassigning a client an address.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Dynamic allocation</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3813"></A>The server assigns an address to a DHCP client for a limited period oftime. The limited life of the address is called a lease.<ACLASS="indexterm"NAME="AUTOID-3816"></A>The client can return the address to the server at any time, but mustrequest an extension from the server to retain the address longer thanthe time permitted. The server automatically reclaims the addressafter the lease expires if the client has not requested an extension.</P></DD></DL><PCLASS="para">Dynamic allocation is useful in a large distributed network wheremany systems are being added and deleted. Unused addresses are returnedto the pool of addresses without relying on users or system administratorsto take action to return them. Addresses are only used when and wherethey're needed. Dynamic allocation allows a network to make themaximum use of a limited set of addresses. It is particularly well-suited to mobile systems<ACLASS="indexterm"NAME="AUTOID-3819"></A>that move from subnet to subnet<ACLASS="indexterm"NAME="AUTOID-3821"></A>and therefore must be constantly reassigned addresses appropriate fortheir current network location.</P><PCLASS="para">Dynamic address allocation does not work for every system. Nameservers, email servers, login hosts and other shared systems arealways online, and they are not mobile. These systems are accessed byname, so a shared system's domain name must resolve to the correctaddress. Shared systems are manually allocated permanent, fixedaddresses.</P><PCLASS="para">Dynamic address assignment has major repercussions for DNS. DNS isrequired to map hostnames to IP addresses. It cannot perform this jobif IP addresses are constantly changing and DNS is not informed of thechanges. To make dynamic address assignment work for all types ofsystems, we need a new DNS that can be dynamically updated by the DHCPserver. The IETF is currently working on a standard for <EMCLASS="emphasis">Dynamic DNS</EM>.<ACLASS="indexterm"NAME="AUTOID-3827"></A>When fully operational, it will help make dynamicaddresses available to systems that provide services and tothose that use them.</P><PCLASS="para">Given the nature of dynamic addressing, most sites assign permanentfixed addresses to shared servers. This happens through traditionalsystem administration and is not handled by DHCP. In effect, theadministrator of the shared server is given an address and putsthat address in the shared server's configuration. Using DHCP for somesystems doesn't mean it must be used for all systems.</P><PCLASS="para">Many DHCP servers can support BOOTP clients. However, a DHCP client isneeded to take full advantage of the services offered by DHCP. BOOTPclients do not understand dynamic address leases. They do not knowthat an address can time out<ACLASS="indexterm"NAME="AUTOID-3831"></A>and that it must be renewed. BOOTP clients must be manually orautomatically assigned permanent address.  True dynamic addressassignment is limited to DHCP clients.</P><PCLASS="para">Therefore, most sites that use DHCP have a mixture of:<ACLASS="indexterm"NAME="AUTOID-3835"></A></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Permanent addresses assigned to systems that can't use DHCP or BOOTP</P></LI><LICLASS="listitem"><PCLASS="para">Manual addresses assigned by DHCP to BOOTP clients</P></LI><LICLASS="listitem"><PCLASS="para">Dynamic addresses assigned to all DHCP clients</P></LI></UL><PCLASS="para">We conclude this chapter with a discussion of file and print servers.<ACLASS="indexterm"NAME="AUTOID-3846"></A><ACLASS="indexterm"NAME="AUTOID-3847"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_05.htm"TITLE="3.5 Configuration Servers"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.5 Configuration Servers"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_07.htm"TITLE="3.7 File and Print Servers"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.7 File and Print Servers"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">3.5 Configuration Servers</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">3.7 File and Print Servers</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>