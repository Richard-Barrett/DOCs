<HTML><HEAD><TITLE>[Chapter 5] 5.4 The Internet Daemon </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:33:42Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch05_01.htm"TITLE="5. Basic Configuration "><LINKREL="prev"HREF="ch05_03.htm"TITLE="5.3 The BSD Kernel Configuration File "><LINKREL="next"HREF="ch05_05.htm"TITLE="5.5 Summary "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 The BSD Kernel Configuration File "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.3 The BSD Kernel Configuration File "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 5<BR>Basic Configuration </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_05.htm"TITLE="5.5 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.5 Summary "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-5-SECT-4">5.4 The Internet Daemon </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-5-IX-INTERNET-DAEMON-INETD"></A><ACLASS="indexterm"NAME="TCP2-CH-5-IX-INETD"></A>The kernel configuration brings the basic transport and IP datagramservices of TCP/IP into UNIX. But there is much more to the TCP/IPsuite than just the basic services. How are these other protocolsincluded in the UNIX configuration?</P><PCLASS="para">Some protocols are explicitly started by including them in the bootfiles. This technique is used, for example, to start the Routing<ACLASS="indexterm"NAME="AUTOID-5505"></A>Information Protocol (RIP) and the Domain Name Service (DNS).<ACLASS="indexterm"NAME="AUTOID-5508"></A>The daemons<ACLASS="indexterm"NAME="AUTOID-5511"></A>that service these protocols, <BCLASS="emphasis.bold">routed</B><ACLASS="indexterm"NAME="AUTOID-5514"></A><ACLASS="indexterm"NAME="AUTOID-5516"></A>and <BCLASS="emphasis.bold">named</B> respectively,are run from a startup file such as <EMCLASS="emphasis">/etc/rc.d/rc.inet2</EM> on a Linuxsystem or <EMCLASS="emphasis">/etc/init.d/inetsvc</EM> and <EMCLASS="emphasis">/etc/init.d/inetinit</EM>on a Solaris system.[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] Your system may not use these startup files, but startup files are usuallylocated under the <EMCLASS="emphasis">/etc</EM> directory and often have names that contain<EMCLASS="emphasis">rc</EM> or <EMCLASS="emphasis">init</EM>.</P></BLOCKQUOTE><PCLASS="para">Many other network daemons are not started individually. These daemonsare started by a server that listens for network service requests andstarts the appropriate daemon to process the request. This server iscalled the <EMCLASS="emphasis">internet daemon.</EM></P><PCLASS="para">The internet daemon&nbsp;- <BCLASS="emphasis.bold">inetd</B> (pronounced &quot;i net d&quot;)&nbsp;- is started atboot time from an initialization file such as <EMCLASS="emphasis">/etc/rc.d/rc.inet2</EM>.When it is started, <BCLASS="emphasis.bold">inetd</B> reads its configuration from the<EMCLASS="emphasis">/etc/inetd.conf</EM> file. This file contains the names of theservices that <BCLASS="emphasis.bold">inetd</B> listens for and starts. You can add or delete services by making changes to the <EMCLASS="emphasis">inetd.conf</EM> file.<ACLASS="indexterm"NAME="AUTOID-5536"></A></P><PCLASS="para">An example of a file entry is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ftp  stream  tcp  nowait  root  /usr/sbin/in.ftpd   in.ftpd</PRE></BLOCKQUOTE></P><PCLASS="para">The fields in the <EMCLASS="emphasis">inetd.conf</EM> entry are, from left to right:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">name</EM></DT><DDCLASS="listitem"><PCLASS="para">The name of a service, as listed in the <EMCLASS="emphasis">/etc/services</EM> file.<ACLASS="indexterm"NAME="AUTOID-5550"></A><ACLASS="indexterm"NAME="AUTOID-5553"></A>In the sample entry, the value in this field is <CODECLASS="literal">ftp</CODE>.</P></DD><DTCLASS="term"><EMCLASS="emphasis">type</EM></DT><DDCLASS="listitem"><PCLASS="para">The type of data delivery service used, also called <EMCLASS="emphasis">socket type</EM>.<ACLASS="indexterm"NAME="AUTOID-5562"></A>The commonly used socket types are:<DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">stream</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5571"></A>The stream delivery service provided by TCP; i.e., TCP byte stream.[9]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] Here the reference is to TCP/IP sockets and TCP streams&nbsp;- not to AT&amp;Tstreams I/O or BSD socket I/O.</P></BLOCKQUOTE></DD><DTCLASS="term"><EMCLASS="emphasis">dgram</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5581"></A>The packet (datagram) delivery service provided by UDP</P></DD><DTCLASS="term"><EMCLASS="emphasis">raw</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5588"></A>Direct IP datagram service</P></DD></DL>The sample shows that FTP uses a stream socket.</P></DD><DTCLASS="term"><EMCLASS="emphasis">protocol</EM></DT><DDCLASS="listitem"><PCLASS="para">This is the name of a protocol, as given in the <EMCLASS="emphasis">/etc/protocols</EM><ACLASS="indexterm"NAME="AUTOID-5596"></A><ACLASS="indexterm"NAME="AUTOID-5599"></A>file. Its value is usually either &quot;tcp&quot; or &quot;udp.&quot; The FTPprotocol uses TCP as its transport layer protocol, so the sample entrycontains <CODECLASS="literal">tcp</CODE> in this field.</P></DD><DTCLASS="term"><EMCLASS="emphasis">wait-status</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5607"></A>The value for this field is either &quot;wait&quot; or &quot;nowait.&quot;Generally, but not always, datagram type servers require &quot;wait,&quot;and stream type servers allow &quot;nowait.&quot; If the status is&quot;wait,&quot; <BCLASS="emphasis.bold">inetd</B> must wait for the server to release the socketbefore it begins to listen for more requests on that socket. If thestatus is &quot;nowait,&quot; <BCLASS="emphasis.bold">inetd</B> can immediately begin to listen formore connection requests on the socket. Servers with&quot;nowait&quot; status use sockets other than the connection request socket forprocessing; i.e., they use dynamically allocated sockets.</P></DD><DTCLASS="term"><EMCLASS="emphasis">uid</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5616"></A>The uid is the username under which the server runs. This can be any valid username, but it is normally <EMCLASS="emphasis">root</EM>.<ACLASS="indexterm"NAME="AUTOID-5619"></A>There are two common exceptions. The <BCLASS="emphasis.bold">finger</B><ACLASS="indexterm"NAME="AUTOID-5623"></A>service often runs as the user <EMCLASS="emphasis">nobody</EM><ACLASS="indexterm"NAME="AUTOID-5627"></A><ACLASS="indexterm"NAME="AUTOID-5629"></A>or <EMCLASS="emphasis">daemon</EM> for securityreasons, and the <BCLASS="emphasis.bold">uucp</B> service<ACLASS="indexterm"NAME="AUTOID-5634"></A>is sometimes run as the user<EMCLASS="emphasis">uucp</EM> to save space in the system's accounting files.</P></DD><DTCLASS="term"><EMCLASS="emphasis">server</EM></DT><DDCLASS="listitem"><PCLASS="para">This is the full pathname of the server program<ACLASS="indexterm"NAME="AUTOID-5642"></A>started by<BCLASS="emphasis.bold">inetd</B>. Because our example is from a Solaris system, the path is<EMCLASS="emphasis">/usr/sbin/in.ftpd</EM>. On your system the path may be different.It is more efficient for <BCLASS="emphasis.bold">inetd</B> to provide some small servicesdirectly than it is for <BCLASS="emphasis.bold">inetd</B> to start separate servers for thesefunctions. For these small services, the value of the serverfield is the keyword &quot;internal,&quot;<ACLASS="indexterm"NAME="AUTOID-5649"></A>which means that this service is aninternal <BCLASS="emphasis.bold">inetd</B> service.</P></DD><DTCLASS="term"><EMCLASS="emphasis">arguments</EM></DT><DDCLASS="listitem"><PCLASS="para">These are any command-line arguments that should be passed to the serverprogram when it is invoked. This list always starts with <CODECLASS="literal">argv[0]</CODE>(the name of the program being executed).The program's manpage documents the valid command-line arguments for each program. In the example only <CODECLASS="literal">in.ftpd</CODE>,the server's name, is provided.</P></DD></DL><PCLASS="para">There are a few situations in which you need to modify the<EMCLASS="emphasis">inetd.conf</EM> file. For example, you may wish to disable aservice. The default configuration provides a full array of servers.Not all of them are required on every system, and for security reasons youmay want to disable non-essential services on some computers. To disablea service, place a <CODECLASS="literal">#</CODE><ACLASS="indexterm"NAME="AUTOID-5662"></A><ACLASS="indexterm"NAME="AUTOID-5664"></A><ACLASS="indexterm"NAME="AUTOID-5666"></A><ACLASS="indexterm"NAME="AUTOID-5668"></A>at the beginning of its entry (which turnsthe line into a comment) and pass a hang-up signal to the <BCLASS="emphasis.bold">inetd</B>server. When <BCLASS="emphasis.bold">inetd</B> receives a hang-up signal, it re-reads theconfiguration file and the new configuration takes effect immediately.</P><PCLASS="para">You may also need to add new services. We'll see some examples of thatin later chapters. Let's look in detail at an example of restoringa service that has been previously disabled. We'll begin by looking atthe contents of an <EMCLASS="emphasis">/etc/inetd.conf</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># @(#)inetd.conf 1.17 88/02/07 SMIftp     stream  tcp  nowait  root  /usr/sbin/in.ftpd    in.ftpdtelnet  stream  tcp  nowait  root  /usr/sbin/in.telnetd in.telnetdshell   stream  tcp  nowait  root  /usr/sbin/in.rshd    in.rshdlogin   stream  tcp  nowait  root  /usr/sbin/in.rlogind in.rlogindexec    stream  tcp  nowait  root  /usr/sbin/in.rexecd  in.rexecdfinger  stream  tcp  nowait  root  /usr/sbin/in.fingerd in.fingerd#tftp dgram udp wait root /usr/sbin/in.tftpd in.tftpd -s /tftpbootcomsat  dgram   udp  wait    root  /usr/sbin/in.comsat  in.comsattalk    dgram   udp  wait    root  /usr/sbin/in.talkd   in.talkdname    dgram   udp  wait    root  /usr/sbin/in.tnamed  in.tnameddaytime stream  tcp  nowait  root    internaltime    stream  tcp  nowait  root    internalecho    dgram   udp  wait    root    internaldiscard dgram   udp  wait    root    internaltime    dgram   udp  wait    root    internal</PRE></BLOCKQUOTE></P><PCLASS="para">This part of the file shows several standard TCP/IP services. One ofthese, <BCLASS="emphasis.bold">tftp</B>, is commented out. The TFTP protocol<ACLASS="indexterm"NAME="AUTOID-5678"></A>is a special version of FTP that allows file transfers withoutusername/password verification. Because of this, it is a possible<ACLASS="indexterm"NAME="AUTOID-5680"></A>security hole and is often disabled in the <EMCLASS="emphasis">inetd.conf</EM> file.</P><PCLASS="para">As an example of modifying the <EMCLASS="emphasis">inetd.conf</EM> file, we'll reconfigurethe system to provide <BCLASS="emphasis.bold">tftp</B> service, which is sometimes necessary forsupporting diskless devices. First, use your favorite editor to removethe comment (#) from the <BCLASS="emphasis.bold">tftp</B> entry in <EMCLASS="emphasis">inetd.conf</EM>. (Theexample uses sed, everyone's favorite editor!) Then find out theprocess ID for <BCLASS="emphasis.bold">inetd</B> and pass it the SIGHUP signal. The followingsteps show how this is done on <EMCLASS="emphasis">peanut</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>cd /etc</B></CODE># <CODECLASS="userinput"><B>mv inetd.conf inetd.conf.org</B></CODE># <CODECLASS="userinput"><B>cat inetd.conf.org | sed s/#tftp/tftp/ &gt; inetd.conf</B></CODE># <CODECLASS="userinput"><B>ps -acx | grep inetd</B></CODE>  144 ?  I     0:12 inetd# <CODECLASS="userinput"><B>kill -HUP 144</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">In some situations, you may also need to modify the pathname of aserver or the arguments passed to a particular server when it isinvoked. For example, look again at the <BCLASS="emphasis.bold">tftp</B> entry. This linecontains command-line arguments that are passed to the <BCLASS="emphasis.bold">tftp</B>server when it is started. The <BCLASS="emphasis.bold">-s /tftpboot</B> option addressesthe most obvious <BCLASS="emphasis.bold">tftp</B> security hole. It prevents <BCLASS="emphasis.bold">tftp</B>users from retrieving files that are not located in the directoryspecified after the <BCLASS="emphasis.bold">-s</B> option. If you want to use anotherdirectory for <BCLASS="emphasis.bold">tftp</B>, you must change the <EMCLASS="emphasis">inetd.conf</EM> file.The only command-line arguments passed to servers started by<BCLASS="emphasis.bold">inetd</B> are those defined in the <EMCLASS="emphasis">inetd.conf</EM> file.</P><PCLASS="para">Security is one of the most important reasons for modifying the<EMCLASS="emphasis">inetd.conf</EM> file. <EMCLASS="emphasis">inetd.conf</EM> is used to implement accesscontrol through the wrapper program <BCLASS="emphasis.bold">tcpd</B>.<ACLASS="indexterm"NAME="AUTOID-5713"></A>The wrapper programreplaces the server program in the server field of the <EMCLASS="emphasis">inetd.conf</EM>entry. Then when <BCLASS="emphasis.bold">inetd</B> hears a connection request on the port, itstarts <BCLASS="emphasis.bold">tcpd</B> instead of the application server. <BCLASS="emphasis.bold">tcpd</B> can thenenforce extra security before it starts the application server. How touse the wrapper program for access control is covered in <ACLASS="xref"HREF="ch12_01.htm"TITLE="Network Security ">Chapter 12</A>.<ACLASS="indexterm"NAME="AUTOID-5721"></A><ACLASS="indexterm"NAME="AUTOID-5722"></A></P></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 The BSD Kernel Configuration File "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.3 The BSD Kernel Configuration File "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_05.htm"TITLE="5.5 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.5 Summary "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">5.3 The BSD Kernel Configuration File </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">5.5 Summary </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>