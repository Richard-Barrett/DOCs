<HTML><HEAD><TITLE>[Chapter 6] 6.2 TCP/IP Over a Serial Line </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:34:29Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Configuring the Interface "><LINKREL="prev"HREF="ch06_01.htm"TITLE="6.1 The ifconfig Command "><LINKREL="next"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_01.htm"TITLE="6.1 The ifconfig Command "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.1 The ifconfig Command "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Configuring the Interface </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.3 Installing PPP "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-6-SECT-2">6.2 TCP/IP Over a Serial Line </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-TCP-IP-PROTOCOL-OVER-A-SERIAL-LINE"></A>TCP/IP runs over a wide variety of physical media. The media can beEthernet cables, as in your local Ethernet, or telephone circuits, asin a wide area network. In the first half of this chapter, we used<BCLASS="emphasis.bold">ifconfig</B> to configure a local Ethernet interface. In thissection, we use other commands to configure a network interface to use atelephone circuit.</P><PCLASS="para">Almost all data communication takes place via serial interfaces.<ACLASS="indexterm"NAME="AUTOID-6413"></A>A serial interface is just an interface that sends the data as a seriesof bits over a single wire, as opposed to a parallel interface thatsends the data bits in parallel over several wires simultaneously.This description of a serial interface would fit almost any communicationsinterface (including Ethernet itself), but the term is usually applied toan interface that connects to a telephone circuit via a modem or similardevice. Likewise, a telephone circuit is often called a serial line.</P><PCLASS="para">In the TCP/IP world, serial lines are used to create wide area networks<ACLASS="indexterm"NAME="AUTOID-6417"></A>(WANs). Unfortunately, TCP/IP has not always had a standardphysical layer protocol for serial lines. Because of the lack ofa standard, network designers were forced to use a single brand ofrouters within their WANs to ensure successful physical layercommunication. The growth of TCP/IP WANs led to a stronginterest in standardizing serial-line communications to provide vendorindependence.</P><PCLASS="para">Other forces that increased interest in serial line communications werethe advent of small affordable systems that run TCP/IP and the advent ofhigh-speed, dial-up modems<ACLASS="indexterm"NAME="AUTOID-6420"></A>that provide &quot;reasonable&quot; TCP/IP performance.When the ARPANET<ACLASS="indexterm"NAME="AUTOID-6423"></A>was formed, computers were very expensive and dial-upmodems were very slow. At that time, if you could afford a computer, youcould afford a leased telephone line. In recent years, however, it hasbecome possible to own a UNIX system at home. In this new environment,there is an increasing demand for services that allow TCP/IP access overlow-cost, dial-up serial lines.</P><PCLASS="para">These two forces&nbsp;- the need for standardized wide area communicationsand the need for dial-up TCP/IP access&nbsp;- have led to the creation of twoserial-line protocols: Serial Line IP (SLIP) and Point-to-Point Protocol(PPP).[7]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] Dial-up modems are usually asynchronous. Both PPP and SLIP supportasynchronous, dial-up service as well as synchronous leased-line service.</P></BLOCKQUOTE><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-2.1">6.2.1 The Serial Protocols </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-SERIAL-LINE-IP-SLIP"></A>Serial Line IP was created first. It is a minimal protocol thatallows isolated hosts to link via TCP/IP over the telephone network.The SLIP protocol defines a simple mechanism for framing datagramsfor transmission across serial lines. SLIP sends the datagram acrossthe serial line as a series of bytes, and it uses special characters tomark when a series of bytes should be grouped together as a datagram.SLIP defines two special characters for this purpose:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The SLIP END character,<ACLASS="indexterm"NAME="AUTOID-6436"></A>a single byte with the decimalvalue 192, is the character that marks the end of a datagram.<ACLASS="indexterm"NAME="AUTOID-6438"></A>When the receiving SLIP encounters the END character, it knows that it has acomplete datagram that can be sent up to IP.</P></LI><LICLASS="listitem"><PCLASS="para">The SLIP ESC character,<ACLASS="indexterm"NAME="AUTOID-6443"></A>a single byte with the decimalvalue of 219, is used to &quot;escape&quot; the SLIP control characters.If the sending SLIP encounters a byte value equivalent to either aSLIP END character or a SLIP ESC character in the datagramit is sending, it converts that character to a sequence of two characters.The two-character sequences are ESC 220 for the END character,and ESC 221 for the ESC character itself.[8]When the receiving SLIP encounters these two-byte sequences, itconverts them back to single-byte values. This procedure prevents thereceiving SLIP from incorrectly interpreting a data byte as the end ofthe datagram.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] Here ESC refers to the SLIP escape character, not the ASCIIescape character.</P></BLOCKQUOTE></LI></UL><PCLASS="para">SLIP is described in RFC 1055, <EMCLASS="emphasis">A Nonstandard for Transmission of IPDatagrams Over Serial Lines: SLIP</EM>. As the name of the RFC makesclear, SLIP is not an Internet standard. The RFC does not propose astandard; it documents an existing protocol. The RFC identifies thedeficiencies in SLIP, which fall into twocategories:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The SLIP protocol does not define any link control information that could be used to dynamically control the characteristics of aconnection. Therefore, SLIP systems must assume certain linkcharacteristics. Because of this limitation, SLIP can only be used whenboth hosts know each other's address, and only when IP datagrams arebeing transmitted.</P></LI><LICLASS="listitem"><PCLASS="para">SLIP does not compensate for noisy, low-speed telephone lines. Theprotocol does not provide error correction<ACLASS="indexterm"NAME="AUTOID-6454"></A><ACLASS="indexterm"NAME="AUTOID-6457"></A>or data compression.<ACLASS="indexterm"NAME="AUTOID-6459"></A></P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-POINT-TO-POINT-PROTOCOL-PPP"></A>To address SLIP's weaknesses, Point-to-Point Protocol (PPP) was developedas an Internet standard. At this writing, there are several RFCs thatdocument Point-to-Point Protocol.[9]Two key documents are: RFC 1548, <EMCLASS="emphasis">The Point-to-Point Protocol (PPP)</EM>,and RFC 1172, <EMCLASS="emphasis">The Point-to-Point Protocol (PPP) Initial ConfigurationOptions</EM>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] If you want to make sure you have the very latest version of astandard, obtain the latest list of RFCs as described in <ACLASS="xref"HREF="ch13_01.htm"TITLE="Internet Information Resources ">Chapter 13, <CITECLASS="chapter">Internet Information Resources </CITE></A>.</P></BLOCKQUOTE><PCLASS="para">PPP addresses the weaknesses of SLIP with a three-layered protocol:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">Data Link Layer Protocol</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6475"></A>The Data Link Layer Protocol used by PPP is a slightly modified versionof High-level Data Link Control (HDLC).<ACLASS="indexterm"NAME="AUTOID-6478"></A>PPP modifies HDLC by adding aProtocol fieldthat allows PPP to pass traffic for multiple Network Layer protocols.HDLC is an international standardprotocol for reliably sending data over synchronous, serialcommunications lines.PPP also uses a proposed international standard for transmitting HDLCover asynchronous lines; so PPP can guarantee reliable delivery overany type of serial line.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Link Control Protocol</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6485"></A><ACLASS="indexterm"NAME="AUTOID-6487"></A>The Link Control Protocol (LCP) providescontrol information for the serial link. It is used to establish theconnection, negotiate configuration parameters, check link quality, andclose the connection. LCP was developed specifically for PPP.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Network Control protocols</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6494"></A>The Network Control protocols are individual protocols that provideconfiguration and control information for the Network Layer protocols.Remember, PPP is designed to pass data for a wide variety of networkprotocols. NCP allows PPP to be customized to do just that. Eachnetwork protocol (DECNET, IP, OSI, etc.) has its own Network Control protocol. The Network Control protocol defined in RFCs 1331 and 1332 is the <ACLASS="indexterm"NAME="AUTOID-6496"></A><ACLASS="indexterm"NAME="AUTOID-6498"></A>Internet Control Protocol (IPCP), which supports Internet Protocol.<ACLASS="indexterm"NAME="AUTOID-6500"></A></P></DD></DL></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-2.2">6.2.2 Choosing a Serial Protocol </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6504"></A>Point-to-Point Protocol (PPP) is the best TCP/IP serial protocol.PPP is preferred because it is an Internet standard, which ensures<ACLASS="indexterm"NAME="AUTOID-6508"></A>interoperability between systems from a wide variety of vendors.It has more features than SLIP, and is more robust.These benefits make PPP the best choice as a non-proprietary protocolfor connecting routers over serial lines and for connecting in remotecomputers via dial-up lines.</P><PCLASS="para">However, sometimes your choice is limited. SLIP was the first widely available serial protocol for IP, and some olderdial-up servers support SLIP only. PPP and SLIP do not interoperate;they are completely different protocols. So if your terminal serversonly have SLIP, the remote hosts that connect through these servers mustalso have SLIP. Because of its installed base, SLIP will continue tobe used for the foreseeable future.</P><PCLASS="para">So which protocol should you use? When you are designing a newserial-line service, use PPP. However, you may be forced to also support SLIP.SLIP is sometimes the only serial protocol available for a specificpiece of hardware. Simply put, use PPP where you can and SLIP whereyou must.</P><PCLASS="para">Linux systems include both SLIP and PPP. However, on some other UNIX systems such as Solaris, PPP is included and SLIP is not.The only time you should consider using SLIP iswhen it comes as part of the operating system. Avoid downloading SLIPsource code and porting it on to your system. Use PPP instead. If youhave old terminal servers that support only SLIP and new computersthat support only PPP, it's time to upgrade the old terminal server.<ACLASS="indexterm"NAME="AUTOID-6514"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_01.htm"TITLE="6.1 The ifconfig Command "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.1 The ifconfig Command "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.3 Installing PPP "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.1 The ifconfig Command </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.3 Installing PPP </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>