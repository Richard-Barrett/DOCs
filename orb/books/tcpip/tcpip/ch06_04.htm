<HTML><HEAD><TITLE>[Chapter 6] 6.4 Installing SLIP </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:35:02Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Configuring the Interface "><LINKREL="prev"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "><LINKREL="next"HREF="ch06_05.htm"TITLE="6.5 Summary "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.3 Installing PPP "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Configuring the Interface </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_05.htm"TITLE="6.5 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.5 Summary "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-6-SECT-4">6.4 Installing SLIP </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-SERIAL-LINE-IP-SLIP-INSTALLING"></A>Installing Serial Line IP (SLIP) is very similar to installing PPP. Aswith PPP, support for SLIP is usually installed in the kernel&nbsp;- but thatis only part of the configuration. The SLIP network interface alsomust be configured.</P><PCLASS="para">PPP and SLIP configuration is complicated by the fact that these serialline protocols support both dedicated and dial-up connections. For ourLinux sample system, this means that two different commands are used toconfigure a SLIP interface depending on whether it is a dedicated or adial-up connection. In this section we discuss both, beginning withthe configuration command for dedicated connections.<ACLASS="indexterm"NAME="AUTOID-7106"></A></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-4.1">6.4.1 slattach </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-SLATTACH-COMMAND"></A>The <BCLASS="emphasis.bold">slattach</B> command &quot;attaches&quot; the SLIP protocol to a specificserial interface. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>slattach /dev/tty03 &amp;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This command tells the SLIP protocol to use <EMCLASS="emphasis">/dev/tty03</EM> as its serialinterface. The <BCLASS="emphasis.bold">slattach</B> command can optionally set someconfiguration parameters for the serial interface. The syntax of<BCLASS="emphasis.bold">slattach</B> on a Slackware 96 Linux system is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>slattach</B></CODE> [<CODECLASS="userinput"><B>-h</B></CODE> | <CODECLASS="userinput"><B>-c</B></CODE> | <CODECLASS="userinput"><B>-6</B></CODE>] <CODECLASS="replaceable"><I>ttyname</I></CODE> [<CODECLASS="replaceable"><I>baudrate</I></CODE>]</PRE></BLOCKQUOTE></P><PCLASS="para">The three options, <BCLASS="emphasis.bold">-h</B>, <BCLASS="emphasis.bold">-c</B>, and <BCLASS="emphasis.bold">-6</B>, select thetype of SLIP protocol used. <BCLASS="emphasis.bold">-h</B> selects uncompressed SLIP withfull headers. CSLIP with Van Jacobsen header compression<ACLASS="indexterm"NAME="AUTOID-7134"></A>is selectedwith <BCLASS="emphasis.bold">-c</B>. Use <BCLASS="emphasis.bold">-6</B> to select six-bit SLIP. If none of theseoptions is selected, the <BCLASS="emphasis.bold">slattach</B> command defaults to CSLIP.</P><PCLASS="para">The <CODECLASS="replaceable"><I>baudrate</I></CODE> argument sets the interface's transmission speed.Set the speed by entering a number that corresponds to the bit ratethat is used to transmit and receive data on this line, e.g., 56000.Both ends of the line must set exactly the same bit rate. This may bedetermined by the characteristics of the leased line, or by thehardware interfaces for a direct cable connection. Regardless, thetransmission speed is a physical characteristic limited by theequipment on the line. A default transmission speed of 9600 bits persecond is used if no <CODECLASS="replaceable"><I>baudrate</I></CODE> value is entered on the commandline.</P><PCLASS="para">The <CODECLASS="replaceable"><I>ttyname</I></CODE> is the name of the serial interface attached to theleased line or direct cable connection. The serial interfaces areidentified by the system during the boot. <BCLASS="emphasis.bold">dmesg</B> and <BCLASS="emphasis.bold">grep</B>displays the interface names on a Slackware 96 Linux system:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&gt; <BCLASS="emphasis.bold">dmesg | grep tty</B>tty00 at 0x03f8 (irq = 4) is a 16550Atty01 at 0x02f8 (irq = 3) is a 16550Atty03 at 0x02e8 (irq = 3) is a 16550A</PRE></BLOCKQUOTE></P><PCLASS="para">This list of serial interface names is from a PC running Linux. Assume weconnect the direct connection cable to tty01, which is equivalent tothe MS-DOS interface COM2. In that case, use tty01 as the <CODECLASS="replaceable"><I>ttyname</I></CODE>value on the <BCLASS="emphasis.bold">slattach</B> command. Notice that the <BCLASS="emphasis.bold">slattach</B>command identifies the physical serial device (<EMCLASS="emphasis">/dev/tty01</EM>)instead of the IP network interface (<EMCLASS="emphasis">sl0</EM>). That is because theSLIP IP interface does not exist until after <BCLASS="emphasis.bold">slattach</B> executes.The first <BCLASS="emphasis.bold">slattach</B> command creates the sl0 interface, the secondcreates the sl1 interface, and so on. <BCLASS="emphasis.bold">slattach</B> attaches a physicalinterface to the logical IP network.</P><PCLASS="para">Like <BCLASS="emphasis.bold">ifconfig</B>, the <BCLASS="emphasis.bold">slattach</B> command is stored in a startupfile. It configures the serial interface when the system boots,and the interface remains dedicated to SLIP use unless some action istaken to detach it, i.e., the <BCLASS="emphasis.bold">slattach</B> process is killed. On aSlackware 96 Linux system the following commands might be added to the<EMCLASS="emphasis">/etc/rc.d/rc.inet1</EM> file to configure a dedicated SLIP connection:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">slattach -c /dev/tty01 19200 &amp;ifconfig sl0 macadamia pointopoint cashewroute add default cashew 1</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">pppd</B> dedicated line configuration requires only one command.The <BCLASS="emphasis.bold">slattach</B> command needs an <BCLASS="emphasis.bold">ifconfig</B> command<ACLASS="indexterm"NAME="AUTOID-7169"></A>and a<ACLASS="indexterm"NAME="AUTOID-7171"></A><BCLASS="emphasis.bold">route</B> command to complete the configuration. The <BCLASS="emphasis.bold">route</B>command is explained in <ACLASS="xref"HREF="ch07_01.htm"TITLE="Configuring Routing ">Chapter 7, <CITECLASS="chapter">Configuring Routing </CITE></A>.</P><PCLASS="para">The <BCLASS="emphasis.bold">slattach</B> command declares that the physical serial device<EMCLASS="emphasis">/dev/tty01</EM> is the SLIP network interface. In essence this creates theinterface sl0. The <BCLASS="emphasis.bold">ifconfig</B> command configures the newly createdSLIP interface. It sets the address of the interface to the IP addressof host <EMCLASS="emphasis">macadamia</EM>. Further, it says that the destination address ofthis interface is the IP address of the host <EMCLASS="emphasis">cashew</EM> at the far endof the dedicated SLIP link. The IP addresses for both <EMCLASS="emphasis">macadamia</EM> and<EMCLASS="emphasis">cashew</EM> should be in the local hosts file before this <BCLASS="emphasis.bold">ifconfig</B>command is executed.</P><PCLASS="para">The examples in this section all use the syntax of the <BCLASS="emphasis.bold">slattach</B>command that comes with Slackware 96 Linux. SLIP commands are notstandardized. The command that comes with your system will probablyhave a different syntax; carefully read your system's documentation soyou'll know the exact syntax used on your system. For example, otherversions of Linux use this syntax:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>slattach</B></CODE> [<CODECLASS="userinput"><B>-p </B></CODE><CODECLASS="replaceable"><I>protocol</I></CODE>] [<CODECLASS="userinput"><B>-s </B></CODE><CODECLASS="replaceable"><I>speed</I></CODE>] <CODECLASS="replaceable"><I>device</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here the various SLIP protocols are selected with the <BCLASS="emphasis.bold">-p</B>option. The acceptable <EMCLASS="emphasis">protocol</EM> values are: <BCLASS="emphasis.bold">slip</B>,<BCLASS="emphasis.bold">cslip</B>, <BCLASS="emphasis.bold">slip6</B>, <BCLASS="emphasis.bold">cslip6</B>, and <BCLASS="emphasis.bold">adaptive</B>. If<ACLASS="indexterm"NAME="AUTOID-7204"></A><BCLASS="emphasis.bold">adaptive</B> is selected, the system tries to determine which protocolis acceptable to the remote system. The <BCLASS="emphasis.bold">-s</B> option sets the linespeed, e.g., <BCLASS="emphasis.bold">-s 56000</B>. The <BCLASS="emphasis.bold">device</B> is one of the <EMCLASS="emphasis">callunits</EM> configured on the system. Examples of valid call unit devicenames are cua0, cua1, cua2, cua3, etc. The device names from cua0 tocua3 correspond to the MS-DOS devices COM1 to COM4. A call unit isnormally associated with dial communications.</P><PCLASS="para"><BCLASS="emphasis.bold">slattach</B> expects the physical connection to the remote systemto exist when <BCLASS="emphasis.bold">slattach</B> is invoked. The physical connection canbe a direct connection, a leased line, or a dial line. But if a dial-upconnection is used, some process, such as <BCLASS="emphasis.bold">cu</B> or <BCLASS="emphasis.bold">tip</B>, mustestablish the physical connection before <BCLASS="emphasis.bold">slattach</B> is invoked.As we have seen, <BCLASS="emphasis.bold">dip</B> is a command that is specifically designed tosupport dial-up IP connections.<ACLASS="indexterm"NAME="AUTOID-7218"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-4.2">6.4.2 Dial-Up IP </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-DIAL-UP-IP-DIP"></A><ACLASS="indexterm"NAME="TCP2-CH-6-IX-DIAL-UP-IP-DIP2"></A>Earlier in this chapter we used <BCLASS="emphasis.bold">dip</B> to create a dial-up PPPconnection. <BCLASS="emphasis.bold">dip</B> can also be used for SLIP. It is actuallyquite simple. A slight modification of the <BCLASS="emphasis.bold">dip</B> script<ACLASS="indexterm"NAME="AUTOID-7229"></A><ACLASS="indexterm"NAME="AUTOID-7233"></A>used earlier creates a SLIP link. The following script connects a PC named<EMCLASS="emphasis">macadamia</EM> to a SLIP server named <EMCLASS="emphasis">cashew</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Set the local and remote addressesget $locip 172.16.15.1get $rmtip 172.16.15.3# Select the port and set the line speedport cua1speed 38400# Reset the modem and flush the terminalresetflush# Dial the SLIP server and wait for the CONNECT responsedial *70,301-555-1234wait CONNECT# Wait 2 seconds for the remote server to get readysleep 2# Send a carriage-return to wake up the serversend \r# Wait for the Login&gt; prompt and send the usernamewait ogin&gt;send kristin\r# Wait for the Password&gt; prompt and send the passwordwait word&gt;password# Wait for the SLIP server's command line promptwait &gt;# Send the command required by the SLIP serversend set cslip enabled\r# Select the SLIP interface as the default routedefault# Set the interface to CSLIP modemode CSLIP# Exit the scriptexit</PRE></BLOCKQUOTE></P><PCLASS="para">Modifications to a few lines from the PPP script were required tocreate a SLIP dial-up script. Obvious changes replace the remoteserver's PPP command with a SLIP command and change the <BCLASS="emphasis.bold">mode</B>command in the script to invoke SLIP instead of PPP. We also addedsome new lines to perform tasks for SLIP that PPP can do on its own.</P><PCLASS="para">The script begins by setting the local IP address and the remote IPaddress. <CODECLASS="literal">$locip</CODE> and <CODECLASS="literal">$rmtip</CODE> are script variablesused to identify thehosts at both ends of the link, which is analogous to the<BCLASS="emphasis.bold">pointopoint</B> parameter on the <BCLASS="emphasis.bold">ifconfig</B> command that we sawin the previous section. The two <BCLASS="emphasis.bold">get</B> statements<ACLASS="indexterm"NAME="AUTOID-7249"></A>set the local interface to the address 172.16.15.1 andthe destination address to172.16.15.3. SLIP does not have a standard way within the protocol toexchange addresses. We had to add specific local and remote IPaddresses to the script.</P><PCLASS="para">The <BCLASS="emphasis.bold">default</B> statement near the end of the script says that theSLIP connection is the local system's default route. Since SLIP ismost often used to connect small isolated systems into the network,this is usually true. This statement performs the same function as the<BCLASS="emphasis.bold">route</B> command in the <BCLASS="emphasis.bold">slattach</B> example or the<BCLASS="emphasis.bold">defaultroute</B> option in the <EMCLASS="emphasis">/etc/ppp/options</EM> file.<ACLASS="indexterm"NAME="AUTOID-7257"></A><ACLASS="indexterm"NAME="AUTOID-7258"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-4.3">6.4.3 SLIP Server Configuration </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-SERIAL-LINE-IP-SLIP-SERVER-CONFIGURATION"></A>So far, we have used <BCLASS="emphasis.bold">dip</B> to establish a dial-in SLIP link to aremote server. <BCLASS="emphasis.bold">dip</B> can also provide the server side of a SLIPconnection. The <BCLASS="emphasis.bold">-i</B> option sets <BCLASS="emphasis.bold">dip</B> to input mode, whichconfigures the system to act as a dial-in server. An alternative, andmore popular, way to invoke <BCLASS="emphasis.bold">dip</B> with the <BCLASS="emphasis.bold">-i</B> option is to usethe <BCLASS="emphasis.bold">diplogin</B> command.<ACLASS="indexterm"NAME="AUTOID-7272"></A><BCLASS="emphasis.bold">diplogin</B> is symbolically linked to the<BCLASS="emphasis.bold">dip</B> command and is exactly the same as specifying <BCLASS="emphasis.bold">dip</B> withthe <BCLASS="emphasis.bold">-i</B> option. We'll use <BCLASS="emphasis.bold">diplogin</B> throughout this section.</P><PCLASS="para"><BCLASS="emphasis.bold">diplogin</B> is used as the login shell for dial-in SLIP users.The system administrator puts <BCLASS="emphasis.bold">diplogin</B> in the <EMCLASS="emphasis">/etc/passwd</EM><ACLASS="indexterm"NAME="AUTOID-7283"></A><ACLASS="indexterm"NAME="AUTOID-7286"></A>entry for each remote SLIP user as the user's login shell. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">craig:wJxX.iPuPzg:101:100:Craig Hunt:/tmp:/sbin/diplogin</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;<BCLASS="emphasis.bold">login</B> verifies the username and password, assigns the user<EMCLASS="emphasis">/tmp</EM> as a home directory and starts his login shell. In thiscase the shell is <BCLASS="emphasis.bold">diplogin</B>.</P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-ETC-DIPHOSTS-FILE"></A><ACLASS="indexterm"NAME="AUTOID-7298"></A>The <BCLASS="emphasis.bold">diplogin</B> program then tries to find an entry for the userin the <EMCLASS="emphasis">/etc/diphosts</EM> file. It searches for the username that wasentered during the login process unless that username is overridden byanother directly on the <BCLASS="emphasis.bold">diplogin</B> command line. For example:when the <BCLASS="emphasis.bold">/etc/passwd</B> entry shown above starts <BCLASS="emphasis.bold">diplogin</B>,the username <EMCLASS="emphasis">craig</EM> is used to search the <EMCLASS="emphasis">/etc/diphosts</EM> file. Conversely, in the <EMCLASS="emphasis">/etc/passwd</EM> entry shown below, the username <EMCLASS="emphasis">essex</EM> that appears after the <BCLASS="emphasis.bold">diplogin</B> command is used for the search.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hunt:AbxdkiThinR:102:100:Rebecca Hunt:/tmp:/sbin/diplogin essex</PRE></BLOCKQUOTE></P><PCLASS="para">The format of entries in the <EMCLASS="emphasis">/etc/diphost</EM> file is:</P><PCLASS="para"><EMCLASS="emphasis">user</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">password</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">remote-host</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">local-host</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">netmask</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">comment</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">protocol</EM><BCLASS="emphasis.bold">,</B><EMCLASS="emphasis">mtu</EM></P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">user</EM></DT><DDCLASS="listitem"><PCLASS="para">A username. This is the key field against which a username from the<EMCLASS="emphasis">/etc/passwd</EM> file or from an argument on the <BCLASS="emphasis.bold">diplogin</B> commandline is matched.</P></DD><DTCLASS="term"><EMCLASS="emphasis">password</EM></DT><DDCLASS="listitem"><PCLASS="para">An unencrypted password, the keyword <CODECLASS="literal">s/key</CODE>, or null (anempty field). If an unencrypted password is entered in this field,<BCLASS="emphasis.bold">diplogin</B> prompts the user for the password.This is in addition to the standard password from the <EMCLASS="emphasis">/etc/passwd</EM>file that the user has already been required to enter. Because thissecond password is stored in an unencrypted format, it is not consideredvery secure. Sites that are big on security don't consider any reusablepasswords secure enough to be meaningful, and sites that don't worry toomuch about security don't consider a second password necessary.For these reasons, the unencrypted password is rarely used. If thisfield contains the keyword <CODECLASS="literal">s/key</CODE>, <BCLASS="emphasis.bold">diplogin</B> invokes S/Keyauthentication. This requires that S/Key support is compiled into<BCLASS="emphasis.bold">diplogin</B>, and that S/Key is installed in your system. Because S/Keyis a one-time password system, it's considered very secure. However, itis a headache for users and system administrators. See <ACLASS="xref"HREF="ch12_01.htm"TITLE="Network Security ">Chapter 12, <CITECLASS="chapter">Network Security </CITE></A>for a full discussion of one-time passwords. If the password fieldis null, the authentication is left to <BCLASS="emphasis.bold">login</B> and the user is notasked for a second password.</P></DD><DTCLASS="term"><EMCLASS="emphasis">remote-host</EM></DT><DDCLASS="listitem"><PCLASS="para">The hostname or IP address of the remote host; i.e., the computer fromwhich the user is logging in.</P></DD><DTCLASS="term"><EMCLASS="emphasis">local-host</EM></DT><DDCLASS="listitem"><PCLASS="para">The hostname or IP address of the local host; i.e., the computer onwhich this SLIP server is running.</P></DD><DTCLASS="term"><EMCLASS="emphasis">netmask</EM></DT><DDCLASS="listitem"><PCLASS="para">The network mask for the serial interface written in dotted decimalnotation, such as 255.255.0.0. If no value is provided the netmaskdefaults to 255.255.255.0, regardless of the class of addresses used onthe network.</P></DD><DTCLASS="term"><EMCLASS="emphasis">comment</EM></DT><DDCLASS="listitem"><PCLASS="para">A free-form comment field, similar to the <CODECLASS="literal">gcos</CODE> field in the<EMCLASS="emphasis">/etc/passwd</EM> file.</P></DD><DTCLASS="term"><EMCLASS="emphasis">protocol</EM><BCLASS="emphasis.bold">,</B><EMCLASS="emphasis">mtu</EM></DT><DDCLASS="listitem"><PCLASS="para">The IP protocol and the maximum transmission unit used for thisconnection. Possible protocol values are SLIP, CSLIP, and PPP.The MTU is any valid transmission unit specified in bytes.The largest MTU used on SLIP lines is generally 1006 bytes. However,SLIP performance is often improved by smaller packet sizes.Common choices are 512 and 256.</P></DD></DL><PCLASS="para">Assuming the two <EMCLASS="emphasis">/etc/passwd</EM> entries shown above, we might havean <EMCLASS="emphasis">/etc/diphosts</EM> file with the following entries:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">craig::cashew:macadamia:255.255.255.240:Craig Hunt:CSLIP,512essex::essex:macadamia::Remote client essex.nuts.com:PPP,1006</PRE></BLOCKQUOTE></P><PCLASS="para">When the <BCLASS="emphasis.bold">login</B> authenticates the user <EMCLASS="emphasis">craig</EM>, it starts<BCLASS="emphasis.bold">diplogin</B> as the login shell. <BCLASS="emphasis.bold">diplogin</B> finds the entryfor <EMCLASS="emphasis">craig</EM>, does not prompt for a second password, sets the localaddress to <EMCLASS="emphasis">macadamia</EM> and the remote address to <EMCLASS="emphasis">cashew</EM>, andstarts a CSLIP server using an MTU of 512. However, if the user<EMCLASS="emphasis">hunt</EM> logs into the system, <BCLASS="emphasis.bold">login</B> starts <BCLASS="emphasis.bold">diplogin</B> withthe username <EMCLASS="emphasis">essex</EM>. The <EMCLASS="emphasis">/etc/diphosts</EM> entry for <EMCLASS="emphasis">essex</EM>starts a PPP server with a local address of <EMCLASS="emphasis">macadamia</EM>, a remoteaddress of <EMCLASS="emphasis">essex</EM> and an MTU of 1006. The <EMCLASS="emphasis">essex</EM> entryallows the netmask to default to 255.255.255.0. The servers started by<BCLASS="emphasis.bold">diplogin</B> run until the modem hangs up the connection.<ACLASS="indexterm"NAME="AUTOID-7403"></A></P><PCLASS="para">Clearly <BCLASS="emphasis.bold">dip</B> is more than just a <BCLASS="emphasis.bold">chat</B> script. It provides clientand server support for a variety of protocols. See <ACLASS="xref"HREF="appa_01.htm"TITLE="PPP Tools">Appendix A</A> for moreinformation about <BCLASS="emphasis.bold">dip</B>.<ACLASS="indexterm"NAME="AUTOID-7409"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-6-SECT-4.4">6.4.4 Troubleshooting Serial Connections </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-SERIAL-PROTOCOLS-DEBUGGING"></A><ACLASS="indexterm"NAME="TCP2-CH-6-IX-TROUBLESHOOTING-SERIAL-CONNECTIONS"></A>There are several layers of complexity that make PPP and SLIP connectionsdifficult to debug. To set up PPP and SLIP, we must set up the serialport, configure the modem, configure PPP or SLIP, and configure TCP/IP.A mistake in any one of these layers can cause a problem in another layer.All of these layers can obscure the true cause of a problem. The bestway to approach troubleshooting on a serial line is by debuggingeach layer, one layer at a time. It is usually best to troubleshoot eachlayer before you move on to configure the next layer.</P><PCLASS="para">The physical serial ports<ACLASS="indexterm"NAME="AUTOID-7421"></A>should be configured by the system duringthe system boot. Check the <EMCLASS="emphasis">/dev</EM> directory<ACLASS="indexterm"NAME="AUTOID-7425"></A>to make sure they areconfigured. On a Linux system the in-bound serial ports are <EMCLASS="emphasis">/dev/ttyS0</EM>through <EMCLASS="emphasis">/dev/ttyS3</EM> and the out-bound serial ports are <EMCLASS="emphasis">/dev/cua0</EM> through <EMCLASS="emphasis">/dev/cua3</EM>. There are many more tty*<ACLASS="indexterm"NAME="AUTOID-7431"></A>and cua* <ACLASS="indexterm"NAME="AUTOID-7433"></A>device names. However, the other devices are only associated with real physical devices if you have amulti-port serial card installed in your Linux system. Most UNIX systemsuse the names tty* and cua*, even if those names are just symbolic linksto the real devices. Solaris 2.5.1 is a good example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% ls -l /dev/tty?lrwxrwxrwx 1 root root 6 Sep 23  1996 /dev/ttya -&gt; term/alrwxrwxrwx 1 root root 6 Sep 23  1996 /dev/ttyb -&gt; term/b% ls -l /dev/cua/*lrwxrwxrwx 1 root root 35 Sep 23 1996 /dev/cua/a -&gt;     /devices/obio/zs@0,100000:a,culrwxrwxrwx 1 root root 35 Sep 23 1996 /dev/cua/b -&gt;     /devices/obio/zs@0,100000:b,cu</PRE></BLOCKQUOTE></P><PCLASS="para">If the serial devices do not show up in the <EMCLASS="emphasis">/dev</EM> directory,they can be manually added<ACLASS="indexterm"NAME="AUTOID-7439"></A>with a <BCLASS="emphasis.bold">mknod</B> command.<ACLASS="indexterm"NAME="AUTOID-7443"></A>For example, the following commands create the serialdevices for the first serial port on a Linux system:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># mknod -m 666 /dev/cua0 c 5 64# mknod -m 666 /dev/ttyS0 c 4 64</PRE></BLOCKQUOTE></P><PCLASS="para">However, if you need to add the serial devices manually, there may bea problem with the kernel configuration. The serial devices should beinstalled in your system by default during the boot.</P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-MODEMS-CHECKING-CONFIGURATION-OF"></A>The modem used for the connection is attached to one of theserial ports. Before attempting to build a dial-up script, make surethe modem works and that you can communicate with it through the port.Use a simple serial communications package,<ACLASS="indexterm"NAME="AUTOID-7452"></A>such as <BCLASS="emphasis.bold">minicom</B>,<BCLASS="emphasis.bold">kermit</B>, or <BCLASS="emphasis.bold">seyon</B>. First, make sure the program is configured touse your modem. It must be set to the correct port, speed,parity, number of databits, etc. Check yourmodem's documentation to determine these settings.<ACLASS="indexterm"NAME="AUTOID-7458"></A></P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-6-IX-MINICOM"></A>We'll use <BCLASS="emphasis.bold">minicom</B> on a Linux systemfor our examples. To configure <BCLASS="emphasis.bold">minicom</B>,<BCLASS="emphasis.bold">su</B> to <EMCLASS="emphasis">root</EM> and run it with the <BCLASS="emphasis.bold">-s</B> option, which displaysa configuration menu. Walk through the menu and make sure everythingis properly set. One thing you might notice is that the port isset to <EMCLASS="emphasis">/dev/modem</EM>. That device name is sometimes symbolicallylinked to the port to which the modem is connected. If you're notsure that the link exists on your system, enter the correct port namein the <BCLASS="emphasis.bold">minicom</B> configuration, e.g., <EMCLASS="emphasis">/dev/cua1</EM>. After checking theconfiguration, exit the menu and use the <BCLASS="emphasis.bold">minicom</B> terminal emulatorto make sure you can communicate with the modem:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Minicom 1.71 Copyright (c) Miquel van SmoorenburgPress CTRL-A Z for help on special keysAT S7=45 S0=0 L1 V1 X4 &amp;c1 E1 Q0OK<BCLASS="emphasis.bold">atz</B>                                                 OK                                                   <BCLASS="emphasis.bold">atdt555-1234</B>                                         CONNECT 26400/LAPM-V<BCLASS="emphasis.bold">^M</B>                                 Enter login&gt; <BCLASS="emphasis.bold">kristin</B>Enter user password&gt; <BCLASS="emphasis.bold">Wats?Watt?</B>   Welcome to the PPP MODEM POOLPORT-9&gt; <BCLASS="emphasis.bold">set port ppp enabled +++</B>OK<BCLASS="emphasis.bold">ath</B>OK<BCLASS="emphasis.bold">atz</B>OK<BCLASS="emphasis.bold">^A</B>CTRL-A Z for help | 38400 8N1 | NOR | Minicom 1.71 1995 | VT102 |     Offline<BCLASS="emphasis.bold">X</B></PRE></BLOCKQUOTE></P><PCLASS="para">In the sample, <BCLASS="emphasis.bold">minicom</B> displays two header lines and then sends aHayes command (<CODECLASS="literal">AT</CODE>) to the modem. We didn't set this command; it waspart of the default <BCLASS="emphasis.bold">minicom</B> configuration. (If it causesproblems, edit it out of the configuration using the menus discussedpreviously.) We then reset the modem (<BCLASS="emphasis.bold">atz</B>) and dial the remoteserver (<BCLASS="emphasis.bold">atdt</B>). When the modems connect, we log in to the serverand configure it. (The login process is different for every remoteserver; this is just an example.) Everything appears to be runningfine, so we end the connection by getting the modem's attention(<BCLASS="emphasis.bold">+++</B>), hanging up the line (<BCLASS="emphasis.bold">ath</B>), and resetting themodem. Exit <BCLASS="emphasis.bold">minicom</B> by pressing CTRL-A followed by X.<ACLASS="indexterm"NAME="AUTOID-7494"></A>On oursample system the port and modem are working. If you cannot sendsimple commands to your modem, check that:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The modem is properly connected to the port</P></LI><LICLASS="listitem"><PCLASS="para">You have the correct cables</P></LI><LICLASS="listitem"><PCLASS="para">The modem is powered up</P></LI><LICLASS="listitem"><PCLASS="para">The modem is properly configured for dial-out and for echoingcommands</P></LI></UL><PCLASS="para">When the modem responds to simple commands, use it to dial the remoteserver as we did in the example above. If the modem fails to dial thenumber or displays the message NO DIALTONE, check that the telephoneline is connected to the correct port of the modem and to the walljack. You may need to use an analog phone to test the telephone walljack and you may need to replace the line between the modem and thewall to make sure that the cable is good.<ACLASS="indexterm"NAME="AUTOID-7505"></A>If the modem dials but failsto successfully connect to the remote modem, check that the local modemconfiguration matches the configuration required by the remote system.You must know the requirements of that remote system to successfullydebug a connection.<ACLASS="indexterm"NAME="TCP2-CH-6-IX-SCRIPT-FILES-DEBUGGING-TIPS"></A>See the following list of script debugging tips forsome hints on what to check. If you can successfully connect to theremote system, note everything you entered to do so, and note everythingthat the modem and the remote server display. Then set the remote server to PPPor SLIP mode and note how you accomplished this. Youwill need to duplicate all of these steps in your <BCLASS="emphasis.bold">dip</B> script.</P><PCLASS="para">Start with a bare-bones script, like the sample <EMCLASS="emphasis">start-ppp.dip</EM>script, so that you can debug the basic connection before adding thecomplexity of error processing to the script. Run the script through<BCLASS="emphasis.bold">dip</B> using the verbose option (<BCLASS="emphasis.bold">-v</B>) option.<ACLASS="indexterm"NAME="AUTOID-7516"></A>This displays each line of the script as it is processed.Look for the following problems:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The modem does not respond to the script. Check that you are using thecorrect device on the <BCLASS="emphasis.bold">port</B> command. Make sure that if the scriptcontains <BCLASS="emphasis.bold">databits</B>, <BCLASS="emphasis.bold">parity</B>, <BCLASS="emphasis.bold">speed</B>, or <BCLASS="emphasis.bold">stopbits</B>commands that they are set to values compatible with your modem.Double-check that the modem is Hayes-compatible,<ACLASS="indexterm"NAME="AUTOID-7526"></A>particularly if youattempt to do modem configuration using <BCLASS="emphasis.bold">dip</B> keywords instead ofusing <BCLASS="emphasis.bold">send</B>.</P></LI><LICLASS="listitem"><PCLASS="para">The modem fails to connect to the remote host. Make sure the modemis configured exactly as it was during the manual login. The modem'sdatabits, parity, etc. need to match the configuration of the remotesystem. It is possible that you will need a special configuration,for example, 7-bit/even-parity, to perform the login before you canswitch to the 8-bit/no-parity configuration required by PPP and SLIP.Don't forget to check that the phone number entered in the <BCLASS="emphasis.bold">dial</B>command is correct, particularly if the modem displays VOICE, RING -NO ANSWER, or BUSY when you expect to see CONNECT.</P></LI><LICLASS="listitem"><PCLASS="para">The script hangs. It is probably waiting for a response. Make surethat the string in each <BCLASS="emphasis.bold">wait</B> command is correct. Remember that thestring only needs to be a subset of the response. It is better to use thestring &quot;<CODECLASS="literal">&gt;</CODE>&quot; than it is to use &quot;<CODECLASS="literal">Port9&gt;</CODE>&quot; if you are not surewhether the remotesystem always displays the same port number. Use a substring from the endof the expected response so that the script does not send to the serverbefore the server is ready for input. Also try putting a delay into<ACLASS="indexterm"NAME="AUTOID-7539"></A>the script just before the script sends the first command to the server,e.g., <BCLASS="emphasis.bold">sleep 2</B> to delay 2 seconds. A delay is sometimes needed toallow the server to initialize the port after the modems connect.</P></LI><LICLASS="listitem"><PCLASS="para">The remote server displays an error message. The script probablysent an incorrect value. Check the string in each <BCLASS="emphasis.bold">send</B> command.Make sure they terminate with the correct carriage-return or line-feedcombination expected by the remote server.</P></LI></UL><PCLASS="para">If you have trouble with the script, try running <BCLASS="emphasis.bold">dip</B> in test mode(<BCLASS="emphasis.bold">-t</B>), which allows you to enter each command manually one ata time. Do this repeatedly until you are positive that you know allthe commands needed to log in to the remote server. Then go back todebugging the script. You'll probably have fresh insight into the loginprocess that will help you find the flaw in the script.<ACLASS="indexterm"NAME="AUTOID-7548"></A><ACLASS="indexterm"NAME="AUTOID-7549"></A></P><PCLASS="para">Once the script is running and the connection is successfully made,things should run smoothly. You should be able to<ACLASS="indexterm"NAME="AUTOID-7551"></A><BCLASS="emphasis.bold">ping</B> the remoteserver without difficulty. If you have problems they may be in the IPinterface configuration or in the default route. The script should havecreated the serial interface. The <BCLASS="emphasis.bold">netstat -ni</B><ACLASS="indexterm"NAME="AUTOID-7555"></A>command showswhich interfaces have been configured:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>netstat -ni</B></CODE>Name Mtu  Net/Dest     Address     Ipkts Ierrs Opkts Oerrs Collis Queuele0  1500 172.16.15.0  172.16.15.1      1     0    4     0      0     0lo0  1536 127.0.0.0    127.0.0.1     1712     0 1712     0      0     0ppp0 1006 172.16.15.26 172.16.15.3      0     0    0     0      0     0</PRE></BLOCKQUOTE></P><PCLASS="para">The interface, ppp0 in the example, has been installed. The <BCLASS="emphasis.bold">default</B>command in the script creates a default route. Use <BCLASS="emphasis.bold">netstat</B> to seethe contents of the routing table:<ACLASS="indexterm"NAME="AUTOID-7564"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>netstat -nr</B></CODE>Routing tablesDestination      Gateway          Flags  Refcnt  Use Interface127.0.0.1        127.0.0.1           UH      1    28      lo0default          172.16.25.3          U      0     0      ppp0172.16.15.0      172.16.15.1          U      21 1687      le0</PRE></BLOCKQUOTE></P><PCLASS="para">The contents of routing tables are explained in detail in the nextchapter. For now, just notice that interface used for the defaultroute is ppp0, and that the default route is a route to the remote PPPserver (172.16.25.3 in the example).</P><PCLASS="para">If the script creates the connection, the interface is installed, and therouting table contains the default route, everything should work fine.If you still have problems they may be related to other parts of theTCP/IP installation. Refer to <ACLASS="xref"HREF="ch11_01.htm"TITLE="Troubleshooting TCP/IP ">Chapter 11, <CITECLASS="chapter">Troubleshooting TCP/IP </CITE></A>, for more troubleshootinginformation.<ACLASS="indexterm"NAME="AUTOID-7574"></A><ACLASS="indexterm"NAME="AUTOID-7575"></A><ACLASS="indexterm"NAME="AUTOID-7576"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Installing PPP "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.3 Installing PPP "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_05.htm"TITLE="6.5 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.5 Summary "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.3 Installing PPP </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.5 Summary </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>