<HTML><HEAD><TITLE>[Chapter 7] 7.3 Building a Static Routing Table </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:35:32Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Configuring Routing "><LINKREL="prev"HREF="ch07_02.htm"TITLE="7.2 The Minimal Routing Table "><LINKREL="next"HREF="ch07_04.htm"TITLE="7.4 Interior Routing Protocols "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_02.htm"TITLE="7.2 The Minimal Routing Table "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.2 The Minimal Routing Table "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Configuring Routing </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_04.htm"TITLE="7.4 Interior Routing Protocols "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.4 Interior Routing Protocols "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-7-SECT-3">7.3 Building a Static Routing Table </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-7-IX-STATIC-ROUTING-TABLE-BUILDING"></A>As we have seen, the minimal routing table works to reach hosts only onthe directly connected physical networks. To reach remote hosts, routes through external gateways must be added to the routing table. Oneway to do this is by constructing a static routing table with<BCLASS="emphasis.bold">route</B> commands.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7731"></A>Use the UNIX <BCLASS="emphasis.bold">route</B> command to add or delete entries manually inthe routing table. For example, to add the route 207.25.98.0 to aSolaris system's routing table, enter:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>route add 207.25.98.0 172.16.12.1 1</B></CODE>add net 207.25.98.0: gateway almond</PRE></BLOCKQUOTE></P><PCLASS="para">The first argument after the <BCLASS="emphasis.bold">route</B> command in this sample is thekeyword <BCLASS="emphasis.bold">add</B>. The first keyword on a <BCLASS="emphasis.bold">route</B> command lineis either <BCLASS="emphasis.bold">add</B> or <BCLASS="emphasis.bold">delete</B>, telling <BCLASS="emphasis.bold">route</B> either to adda new route or delete an existing one. There is no default; if neitherkeyword is used, <BCLASS="emphasis.bold">route</B> displays the routing table.</P><PCLASS="para">The next value is the destination address, which is the address reachedvia this route. The destination address can be specified as an IPaddress, a network name from the <EMCLASS="emphasis">/etc/networks</EM> file, a host<ACLASS="indexterm"NAME="AUTOID-7748"></A><ACLASS="indexterm"NAME="AUTOID-7751"></A>name from the <EMCLASS="emphasis">/etc/hosts</EM> file, or the keyword <BCLASS="emphasis.bold">default</B>.<ACLASS="indexterm"NAME="AUTOID-7755"></A><ACLASS="indexterm"NAME="AUTOID-7758"></A>Because most routes are added early in the startup process, numeric IPaddresses are used more than names. This is done so that the routingconfiguration is not dependent on the state of the name serversoftware. Always use the complete numeric address (all four bytes).<BCLASS="emphasis.bold">route</B> expands the address if it contains less than four bytes,and the expanded address may not be what you intended.[4]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] Some implementations of <BCLASS="emphasis.bold">route</B> expand &quot;26&quot; to 0.0.0.26, eventhough &quot;26&quot; could mean Milnet (26.0.0.0).</P></BLOCKQUOTE><PCLASS="para">If the keyword <BCLASS="emphasis.bold">default</B> is used for the destination address,<BCLASS="emphasis.bold">route</B> creates a <EMCLASS="emphasis">default route</EM>.<ACLASS="indexterm"NAME="AUTOID-7768"></A>[5]The default route is used whenever there is no specific route to adestination, and it is often the only route you need. If your networkhas only one gateway, use a default route to direct all traffic boundfor remote networks through that gateway.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] The network address associated with the default route is 0.0.0.0.</P></BLOCKQUOTE><PCLASS="para">Next on the <BCLASS="emphasis.bold">route</B> command line is the gateway address.<ACLASS="indexterm"NAME="AUTOID-7775"></A>[6]This isthe IP address of the external gateway through which data is sent tothe destination address. The address must be the address of a gatewayon a directly connected network. TCP/IP routes specify the<ACLASS="indexterm"NAME="AUTOID-7781"></A><EMCLASS="emphasis">next-hop</EM> in the path to a remote destination. That next-hop mustbe directly accessible to the local host; therefore, it must be on adirectly connected network.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] The syntax varies slightly between systems. Linux precedes the gatewayaddress with the keyword <CODECLASS="literal">gw</CODE>. Check your system's documentationfor the details.</P></BLOCKQUOTE><PCLASS="para">The last argument on the command line is the routing metric. The metric<ACLASS="indexterm"NAME="AUTOID-7786"></A>argument is not used when routes are deleted, but many systems require itwhen a route is added. Despite being required, <BCLASS="emphasis.bold">route</B> onlyuses the metric to decide if this is a route through a directlyattached interface or a route through an external gateway. If themetric is 0, the route is installed as a route through a localinterface, and the G flag, which we saw in the <BCLASS="emphasis.bold">netstat -i</B> display,is not set. If the metric value is greater than 0, the route isinstalled with the G flag set, and the gateway address is assumed to bethe address of an external gateway. Static routing makes no other useof the metric. Dynamic routing is required to make real use of varyingmetric values.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-7-SECT-3.1">7.3.1 Adding Static Routes </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7794"></A>As an example, let's configure static routing on the imaginaryworkstation <EMCLASS="emphasis">peanut</EM>. <ACLASS="xref"HREF="ch07_03.htm#TCP2-CH-7-FIG-0"TITLE="Routing on a subnet">Figure 7.1</A>shows the subnet 172.16.12.0.There are two gateways on this subnet, <EMCLASS="emphasis">almond</EM> and <EMCLASS="emphasis">pecan</EM>.<EMCLASS="emphasis">almond</EM> is the gateway to thousands of networks on the Internet;<EMCLASS="emphasis">pecan</EM> provides access to the other subnets on <EMCLASS="emphasis">nuts-net</EM>.We'll use <EMCLASS="emphasis">almond</EM> as our default gateway because it is used bythousands of routes. The smaller number of routes through <EMCLASS="emphasis">pecan</EM>can easily be entered individually. The number of routes through agateway, not the amount of traffic it handles, decides which gateway toselect as the default. Even if most of <EMCLASS="emphasis">peanut</EM>'s network traffic goesthrough <EMCLASS="emphasis">pecan</EM> to other hosts on <EMCLASS="emphasis">nuts-net</EM>, the defaultgateway should be <EMCLASS="emphasis">almond</EM>.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-7-FIG-0">Figure 7.1: Routing on a subnet</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_0701.gif"ALT="Figure 7.1"><PCLASS="para">To install the default route on <EMCLASS="emphasis">peanut</EM>, we enter:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>route -n add default 172.16.12.1 1</B></CODE>add net default: gateway 172.16.12.1</PRE></BLOCKQUOTE></P><PCLASS="para">The destination is <BCLASS="emphasis.bold">default</B>, and the gateway address (172.16.12.1)is <EMCLASS="emphasis">almond</EM>'s address. Now <EMCLASS="emphasis">almond</EM> is <EMCLASS="emphasis">peanut</EM>'s defaultgateway. The <BCLASS="emphasis.bold">-n</B> option is not required. It just tells <BCLASS="emphasis.bold">route</B>to display numeric addresses in its informational messages. When youadd <BCLASS="emphasis.bold">route</B> commands to a startup file, use the <BCLASS="emphasis.bold">-n</B> option toprevent <BCLASS="emphasis.bold">route</B> from wasting time querying name server software thatmay not be running.</P><PCLASS="para">After installing the default route, examine the routingtable to make sure the route has been added:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>netstat -rn</B></CODE>Routing tablesDestination     Gateway        Flags    Refcnt Use       Interface127.0.0.1       127.0.0.1      UH       1      132       lo0default         172.16.12.1    UG       0      0         le0172.16.12.0     172.16.12.2     U       26     49041     le0</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Try <BCLASS="emphasis.bold">ping</B> again to see whether <EMCLASS="emphasis">peanut</EM> can now communicatewith remote hosts. If we're lucky,[7]the remote host responds and we see:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] It is possible that the remote host is down. If it is, <BCLASS="emphasis.bold">ping</B>receives no answer. Don't give up; try another host.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ping 207.25.98.2</B></CODE>PING 207.25.98.2: 56 data bytes64 bytes from ruby.ora.com (207.25.98.2): icmp_seq=0. time=110. ms64 bytes from ruby.ora.com (207.25.98.2): icmp_seq=1. time=100. ms^C----207.25.98.2 PING Statistics----2 packets transmitted, 2 packets received, 0% packet lossround-trip (ms)  min/avg/max = 100/105/110</PRE></BLOCKQUOTE></P><PCLASS="para">This display indicates successful communication with the remote host,which means that we now have a good route to hosts on the Internet.</P><PCLASS="para">However, we still haven't installed routes to the rest of<EMCLASS="emphasis">nuts-net</EM>. If we <BCLASS="emphasis.bold">ping</B> a host on another subnet, somethinginteresting happens:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ping 172.16.1.2</B></CODE>PING 172.16.1.2: 56 data bytesICMP Host redirect from gateway almond.nuts.com (172.16.12.1) to pecan.nuts.com (172.16.12.3) for filbert.nuts.com (172.16.1.2)64 bytes from filbert.nuts.com (172.16.1.2): icmp_seq=1. time=30. ms^C----172.16.1.2 PING Statistics----1 packets transmitted, 1 packets received, 0% packet lossround-trip (ms)  min/avg/max = 30/30/30</PRE></BLOCKQUOTE></P><PCLASS="para"><EMCLASS="emphasis">peanut</EM> believes that all destinations are reachable through itsdefault route. Therefore, even data destined for the other subnets issent to <EMCLASS="emphasis">almond</EM>. If <EMCLASS="emphasis">peanut</EM> sends data to <EMCLASS="emphasis">almond</EM> thatshould go through <EMCLASS="emphasis">pecan</EM>, <EMCLASS="emphasis">almond</EM> sends an ICMP Redirect to<EMCLASS="emphasis">peanut</EM> telling it to use <EMCLASS="emphasis">pecan</EM>. (See <ACLASS="xref"HREF="ch01_01.htm"TITLE="Overview of TCP/IP">Chapter 1, <CITECLASS="chapter">Overview of TCP/IP</CITE></A>, for adescription of the ICMP Redirect Message.) <BCLASS="emphasis.bold">ping</B> shows the ICMP<ACLASS="indexterm"NAME="AUTOID-7860"></A>Redirect in action. <BCLASS="emphasis.bold">netstat</B> shows the effect the redirect has on<ACLASS="indexterm"NAME="AUTOID-7863"></A>the routing table:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>netstat -nr</B></CODE>Routing tablesDestination     Gateway        Flags    Refcnt Use        Interface127.0.0.1       127.0.0.1      UH       1      1604       lo0172.16.1.2      172.16.12.3    UGHD     0      514        le0default         172.16.12.1    UG       3      373964     le0172.16.12.0     172.16.12.1    U        31     686547     le0</PRE></BLOCKQUOTE></P><PCLASS="para">The route with the D flag set was installed by the ICMP Redirect.</P><PCLASS="para">Some network managers take advantage of ICMP Redirects when designing anetwork. All hosts are configured with a default route, even those onnetworks with more than one gateway. The gateways exchange routinginformation through routing protocols and redirect hosts to the bestgateway for a specific route. This type of routing, which is dependenton ICMP Redirects, became popular because of personal computers (PCs).Many PCs cannot run a routing protocol; some do not have a <BCLASS="emphasis.bold">route</B>command and are limited to a single default route. Clearly, ICMPRedirects are needed to support these clients. Also, this type ofrouting is simple to configure and well suited for implementationthrough a configuration server, as the same default route is usedon every host. For these reasons, some network managers encourage repeated ICMP Redirects.</P><PCLASS="para">Other network administrators prefer to avoid ICMP Redirects andto maintain direct control over the contents of the routing table.To avoid redirects, specific routes can be installed for each subnet,using individual <BCLASS="emphasis.bold">route</B> statements:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>route -n add 172.16.1.0 172.16.12.3 1</B></CODE>add net 172.16.1.0: gateway 172.16.12.3# <CODECLASS="userinput"><B>route -n add 172.16.6.0 172.16.12.3 1</B></CODE>add net 172.16.6.0: gateway 172.16.12.3# <CODECLASS="userinput"><B>route -n add 172.16.3.0 172.16.12.3 1</B></CODE>add net 172.16.3.0: gateway 172.16.12.3# <CODECLASS="userinput"><B>route -n add 172.16.9.0 172.16.12.3 1</B></CODE>add net 172.16.9.0: gateway 172.16.12.3</PRE></BLOCKQUOTE></P><PCLASS="para"><BCLASS="emphasis.bold">netstat</B> shows what the completed routing table looks like.<EMCLASS="emphasis">peanut</EM> is directly connected only to 172.16.12.0, so all gatewaysin its routing table have addresses that begin with 172.16.12. Thefinished routing table is shown below.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>netstat -rn</B></CODE>Routing tablesDestination          Gateway          Flags    Refcnt Use Interface127.0.0.1            127.0.0.1        UH       1      132       lo0172.16.12.0          172.16.12.2      U        26     49041     le0172.16.1.3           172.16.12.3      UGHD     1      514       le0default              172.16.12.1      UG       0      0         le0172.16.1.0           172.16.12.3      UG       1      4904      le0172.16.6.0           172.16.12.3      UG       0      0         le0172.16.3.0           172.16.12.3      UG       0      0         le0172.16.9.0           172.16.12.3      UG       0      0         le0</PRE></BLOCKQUOTE></P><PCLASS="para">The routing table we have constructed uses the default route (through<EMCLASS="emphasis">almond</EM>) to reach external networks, and specific routes (through<EMCLASS="emphasis">pecan</EM>) to reach other subnets within <EMCLASS="emphasis">nuts-net</EM>. Rerunningthe <BCLASS="emphasis.bold">ping</B> tests produces consistently successful results.However, if any subnets are added to the network, the routes to thesenew subnets must be manually added to the routing table. Additionally,if the system is rebooted, all static routing table entries are lost.Therefore, to use static routing, you must ensure that the routes arere-installed each time your system boots.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-7-SECT-3.1.1">7.3.1.1 Installing static routes at startup </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-7-IX-STATIC-ROUTES-INSTALLING-AT-STARTUP"></A>If you decide to use static routing, you need to make two modificationsto your startup files:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Add the desired <BCLASS="emphasis.bold">route</B> statements to a startup file.</P></LI><LICLASS="listitem"><PCLASS="para">Remove any statements from the startup file that run a routingprotocol.</P></LI></OL><PCLASS="para">Linux provides an interesting example, because it requires static routesto build the minimal routing table. The Linux implementation of<ACLASS="indexterm"NAME="AUTOID-7905"></A><BCLASS="emphasis.bold">ifconfig</B> doesn't modify the routing table when a new interfaceis configured. The route for a new interface is explicitly addedwith a <BCLASS="emphasis.bold">route</B> command. These &quot;interface routes&quot; are stored in a<ACLASS="indexterm"NAME="AUTOID-7910"></A>startup script. On our sample Slackware Linux system, the routes are<ACLASS="indexterm"NAME="AUTOID-7913"></A>found in <EMCLASS="emphasis">/etc/rc.d/rc.inet1</EM>:<ACLASS="indexterm"NAME="AUTOID-7916"></A><ACLASS="indexterm"NAME="AUTOID-7919"></A>[8]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] The actual <BCLASS="emphasis.bold">route</B> statements in <EMCLASS="emphasis">rc.inet1</EM> use script variables.We changed these to addresses for the sake of clarity.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/sbin/route add -net 127.0.0.0/sbin/route add -net 172.16.5.0 netmask 255.255.255.0</PRE></BLOCKQUOTE></P><PCLASS="para">The first statement installs the route for the loopback interface.Note the abbreviated syntax of this command: it specifies a destinationbut no gateway. This is because Linux has a special syntax just forassigning a route to an interface. We could have written the command as:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/sbin/route add -net 127.0.0.0 dev lo0</PRE></BLOCKQUOTE></P><PCLASS="para">If <BCLASS="emphasis.bold">dev</B> is not specified on the command line, the <BCLASS="emphasis.bold">route</B> commanddetermines the correct interface from the destination address.</P><PCLASS="para">The second statement from the <EMCLASS="emphasis">/etc/rc.d/rc.inet1</EM> script installs theroute for the Ethernet interface. This statement includes a subnet mask.If none was provided, it would default to 255.255.0.0, which is thestandard for the class B address 172.16.0.0.</P><PCLASS="para">Installing routes for directly connected interfaces is specific to Linux.As another more general example, let's see how to add static routing tothe startup script on a Solaris system. Beforemaking changes to your real system, check your system's documentation. Youmay need to modify a different boot script, and the execution path ofthe routing daemon may be different. Only the documentationcan provide the exact details you need.</P><PCLASS="para">On a Solaris system, edit <EMCLASS="emphasis">/etc/init.d/inetinit</EM> to add the<ACLASS="indexterm"NAME="AUTOID-7938"></A><ACLASS="indexterm"NAME="AUTOID-7942"></A><BCLASS="emphasis.bold">route</B> statements:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">route -n add default 172.16.12.1 1 &gt; /dev/consoleroute -n add 172.16.1.0 172.16.12.3 1 &gt; /dev/consoleroute -n add 172.16.6.0 172.16.12.3 1 &gt; /dev/consoleroute -n add 172.16.3.0 172.16.12.3 1 &gt; /dev/consoleroute -n add 172.16.9.0 172.16.12.3 1 &gt; /dev/console</PRE></BLOCKQUOTE></P><PCLASS="para">Next, check whether or not the script starts a routing protocol.If it does, comment out the lines that start it. You don't want arouting protocol running when you are using static routing. On ourSolaris sample system, the routing software is only started if thesystem has more than one network interface (i.e., is a router) or the<EMCLASS="emphasis">/etc/gateways</EM> file has been created. (More on this file later.)<ACLASS="indexterm"NAME="AUTOID-7949"></A><ACLASS="indexterm"NAME="AUTOID-7952"></A>Neither of these things is true. Therefore the routing daemon won't berun by the startup process and we don't have to do anything except addthe <BCLASS="emphasis.bold">route</B> statements.</P><PCLASS="para">Although the startup filename may be different on your system, theprocedure should be basically the same. These simple steps are all youneed to set up static routing. The problem with static routing isnot setting it up, but maintaining it, if you have a changeable networkingenvironment. Routing protocols are flexible enough to handle simple andcomplex routing environments. That is why some startup procedures runrouting protocols by default. However, most UNIX systems need only a staticdefault route. Routing protocals are usually needed only by routers.<ACLASS="indexterm"NAME="AUTOID-7956"></A><ACLASS="indexterm"NAME="AUTOID-7957"></A></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_02.htm"TITLE="7.2 The Minimal Routing Table "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.2 The Minimal Routing Table "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_04.htm"TITLE="7.4 Interior Routing Protocols "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.4 Interior Routing Protocols "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.2 The Minimal Routing Table </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.4 Interior Routing Protocols </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>