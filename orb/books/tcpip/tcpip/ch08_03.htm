<HTML><HEAD><TITLE>[Chapter 8] 8.3 Configuring named </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:36:36Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. Configuring DNS Name Service "><LINKREL="prev"HREF="ch08_02.htm"TITLE="8.2 Configuring the Resolver "><LINKREL="next"HREF="ch08_04.htm"TITLE="8.4 Using nslookup "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_02.htm"TITLE="8.2 Configuring the Resolver "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.2 Configuring the Resolver "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>Configuring DNS Name Service </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_04.htm"TITLE="8.4 Using nslookup "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.4 Using nslookup "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-8-SECT-3">8.3 Configuring named </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-NAMED-SERVER-DAEMON-CONFIGURING"></A>While the resolver configuration requires, at most, one configurationfile, several files are used to configure <BCLASS="emphasis.bold">named</B>. The complete set of <BCLASS="emphasis.bold">named</B> configuration files are:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">named.boot</EM></DT><DDCLASS="listitem"><PCLASS="para">Sets general <BCLASS="emphasis.bold">named</B> parameters and points to the sourcesof domain database information used by this server. These sources canbe local disk files or remote servers.</P></DD><DTCLASS="term"><EMCLASS="emphasis">named.ca</EM></DT><DDCLASS="listitem"><PCLASS="para">Points to the root domain servers</P></DD><DTCLASS="term"><EMCLASS="emphasis">named.local</EM></DT><DDCLASS="listitem"><PCLASS="para">Used to locally resolve the loopback address</P></DD><DTCLASS="term"><EMCLASS="emphasis">named.hosts</EM></DT><DDCLASS="listitem"><PCLASS="para">The zone file that maps hostnames to IP addresses</P></DD><DTCLASS="term"><EMCLASS="emphasis">named.rev</EM></DT><DDCLASS="listitem"><PCLASS="para">The zone file for the reverse domain that maps IP addresses tohostnames</P></DD></DL><PCLASS="para">The filenames shown here are generic names. We use them to make iteasier to discuss the files in this text. The files can have any namesyou wish. Use the filenames <EMCLASS="emphasis">named.boot</EM> and <EMCLASS="emphasis">named.local</EM> forthe boot file and the loopback address file. Use the name<EMCLASS="emphasis">named.ca</EM> or one of the well-known alternatives, <EMCLASS="emphasis">named.root</EM>and <EMCLASS="emphasis">root.ca</EM>, for the file that lists the root servers.  However,don't use the names <EMCLASS="emphasis">named.hosts</EM> and <EMCLASS="emphasis">named.rev</EM> for yourzone files. Use descriptive names. In the following sections, we'lllook at how each of these files is used, starting with<EMCLASS="emphasis">named.boot</EM>.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.1">8.3.1 The named.boot File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-NAMED-BOOT-FILE"></A>The <EMCLASS="emphasis">named.boot</EM> file points <BCLASS="emphasis.bold">named</B> to sources of DNSinformation. Some of these sources are local files; others are remoteservers. You only need to create the files referenced in the primaryand cache statements. We'll look at an example of each type of fileyou may need to create.</P><PCLASS="para"><ACLASS="xref"HREF="ch08_03.htm#TCP2-CH-8-TAB-0"TITLE="named.boot Configuration Commands">Table 8.1</A>summarizes the <EMCLASS="emphasis">named.boot</EM> configuration statements used<ACLASS="indexterm"NAME="AUTOID-9510"></A>in this chapter. It provides just enough information to help youunderstand the examples. Not all of the <EMCLASS="emphasis">named.boot</EM> configurationcommands are used in the examples, and you probably won't use all ofthe commands in your configuration. The commands are designed to coverthe full spectrum of configurations, even the configurations of root<ACLASS="indexterm"NAME="AUTOID-9515"></A>servers. If you want more details about all of the <EMCLASS="emphasis">named.boot</EM>configuration statements, <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A> contains a full explanation ofeach command.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-8-TAB-0">Table 8.1: named.boot Configuration Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">directory</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Defines a directory for all subsequent file references</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">primary</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Declares this server as primary for the specified zone</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">secondary</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Declares this server as secondary for the specified zone</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">cache</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Points to the cache file</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">forwarders</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Lists servers to which queries are forwarded</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">options</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Enables optional BIND processing</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">xfrnets</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Limits zone transfers to specific addresses</TD></TR></TBODY></TABLE><PCLASS="para">The way in which you configure the <EMCLASS="emphasis">named.boot</EM> file controlswhether the nameserver acts as a primary server, a secondary server,or a caching-only server. The best way to understand these differentconfigurations is to look at sample <BCLASS="emphasis.bold">named.boot</B> files. The nextsections show examples of each type of configuration.&#13;</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.1.1">8.3.1.1 Configuring a caching-only nameserver </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-CACHING-ONLY-SERVERS"></A>A caching-only server configuration is simple. A <EMCLASS="emphasis">named.boot</EM> fileand a <EMCLASS="emphasis">named.ca</EM> file are all that you need, though the<EMCLASS="emphasis">named.local</EM> file is usually also used. The most common<EMCLASS="emphasis">named.boot</EM> file for a caching-only server is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;;  a caching-only server configuration;primary         0.0.127.IN-ADDR.ARPA    /etc/named.localcache           .                       /etc/named.ca</PRE></BLOCKQUOTE></P><PCLASS="para">The only line in this sample file required for a caching-onlyconfiguration is the <BCLASS="emphasis.bold">cache</B> statement. <ACLASS="indexterm"NAME="AUTOID-9566"></A>It tells <BCLASS="emphasis.bold">named</B> tomaintain a cache of nameserver responses, and to initialize the cachewith the list of root servers found in the file <EMCLASS="emphasis">named.ca</EM>. Thename of the file containing the root server list can be any name youwish, but <EMCLASS="emphasis">root.cache</EM>, <EMCLASS="emphasis">named.root</EM>, and <EMCLASS="emphasis">named.ca</EM> areoften used. The presence of a cache statement does not make this acaching-only configuration; a cache statement is used in every serverconfiguration. It is the absence of primary and secondarystatements that makes this a caching-only configuration.</P><PCLASS="para">However, there is one primary statement that is an exception to this rule. You'll see it in our sample <EMCLASS="emphasis">named.boot</EM> file, and in almost every caching-onlyconfiguration. It defines the local server as the primary server forits own loopback domain, <ACLASS="indexterm"NAME="AUTOID-9576"></A>and it says that the information for theloopback domain is stored in the file <EMCLASS="emphasis">named.local</EM>. The loopbackdomain is an <EMCLASS="emphasis">in-addr.arpa</EM> domain[5]that maps the address 127.0.0.1 to the name <EMCLASS="emphasis">localhost</EM>.The idea of resolving your own loopbackaddress makes sense to most people, so most <EMCLASS="emphasis">named.boot</EM> filescontain this entry.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] See <ACLASS="xref"HREF="ch04_01.htm"TITLE="Getting Started ">Chapter 4, <CITECLASS="chapter">Getting Started </CITE></A>, for a description of <EMCLASS="emphasis">in-addr.arpa</EM> domains.</P></BLOCKQUOTE><PCLASS="para">These primary and cache statements are the only statements used in mostcaching-only server configurations, but other statements can be added.A <BCLASS="emphasis.bold">forwarders</B> statement, and even an <BCLASS="emphasis.bold">options</B> statement are sometimesused. The <BCLASS="emphasis.bold">forwarders</B> statement causes the caching-only server to sendall of the queries that it cannot resolve from its own cache tospecific servers. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">forwarders 172.16.12.1 172.16.1.2</PRE></BLOCKQUOTE></P><PCLASS="para">This statement forwards every query that cannot be answeredfrom the local cache to 172.16.12.1 and 172.16.1.2. The <BCLASS="emphasis.bold">forwarders</B><ACLASS="indexterm"NAME="AUTOID-9595"></A>command builds a rich DNS cache on selected serverslocated on the local network. This reduces the number of times thatqueries must be sent out on the wide area network, which isparticularly useful if you have limited bandwidth <ACLASS="indexterm"NAME="AUTOID-9597"></A>to the wide areanetwork or if you are charged for usage.</P><PCLASS="para">When network access to the outside world is severely limited, use thefollowing statement to force the local server to always use theforwarder.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">options forward-only</PRE></BLOCKQUOTE></P><PCLASS="para">With this statement in the configuration file, the local server will notattempt to resolve a query itself even if it cannot get an answer to thatquery from the forwarders.</P><PCLASS="para">Adding <BCLASS="emphasis.bold">forwarders</B> or <BCLASS="emphasis.bold">options</B> statements does not changethis from being a caching-only server configuration. Only the additionof primary and secondary commands will do that.<ACLASS="indexterm"NAME="AUTOID-9607"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.1.2">8.3.1.2 Primary and secondary server configurations </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-PRIMARY-NAMESERVERS-CONFIGURING"></A>The imaginary <EMCLASS="emphasis">nuts.com</EM> domain is the basis for our sampleprimary and secondary server configurations. Here is the<EMCLASS="emphasis">named.boot</EM> file to define <EMCLASS="emphasis">almond</EM> as the primary server forthe <EMCLASS="emphasis">nuts.com</EM> domain:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;;  nuts.com primary nameserver boot file.;directory                              /etcprimary   nuts.com                     named.hostsprimary   16.172.IN-ADDR.ARPA          named.revprimary   0.0.127.IN-ADDR.ARPA         named.localcache     .                            named.ca</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">directory</B> statement <ACLASS="indexterm"NAME="AUTOID-9622"></A>saves keystrokes on the subsequentfilenames. It tells <BCLASS="emphasis.bold">named</B> that all relative filenames (i.e.,filenames that don't begin with a /), no matter where they occur in the<BCLASS="emphasis.bold">named</B> configuration, are relative to the directory <EMCLASS="emphasis">/etc</EM>.</P><PCLASS="para">The first primary statement declares that this is the primary serverfor the <EMCLASS="emphasis">nuts.com</EM> domain, and that the data for that domain isloaded from the file <EMCLASS="emphasis">named.hosts</EM>. In our examples, we'll use thefilename <EMCLASS="emphasis">named.hosts</EM> as the zone filename, but youshould choose a more descriptive filename.For example, a better name for the <EMCLASS="emphasis">nuts.com</EM> zonefile is <EMCLASS="emphasis">nuts.com.hosts</EM>.</P><PCLASS="para">The second primary statement points to the file that maps IP addressesfrom 172.16.0.0 to hostnames. This statement says that the localserver is the primary server for the reverse domain<EMCLASS="emphasis">16.172.in-addr.arpa</EM>, and that the data for that domain is loadedfrom the file <EMCLASS="emphasis">named.rev</EM>. Again, the filename <EMCLASS="emphasis">named.rev</EM> isjust an example; use descriptive names in your actualconfiguration.</P><PCLASS="para">The format of a primary statement is the keyword <CODECLASS="literal">primary</CODE>, thedomain name, and the name of the zone file from which the domaininformation is read. All primary statements have this simpleformat.</P><PCLASS="para">The final two statements in the sample configuration are the primarystatement for the loopback domain and the cache statement. Thesestatements are discussed earlier in the section about caching-onlyconfigurations. They have the same function in every configuration andare found in almost every configuration.<ACLASS="indexterm"NAME="AUTOID-9641"></A></P><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-SECONDARY-NAMESERVERS-CONFIGURING"></A>A secondary server's configuration differs from a primary's by using<BCLASS="emphasis.bold">secondary</B> instead of <BCLASS="emphasis.bold">primary</B> statements. Secondarystatements point to remote servers as the source of the domaininformation instead of local disk files. Secondary statements beginwith the keyword <CODECLASS="literal">secondary</CODE>, followed by the name of the domain,the address of one or more authoritative servers for that domain, andfinally the name of a local file where information received from theremote server will be stored. The following <EMCLASS="emphasis">named.boot</EM> fileconfigures <EMCLASS="emphasis">filbert</EM> as a secondary server for the <EMCLASS="emphasis">nuts.com</EM>domain:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;;  nuts.com secondary nameserver boot file.;directory                                       /etcsecondary   nuts.com              172.16.12.1   nuts.com.hostssecondary   16.172.IN-ADDR.ARPA   172.16.12.1   172.16.revprimary     0.0.127.IN-ADDR.ARPA                named.localcache       .                                   named.ca</PRE></BLOCKQUOTE></P><PCLASS="para">The first secondary statement makes this a secondary server forthe <EMCLASS="emphasis">nuts.com</EM> domain. The statement tells <BCLASS="emphasis.bold">named</B> todownload the data for the <EMCLASS="emphasis">nuts.com</EM> domain from the serverat IP address 172.16.12.1, and to store that data in the file<EMCLASS="emphasis">/etc/nuts.com.hosts</EM>. If the <EMCLASS="emphasis">nuts.com.hosts</EM> file does notexist, <BCLASS="emphasis.bold">named</B> creates it, gets the zone data from the remote server,and writes the data in the newly created file. If the file does exist,<BCLASS="emphasis.bold">named</B> checks with the remote server to see if the remote server'sdata is different from the data in the file. If the data has changed,<BCLASS="emphasis.bold">named</B> downloads the updated data and overwrites the file contentswith the new data. If the data has not changed, <BCLASS="emphasis.bold">named</B> loads thecontents of the disk file and doesn't bother with a zone transfer.[6]Keeping a copy of the database on a local disk file makes it unnecessaryto transfer the zone file <ACLASS="indexterm"NAME="AUTOID-9668"></A>every time the local host is rebooted.It's only necessary to transfer the zone when the data changes.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A> (in the SOA record section) discusseshow <BCLASS="emphasis.bold">named</B> determines if data has been updated.</P></BLOCKQUOTE><PCLASS="para">The next line in this configuration says that the local server is alsoa secondary server for the reverse domain <EMCLASS="emphasis">16.172.in-addr.arpa</EM>,and that the data for that domain should also be downloaded from172.16.12.1. The reverse domain data is stored locally in a file named<EMCLASS="emphasis">172.16.rev</EM>, following the same rules discussed previously forcreating and overwriting <EMCLASS="emphasis">nuts.com.hosts</EM>.<ACLASS="indexterm"NAME="AUTOID-9675"></A><ACLASS="indexterm"NAME="AUTOID-9676"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.2">8.3.2 Standard Resource Records </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-STANDARD-RESOURCE-RECORDS-RRS"></A><ACLASS="indexterm"NAME="TCP2-CH-8-IX-STANDARD-RESOURCE-RECORDS-RRS2"></A>The configuration commands discussed above and listed in <ACLASS="xref"HREF="ch08_03.htm#TCP2-CH-8-TAB-0"TITLE="named.boot Configuration Commands">Table 8.1</A>are used only in the <EMCLASS="emphasis">named.boot</EM> file. All other files used toconfigure <BCLASS="emphasis.bold">named</B> (<EMCLASS="emphasis">named.hosts</EM>, <EMCLASS="emphasis">named.rev</EM>,<EMCLASS="emphasis">named.local</EM>, and <EMCLASS="emphasis">named.ca</EM>) store domain databaseinformation. These files all have the same basic format and use thesame type of database records. They use standard resource records,called RRs. These are defined in RFC 1033, the <EMCLASS="emphasis">DomainAdministrators Operations Guide</EM>, and other RFCs.<ACLASS="xref"HREF="ch08_03.htm#TCP2-CH-8-TAB-1"TITLE="Standard Resource Records">Table 8.2</A>summarizes all of the standard resource records used in this chapter.These records are covered in detail in <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-8-TAB-1">Table 8.2: Standard Resource Records</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Resource Record</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Record</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Text Name</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Type</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Start of Authority</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">SOA</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Marks the beginning of a zone's data, and definesparameters that affect the entire zone.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Nameserver</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">NS</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Identifies a domain's nameserver.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Address</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">A</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Converts a hostname to an address.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pointer</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">PTR</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Converts an address to a hostname.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Mail Exchange</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">MX</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Identifies where to deliver mail for a given domain name.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Canonical Name</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CNAME</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Defines an alias hostname.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Host Information</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">HINFO</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Describes a host's hardware and OS.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Well-Known Service</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">WKS</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Advertises network services.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">TXT</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Stores arbitrary text strings.</TD></TR></TBODY></TABLE><PCLASS="para">The resource record syntax is described in <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A>, but a littleunderstanding of the structure of these records is necessary to readthe sample configuration files used in this chapter.&#13;</P><PCLASS="para">The format of DNS resource records is:</P><PCLASS="para">&nbsp;&nbsp;&nbsp;[<CODECLASS="replaceable"><I>name</I></CODE>] [<CODECLASS="replaceable"><I>ttl</I></CODE>] <BCLASS="emphasis.bold">IN</B> <CODECLASS="replaceable"><I>type data</I></CODE></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This is the name of the domain object the resource record references.It can be an individual host or an entire domain. The string enteredfor the <CODECLASS="replaceable"><I>name</I></CODE> field is relative to the current domain unless it ends with adot. If the name field is blank, the record applies to the domainobject that was named last. For example, if the A record for<EMCLASS="emphasis">peanut</EM> is followed by an MX record <ACLASS="indexterm"NAME="AUTOID-9760"></A><ACLASS="indexterm"NAME="AUTOID-9762"></A>with a blank <EMCLASS="emphasis">name</EM> field,both the A record and the MX record apply to <EMCLASS="emphasis">peanut</EM>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>ttl</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-9771"></A>Time-to-live defines the length of time, in seconds, that theinformation in this resource record should be kept in a remote system'scache. Usually this field is left blank and the default <CODECLASS="replaceable"><I>ttl</I></CODE>, setfor the entire zone in the SOA record,<ACLASS="indexterm"NAME="AUTOID-9774"></A>is used.[7]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] See the section on SOA records in <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A>.</P></BLOCKQUOTE></DD><DTCLASS="term"><BCLASS="emphasis.bold">IN</B></DT><DDCLASS="listitem"><PCLASS="para">Identifies the record as an Internet DNS resource record. There areother classes of records, but they are rarely used. Curious? See<ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A> for the other, non-Internet, classes.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>type</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Identifies the kind of resource record. <ACLASS="xref"HREF="ch08_03.htm#TCP2-CH-8-TAB-1"TITLE="Standard Resource Records">Table 8.2</A>lists the record types under the heading &quot;Record Type.&quot; Specify one ofthese values in the <CODECLASS="replaceable"><I>type</I></CODE> field.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>data</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The information specific to this type of resource record. Forexample, in an A record this is the field that contains the actual IPaddress.<ACLASS="indexterm"NAME="AUTOID-9797"></A><ACLASS="indexterm"NAME="AUTOID-9798"></A></P></DD></DL><PCLASS="para">In the following sections we look at each of the remainingconfiguration files. As you look at the files, remember that all ofthe records in these files are standard resource records that followthe format described above.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.3">8.3.3 The Cache Initialization File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-CACHE-INITIALIZATION-FILE"></A>The cache statement in <EMCLASS="emphasis">named.boot</EM> points to a cacheinitialization file. Each server that maintains a cache has sucha file. It contains the information needed to begin building a cache ofdomain data when the nameserver starts.The root domain is indicated on the cache statement by a single dot,and the <EMCLASS="emphasis">named.ca</EM> file contains the names andaddresses of the root servers.</P><PCLASS="para">The <EMCLASS="emphasis">named.ca</EM> file is sometimes called a &quot;hints&quot; file, because it<ACLASS="indexterm"NAME="AUTOID-9810"></A>contains hints <BCLASS="emphasis.bold">named</B> uses to initialize the cache. The hints itcontains are the names and addresses of the root servers. It is used tohelp the local server locate a root server during startup. Once a rootserver is found, an authoritative list of root servers is downloaded fromthat server. The hints are not referred to again until the local serveris forced to restart. The information in the <EMCLASS="emphasis">named.ca</EM> file is notreferred to often, but it is critical for booting a <BCLASS="emphasis.bold">named</B> server.<ACLASS="indexterm"NAME="AUTOID-9815"></A></P><PCLASS="para">The basic <EMCLASS="emphasis">named.ca</EM> file contains NS records that name the rootservers, and A records that provide the addresses of the root servers.A sample <EMCLASS="emphasis">named.ca</EM> file is shown below:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;.                     3600000  IN  NS   A.ROOT-SERVERS.NET.A.ROOT-SERVERS.NET.   3600000  IN  A    198.41.0.4;.                     3600000      NS   B.ROOT-SERVERS.NET.B.ROOT-SERVERS.NET.   3600000  IN  A    128.9.0.107;.                     3600000      NS   C.ROOT-SERVERS.NET.C.ROOT-SERVERS.NET.   3600000  IN  A    192.33.4.12;.                     3600000      NS   D.ROOT-SERVERS.NET.D.ROOT-SERVERS.NET.   3600000  IN  A    128.8.10.90;.                     3600000      NS   E.ROOT-SERVERS.NET.E.ROOT-SERVERS.NET.   3600000  IN  A    192.203.230.10;.                     3600000      NS   F.ROOT-SERVERS.NET.F.ROOT-SERVERS.NET.   3600000  IN  A    192.5.5.241;.                     3600000      NS   G.ROOT-SERVERS.NET.G.ROOT-SERVERS.NET.   3600000  IN  A    192.112.36.4;.                     3600000      NS   H.ROOT-SERVERS.NET.H.ROOT-SERVERS.NET.   3600000  IN  A    128.63.2.53;.                     3600000      NS   I.ROOT-SERVERS.NET.I.ROOT-SERVERS.NET.   3600000  IN  A    192.36.148.17</PRE></BLOCKQUOTE></P><PCLASS="para">This file contains only nameserver and address records. EachNS record identifies a nameserver for the root (<CODECLASS="literal">.</CODE>)domain. The associated A record gives theaddress of each root server. The ttl value for all of these records is3600000&nbsp;- a very large value that is approximately 42 days.</P><PCLASS="para">Create the <EMCLASS="emphasis">named.ca</EM> file by downloading the file<EMCLASS="emphasis">domain/named.root</EM> from <EMCLASS="emphasis">rs.internic.net</EM> (198.41.0.7)via anonymous <BCLASS="emphasis.bold">ftp</B>. The file stored at the InterNIC is in the<ACLASS="indexterm"NAME="AUTOID-9830"></A>correct format for a UNIX system. The example below shows the<ACLASS="indexterm"NAME="AUTOID-9832"></A>superuser downloading the <EMCLASS="emphasis">named.root</EM> file directly intothe local system's <EMCLASS="emphasis">named.ca</EM> file. The file doesn'teven need to be edited: it is ready to run.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">ftp rs.internic.net</B>Connected to rs.internic.net.Name (rs.internic.net:craig): <BCLASS="emphasis.bold">anonymous</B>331 Guest login ok, send your email address as password.Password: <BCLASS="emphasis.bold">craig@nuts.com</B>230 Guest login ok, access restrictions apply.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; <BCLASS="emphasis.bold">get domain/named.root named.ca</B>200 PORT command successful.150 Opening data connection for domain/named.root (2119 bytes).226 Transfer complete.2119 bytes received in 0.137 secs (15 Kbytes/sec)ftp&gt; <BCLASS="emphasis.bold">quit</B>221 Goodbye.</PRE></BLOCKQUOTE></P><PCLASS="para">Download the <EMCLASS="emphasis">named.root</EM> file every few months to keep accurateroot server information in your cache. A bogus root server entry could<ACLASS="indexterm"NAME="AUTOID-9845"></A>cause problems with your local server. The data given above is correctas of publication, but could change at any time.</P><PCLASS="para">If your system is not connected to the Internet, it won't be able tocommunicate with the root servers. Initializing your cache file with theservers listed above would be useless. In this case, initialize yourcache with entries that point to the major nameservers on your localnetwork. Those servers must also be configured to answer queries forthe &quot;root&quot; domain. However, this root domain contains only NS recordspointing to the domain servers on your local network. For example:assume that <EMCLASS="emphasis">nuts.com</EM> is not connected to the Internet and that<EMCLASS="emphasis">almond</EM> and <EMCLASS="emphasis">pecan</EM> are going to act as root servers forthis isolated domain. Both servers declare they are primary forthe root domain in their <EMCLASS="emphasis">named.boot</EM> files. They load the rootfrom a zone file that contains NS records and A records, stating thatthey are authoritative for the root and delegating the <EMCLASS="emphasis">nuts.com</EM>and <EMCLASS="emphasis">16.172.in-addr.arpa</EM> domains to the local nameservers thatservice those domains. (How domains are delegated is covered later inthe chapter.) Details of this type of configuration are provided in<EMCLASS="emphasis">DNS and BIND</EM> by Liu and Albitz (O'Reilly &amp; Associates).<ACLASS="indexterm"NAME="AUTOID-9856"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.4">8.3.4 The named.local File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-NAMED-LOCAL-FILE"></A>The <EMCLASS="emphasis">named.local</EM> file is used to convert the address 127.0.0.1<ACLASS="indexterm"NAME="AUTOID-9863"></A>(the &quot;loopback address&quot;) into the name <EMCLASS="emphasis">localhost</EM>. <ACLASS="indexterm"NAME="AUTOID-9867"></A>It's the zonefile for the reverse domain 0.0.127.IN-ADDR.ARPA. Because all systemsuse 127.0.0.1 as the &quot;loopback&quot; address, this file is virtuallyidentical on every server. Here's a sample <EMCLASS="emphasis">named.local</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">@          IN  SOA      almond.nuts.com. jan.almond.nuts.com. (                        1               ; serial                        360000          ; refresh every 100 hours                        3600            ; retry after 1 hour                        3600000         ; expire after 1000 hours                        360000          ; default ttl is 100 hours                        )           IN  NS       almond.nuts.com.0          IN  PTR      loopback.1          IN  PTR      localhost.</PRE></BLOCKQUOTE></P><PCLASS="para">Neither the NS record nor the first PTR record is required. The firstPTR record maps the network 127.0.0.0 to the name <EMCLASS="emphasis">loopback</EM>, whichis an alternative to mapping the network name in the<EMCLASS="emphasis">/etc/networks</EM> file. Only the SOA record and the second PTRrecord are needed. The required PTR record is the same on every host:host address 1 on network 127.0.0 is mapped to the name<EMCLASS="emphasis">localhost</EM>.</P><PCLASS="para">The SOA record's <ACLASS="indexterm"NAME="AUTOID-9877"></A>data fields and the NS record that contains thecomputer's hostname vary from system to system. The sample SOArecord identifies <EMCLASS="emphasis">almond.nuts.com.</EM> as the server originating thiszone, and the email address <EMCLASS="emphasis">jan.almond.nuts.com.</EM> as the point ofcontact for any questions about the zone. (Note that in an SOA recordthe email address is written with a dot separating the recipient'sname from the hostname: <EMCLASS="emphasis">jan</EM> is the user and<EMCLASS="emphasis">almond.nuts.com</EM> is the host.) Many systems do not include the NSrecord; but when it is used, it contains the computer's hostname.Change these three data fields and you can use this identical file onany host.</P><PCLASS="para">The files discussed so far, <EMCLASS="emphasis">named.boot</EM>, <EMCLASS="emphasis">named.ca</EM>, and<EMCLASS="emphasis">named.local</EM>, are the only files required to configure caching-onlyservers and secondary servers. Most of your servers will use only thesefiles, and the files used will contain almost identical information onevery server.</P><PCLASS="para">The simplest way to create these three files is to copy a sample fileand modify it for your system. Most systems come with sample files.If your system doesn't, sample configuration files are available in the<ACLASS="indexterm"NAME="AUTOID-9888"></A><EMCLASS="emphasis">conf/master</EM> directory[8]of the <EMCLASS="emphasis">bind.tar.gz</EM> file. This compressed <BCLASS="emphasis.bold">tar</B> file can beobtained via anonymous <BCLASS="emphasis.bold">ftp</B> from the <EMCLASS="emphasis">isc/bind/src</EM> directoryon <EMCLASS="emphasis">ftp.isc.org</EM>. <ACLASS="indexterm"NAME="AUTOID-9900"></A>The <EMCLASS="emphasis">named.local</EM> file shown above wasderived from the <EMCLASS="emphasis">named.local</EM> sample that comes with BIND.<ACLASS="indexterm"NAME="AUTOID-9904"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[8] The sample <EMCLASS="emphasis">named.ca</EM> file in this directory is called<EMCLASS="emphasis">root.cache</EM>.</P></BLOCKQUOTE><PCLASS="para">The remaining <BCLASS="emphasis.bold">named</B> configuration files, <EMCLASS="emphasis">named.hosts</EM> and<EMCLASS="emphasis">named.rev</EM>, are more complex, but the relative number of systemsthat require these files is small. Only the primary server needs allof the configuration files, and there should be only one primary serverper zone.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.5">8.3.5 The Reverse Domain File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-REVERSE-DOMAIN-FILES"></A><ACLASS="indexterm"NAME="TCP2-CH-8-IX-NAMED-REV-FILE"></A>The <EMCLASS="emphasis">named.rev</EM> file is very similar in structure to the<EMCLASS="emphasis">named.local</EM> file. Both of these files translate IP addresses intohostnames, so both files contain PTR records.</P><PCLASS="para">The <EMCLASS="emphasis">named.rev</EM> file in our example is the zone file for the<EMCLASS="emphasis">16.172.in-addr.arpa</EM> domain. The domain administrator creates thisfile on <EMCLASS="emphasis">almond</EM>, and every other host that needs this informationgets it from there.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;;        Address to hostname mappings.;@       IN      SOA     almond.nuts.com. jan.almond.nuts.com. (                                10099   ;   Serial                                43200   ;   Refresh                                3600    ;   Retry                                3600000 ;   Expire                                2592000 ) ; Minimum                IN      NS      almond.nuts.com.                IN      NS      filbert.nuts.com.                IN      NS      foo.army.mil.1.12            IN      PTR     almond.nuts.com.2.12            IN      PTR     peanut.nuts.com.3.12            IN      PTR     pecan.nuts.com.4.12            IN      PTR     walnut.nuts.com.2.1             IN      PTR     filbert.nuts.com.6               IN      NS      salt.plant.nuts.com.                IN      NS      pecan.nuts.com.</PRE></BLOCKQUOTE></P><PCLASS="para">Like all zone files, the <EMCLASS="emphasis">named.rev</EM> file begins with an SOArecord. <ACLASS="indexterm"NAME="AUTOID-9927"></A>The <CODECLASS="literal">@</CODE> <ACLASS="indexterm"NAME="AUTOID-9930"></A><ACLASS="indexterm"NAME="AUTOID-9933"></A>in the name field of the SOA recordreferences the current domain. In this case it is the domain definedby the primary statement in our sample <EMCLASS="emphasis">named.boot</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">primary   16.172.IN-ADDR.ARPA              named.rev</PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="literal">@</CODE> in the SOA record allows the primary statement to definethe zone file domain. This same SOA record is used on every zone; italways references the correct domain name because it references thedomain defined for that particular zone file in <EMCLASS="emphasis">named.boot</EM>.Change the hostname (<EMCLASS="emphasis">almond.nuts.com.</EM>) and the manager'smail address (<EMCLASS="emphasis">jan.almond.nuts.com.</EM>), and use this SOA record inany of your zone files.</P><PCLASS="para">The NS records <ACLASS="indexterm"NAME="AUTOID-9945"></A>that follow the SOA record define the nameservers forthe domain. Generally the nameservers are listed immediately after theSOA, before any other record has the chance to modify the domain name.Recall that a blank name field means that the last domain name is stillin force. The SOA's domain reference is still in force because thefollowing NS records have blank name fields.</P><PCLASS="para">PTR records <ACLASS="indexterm"NAME="AUTOID-9948"></A>dominate the <EMCLASS="emphasis">named.rev</EM> file because they are used totranslate addresses to hostnames. The PTR records in our exampleprovide address-to-name conversions for hosts 12.1, 12.2, 12.3, 12.4,and 2.1 on network 172.16. Because they don't end in dots, thevalues in thename fields of these PTR records are relative to the current domain. For example, the value 3.12 is interpreted as<EMCLASS="emphasis">3.12.16.172.in-addr.arpa.</EM>  The hostname in the data field of the PTR record is fully qualified to preventit from being relative to the current domain name. Using theinformation in this PTR, <BCLASS="emphasis.bold">named</B> will translate<EMCLASS="emphasis">3.12.16.172.in-addr.arpa</EM> into <EMCLASS="emphasis">pecan.nuts.com.</EM></P><PCLASS="para">The last two lines of this file are additional NS records. As with anydomain, subdomains can be created in an <EMCLASS="emphasis">in-addr.arpa</EM> domain. <ACLASS="indexterm"NAME="AUTOID-9957"></A>This is what the last two NS records do. These NS records point to<EMCLASS="emphasis">pecan</EM> and <EMCLASS="emphasis">salt</EM> as nameservers for the subdomain<EMCLASS="emphasis">6.16.172.in-addr.arpa</EM>. Any query for information in the<EMCLASS="emphasis">6.16.172.in-addr.arpa</EM> subdomain is referred to them. NS recordsthat point to the servers for a subdomain must be placed in thehigher-level domain before you can use that subdomain.</P><PCLASS="para">Subdomains <ACLASS="indexterm"NAME="AUTOID-9965"></A>in the <EMCLASS="emphasis">in-addr.arpa</EM> domain are not as common or as useful assubdomains in the host namespace. Domain names and IP addresses arenot the same thing, and do not have the same structure.  When an IPaddress is turned into an <EMCLASS="emphasis">in-addr.arpa</EM> domain name, the fourbytes of the address are treated as four distinct pieces. In reality,the IP address is 32 contiguous bits. Subnets divide up the IP addressspace and subnet masks are bit-oriented, which does not limit them tobyte boundaries. <EMCLASS="emphasis">in-addr.arpa</EM> subdomains divide up the domainname space and can only occur at a full byte boundary because eachbyte of the address is treated as a distinct &quot;name.&quot;<ACLASS="indexterm"NAME="AUTOID-9970"></A><ACLASS="indexterm"NAME="AUTOID-9971"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.6">8.3.6 The named.hosts File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-8-IX-NAMED-HOSTS-FILE"></A>The <EMCLASS="emphasis">named.hosts</EM> file contains most of the domain information.This file converts hostnames to IP addresses, so A recordspredominate; but it also contains MX, CNAME, and other records. The<EMCLASS="emphasis">named.hosts</EM> file, like the <EMCLASS="emphasis">named.rev</EM> file, is only createdon the primary server. All others servers get this information from theprimary server.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">;;       Addresses and other host information.;@       IN      SOA     almond.nuts.com. jan.almond.nuts.com. (                                10118      ; Serial                                43200      ; Refresh                                3600       ; Retry                                3600000    ; Expire                                2592000 )  ; Minimum;	Define the nameservers and the mail servers                IN      NS      almond.nuts.com.                IN      NS      filbert.nuts.com.                IN      NS      foo.army.mil.                IN      MX      10 almond.nuts.com.                IN      MX      20 pecan.nuts.com.;;       Define localhost;localhost       IN      A       127.0.0.1;;       Define the hosts in this zone;almond          IN      A       172.16.12.1                IN      MX      5 almond.nuts.com.loghost         IN      CNAME   almond.nuts.com.peanut          IN      A       172.16.12.2                IN      MX      5 almond.nuts.com.goober          IN      CNAME   peanut.nuts.com.pecan           IN      A       172.16.12.3walnut          IN      A       172.16.12.4filbert         IN      A       172.16.1.2;       host table has BOTH host and gateway entries for 10.104.0.19mil-gw          IN      A       10.104.0.19;;    Glue records for servers within this domain;pack.plant      IN      A       172.16.18.15acorn.sales     IN      A       172.16.6.1;;       Define sub-domains;plant           IN      NS      pack.plant.nuts.com.                IN      NS      pecan.nuts.com.sales           IN      NS      acorn.sales.nuts.com.                IN      NS      pack.plant.nuts.com.</PRE></BLOCKQUOTE></P><PCLASS="para">Like the <EMCLASS="emphasis">named.rev</EM> file, the <EMCLASS="emphasis">named.hosts</EM> file begins with<ACLASS="indexterm"NAME="AUTOID-9985"></A>an SOA record and a few NS records <ACLASS="indexterm"NAME="AUTOID-9987"></A>that define the domain and itsservers, but the <EMCLASS="emphasis">named.hosts</EM> file contains a wider variety ofresource records than a <EMCLASS="emphasis">named.rev</EM> file does. We'll look at eachof these records in the order in which they occur in the sample file, sothat you can follow along using the sample file as your reference.</P><PCLASS="para">The first MX record <ACLASS="indexterm"NAME="AUTOID-9992"></A><ACLASS="indexterm"NAME="AUTOID-9994"></A>identifies a mail server for the entire domain.This record says that <EMCLASS="emphasis">almond</EM> is the mail server for <EMCLASS="emphasis">nuts.com</EM>with a preference of 10. Mail addressed to <EMCLASS="emphasis">user@nuts.com</EM>is redirected to <EMCLASS="emphasis">almond</EM> for delivery. Of course for <EMCLASS="emphasis">almond</EM>to successfully deliver the mail, it must be properly configured asa mail server. The MX record is only part of the story. We look atconfiguring <BCLASS="emphasis.bold">sendmail</B> in <ACLASS="xref"HREF="ch10_01.htm"TITLE="sendmail ">Chapter 10, <CITECLASS="chapter">sendmail </CITE></A>.</P><PCLASS="para">The second MX record identifies <EMCLASS="emphasis">pecan</EM> as a mail server for<EMCLASS="emphasis">nuts.com</EM> with a preference of 20. Preference numbers let youdefine alternate mail servers. The lower the preference number,the more desirable the server. Therefore, our two sample MX recordssay &quot;send mail for the <EMCLASS="emphasis">nuts.com</EM> domain to <EMCLASS="emphasis">almond</EM> first;if <EMCLASS="emphasis">almond</EM> is unavailable, try sending the mail to <EMCLASS="emphasis">pecan</EM>.&quot;Rather than relying on a single mail server, preference numbers allowyou to create backup servers. If the main mail server is unreachable,the domain's mail is sent to one of the backups instead.</P><PCLASS="para">These sample MX records redirect mail addressed to <EMCLASS="emphasis">nuts.com</EM>, butmail addressed to <EMCLASS="emphasis">user@walnut.nuts.com</EM> will still be sentdirectly to <EMCLASS="emphasis">walnut.nuts.com</EM>&nbsp;- not to <EMCLASS="emphasis">almond</EM> or <EMCLASS="emphasis">pecan</EM>.This configuration allows simplified mail addressing in the form<EMCLASS="emphasis">user@</EM><EMCLASS="emphasis">nuts.com</EM> for those who want to take advantage of it,but it continues to allow direct mail delivery to individual hosts forthose who wish to take advantage of that.</P><PCLASS="para">The first A record in this example defines the address for<EMCLASS="emphasis">localhost</EM>. This is the opposite of the PTR entry in the<EMCLASS="emphasis">named.local</EM> file. It allows users within the <EMCLASS="emphasis">nuts.com</EM> domainto enter the name <EMCLASS="emphasis">localhost</EM> and have it resolved to the address127.0.0.1 by the local nameserver.</P><PCLASS="para">The next A record defines the IP address for <EMCLASS="emphasis">almond</EM>. (Note thatthe records that relate to a single host are grouped together, whichis the most common structure used in zone files.) The A record isfollowed by an MX record and a CNAME record that both relate to<EMCLASS="emphasis">almond</EM>. The <EMCLASS="emphasis">almond</EM> MX record points back to the hostitself, and the CNAME record <ACLASS="indexterm"NAME="AUTOID-10027"></A>defines an alias for the host name.<ACLASS="indexterm"NAME="AUTOID-10029"></A></P><PCLASS="para">This host-specific MX record is provided as a courtesy to remotemailers. Somemailer implementations look for an MX record first, and then query forthe host's address. Providing an MX record saves these mailers oneadditional nameserver query.  </P><PCLASS="para"><EMCLASS="emphasis">peanut</EM>'s A record is also followed by an MX record and a CNAMErecord. However, <EMCLASS="emphasis">peanut</EM>'s MX record serves a different purpose.It directs all mail addressed to <EMCLASS="emphasis">user@peanut.nuts.com</EM> to<EMCLASS="emphasis">almond</EM>. This MX record is required because the MX records atthe beginning of the zone file redirect mail only if it is addressedto <EMCLASS="emphasis">user@nuts.com</EM>. If you also want to redirect mailaddressed to <EMCLASS="emphasis">peanut</EM>, you need a &quot;peanut-specific&quot; MX record.</P><PCLASS="para">The name field of the CNAME record contains an alias for the officialhostname. The official name, called the canonical name, is providedin the data field of the record. Because of these records, <EMCLASS="emphasis">almond</EM>can be referred to by the name <EMCLASS="emphasis">loghost</EM>, and <EMCLASS="emphasis">peanut</EM> can bereferred to as <EMCLASS="emphasis">goober</EM>.The <EMCLASS="emphasis">loghost</EM>aliasis a generic hostname used to direct<BCLASS="emphasis.bold">syslogd</B> output to <EMCLASS="emphasis">almond</EM>.[9]Hostname aliases should <EMCLASS="emphasis">not</EM> be used in other resourcerecords.[10]For example, don't use an alias as the name of a mailserver in an MX record. Use <EMCLASS="emphasis">only</EM> the &quot;canonical&quot; (official)name that's defined in an A record.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] See <ACLASS="xref"HREF="ch03_01.htm"TITLE="Network Services">Chapter 3</A> for a further discussion of generic hostnames.</P><PCLASS="para">[10] See <ACLASS="xref"HREF="appc_01.htm"TITLE="A named Reference">Appendix C</A> for additional information about using CNAME recordsin the <EMCLASS="emphasis">named.hosts</EM> file.</P></BLOCKQUOTE><PCLASS="para">Your <EMCLASS="emphasis">named.hosts</EM> file will be much larger than the sample filewe've discussed, but it will contain essentially the same records. If you know thenames and addresses of the hosts in your domain, you have most of theinformation necessary to create the <BCLASS="emphasis.bold">named</B> configuration.<ACLASS="indexterm"NAME="AUTOID-10060"></A></P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-8-SECT-3.6.1">8.3.6.1 Starting named </A></H4><PCLASS="para">After you construct the <EMCLASS="emphasis">named.boot</EM> file and the required zonefiles, start <BCLASS="emphasis.bold">named</B>. <BCLASS="emphasis.bold">named</B> is usually started at boot time<ACLASS="indexterm"NAME="AUTOID-10067"></A>from a startup script, <ACLASS="indexterm"NAME="AUTOID-10070"></A>but it can be started at the command prompt:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>named</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The first time you run it, watch for error messages. <BCLASS="emphasis.bold">named</B> logserrors to the <EMCLASS="emphasis">messages</EM> file.[11]Once <BCLASS="emphasis.bold">named</B> is running to your satisfaction, use <BCLASS="emphasis.bold">nslookup</B> toquery the nameserver to make sure it is providing the correctinformation.<ACLASS="indexterm"NAME="AUTOID-10083"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] This file if found at <EMCLASS="emphasis">/usr/adm/messages</EM> on both our Linux andSolaris sample systems but it might be located somewhere else on yoursystem. Check your system's documentation.</P></BLOCKQUOTE></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_02.htm"TITLE="8.2 Configuring the Resolver "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.2 Configuring the Resolver "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_04.htm"TITLE="8.4 Using nslookup "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 8.4 Using nslookup "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.2 Configuring the Resolver </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">8.4 Using nslookup </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>