<HTML><HEAD><TITLE>[Chapter 9] Configuring Network Servers </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:37:05Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="index.htm"TITLE="TCP/IP Network Administration"><LINKREL="prev"HREF="ch08_05.htm"TITLE="8.5 Summary "><LINKREL="next"HREF="ch09_02.htm"TITLE="9.2 Line Printer Daemon "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_05.htm"TITLE="8.5 Summary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.5 Summary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_02.htm"TITLE="9.2 Line Printer Daemon "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.2 Line Printer Daemon "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="TCP2-CH-9">9. Configuring Network Servers </A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="SECT1"HREF="#TCP2-CH-9-SECT-1"TITLE="9.1 The Network File System ">The Network File System </A><BR><ACLASS="SECT1"HREF="ch09_02.htm"TITLE="9.2 Line Printer Daemon ">Line Printer Daemon </A><BR><ACLASS="SECT1"HREF="ch09_03.htm"TITLE="9.3 Network Information Service ">Network Information Service </A><BR><ACLASS="SECT1"HREF="ch09_04.htm"TITLE="9.4 A BOOTP Server ">A BOOTP Server </A><BR><ACLASS="SECT1"HREF="ch09_05.htm"TITLE="9.5 DHCP ">DHCP </A><BR><ACLASS="SECT1"HREF="ch09_06.htm"TITLE="9.6 Managing Distributed Servers ">Managing Distributed Servers </A><BR><ACLASS="SECT1"HREF="ch09_07.htm"TITLE="9.7 Mail Servers ">Mail Servers </A><BR><ACLASS="SECT1"HREF="ch09_08.htm"TITLE="9.8 Summary ">Summary </A></P><P></P></DIV><PCLASS="para">Now our attention turns to configuring network servers.<ACLASS="indexterm"NAME="AUTOID-10248"></A>As with name service, these servers are not strictly required for thenetwork to operate, but they provide services that are central to thenetwork's purpose.</P><PCLASS="para">There are many network services&nbsp;- many more than can be covered in thischapter. We concentrate on servers that provide &quot;computer-to-computer&quot;<ACLASS="indexterm"NAME="AUTOID-10253"></A>services.[1]The services covered in this chapter are:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Notably absent is <BCLASS="emphasis.bold">sendmail</B>. It requires so muchdiscussion, it has its own chapter (<ACLASS="xref"HREF="ch10_01.htm"TITLE="sendmail ">Chapter 10, <CITECLASS="chapter">sendmail </CITE></A>)!</P></BLOCKQUOTE><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The Network File System (NFS)</P></LI><LICLASS="listitem"><PCLASS="para">The Line Printer Daemon (LPD)</P></LI><LICLASS="listitem"><PCLASS="para">The Network Information Service (NIS)</P></LI><LICLASS="listitem"><PCLASS="para">The Bootstrap Protocol (BOOTP)</P></LI><LICLASS="listitem"><PCLASS="para">Dynamic Host Configuration Protocol (DHCP)</P></LI><LICLASS="listitem"><PCLASS="para">The Post Office Protocol (POP)</P></LI></UL><PCLASS="para">We begin with NFS, which is the server that provides file sharing onUNIX networks.</P><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-9-SECT-1">9.1 The Network File System </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-NETWORK-FILE-SYSTEM-NFS"></A>The Network File System (NFS) allows directories and files to be sharedacross a network. It was originally developed by Sun Microsystems, butis now supported by virtually all UNIX implementations and manynon-UNIX operating systems. Through NFS, users and programs can accessfiles located on remote systems <ACLASS="indexterm"NAME="AUTOID-10279"></A>as if they were local files. In aperfect NFS environment, the user neither knows nor cares where filesare actually stored.</P><PCLASS="para">NFS has several benefits:<ACLASS="indexterm"NAME="AUTOID-10284"></A></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">It reduces local disk storage requirements because a network canstore a single copy of a directory,while the directory continues to be fully accessible to everyone onthe network.</P></LI><LICLASS="listitem"><PCLASS="para">NFS simplifies central support tasks&nbsp;- files can be updatedcentrally, yet available throughout the network.</P></LI><LICLASS="listitem"><PCLASS="para">NFS allows users to use familiar UNIX commands <ACLASS="indexterm"NAME="AUTOID-10294"></A>to manipulate remote files instead of learning new commands. There isno need to use <BCLASS="emphasis.bold">ftp</B> or <BCLASS="emphasis.bold">rcp</B> to copy a file between hosts onthe network; <BCLASS="emphasis.bold">cp</B> works fine.<ACLASS="indexterm"NAME="AUTOID-10300"></A></P></LI></UL><PCLASS="para">There are two sides to NFS&nbsp;- a client side and a server side. Theclient is the system that uses the remote directories as if they werepart of its local filesystem. The server is the system that makes thedirectories available for use. Attaching a remote directory to thelocal filesystem (a client function) is called <EMCLASS="emphasis">mounting</EM> adirectory.<ACLASS="indexterm"NAME="AUTOID-10304"></A>Offering a directory for remote access (a server function)is called <EMCLASS="emphasis">sharing</EM><ACLASS="indexterm"NAME="AUTOID-10308"></A>a directory.[2]Frequently, a system runs both the client and the server NFS software.In this section we'll look at how to configure a system to share andmount directories using NFS.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] An older term for this function is <EMCLASS="emphasis">exporting</EM>. Many systems stillrefer to file sharing as exporting.</P></BLOCKQUOTE><PCLASS="para">If you're responsible for an NFS server for a large site, you shouldtake care in planning and implementing the NFS environment. Thediscussion in this chapter tells how NFS is configured to run on aclient and a server, but you may want more details to design anoptimal NFS environment.  For a comprehensive treatment, see<EMCLASS="emphasis">Managing NFS and NIS</EM>, by Hal Stern (O'Reilly &amp; Associates).</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.1">9.1.1 NFS Daemons </A></H3><PCLASS="para">The Network File System is run by several daemons, some performing client functions and some performing server functions.Before we discuss the NFS configuration, let's look at the function ofthe daemons that run NFS:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">nfsd</B> [<CODECLASS="replaceable"><I>nservers</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10326"></A>The NFS daemon, <BCLASS="emphasis.bold">nfsd</B>, runs on NFS servers. This daemon servicesthe client's NFS requests. The <CODECLASS="replaceable"><I>nservers</I></CODE> option<ACLASS="indexterm"NAME="AUTOID-10330"></A>is available on Solaris systems. It specifies how many daemons shouldbe started.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">mountd</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10337"></A>The NFS mount daemon, <BCLASS="emphasis.bold">mountd</B>, processes the clients' mountrequests. NFS servers run the mount daemon.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">lockd</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10346"></A>The lock daemon, <BCLASS="emphasis.bold">lockd</B>, handles file lock requests. Both<ACLASS="indexterm"NAME="AUTOID-10349"></A>clients and servers run the lock daemon. Clients request file locks,and servers grant them.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">statd</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10357"></A>The network status monitor daemon, <BCLASS="emphasis.bold">statd</B>, is required by<BCLASS="emphasis.bold">lockd</B> to provide monitoring services. In particular, itallows locks to be reset properly after a crash.<ACLASS="indexterm"NAME="AUTOID-10361"></A>Both clients and servers run <BCLASS="emphasis.bold">statd</B>.</P></DD></DL><PCLASS="para">The daemons necessary to run NFS are started from boot scripts. On a<ACLASS="indexterm"NAME="AUTOID-10366"></A>Solaris system, two scripts located in the <EMCLASS="emphasis">/etc/init.d</EM><ACLASS="indexterm"NAME="AUTOID-10370"></A><ACLASS="indexterm"NAME="AUTOID-10372"></A>directory, <EMCLASS="emphasis">nfs.client</EM> and <EMCLASS="emphasis">nfs.server</EM>, handle this job.The <EMCLASS="emphasis">nfs.client</EM> script<ACLASS="indexterm"NAME="AUTOID-10378"></A>starts the <BCLASS="emphasis.bold">statd</B> and <BCLASS="emphasis.bold">lockd</B> programs.[3]NFS server systems run those two daemons, plus the NFS server daemon,<BCLASS="emphasis.bold">nfsd</B>, and the mount server daemon, <BCLASS="emphasis.bold">mountd</B>. On Solarissystems, the <EMCLASS="emphasis">nfs.server</EM> script<ACLASS="indexterm"NAME="AUTOID-10388"></A>starts <BCLASS="emphasis.bold">mountd</B> and 16 copies of <BCLASS="emphasis.bold">nfsd</B>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] On your system, the prefix &quot;rpc.&quot; may be used on the daemon names. Forexample, the Slackware Linux system uses the filename <EMCLASS="emphasis">rpc.nfsd</EM>for the NFS daemon. Check your system's documentation.</P></BLOCKQUOTE><PCLASS="para">Each system has its own technique for starting these daemons.  If someof the daemons aren't starting, make sure your startup scripts arecorrect.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.2">9.1.2 Sharing Filesystems </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-SHARING-FILESYSTEMS"></A>The first step in configuring a server is deciding which filesystemswill be shared, and what restrictions will be placed on them.  Onlyfilesystems that provide a benefit to the client should beshared. Before you share a filesystem, think about what purpose itwill serve. Some common reasons for sharing filesystems are:<ACLASS="indexterm"NAME="AUTOID-10399"></A></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">To provide disk space to diskless clients</P></LI><LICLASS="listitem"><PCLASS="para">To prevent unnecessary duplication of the same data on multiplesystems</P></LI><LICLASS="listitem"><PCLASS="para">To provide centrally supported programs and data</P></LI><LICLASS="listitem"><PCLASS="para">To share data among users in a group</P></LI></UL><PCLASS="para">Once you've selected the filesystems you'll share, you must configuringthem for sharing using the appropriate commands for your system. In thefollowing sections we emphasize the way this is done on Solaris systems.It is very different on Linux systems. Check your system'sdocumentation to find out exactly how it implements NFS file sharing.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.2.1">9.1.2.1 The share command </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10416"></A>On Solaris systems, directories are shared using the <BCLASS="emphasis.bold">share</B> command.<ACLASS="indexterm"NAME="AUTOID-10420"></A></P><PCLASS="para">A simplified syntax for the <BCLASS="emphasis.bold">share</B> command is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>share -F nfs </B></CODE>[<CODECLASS="userinput"><B>-o </B></CODE><CODECLASS="replaceable"><I>options</I></CODE>] <CODECLASS="replaceable"><I>pathname</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">where <CODECLASS="replaceable"><I>pathname</I></CODE> is the path of the directory the server isoffering to share with its clients, and <CODECLASS="replaceable"><I>options</I></CODE> are the accesscontrols for that directory. The commonly used options are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">rw</B></DT><DDCLASS="listitem"><PCLASS="para">The <BCLASS="emphasis.bold">rw</B> option grants read and write access to the shared<ACLASS="indexterm"NAME="AUTOID-10440"></A>filesystem.  It can be specified in the form<BCLASS="emphasis.bold">rw=</B><EMCLASS="emphasis">host</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">host...</EM> to identify the individual hosts thatare granted this access. When used in this way, only the hostsidentified in the list are given access to the filesystem. If thecolon-separated list of hostnames is not provided with the <BCLASS="emphasis.bold">rw</B>option, all hosts are given read/write access to the filesystem. Infact, if no options are specified at all, the <BCLASS="emphasis.bold">share</B> commanddefaults to giving all clients read/write access. This default isacceptable if your systems are on an isolated network, but if they areon a connected network, this could open up a security hole. It is the<ACLASS="indexterm"NAME="AUTOID-10449"></A>best practice to restrict access to those hosts that you really trust.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">ro</B></DT><DDCLASS="listitem"><PCLASS="para">This option limits access to read-only.<ACLASS="indexterm"NAME="AUTOID-10457"></A>It also can be specified with a colon-separated host list, e.g.,<BCLASS="emphasis.bold">ro=</B><EMCLASS="emphasis">host</EM><BCLASS="emphasis.bold">:</B><EMCLASS="emphasis">host...</EM>.  When the host list is included, onlythe hosts on the list have access and that access is limited toread-only.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">root=</B><CODECLASS="replaceable"><I>host</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">This option allows the <EMCLASS="emphasis">root</EM> user on the specified host to have<ACLASS="indexterm"NAME="AUTOID-10471"></A>root access to the shared filesystem. Normally, the root user on aremote system is mapped to the userid <EMCLASS="emphasis">nobody</EM><ACLASS="indexterm"NAME="AUTOID-10474"></A>and given only normal user privileges. Granting root access is a bigsecurity risk.</P></DD></DL><PCLASS="para">The <BCLASS="emphasis.bold">rw</B> and <BCLASS="emphasis.bold">ro</B> options can be combined to grant different<ACLASS="indexterm"NAME="AUTOID-10479"></A>levels of access to different clients. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">share -F nfs -o rw=almond:pecan ro  /usr/manshare -F nfs -o rw=peanut:almond:pecan:walnut  /export/home/research</PRE></BLOCKQUOTE></P><PCLASS="para">The first <BCLASS="emphasis.bold">share</B> command grants read and write access to<EMCLASS="emphasis">almond</EM> and <EMCLASS="emphasis">peanut</EM> and read-only access to all otherclients. On the other hand, the second <BCLASS="emphasis.bold">share</B> command grantsread/write access to <EMCLASS="emphasis">peanut</EM>, <EMCLASS="emphasis">almond</EM>, <EMCLASS="emphasis">pecan</EM>, and<EMCLASS="emphasis">walnut</EM>, and no access of any kind to any other client.</P><PCLASS="para">The <BCLASS="emphasis.bold">share</B> command does not survive a boot. Put the <BCLASS="emphasis.bold">share</B>commands in the <EMCLASS="emphasis">/etc/dfs/dfstab</EM> file<ACLASS="indexterm"NAME="AUTOID-10497"></A><ACLASS="indexterm"NAME="AUTOID-10500"></A>to make sure that the filesystems continue to be offered to yourclients even if the system reboots.  Here is a sample <EMCLASS="emphasis">dfstab</EM>file containing our two <BCLASS="emphasis.bold">share</B> commands:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% cat /etc/dfs/dfstab#   place share(1M) commands here for automatic execution#   on entering init state 3.##   share [-F fstype] [ -o options] [-d &quot;&lt;text&gt;&quot;] &lt;pathname&gt; [resource]#   .e.g,#   share  -F nfs  -o rw=engineering  -d &quot;home dirs&quot;  /export/home2share -F nfs -o rw=almond:pecan ro  /usr/manshare -F nfs -o rw=peanut:almond:pecan:walnut  /export/home/research</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">share</B> command, the <EMCLASS="emphasis">dfstab</EM> file, and even theterminology &quot;share&quot; are Solaris-specific. Most UNIX systems say thatthey are exporting files, instead of sharing files, when they areoffering files to NFS clients. Furthermore, they do not use the<BCLASS="emphasis.bold">share</B> command or the <EMCLASS="emphasis">dfstab</EM> file; instead, they offerfilesystems through the <EMCLASS="emphasis">/etc/exports</EM> file. Linux is an exampleof such a system.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.2.2">9.1.2.2 The /etc/exports file </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10515"></A>The <EMCLASS="emphasis">/etc/exports</EM> file is the NFS server configuration file for<ACLASS="indexterm"NAME="AUTOID-10519"></A>Linux systems. It controls which files and directories are shared(exported), which hosts can access them, and what kinds of access areallowed. A sample <EMCLASS="emphasis">/etc/exports</EM> file might contain theseentries:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/usr/man        almond(rw) pecan(rw)  (ro)/usr/local      (ro)/home/research  peanut(rw) almond(rw) pecan(rw) walnut(rw)</PRE></BLOCKQUOTE></P><PCLASS="para">This sample file says that:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">/usr/man</EM> can be mounted by any client, but it can be writtento only by <EMCLASS="emphasis">almond</EM> and <EMCLASS="emphasis">pecan</EM>. Other clients have read-only access. </P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">/usr/local</EM> can be mounted by any client, with read-onlyaccess.</P></LI><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">/home/research</EM> can be mounted only by the hosts <EMCLASS="emphasis">peanut</EM>,<EMCLASS="emphasis">almond</EM>, <EMCLASS="emphasis">pecan</EM>, and <EMCLASS="emphasis">walnut</EM>. These fourhosts have read-write access.</P></LI></UL><PCLASS="para">The options used in each of the entries in the <EMCLASS="emphasis">/etc/exports</EM> filedetermine what kinds of access are allowed. The information derivedfrom the sample file is based on the options specified on each line inthe file. The general format of the entries is as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>directory</I></CODE> [<CODECLASS="replaceable"><I>host</I></CODE>(<CODECLASS="replaceable"><I>option</I></CODE>)]...</PRE></BLOCKQUOTE></P><PCLASS="para"><CODECLASS="replaceable"><I>directory</I></CODE> names the directory or file that is available forexport. The <CODECLASS="replaceable"><I>host</I></CODE> is the name of the client granted access to theexported directory while the <CODECLASS="replaceable"><I>option</I></CODE> specifies the type of accessbeing granted. The options used in the sample file are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">ro</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10559"></A>Read-only prevents NFS clients from writing to this directory. Attemptsby clients to write to a read-only directory fail with the message:&quot;Read-only filesystem&quot; or &quot;Permission denied.&quot; If <BCLASS="emphasis.bold">ro</B> is specifiedwithout a client hostname, all clients are granted read-only access.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">rw</B></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10568"></A>Read-write permits clients to read and write to this directory.When specified without hostname, as simply <BCLASS="emphasis.bold">(rw)</B>, all clients aregranted read-write access. If a hostname is specified, only the namedhost is given read-write permission.<ACLASS="indexterm"NAME="AUTOID-10572"></A></P></DD></DL></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.3">9.1.3 Mounting Remote Filesystems </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-MOUNTING-REMOTE-FILESYSTEMS"></A>You need some basic information before you can decide which NFSdirectories to mount on your system. You need to know which servers areconnected to your network, and which directories are available fromthose servers. A directory cannot be mounted<ACLASS="indexterm"NAME="AUTOID-10579"></A>unless it is first exported by a server.</P><PCLASS="para">Your network administrator is a good source for this information. Theadministrator can tell you what systems are providing NFS service, whatdirectories they are exporting, and what these directories contain. Ifyou are the administrator of an NFS server, you should develop thistype of information for your users. See <ACLASS="xref"HREF="ch04_01.htm"TITLE="Getting Started ">Chapter 4, <CITECLASS="chapter">Getting Started </CITE></A>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10585"></A>On Solaris systems you can also obtain information about the shareddirectories directly from the servers by using the <BCLASS="emphasis.bold">showmount</B><ACLASS="indexterm"NAME="AUTOID-10590"></A>command. The NFS servers are usually the same centrally supportedsystems that provide other services such as mail and domain nameservice.  Select a likely server and query it with the command<BCLASS="emphasis.bold">showmount -e </B><EMCLASS="emphasis">hostname</EM>. In response to this command, theserver lists the directories that it exports and the conditionsapplied to their export. </P><PCLASS="para">For example, a <BCLASS="emphasis.bold">showmount -e</B> query to<EMCLASS="emphasis">filbert</EM> produces the following output:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>showmount -e filbert</B></CODE>export list for filbert:/usr/man           (everyone)/home/research     peanut,almond,walnut,pecan/usr/local         (everyone)</PRE></BLOCKQUOTE></P><PCLASS="para">The export list shows the NFS directories exported by <EMCLASS="emphasis">filbert</EM>, aswell as who is allowed to access those directories. From this list,<EMCLASS="emphasis">peanut</EM>'s administrator may decide to mount any of the directoriesoffered by <EMCLASS="emphasis">filbert</EM>. Our imaginaryadministrator decides to:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Mount <EMCLASS="emphasis">/usr/man</EM> from <EMCLASS="emphasis">filbert</EM> instead of maintaining the<BCLASS="emphasis.bold">man</B> pages locally.</P></LI><LICLASS="listitem"><PCLASS="para">Mount <EMCLASS="emphasis">/home/research</EM> to more easily share files with othersystems in the research group.</P></LI><LICLASS="listitem"><PCLASS="para">Mount the centrally maintained programs in <EMCLASS="emphasis">/usr/local</EM>.</P></LI></OL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10617"></A>These selections represent some of the most common motivations formounting NFS directories. These are to:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Save disk space</P></LI><LICLASS="listitem"><PCLASS="para">Share files with other systems</P></LI><LICLASS="listitem"><PCLASS="para">Maintain common files centrally</P></LI></UL><PCLASS="para">The amount to which you use NFS is a personal choice. Some people prefer thegreater personal control you get from keeping files locally, whileothers prefer the convenience offered by NFS. Your site may haveguidelines for how NFS should be used, which directories should bemounted, and which files should be centrally maintained. Check with yournetwork administrator if you're unsure about how NFS is used at yoursite.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.3.1">9.1.3.1 The mount command </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-MOUNT-COMMAND"></A>A client must mount a shared directory before using it. &quot;Mounting&quot;the directory attaches it to the client's filesystem hierarchy.Only directories offered by the servers can be mounted, but any part ofthe offered directory, such as a subdirectory or a file, can be mounted.</P><PCLASS="para">NFS directories are mounted using the <BCLASS="emphasis.bold">mount</B> command. The generalstructure of the <BCLASS="emphasis.bold">mount</B> command is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mount <CODECLASS="replaceable"><I>hostname</I></CODE>:<CODECLASS="replaceable"><I>remote-directory local-directory</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <CODECLASS="replaceable"><I>hostname</I></CODE> identifies an NFS server, and the<CODECLASS="replaceable"><I>remote-directory</I></CODE> identifies all or part of a directory offeredby that server. The <BCLASS="emphasis.bold">mount</B> command attaches that remote directoryto the client's filesystem using the directory name provided for<CODECLASS="replaceable"><I>local-directory</I></CODE>. The client's local directory, called the mount<ACLASS="indexterm"NAME="AUTOID-10647"></A>point, must be created before <BCLASS="emphasis.bold">mount</B> is executed. Once the mountis completed, files located in the remote directory can be accessedthrough the local directory exactly as if they were local files.</P><PCLASS="para">For example, assume that <EMCLASS="emphasis">filbert.nuts.com</EM> is an NFS server and thatit shares the files shown in the section above. Further assume that theadministrator of <EMCLASS="emphasis">peanut</EM> wants to access the <EMCLASS="emphasis">/home/research</EM>directory. The administrator simply creates a local <EMCLASS="emphasis">/home/research</EM>directory, and mounts the remote <EMCLASS="emphasis">/home/research</EM> directory offeredby <EMCLASS="emphasis">filbert</EM> on this newly created mount point.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>mkdir /home/research</B></CODE># <CODECLASS="userinput"><B>mount filbert:/home/research /home/research</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Once a remote directory is mounted, it stays attached to the local filesystem until it is explicitly dismounted or the local system reboots.To dismount a directory, use the <BCLASS="emphasis.bold">umount</B> command. <ACLASS="indexterm"NAME="AUTOID-10664"></A>On the <BCLASS="emphasis.bold">umount</B> command line, specify either the local or remotename of the directory that is to be dismounted. For example, theadministrator of <EMCLASS="emphasis">peanut</EM> can dismount the remote<EMCLASS="emphasis">filbert:/home/research</EM> filesystem from the local<EMCLASS="emphasis">/home/research</EM> mount point, with either:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>umount /home/research</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">or:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>umount filbert:/home/research</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Booting also dismounts NFS directories. Because systems frequently<ACLASS="indexterm"NAME="AUTOID-10678"></A>wish to mount the same filesystems every time they boot, UNIX providesa system for automatically remounting after a boot.<ACLASS="indexterm"NAME="AUTOID-10680"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.3.2">9.1.3.2 The vfstab and fstab files </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-REMOUNTING-FILESYSTEMS-AFTER-SYSTEM-REBOOT"></A>UNIX systems use the information provided in a special table toremount all types of filesystems, including NFS directories, after asystem reboot. The table is a critical part of providing usersconsistent access to software and files, so care should be takenwhenever it is modified. Two different files with two differentformats are used for this purpose by the different flavors of UNIX.<ACLASS="indexterm"NAME="AUTOID-10686"></A><ACLASS="indexterm"NAME="AUTOID-10689"></A>Linux and BSD systems use the <EMCLASS="emphasis">/etc/fstab</EM> file and Solaris, our<ACLASS="indexterm"NAME="AUTOID-10693"></A><ACLASS="indexterm"NAME="AUTOID-10696"></A><ACLASS="indexterm"NAME="AUTOID-10698"></A>System V example, uses the <EMCLASS="emphasis">/etc/vfstab</EM> file.</P><PCLASS="para">The format of the NFS entries in the Solaris <EMCLASS="emphasis">vfstab</EM> file is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>filesystem</I></CODE>  <BCLASS="emphasis.bold">-</B> <CODECLASS="replaceable"><I>mountpoint</I></CODE>  <CODECLASS="userinput"><B>nfs  -  yes</B></CODE>  <CODECLASS="replaceable"><I>options</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The various fields in the entry must appear in the order shown aboveand they must be separated by whitespace. The items in bold (bothdashes and the words <CODECLASS="userinput"><B>nfs</B></CODE> and <CODECLASS="userinput"><B>yes</B></CODE>) are keywords that mustappear exactly as shown above. <CODECLASS="replaceable"><I>filesystem</I></CODE> is the name of thedirectory offered by the server. <CODECLASS="replaceable"><I>mountpoint</I></CODE> is the pathname ofthe local mount point, and <EMCLASS="emphasis">options</EM> are the mount optionsdiscussed below. A sample NFS <EMCLASS="emphasis">vfstab</EM> entry is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">filbert:/home/research  -  /home/research  nfs  -  yes  rw,soft</PRE></BLOCKQUOTE></P><PCLASS="para">This entry mounts the NFS filesystem <EMCLASS="emphasis">filbert:/home/research</EM> onthe local mount point <EMCLASS="emphasis">/home/research</EM>. The filesystem is mountedwith the <BCLASS="emphasis.bold">rw</B> and <BCLASS="emphasis.bold">soft</B> options set. The mount optionsavailable on Solaris systems are:</P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">rw</B></DT><DDCLASS="listitem"><PCLASS="para">If permitted, mount the filesystem read/write. If the filesystem isrestricted by the server to read-only, a warning is issued and thefilesystem is mounted read-only.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">ro</B></DT><DDCLASS="listitem"><PCLASS="para">Mount the filesystem read-only.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">remount</B></DT><DDCLASS="listitem"><PCLASS="para">If the filesystem is already mounted read-only, remount the filesystemas read/write.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">soft</B></DT><DDCLASS="listitem"><PCLASS="para">If the server fails to respond, return an error and don't retry the request.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">hard</B></DT><DDCLASS="listitem"><PCLASS="para">If the server fails to respond, retry until it does respond. This is the default.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">bg</B></DT><DDCLASS="listitem"><PCLASS="para">Do the retries in background mode.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">fg</B></DT><DDCLASS="listitem"><PCLASS="para">Do the retries in foreground mode.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">intr</B></DT><DDCLASS="listitem"><PCLASS="para">Allow a keyboard interrupt<ACLASS="indexterm"NAME="AUTOID-10766"></A>to kill a process that is hung waiting for the server torespond. Hard-mounted filesystems can become hung because the clientretries forever, even if the server is down. This is a default.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">nointr</B></DT><DDCLASS="listitem"><PCLASS="para">Don't allow keyboard interrupts. In general, this is a bad idea.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">nosuid</B></DT><DDCLASS="listitem"><PCLASS="para">Do not allow an executable stored on the mounted filesystem to run<ACLASS="indexterm"NAME="AUTOID-10778"></A><BCLASS="emphasis.bold">setuid</B>. This improves security but may limit utility.</P></DD></DL><PCLASS="para">On the Solaris system, the NFS filesystems defined in the <EMCLASS="emphasis">vfstab</EM>file are mounted by a <BCLASS="emphasis.bold">mountall</B> command located in a startup file.On the Linux system, the startup file contains a <BCLASS="emphasis.bold">mount</B> command withthe <BCLASS="emphasis.bold">-a</B> flag set, which causes Linux to mount all filesystemslisted in <EMCLASS="emphasis">fstab</EM>. The format of NFS entries in the <EMCLASS="emphasis">/etc/fstab</EM>file is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="replaceable"><I>filesystem  mountpoint</I></CODE>  <CODECLASS="userinput"><B>nfs</B></CODE>  <CODECLASS="replaceable"><I>options</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The fields must appear in the order shown and must be separated bywhitespace. The keyword <BCLASS="emphasis.bold">nfs</B> is required for NFS filesystems.<CODECLASS="replaceable"><I>filesystem</I></CODE> is the name of the directory being mounted.<CODECLASS="replaceable"><I>mountpoint</I></CODE> is the pathname of the local mount point. <CODECLASS="replaceable"><I>options</I></CODE>are any of the Linux mount options listed in <ACLASS="xref"HREF="ch09_01.htm#TCP2-CH-9-TAB-0"TITLE="Linux Mount Options">Table 9.1</A></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-9-TAB-0">Table 9.1: Linux Mount Options</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Option</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Purpose</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">async</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Use asynchronous file I/O.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">auto</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Mount when <BCLASS="emphasis.bold">-a</B> option is used.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">dev</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Allow character and block special devices on the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">exec</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Permit execution of files from the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">noauto</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Don't mount with the <BCLASS="emphasis.bold">-a</B> option.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">nodev</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Don't allow character and block special devices on the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">noexec</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Don't allow execution of files from the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">nosuid</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Don't allow programs stored on the filesystem to run <BCLASS="emphasis.bold">setuid</B> or <BCLASS="emphasis.bold">setgid</B>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">nouser</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Only root can mount the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">remount</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Remount a mounted filesystem with new options.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">ro</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Mount the filesystem read-only.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">rw</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Mount the filesystem read-write.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">suid</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Allow programs to run <BCLASS="emphasis.bold">setuid</B> or <BCLASS="emphasis.bold">setgid</B>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">sync</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Use synchronous filesystem I/O.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">user</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Permit ordinary users to mount the filesystem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">soft</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Allow the access to time out if the server doesn't respond.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">timeo=</B><EMCLASS="emphasis">time</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The length of <EMCLASS="emphasis">time</EM> before an access times out. Must be used with <BCLASS="emphasis.bold">soft</B>.</TD></TR></TBODY></TABLE><PCLASS="para">A <BCLASS="emphasis.bold">grep</B> of <EMCLASS="emphasis">fstab</EM> shows sample NFS entries.[4]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] <BCLASS="emphasis.bold">grep</B> is used because the <EMCLASS="emphasis">fstab</EM> file contains otherinformation not related to NFS.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>grep nfs /etc/fstab</B></CODE>filbert:/usr/spool/mail   /usr/spool/mail   nfs rw     0 0filbert:/usr/man          /usr/man          nfs rw     0 0filbert:/home/research    /home/research    nfs rw     0 0</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">grep</B> shows that there are three NFS filesystems contained inthe <EMCLASS="emphasis">/etc/fstab</EM> file. The <BCLASS="emphasis.bold">mount -a</B> command in the bootscript remounts these three directories every time the system boots.</P><PCLASS="para">The <EMCLASS="emphasis">vfstab</EM> and <EMCLASS="emphasis">fstab</EM> files are the most common methods usedfor mounting filesystems at boot time. There is another technique thatautomatically mounts NFS filesystems, but only when they are actuallyneeded. It is called <EMCLASS="emphasis">automounter</EM>.<ACLASS="indexterm"NAME="AUTOID-10902"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.4">9.1.4 NFS Automounter </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-AUTOMOUNT"></A>Automounter is a feature available in some NFS implementations.The best example of automounter is the implementation that comes withSolaris, which is the implementation we use in this section.</P><PCLASS="para">The automounter configuration files are called <EMCLASS="emphasis">maps</EM>. Three basic<ACLASS="indexterm"NAME="AUTOID-10910"></A>map types are used to define the automounter filesystem (autofs).</P><PCLASS="para">These map types<ACLASS="indexterm"NAME="AUTOID-10914"></A>are:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">Master map</EM></DT><DDCLASS="listitem"><PCLASS="para">The configuration file read by <BCLASS="emphasis.bold">automount</B>. It listsall of the other maps that are used to define the autofs filesystem.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Direct map</EM></DT><DDCLASS="listitem"><PCLASS="para">A configuration file that lists the mount points, pathnames, andoptions of filesystems that are to be mounted by the automounterdaemon (<BCLASS="emphasis.bold">automountd</B>).&#13;</P></DD><DTCLASS="term"><EMCLASS="emphasis">Indirect map</EM></DT><DDCLASS="listitem"><PCLASS="para">A configuration file that contains pathnames and &quot;relative&quot; mountpoints. The mount points are relative to a directory path declared inthe master map. How indirect maps are used will become clear in theexamples.</P></DD></DL><PCLASS="para">On Solaris systems the automounter daemon (<BCLASS="emphasis.bold">automountd</B>) and the<ACLASS="indexterm"NAME="AUTOID-10937"></A><ACLASS="indexterm"NAME="AUTOID-10939"></A><BCLASS="emphasis.bold">automount</B> command are started by the <EMCLASS="emphasis">/etc/init.d/autofs</EM><ACLASS="indexterm"NAME="AUTOID-10944"></A><ACLASS="indexterm"NAME="AUTOID-10948"></A>script. The script is run with the <BCLASS="emphasis.bold">start</B> option to startautomounter, i.e., <BCLASS="emphasis.bold">autofs start</B>. It is run with the <BCLASS="emphasis.bold">stop</B>option to shut down automounter. <BCLASS="emphasis.bold">automount</B> and <BCLASS="emphasis.bold">automountd</B>are two distinct, separate programs. <BCLASS="emphasis.bold">automountd</B> runs as a daemonand dynamically mounts filesystems when they areneeded. <BCLASS="emphasis.bold">automount</B> processes the <EMCLASS="emphasis">auto_master</EM> file to determinethe filesystems that can be dynamically mounted.</P><PCLASS="para">To use automounter, first configure the <EMCLASS="emphasis">/etc/auto_master</EM> file.<ACLASS="indexterm"NAME="AUTOID-10960"></A><ACLASS="indexterm"NAME="AUTOID-10963"></A>Entries in the <EMCLASS="emphasis">auto_master</EM> file have this format:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mount-point     map-name        options</PRE></BLOCKQUOTE></P><PCLASS="para">The Solaris system comes with a default <EMCLASS="emphasis">auto_master</EM> filepreconfigured. Customize the file for your configuration.  Comment outthe <CODECLASS="literal">+auto_master</CODE> entry. It is only used if you run NIS+ andyour servers offer a centrally maintained <EMCLASS="emphasis">auto_master map</EM>.  Alsoignore the <CODECLASS="literal">/xfn</CODE> entry. It does not apply to systems that useDNS. Add an entry for your direct map. In the example it is called<CODECLASS="literal">auto_direct</CODE>. Here is <EMCLASS="emphasis">/etc/auto_master</EM> after ourmodifications:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Master map for automounter##+auto_master#/xfn           -xfn/net            -hosts          -nosuid/home           auto_home/-              auto_direct</PRE></BLOCKQUOTE></P><PCLASS="para">All lines that begin with a sharp sign (#) are comments, including the<ACLASS="indexterm"NAME="AUTOID-10978"></A><ACLASS="indexterm"NAME="AUTOID-10980"></A><ACLASS="indexterm"NAME="AUTOID-10982"></A><ACLASS="indexterm"NAME="AUTOID-10984"></A><CODECLASS="literal">+auto_master</CODE> and <CODECLASS="literal">/xfn</CODE> lines we commented out. Thefirst real entry in the file specifies that the shared filesystemsoffered by every NFS server listed in the <EMCLASS="emphasis">/etc/hosts</EM> file areautomatically mounted under the <EMCLASS="emphasis">/net</EM> directory. A sub-directoryis created for each server under <EMCLASS="emphasis">/net</EM> using the server'shostname. For example: assume that <EMCLASS="emphasis">filbert</EM> is listed in the<EMCLASS="emphasis">hosts</EM> file and that it exports the <EMCLASS="emphasis">/usr/local</EM>directory. This <CODECLASS="literal">auto_master</CODE> entry automatically makes thatremote directory available on the local host as<EMCLASS="emphasis">/net/filbert/usr/local</EM>.</P><PCLASS="para">The second entry automatically mounts the home directories listed in the<ACLASS="indexterm"NAME="AUTOID-10997"></A><ACLASS="indexterm"NAME="AUTOID-11000"></A><EMCLASS="emphasis">/etc/auto_home</EM> map under the <EMCLASS="emphasis">/home</EM> directory. A default<EMCLASS="emphasis">/etc/auto_home</EM> file is provided with the Solaris system. Commentout the <CODECLASS="literal">+auto_home</CODE> entry found in the default file. It is usedonly if you run NIS+ and your servers offer a centrally maintained<EMCLASS="emphasis">auto_home</EM> map.Add entries for individual user home directories or forall home directories from specific servers. Here is a modified<EMCLASS="emphasis">auto_home</EM> map:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Home directory map for automounter##+auto_homecraig           almond:/export/home/craig*               pecan:/export/home/&amp;</PRE></BLOCKQUOTE></P><PCLASS="para">The first entry mounts the <EMCLASS="emphasis">/export/home/craig</EM> filesystem sharedby <EMCLASS="emphasis">almond</EM> on the local mount point <EMCLASS="emphasis">/home/craig</EM>. The<EMCLASS="emphasis">auto_home</EM> map is an indirect map, so the mount point specified in themap (<CODECLASS="literal">craig</CODE>) is relative to the <EMCLASS="emphasis">/home</EM> mount point definedin the <EMCLASS="emphasis">auto_master</EM> map. The second entry mounts every home directoryfound in the <EMCLASS="emphasis">/export/home</EM> filesystem offered by <EMCLASS="emphasis">pecan</EM> to a&quot;like-named&quot; mount point on the local host. For example: assume that<EMCLASS="emphasis">pecan</EM> has two home directories, <EMCLASS="emphasis">/export/home/daniel</EM> and<EMCLASS="emphasis">/export/home/kristin</EM>. Automounter makes them both available onthe local host as <EMCLASS="emphasis">/home/daniel</EM> and <EMCLASS="emphasis">/home/kristin</EM>. Theasterisk (*) and the ampersand (&amp;) are wildcard characters usedspecifically for this purpose in autofs maps.</P><PCLASS="para">That's it for the <EMCLASS="emphasis">auto_home</EM> map.  Refer back tothe <EMCLASS="emphasis">auto_master</EM> map. The third and final entry inthe <EMCLASS="emphasis">/etc/auto_master</EM> file is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/-              auto_direct</PRE></BLOCKQUOTE></P><PCLASS="para">We added this entry for our direct map. The special mount point<CODECLASS="literal">/-</CODE> means that the map name refers to a direct map. Thereforethe real mount points are found in the direct map file. We named ourdirect map file <EMCLASS="emphasis">/etc/auto_direct</EM>. There is no default direct mapfile. You must create it from scratch. The file we created is:<ACLASS="indexterm"NAME="AUTOID-11034"></A><ACLASS="indexterm"NAME="AUTOID-11037"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Direct map for automounter#/home/research  -rw       filbert:/home/research/usr/man        -ro,soft  pecan,almond,filbert:/usr/share/man</PRE></BLOCKQUOTE></P><PCLASS="para">The format of entries in a direct map file is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">mount-point     options   remote filesystem</PRE></BLOCKQUOTE></P><PCLASS="para">Our sample file contains two typical entries. The first entry mounts theremote filesystem <EMCLASS="emphasis">/home/research</EM> offered by the server <EMCLASS="emphasis">filbert</EM>on the local mount point <EMCLASS="emphasis">/home/research</EM>. It is mounted read-write.The second entry mounts the <BCLASS="emphasis.bold">man</B> pages read-only with a &quot;soft&quot;timeout.[5]Note that three servers are specified for the <BCLASS="emphasis.bold">man</B> pages in a comma-separated list. If a server is unavailable or fails to respond withinthe soft timeout period, the client asks the next server in the list.This is one of the nice features of automounter.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] See the description of NFS mount options earlier in this chapter.</P></BLOCKQUOTE><PCLASS="para">Automounter has four key features: the -hosts map, wildcarding,automounting, and multiple servers. The -hosts map makes everyexported filesystem from every server listed in the <EMCLASS="emphasis">/etc/hosts</EM><ACLASS="indexterm"NAME="AUTOID-11054"></A><ACLASS="indexterm"NAME="AUTOID-11057"></A>file available to the local user. The wildcard characters make it veryeasy to mount every directory from a remote server to a like-nameddirectory on the local system. Automounting goes hand-in-glove withthese two features because only the filesystems that are actually usedare mounted.  While -hosts and wildcards make a very large number offilesystems available to the local host, automounting limits thefilesystems that are actually mounted to those that are needed. Thelast feature, multiple servers,<ACLASS="indexterm"NAME="AUTOID-11059"></A>improves the reliability of NFS by removing the dependence on a singleserver.<ACLASS="indexterm"NAME="AUTOID-11062"></A><ACLASS="indexterm"NAME="AUTOID-11063"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.5">9.1.5 NFS Authentication Server </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-AUTHENTICATION-SERVER"></A><ACLASS="indexterm"NAME="TCP2-CH-9-IX-PC-NFS-AUTHENTICATION-AND-PRINT-SERVER-PCNFSD"></A>The <EMCLASS="emphasis">PC NFS Authentication and Print Server</EM> (<BCLASS="emphasis.bold">pcnfsd</B>) is neededto support non-UNIX clients on an NFS network. The print services of thisdaemon are covered in the next section. The authentication servicesare the services needed by NFS.</P><PCLASS="para">The reason NFS needs an authentication server for some clients springsfrom the difference between <EMCLASS="emphasis">trusted host</EM> security<ACLASS="indexterm"NAME="AUTOID-11076"></A>and <EMCLASS="emphasis">password authenticated</EM> security.<ACLASS="indexterm"NAME="AUTOID-11080"></A>Trusted host security is discussed in <ACLASS="xref"HREF="ch12_01.htm"TITLE="Network Security ">Chapter 12, <CITECLASS="chapter">Network Security </CITE></A>. Essentially, itworks this way: we trust that a remote host has already authenticatedits users, and we grant those users equivalent access to our localhost. This is more or less how NFS treats its clients. The Solaris<ACLASS="indexterm"NAME="AUTOID-11083"></A><BCLASS="emphasis.bold">share</B> command grants NFS access to hosts.  A user is allowed toaccess files through NFS using standard UNIX <EMCLASS="emphasis">user</EM>, <EMCLASS="emphasis">group</EM>,and <EMCLASS="emphasis">world</EM> file permissions based on the <EMCLASS="emphasis">userid</EM> (UID) and<EMCLASS="emphasis">groupid</EM> (GID) provided by the trusted host. Remember, unless a<BCLASS="emphasis.bold">share</B> command option is used to restrict access, all hosts aretrusted to access the shared filesystem.</P><PCLASS="para">The trusted host model does not work for non-UNIX clients for a coupleof reasons. First, some systems do not perform local userauthentication; for example, anyone who sits at the keyboard of a DOSPC has complete access to the system. Second, some systems do notemploy user or group IDs and do not have any values that can be mappedto the UNIX user or group file permissions. At best, an<ACLASS="indexterm"NAME="AUTOID-11093"></A>unauthenticated user can be granted world<ACLASS="indexterm"NAME="AUTOID-11095"></A>permissions.[6]We need a server that authenticates usernames and passwords and assignsUIDs and GIDs to the authenticated users. That's what the PC NFSauthentication server does.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] Users who have not been authenticated are assigned the user ID<EMCLASS="emphasis">nobody</EM> and given world permissions.</P></BLOCKQUOTE><PCLASS="para">The authentication server can run on any system on the network.  It isnot necessary to run it on the NFS server, but that is the most commonconfiguration.  The PC NFS authentication server is not included inthe software of all UNIX systems. It is included with our Linux systembut not with our Solaris system. If it doesn't come with your UNIXsystem, don't worry; the source code for <BCLASS="emphasis.bold">pcnfsd</B> is availablefrom many anonymous FTP servers on the Internet. Download the sourcecode. Compile the software with <BCLASS="emphasis.bold">make</B>.[7]If <BCLASS="emphasis.bold">pcnfsd</B> compiles without errors, copy the daemon into a systemdirectory such as <EMCLASS="emphasis">/usr/etc</EM>. Then add code to start <BCLASS="emphasis.bold">pcnfsd</B>from a boot script. On a Slackware Linux system, simply uncomment thelines in the <EMCLASS="emphasis">/etc/rc.d/rc.inet2</EM> file that start <BCLASS="emphasis.bold">rpc.nfsd</B>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] See <EMCLASS="emphasis">Networking Personal Computers with TCP/IP</EM> by Craig Hunt(O'Reilly &amp; Associates) for a full example of downloading, compiling,and installing <BCLASS="emphasis.bold">pcnfsd</B>.</P></BLOCKQUOTE><PCLASS="para">Normally starting a daemon from <BCLASS="emphasis.bold">inetd</B> is an alternative tostarting it from a boot script. However, Sun cautions against starting<BCLASS="emphasis.bold">pcnfsd</B> from <BCLASS="emphasis.bold">inetd</B> because the slow startup of this daemoncan cause time-out errors.</P><PCLASS="para">Once the <BCLASS="emphasis.bold">pcnfsd</B> daemon is installed and running, the serverauthenticates usernames and passwords for its clients. Here'show. When the user asks to mount a remote filesystem, the clientsoftware prompts him for a username and password. It sends them to theauthentication server. The server validates them against its<ACLASS="indexterm"NAME="AUTOID-11118"></A><ACLASS="indexterm"NAME="AUTOID-11121"></A><EMCLASS="emphasis">/etc/passwd</EM> file.  A user that can successfully login to theserver is consider to be a valid NFS user. The server sends the clientthe UID and GID that are assigned to the user in the <EMCLASS="emphasis">passwd</EM>file. The client uses them for NFS access.</P><PCLASS="para">The authentication server must have an entry in the <EMCLASS="emphasis">/etc/passwd</EM>file for every user who needs NFS access. It is common for a largeUNIX server, such as the mail server that has an account for every mailuser, to be used as the authentication server.<ACLASS="indexterm"NAME="AUTOID-11127"></A></P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-9-SECT-1.5.1">9.1.5.1 NFS print services </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11131"></A>NFS-based print services are easy to understand and simple toconfigure.  The NFS server exports a printer spool directory to itsclients, and the clients copy print files into thatdirectory. <BCLASS="emphasis.bold">pcnfsd</B> sends files deposited in the directory toprinters accessible to the server.  Any printer defined by the servercan be used.</P><PCLASS="para">To add NFS print service to an NFS server, first install <BCLASS="emphasis.bold">pcnfsd</B>.Next, make a print spool directory<ACLASS="indexterm"NAME="AUTOID-11136"></A>on the server for the print clients. Add the spool directory to theshared filesystems in the <EMCLASS="emphasis">/etc/dfs/dfstab</EM> file or<ACLASS="indexterm"NAME="AUTOID-11139"></A><ACLASS="indexterm"NAME="AUTOID-11142"></A><ACLASS="indexterm"NAME="AUTOID-11144"></A><ACLASS="indexterm"NAME="AUTOID-11147"></A><EMCLASS="emphasis">/etc/exports</EM> file, as appropriate for your system.</P><PCLASS="para">Finally tell <BCLASS="emphasis.bold">pcnfsd</B> what directory to use for spooling printjobs.  Use the <EMCLASS="emphasis">spool</EM> command in the <EMCLASS="emphasis">/etc/pcnfsd.conf</EM><ACLASS="indexterm"NAME="AUTOID-11154"></A><ACLASS="indexterm"NAME="AUTOID-11157"></A>configuration file to define the directory name on most systems. Onothers, for example our Linux system, define the directory on the<BCLASS="emphasis.bold">pcnfsd</B> command line. See the <BCLASS="emphasis.bold">pcnfsd</B> manpage for details.</P><PCLASS="para">Finished! Running <BCLASS="emphasis.bold">pcnfsd</B> and exporting the printer spooldirectory are all that is required to configure an NFS print server,assuming that the printers are already properly configured. Check theprinters by logging directly into the print server and issuing an<BCLASS="emphasis.bold">lpr</B> command for each printer you wish to test. See the followingsection on <BCLASS="emphasis.bold">lpr</B> and <BCLASS="emphasis.bold">lpd</B> if a printer is not properlyconfigured.<ACLASS="indexterm"NAME="AUTOID-11166"></A><ACLASS="indexterm"NAME="AUTOID-11167"></A></P></DIV></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_05.htm"TITLE="8.5 Summary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 8.5 Summary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_02.htm"TITLE="9.2 Line Printer Daemon "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.2 Line Printer Daemon "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.5 Summary </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.2 Line Printer Daemon </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>