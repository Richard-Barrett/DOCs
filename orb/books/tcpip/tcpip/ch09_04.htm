<HTML><HEAD><TITLE>[Chapter 9] 9.4 A BOOTP Server </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:37:53Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch09_01.htm"TITLE="9. Configuring Network Servers "><LINKREL="prev"HREF="ch09_03.htm"TITLE="9.3 Network Information Service "><LINKREL="next"HREF="ch09_05.htm"TITLE="9.5 DHCP "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_03.htm"TITLE="9.3 Network Information Service "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.3 Network Information Service "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9<BR>Configuring Network Servers </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_05.htm"TITLE="9.5 DHCP "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.5 DHCP "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-9-SECT-4">9.4 A BOOTP Server </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-9-IX-BOOTP-DAEMON-BOOTPD"></A>A UNIX system becomes a BOOTP server when it runs the BOOTP daemon(<BCLASS="emphasis.bold">bootpd</B>). Some systems, such as Linux, include the daemon withthe operating system. Other systems, like Solaris, do not.Even systems that provide <BCLASS="emphasis.bold">bootpd</B> as part of the system software donot run the daemon by default.</P><PCLASS="para">There are two ways to run the BOOTP daemon: it can be started at boottime from a startup script or it can be started by the <EMCLASS="emphasis">Internet<ACLASS="indexterm"NAME="AUTOID-11780"></A>daemon</EM>, <BCLASS="emphasis.bold">inetd</B>. If the server has a large number of clientsthat are frequently rebooted, run <BCLASS="emphasis.bold">bootpd</B> from a startup file.Starting <BCLASS="emphasis.bold">bootpd</B> in this manner reduces the amount of &quot;startup&quot;overhead because the daemon is only started once. Possible lines forstarting <BCLASS="emphasis.bold">bootpd</B> from the <EMCLASS="emphasis">rc.inet2</EM> file on a Slackware Linuxsystem are:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">if [ -f /usr/sbin/bootpd -a -f /etc/bootptab ]; then      echo -n &quot; bootpd&quot;      /usr/sbin/bootpd -sfi</PRE></BLOCKQUOTE></P><PCLASS="para">The code checks to make sure that the daemon and its configurationfile are available. <BCLASS="emphasis.bold">bootpd</B> is then started with the <BCLASS="emphasis.bold">-s</B>switch. This switch tells <BCLASS="emphasis.bold">bootpd</B> to continue running andlistening to the bootps port, and not to time out even if there is noactivity on that port. The disadvantage of starting <BCLASS="emphasis.bold">bootpd</B> inthis manner is that it continues to use system resources even when itis not needed. The preferred way to start <BCLASS="emphasis.bold">bootpd</B> is from<BCLASS="emphasis.bold">inetd</B>.  To start it from <BCLASS="emphasis.bold">inetd</B> on a Slackware 96 Linuxsystem, uncomment the <CODECLASS="literal">bootps</CODE> entry in the <EMCLASS="emphasis">inetd.conf</EM><ACLASS="indexterm"NAME="AUTOID-11800"></A>file and correct the path and daemon name.[10]The completed <EMCLASS="emphasis">inetd.conf</EM> entry is:&#13;</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] The Slackware 96 <EMCLASS="emphasis">inetd.conf</EM> file attempts to start<BCLASS="emphasis.bold">in.bootpd</B> instead of <BCLASS="emphasis.bold">bootpd</B>, which is the actual name ofthe daemon on that system. I'm sure this will be corrected in laterreleases of Slackware.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">bootps    dgram     udp  wait root /usr/sbin/bootpd    bootpd</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;This entry tells <BCLASS="emphasis.bold">inetd</B> to listen to UDP port 67 identified as<ACLASS="indexterm"NAME="AUTOID-11812"></A><ACLASS="indexterm"NAME="AUTOID-11815"></A>bootps in the <EMCLASS="emphasis">/etc/services</EM> file and, if it hears data onthat port, to run <EMCLASS="emphasis">/usr/sbin/bootpd</EM> as user <EMCLASS="emphasis">root</EM>. Once the lineis added to the <EMCLASS="emphasis">inetd.conf</EM> file, send a SIGHUP to <BCLASS="emphasis.bold">inetd</B> toforce it to read the new configuration, as in this example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <BCLASS="emphasis.bold">ps -acx | grep inetd</B>  93 ?  S    0:00 inetd# <BCLASS="emphasis.bold">kill -HUP 93</B></PRE></BLOCKQUOTE></P><PCLASS="para">If your systems does not include BOOTP software, don't panic:<BCLASS="emphasis.bold">bootpd</B> is available from the Internet. The same software foundin the Linux system can be downloaded in the <EMCLASS="emphasis">bootp-DD2.4.3.tar</EM><ACLASS="indexterm"NAME="AUTOID-11829"></A>file. Download and untar the source code. <BCLASS="emphasis.bold">su</B> to <EMCLASS="emphasis">root</EM> andcompile the server software with <BCLASS="emphasis.bold">make</B>. The Makefile hasentry points for several different UNIX architectures. (For our sampleSolaris system, we use the <EMCLASS="emphasis">sunos5gcc</EM> entry point.) If the softwarecompiles without errors do a <BCLASS="emphasis.bold">make install</B> to install theexecutable daemon in the <EMCLASS="emphasis">/usr/sbin</EM> directory. Do a <BCLASS="emphasis.bold">make<ACLASS="indexterm"NAME="AUTOID-11838"></A>install.man</B> to install the manpages in <EMCLASS="emphasis">/usr/local/man</EM>.</P><PCLASS="para">You should define all network services, including BOOTP, in the<EMCLASS="emphasis">/etc/services</EM> file. Add the following lines to your<EMCLASS="emphasis">/etc/service</EM> file when <BCLASS="emphasis.bold">bootpd</B> is installed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">bootps            67/udp                          # bootp serverbootpc            68/udp                          # bootp client</PRE></BLOCKQUOTE></P><PCLASS="para">Finally, make sure that you include <BCLASS="emphasis.bold">bootpd</B> in the<ACLASS="indexterm"NAME="AUTOID-11849"></A><ACLASS="indexterm"NAME="AUTOID-11852"></A><EMCLASS="emphasis">/etc/inetd.conf</EM> file as shown earlier in this section. Once itis included and <BCLASS="emphasis.bold">inetd</B> is reloaded with a SIGHUP signal, you are<ACLASS="indexterm"NAME="AUTOID-11856"></A>ready to run.</P><PCLASS="para">Installing the daemon is only the beginning. The real challenge ofmanaging a BOOTP server is providing the configuration information thatclients need. The package found on Linux systems and in the<EMCLASS="emphasis">bootp-DD2.4.3.tar</EM> file is the BOOTP daemon from Carnegie MellonUniversity (CMU). It has its own unique configuration commands. OtherBOOTP server implementations use other configuration commands.However, the type of information provided by BOOTP is the sameregardless of the implementation.</P><PCLASS="para">The CMU server reads its configuration from the <EMCLASS="emphasis">/etc/bootptab</EM><ACLASS="indexterm"NAME="AUTOID-11862"></A><ACLASS="indexterm"NAME="AUTOID-11865"></A>file. The syntax used in this file is very similar to the syntax ofthe <EMCLASS="emphasis">/etc/termcap</EM> and the <EMCLASS="emphasis">/etc/printcap</EM> files. Each<BCLASS="emphasis.bold">bootpd</B> configuration parameter is two characters long and isseparated from the other parameters by a colon. The general format of<ACLASS="indexterm"NAME="AUTOID-11870"></A><ACLASS="indexterm"NAME="AUTOID-11873"></A>a <EMCLASS="emphasis">bootptab</EM> entry is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">hostname:pa=value:pa=value:pa=value...</PRE></BLOCKQUOTE></P><PCLASS="para">Where <EMCLASS="emphasis">hostname</EM> is the hostname of the client, <EMCLASS="emphasis">pa</EM> is thetwo character parameter name, and <EMCLASS="emphasis">value</EM> is the value assigned tothat parameter for this client.</P><PCLASS="para">Newline characters separate each client's entry. If an entry spansmultiple lines, the newline character at the end of each line must beescaped with a backslash (\). Comments in the <EMCLASS="emphasis">bootptab</EM> file<ACLASS="indexterm"NAME="AUTOID-11885"></A><ACLASS="indexterm"NAME="AUTOID-11887"></A><ACLASS="indexterm"NAME="AUTOID-11889"></A><ACLASS="indexterm"NAME="AUTOID-11891"></A>begin with a sharp sign (#). <ACLASS="xref"HREF="ch09_04.htm#TCP2-CH-9-TAB-2"TITLE="bootptab Configuration Parameters">Table 9.3</A>contains a list of the<EMCLASS="emphasis">bootptab</EM> configuration parameters.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-9-TAB-2">Table 9.3: bootptab Configuration Parameters</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Parameter</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Example</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">bf</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bootfile</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:bf=null</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">bs</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bootfile size</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:bs=22050</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">cs</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Cookie servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:cs=172.16.3.7</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">df</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Dump file</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:df=/var/tmp/bootp_db.dump</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dn</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Domain name</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:dn=nuts.com</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ds</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Domain name servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ds=172.16.35.5</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ef</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Vendor extension file</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ef=/usr/local/xyz.extensions</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">gw</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Gateways list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:gw=128.2.13.1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ha</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Hardware address</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ha=7FF8100000AF</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">hd</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bootfile directory</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:hd=/usr/boot</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">hn</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send hostname boolean</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:hn</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ht</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Hardware type</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ht=ethernet</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">im</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Impress servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:im=172.16.8.12</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ip</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Host IP address</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ip=172.16.11.1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">lg</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Log servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:lg=172.16.12.1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">lp</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">LPR servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:lp=172.16.6.6</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ns</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">IEN-116 name servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ns=172.16.12.6</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">nt</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Network Time Protocol server list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:nt=172.16.50.30</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ra</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reply address list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ra=172.16.12.255</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">rl</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Resource location servers</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:rl=172.16.99.35</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">sa</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">TFTP server</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:sa=172.16.12.1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">sm</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Subnet mask</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:sm=255.255.255.0</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">sw</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Swap server</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:sw=172.16.12.56</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">T<EMCLASS="emphasis">n</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Vendor extension <EMCLASS="emphasis">n</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:T132=&quot;12345927AD3B&quot;</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">tc</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Template continuation</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:tc=default1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">td</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Secure TFTP directory</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:td=/tftpboot</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">to</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Time offset</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:to=18000</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ts</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Time servers list</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ts=172.16.12.1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">vm</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Vendor magic cookie selector</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:vm=auto</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">yd</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">NIS domain name</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:yd=nuts</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ys</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">NIS server</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">:ys=172.16.12.1</TD></TR></TBODY></TABLE><PCLASS="para">Every parameter in <ACLASS="xref"HREF="ch09_04.htm#TCP2-CH-9-TAB-2"TITLE="bootptab Configuration Parameters">Table 9.3</A>that has the word &quot;list&quot; in itsdescription accepts a list of whitespace-separated values. Forexample, the name server list is defined using the <EMCLASS="emphasis">ds</EM> parameterin this format: <BCLASS="emphasis.bold">:ds=172.16.12.1 172.16.7.3:</B>. One parameter inthe table, <EMCLASS="emphasis">hn</EM>, is a Boolean. If it is specified, the serversends the <EMCLASS="emphasis">hostname</EM> from the <EMCLASS="emphasis">bootptab</EM> entry to the client.As a Boolean <EMCLASS="emphasis">hn</EM> does not take any values, but all the otherparameters do.</P><PCLASS="para">Use these parameters to configure TCP/IP for each client on yournetwork. The following sample <EMCLASS="emphasis">bootptab</EM> file defines the domainname, name servers, the default routers, the Ethernet addresses, thehostnames, the IP addresses, the print servers, and the subnet masksfor three different systems. (Don't worry about the details yet; eachcommand will be explained later.)</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#  /etc/bootptab file for nuts.comacorn:\     :hd=/usr/boot:bf=null:\     :ds=172.16.12.1 172.16.3.5:\     :sm=255.255.255.0:\     :lp=172.16.12.1:\     :gw=172.16.3.25:\     :ht=1:ha=0080c7aaa804:\     :dn=nuts.com:hn:ip=172.16.3.4:peanut:\     :hd=/usr/boot:bf=null:\     :ds=172.16.12.1 172.16.3.5:\     :sm=255.255.255.0:\     :lp=172.16.12.1:\     :gw=172.16.12.1:\     :ht=1:ha=0800200159C3:\     :dn=nuts.com:hn:ip=172.16.12.2:hickory:\     :hd=/usr/boot:bf=null:\     :ds=172.16.12.1 172.16.3.5:\     :sm=255.255.255.0:\     :lp=172.16.12.1:\     :gw=172.16.3.25:\     :ht=1:ha=0000c0a15e10:\     :dn=nuts.com:hn:ip=172.16.3.16</PRE></BLOCKQUOTE></P><PCLASS="para">Notice that much of the information is repetitive. All of the clientsuse the same domain name, name servers, subnet masks, and printservers. Systems on the same subnets also use the same defaultrouters. It is possible to define repetitive information in templatesthat are then referenced in individual client configurations. Thefollowing example uses a global template that defines the domain name,<ACLASS="indexterm"NAME="AUTOID-12043"></A>name servers, subnet mask, and print servers. The template is thenreferenced in each of the subsequent configurations by using the<BCLASS="emphasis.bold">tc</B> parameter.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#  /etc/bootptab file for nuts.comdefaults:\     :hd=/usr/boot:\     :dn=nuts.com:ds=172.16.12.1 172.16.3.5:\     :sm=255.255.255.0:\     :lp=172.16.12.1:\     :hn:acorn:\     :tc=defaults:\     :bf=null:\     :gw=172.16.3.25:\     :ht=1:ha=0080c7aaa804:\     :ip=172.16.3.4:peanut:\     :tc=defaults:\     :bf=null:\     :gw=172.16.12.1:\     :ht=1:ha=0800200159C3:\     :ip=172.16.12.2:hickory:\     :tc=defaults:\     :bf=null:\     :gw=172.16.3.25:\     :ht=1:ha=0000c0a15e10:\     :ip=172.16.3.16:</PRE></BLOCKQUOTE></P><PCLASS="para">The first entry, <EMCLASS="emphasis">defaults</EM>, is the template. The remaining entriesare client entries. The template defines information used by all ofthe hosts and the specific client entries define information unique tothose hosts. Looking at the template and at one of the host entriesshows a full configuration. First, let's examine the meaning of eachparameter in the <EMCLASS="emphasis">defaults</EM> template:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">defaults:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The name by which this template is referenced is <EMCLASS="emphasis">defaults</EM>. Atemplate can be assigned any name as long as it doesn't conflict withany hostname in the <EMCLASS="emphasis">bootptab</EM> file.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:hd=/usr/boot:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The first line of the <EMCLASS="emphasis">defaults</EM> template defines the boot<ACLASS="indexterm"NAME="AUTOID-12066"></A>directory (<EMCLASS="emphasis">hd</EM>). BOOTP clients can be diskless systems that bootfrom the server. The value provided by <BCLASS="emphasis.bold">hd</B>  is used by a disklesssystem to retrieve the boot image. This directory is not used by ourclients, but could be needed if a terminal server, router, or otherdiskless device was added to the network.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:dn=nuts.com:ds=172.16.12.1 172.16.3.5:\</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-12076"></A>This line defines the domain name and the addresses of the domain name<ACLASS="indexterm"NAME="AUTOID-12080"></A>servers. The <BCLASS="emphasis.bold">dn</B> parameter defines the domain name as<EMCLASS="emphasis">nuts.com</EM>. The <BCLASS="emphasis.bold">ds</B> parameter defines the IP addresses of thename servers used on this network.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:sm=255.255.255.0:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The <BCLASS="emphasis.bold">sm</B> parameter defines this network's subnet mask.<ACLASS="indexterm"NAME="AUTOID-12093"></A></P></DD><DTCLASS="term"><EMCLASS="emphasis">:lp=172.16.12.1:\</EM></DT><DDCLASS="listitem"><PCLASS="para">This parameter defines the IP address of an <BCLASS="emphasis.bold">lpr</B> server that is<ACLASS="indexterm"NAME="AUTOID-12103"></A>available to every system on the network.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:hn:</EM></DT><DDCLASS="listitem"><PCLASS="para">The <BCLASS="emphasis.bold">hn</B> parameter tells the server to send the hostname to the<ACLASS="indexterm"NAME="AUTOID-12111"></A>client. When this parameter is incorporated in the <EMCLASS="emphasis">peanut</EM> entryas part of this template, the server sends the name <EMCLASS="emphasis">peanut</EM> to theclient. When it is incorporated in the entry for <EMCLASS="emphasis">acorn</EM>, thename <EMCLASS="emphasis">acorn</EM> is sent. Because this is the last line in the<EMCLASS="emphasis">defaults</EM> template, it does not end with a backslash.</P></DD></DL><PCLASS="para">Now let's look at the parameters in a client entry:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">acorn:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The hostname associated with this client entry is <EMCLASS="emphasis">acorn</EM>.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:tc=defaults:\</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-12133"></A>This <BCLASS="emphasis.bold">tc</B> parameter tells <BCLASS="emphasis.bold">bootpd</B> to incorporate all of theinformation defined in the <EMCLASS="emphasis">defaults</EM> template into this cliententry. To use multiple templates in a client entry, include multiple<BCLASS="emphasis.bold">tc</B> parameters. Exclude an individual parameter from a templateby specifying the parameter preceded by an at-sign (@). For example,<ACLASS="indexterm"NAME="AUTOID-12139"></A><ACLASS="indexterm"NAME="AUTOID-12142"></A>to exclude the <BCLASS="emphasis.bold">lpr</B> server parameter provided by the <EMCLASS="emphasis">defaults</EM>template from inclusion in the <EMCLASS="emphasis">acorn</EM> configuration, we could haveadded <BCLASS="emphasis.bold">:@lp:</B> to the <EMCLASS="emphasis">acorn</EM> entry.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:bf=null:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The <BCLASS="emphasis.bold">bf</B> parameter defines the name of the boot file for diskless<ACLASS="indexterm"NAME="AUTOID-12156"></A>systems. In the sample, the parameter intentionally points to a filethat does not exist because the client has a disk and we want it toboot from its local disk. When a client has its own disk, a value isnot required in this field. However, in this case, the value iscommonly set to &quot;null&quot; to ensure that if the client accidently has aboot file value in its BOOTREQUEST packet, the value will be<ACLASS="indexterm"NAME="AUTOID-12159"></A>overwritten by the server.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:gw=172.16.3.25:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The default gateway for this subnet is 172.16.3.25.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:ht=1:ha=0080c7aaa804:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The <BCLASS="emphasis.bold">ht</B> parameter identifies the type of hardware used for theclient's network interface. The hardware type is identified by anumber or by a keyword. There are several possible values but only twoare meaningful: <BCLASS="emphasis.bold">ht</B> will be either 1 for Ethernet or 6 for TokenRing. See the <EMCLASS="emphasis">bootptab</EM> manpage if you're interested in theother, rarely used, values.</P><PCLASS="para">The <BCLASS="emphasis.bold">ha</B> parameter defines the physical hardware address associatedwith the client's network interface. The example shows an Ethernetaddress. The type of address provided must be consistent with thehardware type defined by the <BCLASS="emphasis.bold">ht</B> parameter. These two parametersalways appear together in a <EMCLASS="emphasis">bootptab</EM> file.</P></DD><DTCLASS="term"><EMCLASS="emphasis">:ip=172.16.3.4:\</EM></DT><DDCLASS="listitem"><PCLASS="para">The IP address for this client is 172.16.3.4.</P></DD></DL><PCLASS="para">With only three clients in the example, the benefit of using templates maynot be immediately clear. The benefits of saving time, reducing typing,and avoiding errors are clearer when a large number of systems areinvolved.</P><PCLASS="para">It is possible to configure a BOOTP server to handle a very largenumber of clients. However, if a large number of clients rely on asingle boot server and all of the clients attempt to boot at one time,the server can be overwhelmed.<ACLASS="indexterm"NAME="AUTOID-12185"></A>This might happen in the case of a power outage. There are two<ACLASS="indexterm"NAME="AUTOID-12187"></A>mitigating fators: Because most clients cache the configurationprovided by the server in a local disk file, they are not completelydependent on the server; and the BOOTP protocol includes back-off<ACLASS="indexterm"NAME="AUTOID-12189"></A><ACLASS="indexterm"NAME="AUTOID-12191"></A>algorithms that avoid contention problems. Still, it is possible foran overloaded server to cause a significant delay when booting itsclients. One way to avoid problems is to have several bootservers. One server for each subnet is a good design because iteliminates the need to pass BOOTP information through a router, whichrequires a special configuration.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-4.0.1">9.4.1 BOOTP gateway </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-12197"></A><ACLASS="indexterm"NAME="AUTOID-12199"></A>Normally a BOOTREQUEST packet is not forwarded between networksbecause it is transmitted from the client using the limited broadcastaddress&nbsp;-  255.255.255.255. According to the RFCs, the limitedbroadcast address should not be forwarded, though it is possible toconfigure some routers to do so. The CMU BOOTP software provides aBOOTP gateway program that eliminates the need to create a specialrouter configuration and allows you to put the configuration server ona different subnet from the BOOTP clients. The BOOTP gateway is<BCLASS="emphasis.bold">bootpgw</B>.</P><PCLASS="para">If your system includes BOOTP software, you may already have<BCLASS="emphasis.bold">bootpgw</B>. Linux includes <BCLASS="emphasis.bold">bootpgw</B>. If your system doesn'thave it, it will when you download and install the<EMCLASS="emphasis">bootp-2.4.3.tar</EM> file.</P><PCLASS="para"><BCLASS="emphasis.bold">bootpgw</B> is run as an alternative to <BCLASS="emphasis.bold">bootpd</B>. Both of theseprograms listen to the same port. The <EMCLASS="emphasis">inetd.conf</EM> entry for<BCLASS="emphasis.bold">bootpgw</B> is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">bootps  dgram  udp  wait  root  /usr/sbin/bootpgw bootpgw 172.16.12.1</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-12214"></A><BCLASS="emphasis.bold">inetd</B> listens to the bootps port and starts the <BCLASS="emphasis.bold">bootpgw</B>program when data is received on that port. (Adding thebootps port to <EMCLASS="emphasis">/etc/services</EM> is covered above in the<BCLASS="emphasis.bold">bootpd</B> installation.) When <BCLASS="emphasis.bold">bootpgw</B> starts, it reads thehostname or address of the BOOTP server from the command line. In theexample, the remote BOOTP server is 172.16.12.1. If the data receivedon the bootps port is a BOOTREQUEST packet, <BCLASS="emphasis.bold">bootpgw</B> retransmitsthe BOOTREQUEST as a unicast packet addressed directly to the remoteconfiguration server. </P><PCLASS="para">At least one system on each subnet must run either <BCLASS="emphasis.bold">bootpd</B> or<BCLASS="emphasis.bold">bootpgw</B> to either reply to BOOTREQUEST packets or to forward themto a system that will. It is not possible to run both <BCLASS="emphasis.bold">bootpd</B> and<BCLASS="emphasis.bold">bootpgw</B> on one system and there is no reason to try. If thesubnet has a local BOOTP server up and running, there is no need toforward BOOTREQUEST packets to another network. Use <BCLASS="emphasis.bold">bootpgw</B> onvery small subnets that do not justify a local configuration server.On all other subnets, use a local BOOTP server.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-9-SECT-4.0.2">9.4.2 BOOTP extensions </A></H3><PCLASS="para">As described in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Network Services">Chapter 3</A>, Dynamic Host Configuration Protocol<ACLASS="indexterm"NAME="AUTOID-12233"></A>(DHCP) is based on the Bootstrap Protocol (BOOTP).  As you mightexpect, the DHCP enhancements are included in the<ACLASS="indexterm"NAME="AUTOID-12236"></A><BCLASS="emphasis.bold">bootp-2.4.3.tar</B> file. Set the <BCLASS="emphasis.bold">-DDYNAMIC</B> option in theMakefile to compile the DHCP extensions into <BCLASS="emphasis.bold">bootpd</B>. The DHCPextensions add the following <EMCLASS="emphasis">/etc/bootptab</EM> configurationparameters:<ACLASS="indexterm"NAME="AUTOID-12242"></A><ACLASS="indexterm"NAME="AUTOID-12246"></A></P><DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">:T254=</B><CODECLASS="replaceable"><I>number</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The <CODECLASS="replaceable"><I>number</I></CODE> of addresses that can be dynamically assigned, writtenin hex.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">:T253=</B><CODECLASS="replaceable"><I>mode</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The <CODECLASS="replaceable"><I>mode</I></CODE> in which dynamic addresses are written into the updated<ACLASS="indexterm"NAME="AUTOID-12264"></A><ACLASS="indexterm"NAME="AUTOID-12268"></A><EMCLASS="emphasis">bootptab</EM> file. If the mode is 0, addresses are written as IPaddresses. If the mode is 1, addresses must be written as hostnames.If a hostname can't be found for a dynamically assigned address, theaddress assignment is not made when the mode is set to 1. If the modeis 2, the dynamic address is written to the <EMCLASS="emphasis">bootptab</EM> file as ahostname if there is a valid hostname for the address. If there isnot, the IP address is used. Mode 2 is the default and usually shouldnot be changed.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">:T250=</B><CODECLASS="replaceable"><I>string</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The <CODECLASS="replaceable"><I>string</I></CODE> contains any additional configuration settings that shouldbe provided to the DHCP clients in the form of <EMCLASS="emphasis">bootptab</EM> parameters.</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">:dl=</B><CODECLASS="replaceable"><I>time</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">The amount of <CODECLASS="replaceable"><I>time</I></CODE> that the client can keep the address. The clientmust renew its request for the address before the amount of time specifiedwith the <BCLASS="emphasis.bold">dl</B> parameter has elapsed. If the client does not renew<ACLASS="indexterm"NAME="AUTOID-12289"></A>its lease on the address, the server is free to assign the address toanother client. If the <BCLASS="emphasis.bold">dl</B> parameter is not used, the address ispermanently assigned.</P></DD></DL><PCLASS="para">To use these parameters in the <EMCLASS="emphasis">bootptab</EM> file, create a special entryin the file that begins with the string <BCLASS="emphasis.bold">.dynamic-</B><EMCLASS="emphasis">n</EM>. <EMCLASS="emphasis">n</EM> inthis string is a number from 1 to 32767. An example should make thisclear. Assume that we want to automatically assign the addresses from172.16.12.64 to 172.16.12.192, and that we want to manually assign theother addresses. We might enter the following in the <EMCLASS="emphasis">bootptab</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">  .dynamic-1:ip=172.16.12.64:T254=0x80:T250=&quot;gw=172.16.12.1:ds=172.16.12.3&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">This defines a dynamic address group starting at 172.16.12.64. The groupcontains 128 (80 hex) available addresses. Tell clients assigned an addressfrom this group to use 172.16.12.3 as a name serverand to use 172.16.12.1 as a gateway.</P><PCLASS="para">When <BCLASS="emphasis.bold">bootpd</B> receives an address request from a client it creates anentry for the client using the information defined above, and physicallyappends that new entry to the end of the <EMCLASS="emphasis">bootptab</EM> file. The firstclient request adds the following entry to the end of the <EMCLASS="emphasis">bootptab</EM>file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">172.16.12.64:ha=0080c7aaa804:gw=172.16.12.1:ds=172.16.12.3</PRE></BLOCKQUOTE></P><PCLASS="para">To assign the client a hostname instead of just an IP address, addhostnames to the domain server database for all of the addresses in theaddress group.</P><PCLASS="para">These extensions help <BCLASS="emphasis.bold">bootpd</B> provide services to DHCP clients.There are also software packages available that have been designed fromthe beginning to be DHCP servers.</P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_03.htm"TITLE="9.3 Network Information Service "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.3 Network Information Service "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_05.htm"TITLE="9.5 DHCP "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.5 DHCP "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">9.3 Network Information Service </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.5 DHCP </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>