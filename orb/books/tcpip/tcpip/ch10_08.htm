<HTML><HEAD><TITLE>[Chapter 10] 10.8 Testing sendmail.cf </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:39:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. sendmail "><LINKREL="prev"HREF="ch10_07.htm"TITLE="10.7 Modifying a sendmail.cf File "><LINKREL="next"HREF="ch10_09.htm"TITLE="10.9 Summary "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_07.htm"TITLE="10.7 Modifying a sendmail.cf File "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.7 Modifying a sendmail.cf File "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>sendmail </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_09.htm"TITLE="10.9 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.9 Summary "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-10-SECT-8">10.8 Testing sendmail.cf </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-10-IX-SENDMAIL-CF-FILE-TESTING"></A>sendmail provides powerful tools for configuration testing anddebugging. These test tools are invoked on the sendmail commandline using some of the many sendmail command-line arguments.<ACLASS="xref"HREF="appe_01.htm"TITLE="A sendmail Reference">Appendix E</A> lists all of the command-line arguments;<ACLASS="xref"HREF="ch10_08.htm#TCP2-CH-10-TAB-5"TITLE="sendmail Arguments for Testing and Debugging">Table 10.6</A>summarizes those that relate to testing and debugging.<ACLASS="indexterm"NAME="AUTOID-14781"></A>&#13;</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-10-TAB-5">Table 10.6: sendmail Arguments for Testing and Debugging</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Argument</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-t</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send to everyone listed in To:, Cc:, and Bcc:.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-bt</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Run in test mode.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-bv</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Verify addresses; don't collect or deliver mail.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-bp</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Print the mail queue.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-C</B><CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Use <CODECLASS="replaceable"><I>file</I></CODE> as the configuration file.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-d</B><CODECLASS="replaceable"><I>level</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Set debugging level.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-O</B><CODECLASS="replaceable"><I>option</I></CODE><BCLASS="emphasis.bold">=</B><CODECLASS="replaceable"><I>value</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Set <CODECLASS="replaceable"><I>option</I></CODE> to the specified <CODECLASS="replaceable"><I>value</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-e</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Defines how errors are returned.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-v</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Run in verbose mode.</TD></TR></TBODY></TABLE><PCLASS="para">Some command-line arguments are used to verify address<ACLASS="indexterm"NAME="AUTOID-14837"></A>processing and to gain confidence in the new configuration.Once you think your configuration will work, choose friends atvarious sites and send them mail. Use the <BCLASS="emphasis.bold">-C</B> argument to read thetest configuration file and the <BCLASS="emphasis.bold">-v</B> argument to display thedetails of the mail delivery. <BCLASS="emphasis.bold">-v</B> displays the complete SMTPexchange between the two hosts.</P><PCLASS="para">By observing if your mailer properly connects to the remote mailer andformats the addresses correctly, you'll get a good idea of how theconfiguration is working. The following example is a test from<EMCLASS="emphasis">peanut</EM> using the <EMCLASS="emphasis">test.cf</EM> configuration file we justcreated:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">peanut# <CODECLASS="userinput"><B>/usr/lib/sendmail -Ctest.cf -t -v</B></CODE>To: craigh@ora.comFrom: craigSubject: Sendmail TestIgnore this test.      ^Dcraigh@ora.com... Connecting to ora.com. via smtp...220-ruby.ora.com Sendmail 8.6.13/8.6.11 ready at Sat, 16 Nov 1996220 ESMTP spoken here&gt;&gt;&gt; EHLO peanut.nuts.com250-ruby.ora.com Hello craig@peanut.nuts.com [172.16.12.2], pleased     to meet you250-EXPN250-SIZE250 HELP&gt;&gt;&gt; MAIL From:&lt;craig@peanut.nuts.com&gt; SIZE=64250 &lt;craig@peanut.nuts.com&gt;... Sender ok&gt;&gt;&gt; RCPT To:&lt;craigh@ora.com&gt;250 &lt;craigh@ora.com&gt;... Recipient ok&gt;&gt;&gt; DATA354 Enter mail, end with &quot;.&quot; on a line by itself&gt;&gt;&gt; .250 SAA27399 Message accepted for deliverycraigh@ora.com... Sent (SAA27399 Message accepted for delivery)Closing connection to ora.com.&gt;&gt;&gt; QUIT221 ruby.ora.com closing connection</PRE></BLOCKQUOTE></P><PCLASS="para">We entered everything before the CTRL-D (^D). Everything after the^D was displayed by sendmail. <ACLASS="xref"HREF="ch10_08.htm#TCP2-CH-10-FIG-4"TITLE="Verbose mail output">Figure 10.5</A>highlights some ofthe important information in this display, and notes the sendmailmacros that relate to the highlighted material.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-10-FIG-4">Figure 10.5: Verbose mail output</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_1005.gif"ALT="Figure 10.5"><PCLASS="para">This test successfully transfers mail to a remote Internet site.The sendmail output shows that <EMCLASS="emphasis">peanut</EM> sent themail to <EMCLASS="emphasis">ora.com</EM> via the <EMCLASS="emphasis">smtp</EM> mail delivery program.The sendmail greeting shows that the remote host handling thisSMTP connection is <EMCLASS="emphasis">ruby.ora.com</EM>. Therefore, <EMCLASS="emphasis">ruby</EM> must bethe mail server for the <EMCLASS="emphasis">ora.com</EM> domain; i.e., the MX record for<EMCLASS="emphasis">ora.com</EM> points to <EMCLASS="emphasis">ruby.ora.com</EM>.</P><PCLASS="para">The ESMTP<ACLASS="indexterm"NAME="AUTOID-14865"></A><ACLASS="indexterm"NAME="AUTOID-14867"></A><ACLASS="indexterm"NAME="AUTOID-14870"></A><ACLASS="indexterm"NAME="AUTOID-14872"></A>and EHLO messages indicate that both <EMCLASS="emphasis">peanut</EM> and <EMCLASS="emphasis">ruby</EM>use Extended Simple Mail Transfer Protocol (ESMTP).</P><PCLASS="para">Everything worked just fine! We could quit right now and use thisconfiguration. But like most computer people, we cannot stop ourselvesfrom tinkering in order to make things &quot;better.&quot;</P><PCLASS="para">The From: address, <EMCLASS="emphasis">craig@peanut.nuts.com</EM>, is clearly a validaddress but it is not quite what we want. What we want is to have peopleaddress us as <EMCLASS="emphasis">firstname.lastname@domain</EM>&nbsp;- not as<EMCLASS="emphasis">user@host.domain</EM>, which is exactly the configuration we createdearlier in this chapter with a few lines of <BCLASS="emphasis.bold">m4</B> code. We willcreate the same configuration here to provide an example of how to usethe various troubleshooting tools that come with sendmail. However, ifyou really want to make major sendmail configuration changes, youshould use <BCLASS="emphasis.bold">m4</B> to build your configuration.</P><PCLASS="para">Most changes to <EMCLASS="emphasis">sendmail.cf</EM> are small and are made near thebeginning of the file in the Local Information section. Lookingclosely at that section provides the clues we need to solve part ofour configuration problem.</P><PCLASS="para">Without knowing what &quot;masquerading&quot; means,the comments for class E, class M, and macro M lead us to guess thatthe value set for macro M will be used to rewrite the hostname.[22]In particular, the comment &quot;names that should be exposed as from thishost, even if we masquerade&quot; led me to believe that masquerading hidesthe hostname. Based on this guess, we set a value for macro M asfollows:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[22] In the <BCLASS="emphasis.bold">m4</B> source file we configured masquerading with the<BCLASS="emphasis.bold">MASQUERADE_AS(nuts.com) command</B>.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># who I masquerade as (null for no masquerading) (see also $=M)DMnuts.com</PRE></BLOCKQUOTE></P><PCLASS="para">Are we sure that setting a value for the M macro will hide thehostname? No, but changing the value in <EMCLASS="emphasis">test.cf</EM> and runninganother test will do no harm. Running the test program with the testconfiguration has no affect on the running sendmail daemon thatwas started by the <BCLASS="emphasis.bold">sendmail -bd -q1h</B> command in the boot script.Only an instantiation of sendmail with the <BCLASS="emphasis.bold">-Ctest.cf</B> argument<ACLASS="indexterm"NAME="AUTOID-14896"></A>will use the <EMCLASS="emphasis">test.cf</EM> test configuration.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-10-SECT-8.1">10.8.1 Testing Rewrite Rules </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-10-IX-SENDMAIL-CF-FILE-TESTING-REWRITE-RULES"></A>In the initial test, the From: address went into sendmail as<EMCLASS="emphasis">craig</EM>, and it came out as <EMCLASS="emphasis">craig@peanut.nuts.com</EM>. Obviously ithas been rewritten. This time we test whether the change we madeto the macro M in the configuration files modifies the rewrite processby directly testing the rewrite rulesets. First, we need to find outwhat rules were used to rewrite this address. To get more information,we run sendmail with the <BCLASS="emphasis.bold">-bt</B> option.</P><PCLASS="para">When sendmail is invoked with the <BCLASS="emphasis.bold">-bt</B> option, it promptsfor input using the greater than symbol (&gt;). At the prompt, enter oneof the test commands<ACLASS="indexterm"NAME="AUTOID-14911"></A>shown in <ACLASS="xref"HREF="ch10_08.htm#TCP2-CH-10-TAB-6"TITLE="sendmail Testing Commands">Table 10.7</A></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="TCP2-CH-10-TAB-6">Table 10.7: sendmail Testing Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>ruleset</I></CODE>[,<CODECLASS="replaceable"><I>ruleset</I></CODE>]... <CODECLASS="replaceable"><I>address</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Process <CODECLASS="replaceable"><I>address</I></CODE> through <CODECLASS="replaceable"><I>ruleset</I></CODE>(s).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">.D</B><CODECLASS="replaceable"><I>mvalue</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Assign <CODECLASS="replaceable"><I>value</I></CODE> to macro <CODECLASS="replaceable"><I>m</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">.C</B><CODECLASS="replaceable"><I>cvalue</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Add <CODECLASS="replaceable"><I>value</I></CODE> to class <CODECLASS="replaceable"><I>c</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">=S</B><CODECLASS="replaceable"><I>ruleset</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the rules in <CODECLASS="replaceable"><I>ruleset</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">=M</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the mailer definitions.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">-d</B><CODECLASS="replaceable"><I>value</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Set the debug flag to <CODECLASS="replaceable"><I>value</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$</B><CODECLASS="replaceable"><I>m</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the value of macro <CODECLASS="replaceable"><I>m</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$=</B><CODECLASS="replaceable"><I>c</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the contents of class <CODECLASS="replaceable"><I>c</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/mx </B><CODECLASS="replaceable"><I>host</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the MX records for <CODECLASS="replaceable"><I>host</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/parse </B><CODECLASS="replaceable"><I>address</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Return the mailer/host/user triple for <CODECLASS="replaceable"><I>address</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/try </B><CODECLASS="replaceable"><I>mailer address</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Process <CODECLASS="replaceable"><I>address</I></CODE> for <CODECLASS="replaceable"><I>mailer</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/tryflags </B><CODECLASS="replaceable"><I>flags</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set the address processed by /parse or /try to <BCLASS="emphasis.bold">H</B> (Header), <BCLASS="emphasis.bold">E</B> (Envelope), <BCLASS="emphasis.bold">S</B> (Sender), or <BCLASS="emphasis.bold">R</B> (Recipient).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/canon </B><CODECLASS="replaceable"><I>hostname</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Canonify <CODECLASS="replaceable"><I>hostname</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/map </B><CODECLASS="replaceable"><I>mapname key</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Display the value for <CODECLASS="replaceable"><I>key</I></CODE> found in <CODECLASS="replaceable"><I>mapname</I></CODE>.</TD></TR></TBODY></TABLE><PCLASS="para">The most basic test is aruleset number followed by an email address. The address is the test data,and the ruleset number is the ruleset to be tested. The address is easyto select; it is the one that was improperly rewritten. But how do youknow which ruleset to specify?</P><PCLASS="para">Use <ACLASS="xref"HREF="ch10_06.htm#TCP2-CH-10-FIG-3"TITLE="Sequence of rulesets">Figure 10.4</A>to determine which rulesets to enter. Ruleset 3is applied to all addresses. It is followed by different rulesetsdepending on whether the address is a delivery address, a sender address,or a recipient address. Furthermore, the rulesets used for sender andrecipient addresses vary depending on the mailer that is used to deliverthe mail. All addresses are then processed by ruleset 4.</P><PCLASS="para">There are two variables in determining the rulesets used to process anaddress: the type of address and the mailer through which it is processed.The three address types are delivery address, recipient address, and senderaddress. You know the address type because you select the address beingtested. In our test mail we were concerned about the sender address.<ACLASS="indexterm"NAME="AUTOID-15020"></A>Which mailer is used is determined by the delivery address.To find out which mailer delivered the test mail, run sendmailwith the <BCLASS="emphasis.bold">-bv</B> argument and the delivery address:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>sendmail -bv craigh@ora.com</B></CODE>craigh@ora.com... deliverable: mailer smtp, host ora.com.,     user craigh@ora.com</PRE></BLOCKQUOTE></P><PCLASS="para">Knowing the mailer, we can use sendmail with the <BCLASS="emphasis.bold">-bt</B>option to process the sender <CODECLASS="literal">From:</CODE> address. There are two types ofsender addresses: the sender address in the &quot;envelope&quot; and the senderaddress in the message header. The message header address is the oneon the <CODECLASS="literal">From:</CODE> line sent with the message during the SMTP DATA transfer.You probably see it in the mail headers when you view the message withyour mail reader. The &quot;envelope&quot; address is the address used duringthe SMTP protocol interactions. sendmail allows us to view theprocessing of both of these addresses:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>/usr/lib/sendmail -bt -Ctest.cf</B></CODE>ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)Enter &lt;ruleset&gt; &lt;address&gt;&gt; <CODECLASS="userinput"><B>/tryflags HS</B></CODE>&gt; <CODECLASS="userinput"><B>/try smtp craig</B></CODE>Trying header sender address craig for mailer smtprewrite: ruleset  3   input: craigrewrite: ruleset 96   input: craigrewrite: ruleset 96 returns: craigrewrite: ruleset  3 returns: craigrewrite: ruleset  1   input: craigrewrite: ruleset  1 returns: craigrewrite: ruleset 31   input: craigrewrite: ruleset 51   input: craigrewrite: ruleset 51 returns: craigrewrite: ruleset 61   input: craigrewrite: ruleset 61 returns: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93   input: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93 returns: craig &lt; @ nuts . com . &gt;rewrite: ruleset 31 returns: craig &lt; @ nuts . com . &gt;rewrite: ruleset  4   input: craig &lt; @ nuts . com . &gt;rewrite: ruleset  4 returns: craig @ nuts . comRcode = 0, addr = craig@nuts.com&gt; <CODECLASS="userinput"><B>/tryflags ES</B></CODE>&gt; <CODECLASS="userinput"><B>/try smtp craig</B></CODE>Trying envelope sender address craig for mailer smtprewrite: ruleset  3   input: craigrewrite: ruleset 96   input: craigrewrite: ruleset 96 returns: craigrewrite: ruleset  3 returns: craigrewrite: ruleset  1   input: craigrewrite: ruleset  1 returns: craigrewrite: ruleset 11   input: craigrewrite: ruleset 51   input: craigrewrite: ruleset 51 returns: craigrewrite: ruleset 61   input: craigrewrite: ruleset 61 returns: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 94   input: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 94 returns: craig &lt; @ peanut . nuts . com . &gt;rewrite: ruleset 11 returns: craig &lt; @ peanut . nuts . com . &gt;rewrite: ruleset  4   input: craig &lt; @ peanut . nuts . com . &gt;rewrite: ruleset  4 returns: craig @ peanut . nuts . comRcode = 0, addr = craig@peanut.nuts.com&gt; <CODECLASS="userinput"><B>^D</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">/tryflags</B> command<ACLASS="indexterm"NAME="AUTOID-15041"></A>defines the type of address to beprocessed by a <BCLASS="emphasis.bold">/try</B> or a <BCLASS="emphasis.bold">/parse</B> command. Four flags areavailable for the <BCLASS="emphasis.bold">/tryflags</B> command: <BCLASS="emphasis.bold">S</B> for sender, <BCLASS="emphasis.bold">R</B>for recipient, <BCLASS="emphasis.bold">H</B> for header, and <BCLASS="emphasis.bold">E</B> for envelope. Bycombining two of these flags, the first <BCLASS="emphasis.bold">/tryflags</B> command sayswe will process a header sender (HS) address. The <BCLASS="emphasis.bold">/try</B> command<ACLASS="indexterm"NAME="AUTOID-15052"></A>tells sendmail to process the address through a specific mailer. Inthe example, we process the email address <EMCLASS="emphasis">craig</EM> through themailer <EMCLASS="emphasis">smtp</EM>. First, we process it as the header sender address,and then as the envelope sender address.  From this test, we can tellthat the value that we entered in the <BCLASS="emphasis.bold">M</B> macro is used to rewritethe sender address in the message header but it is not used to rewritethe sender address in the envelope.</P><PCLASS="para">Unfortunately, older versions of sendmail, such as the version that comeswith Solaris 2.5.1, don't support <BCLASS="emphasis.bold">/try</B> and <BCLASS="emphasis.bold">/tryflags</B>. Testingthese older systems requires a little more effort. Knowing the mailer isstill the key to determining the rulesets called to process the sender<CODECLASS="literal">From:</CODE> address. A <BCLASS="emphasis.bold">grep</B> of the <EMCLASS="emphasis">test.cf</EM> file displays therulesets that the <EMCLASS="emphasis">smtp</EM> mailer uses for sender addresses.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>grep ^Msmtp /etc/sendmail.cf</B></CODE>Msmtp,     P=[IPC], F=mDFMuX, S=11/31, R=21, E=\r\n, L=990,Msmtp8,    P=[IPC], F=mDFMuX8, S=11/31, R=21, E=\r\n, L=990,</PRE></BLOCKQUOTE></P><PCLASS="para">Again, refer to <ACLASS="xref"HREF="ch10_06.htm#TCP2-CH-10-FIG-3"TITLE="Sequence of rulesets">Figure 10.4</A>It shows that the sender address goes through ruleset 3, ruleset 1,the ruleset specified by <BCLASS="emphasis.bold">S</B>, and ruleset 4.  The mailer definition for<EMCLASS="emphasis">smtp</EM> in our sample configuration defines two rulesets for <BCLASS="emphasis.bold">S</B>&nbsp;- 11and 31.[23]The first ruleset is used for rewriting the sender address in the&quot;envelope&quot; and the second is used to rewrite the sender address in themessage header.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[23] Many versions of sendmail define only one ruleset each for S and R.</P></BLOCKQUOTE><PCLASS="para">Based on the information in <ACLASS="xref"HREF="ch10_06.htm#TCP2-CH-10-FIG-3"TITLE="Sequence of rulesets">Figure 10.4</A>and in the S field of the<EMCLASS="emphasis">smtp</EM> mailer, we know that the rulesets that process the messageheader sender address are 3, 1, 31 and 4. So we run sendmailwith the <BCLASS="emphasis.bold">-bt</B> option and enter <BCLASS="emphasis.bold">3,1,31,4 craig</B> at thecommand prompt. This command processes the sender address througheach of these rulesets in succession. We also know that the envelopesender address is processed by rulesets 3, 1, 11, and 4. To test that,we enter <BCLASS="emphasis.bold">3,1,11,4 craig</B>.</P><PCLASS="para">The results of these tests are exactly the same as those shown in theexample above. The value of the M macro rewrites the hostname in themessage sender address just as we wanted. The hostname in the envelopesender address is not rewritten. Usually this is acceptable. However,we want to create exactly the same configuration as in the <BCLASS="emphasis.bold">m4</B>example. The <BCLASS="emphasis.bold">FEATURE(masquerade_envelope)</B> command used inthe <BCLASS="emphasis.bold">m4</B> example causes the envelope sender address to berewritten.  Therefore, we want this configuration to also rewrite it.</P><PCLASS="para">The only difference between how the message and envelope addresses areprocessed is that one goes through ruleset 31 and the other goesthrough ruleset 11. The tests show that both rulesets call ruleset 51and then ruleset 61. They diverge at that point because ruleset 31calls ruleset 93 and ruleset 11 calls ruleset 94. The tests also showthat ruleset 93 provides the address rewrite that we want for themessage sender address, while the envelope sender address is notprocessed in the manner we desire by ruleset 94. The <EMCLASS="emphasis">test.cf</EM>code for rulesets 94, 11, and 31 is shown below:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">######################################################################  Ruleset 94 -- convert envelope names to masquerade form    ######################################################################S94#R$+                    $@ $&gt;93 $1R$* &lt; @ *LOCAL* &gt; $*    $: $1 &lt; @ $j . &gt; $2##  envelope sender rewriting#S11R$+             $: $&gt;51 $1      sender/recipient commonR$* :; &lt;@&gt;      $@              list:; special caseR$*             $: $&gt;61 $1      qualify unqual'ed namesR$+             $: $&gt;94 $1      do masquerading##  header sender and masquerading header recipient rewriting#S31R$+             $: $&gt;51 $1      sender/recipient commonR:; &lt;@&gt;         $@              list:; special caseR$* &lt;@&gt; $*      $@ $1 &lt;@&gt; $2    pass null host throughR&lt; @ $* &gt; $*    $@ &lt; @ $1 &gt; $2  pass route-addr throughR$*             $: $&gt;61 $1      qualify unqual'ed namesR$+             $: $&gt;93 $1      do masquerading</PRE></BLOCKQUOTE></P><PCLASS="para">Clearly, ruleset 94 does not do what we want and ruleset 93 does. A quickinspection of ruleset 94 shows that it does not contain a single referenceto macro M. Yet the comment on the line in ruleset 11 that calls itindicates that ruleset 94 should &quot;do masquerading.&quot; The first line ofruleset 94 calls ruleset 93, but it is commented out. Our solution is touncomment the first line of ruleset 94 so that it now calls ruleset 93,which is the ruleset that really does the masquerade processing.</P><PCLASS="para">Debugging a <EMCLASS="emphasis">sendmail.cf</EM> file is more of an art than a science.Deciding to edit the first line of ruleset 94 to call ruleset 93 islittle more than a hunch. The only way to verify the hunch<ACLASS="indexterm"NAME="AUTOID-15091"></A>is throughtesting. We run <BCLASS="emphasis.bold">sendmail -bt -Ctest.cf</B> again to test the addresses<EMCLASS="emphasis">craig</EM>, <EMCLASS="emphasis">craig@peanut</EM>, and <EMCLASS="emphasis">craig@localhost</EM> through rulesets3, 1, 11, and 4. All tests run successfully, rewriting the various inputaddresses into <EMCLASS="emphasis">craig@nuts.com</EM>. We then retest by sending mailvia <BCLASS="emphasis.bold">sendmail -v -t -Ctest.cf</B>. Only when all of these tests runsuccessfully do we really believe in our hunch and move on to the nexttask, which is to rewrite the user part of the email address into theuser's first and last names.<ACLASS="indexterm"NAME="AUTOID-15099"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-10-SECT-8.2">10.8.2 Using Key Files in sendmail </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-10-IX-SENDMAIL-USING-KEY-FILES-IN"></A>The last feature we added to the <BCLASS="emphasis.bold">m4</B> source file was<BCLASS="emphasis.bold">FEATURE(genericstable)</B>, which adds a database process to theconfiguration that we use to convert the user portion of the emailaddress from the user's login name to the user's first and last names.To do the same thing here, create a text file of login names and firstand last names and build a database with<ACLASS="indexterm"NAME="AUTOID-15108"></A><BCLASS="emphasis.bold">makemap</B>.[24]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[24] See the <BCLASS="emphasis.bold">m4</B> section for more information about <BCLASS="emphasis.bold">makemap</B>.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># cat realnamesdan Dan.Scribnertyler Tyler.McCaffertypat Pat.Stoverwilly Bill.Wrightcraig Craig.Hunt# makemap dbm realnames &lt; realnames</PRE></BLOCKQUOTE></P><PCLASS="para">Once the database is created, define it for sendmail. Use the<BCLASS="emphasis.bold">K</B> command to do this. To use the database that we have just built,insert the following lines into the Local Information section of the<EMCLASS="emphasis">sendmail.cf</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># define a database to map login names to firstname.lastnameKrealnames dbm /etc/realnames</PRE></BLOCKQUOTE></P><PCLASS="para">The <BCLASS="emphasis.bold">K</B> command defines <EMCLASS="emphasis">realnames</EM> as the internalsendmail name of this database. Further, it identifies that thisis a database of type <EMCLASS="emphasis">dbm</EM> and that the path to the database is<EMCLASS="emphasis">/etc/realnames</EM>. sendmail adds the correct filename extensionsto the pathname depending on the type of the database, so you don'tneed to worry about it.</P><PCLASS="para">Finally, we add a new rule that uses the database to rewrite addresses.We add it to ruleset 11 and ruleset 31 immediately after the lines inthose rulesets that call ruleset 93. This way, our new rule gets theaddress as soon as ruleset 93 finishes processing it.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># when masquerading convert login name to firstname.lastnameR$-&lt;@$M.&gt;$*    $:$(realnames $1 $)&lt;@$2.&gt;$3    user=&gt;first.last</PRE></BLOCKQUOTE></P><PCLASS="para">This rule is designed to process the output of ruleset 93, which rewritesthe hostname portion of the address. Addresses that meet the criteriato have the hostname part rewritten are also the addresses for which wewant to rewrite the user part. Look at the output of ruleset 93 fromthe earlier test. That address, <EMCLASS="emphasis">craig&lt;@nuts.com.&gt;</EM>, matches thepattern <CODECLASS="literal">$-&lt;@$M.&gt;$*</CODE>.  The address has exactly one token (<EMCLASS="emphasis">craig</EM>)before the literal &lt;@, followed by the value of M (<EMCLASS="emphasis">nuts.com</EM>),the literal .&gt; and zero tokens.</P><PCLASS="para">The transformation part of this rule takes the first token ($1) from theinput address and uses it as the key to the <EMCLASS="emphasis">realnames</EM> database,as indicated by the <CODECLASS="literal">$:$(realnames $1 $)</CODE> syntax. For the sample address<EMCLASS="emphasis">craig&lt;@nuts.com&gt;</EM>, $1 is <EMCLASS="emphasis">craig</EM>. When used as an index intothe database <EMCLASS="emphasis">realnames</EM> shown at the beginning of this section,it returns <EMCLASS="emphasis">Craig.Hunt</EM>. This returned value is prepended to theliteral &lt;@, the value of indefinite token $2,  the literal .&gt;, and thevalue of $3, as indicated by the <CODECLASS="literal">&lt;@$2.&gt;$3</CODE> part of the transformation.The effect of this new rule is to convert the username to the user'sreal first and last names.</P><PCLASS="para">After adding the new rule to rulesets 11 and 31, a test yields thefollowing results:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>sendmail -bt -Ctest.cf</B></CODE>ADDRESS TEST MODE (ruleset 3 NOT automatically invoked)Enter &lt;ruleset&gt; &lt;address&gt;&gt; <CODECLASS="userinput"><B>3,1,11,4 craig</B></CODE>rewrite: ruleset  3   input: craigrewrite: ruleset 96   input: craigrewrite: ruleset 96 returns: craigrewrite: ruleset  3 returns: craigrewrite: ruleset  1   input: craigrewrite: ruleset  1 returns: craigrewrite: ruleset 11   input: craigrewrite: ruleset 51   input: craigrewrite: ruleset 51 returns: craigrewrite: ruleset 61   input: craigrewrite: ruleset 61 returns: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93   input: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93 returns: craig &lt; @ nuts . com . &gt;rewrite: ruleset 11 returns: Craig . Hunt &lt; @ nuts . com . &gt;rewrite: ruleset  4   input: Craig . Hunt &lt; @ nuts . com . &gt;rewrite: ruleset  4 returns: Craig . Hunt @ nuts . com&gt; <CODECLASS="userinput"><B>3,1,31,4 craig</B></CODE>rewrite: ruleset  3   input: craigrewrite: ruleset 96   input: craigrewrite: ruleset 96 returns: craigrewrite: ruleset  3 returns: craigrewrite: ruleset  1   input: craigrewrite: ruleset  1 returns: craigrewrite: ruleset 31   input: craigrewrite: ruleset 51   input: craigrewrite: ruleset 51 returns: craigrewrite: ruleset 61   input: craigrewrite: ruleset 61 returns: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93   input: craig &lt; @ *LOCAL* &gt;rewrite: ruleset 93 returns: craig &lt; @ nuts . com . &gt;rewrite: ruleset 31 returns: Craig . Hunt &lt; @ nuts . com . &gt;rewrite: ruleset  4   input: Craig . Hunt &lt; @ nuts . com . &gt;rewrite: ruleset  4 returns: Craig . Hunt @ nuts . com&gt; <CODECLASS="userinput"><B>^D</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If the tests do not give the results you want, make sure that you havecorrectly entered the new rewrite rules and that you have correctlybuilt the database. If sendmail complains that it can't lock thedatabase file, you need to download a more recent release of sendmail V8.<ACLASS="indexterm"NAME="AUTOID-15151"></A>The following error message could also be displayed:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">test.cf: line 116: readcf: map realnames: class dbm not available</PRE></BLOCKQUOTE></P><PCLASS="para">This indicates that your system does not support dbm databases.Change the database type on the <BCLASS="emphasis.bold">K</B> command line to hash andrerun <BCLASS="emphasis.bold">sendmail -bt</B>. If it complains again, try it with btree.When you find a type of database that your sendmail likes, rerun<BCLASS="emphasis.bold">makemap</B> using that database type. If your sendmail doesn'tsupport any database type, see <ACLASS="xref"HREF="appe_01.htm"TITLE="A sendmail Reference">Appendix E</A> for information on re-compilingsendmail with database support.<ACLASS="indexterm"NAME="AUTOID-15161"></A></P><PCLASS="para">Note that all of the changes made directly to the <EMCLASS="emphasis">sendmail.cf</EM>file in the second half of this chapter (masquerading the senderaddress, masquerading the envelope address and converting usernames)were handled by just three lines in the <BCLASS="emphasis.bold">m4</B> source file. Theseexamples were used to demonstrate how to use the sendmail test tools.If you really need to make a new, custom configuration, use <BCLASS="emphasis.bold">m4</B>.It is easiest to maintain and enhance the sendmailconfiguration through the <BCLASS="emphasis.bold">m4</B> source file.<ACLASS="indexterm"NAME="AUTOID-15167"></A><ACLASS="indexterm"NAME="AUTOID-15168"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_07.htm"TITLE="10.7 Modifying a sendmail.cf File "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.7 Modifying a sendmail.cf File "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_09.htm"TITLE="10.9 Summary "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.9 Summary "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.7 Modifying a sendmail.cf File </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">10.9 Summary </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>