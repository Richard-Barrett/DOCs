<HTML><HEAD><TITLE>[Chapter 12] 12.4 Security Monitoring </TITLE><METANAME="DC.title"CONTENT="TCP/IP Network Administration"><METANAME="DC.creator"CONTENT="Craig Hunt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1999-02-04T01:41:49Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-322-7"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch12_01.htm"TITLE="12. Network Security "><LINKREL="prev"HREF="ch12_03.htm"TITLE="12.3 Application Security "><LINKREL="next"HREF="ch12_05.htm"TITLE="12.5 Access Control "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="TCP/IP Network Administration"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,65"HREF="index.htm"ALT="TCP/IP Network Administration"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/tsrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_03.htm"TITLE="12.3 Application Security "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 12.3 Application Security "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 12<BR>Network Security </FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_05.htm"TITLE="12.5 Access Control "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 12.5 Access Control "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="TCP2-CH-12-SECT-4">12.4 Security Monitoring </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-SECURITY-MONITORING"></A>A key element of effective network security is security monitoring.Good security is an ongoing process, and following the security guidelines discussed above is just the beginning. Youmust also monitor the systems to detect unauthorized user activity, andto locate and close security holes. Over time a system willchange&nbsp;- active accounts become inactive; file permissions are changed.You need to detect and fix these problems as they arise.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.1">12.4.1 Know Your System </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-NETWORK-ADMINISTRATION-DEVELOPING-A-LQFEEL-RQ-FOR"></A>Network security is monitored by examining the files and logs ofindividual systems on the network. To detect unusual activity on a<ACLASS="indexterm"NAME="AUTOID-17839"></A>system, you must know what activity is normal. What processes arenormally running? Who is usually logged in? Who commonly logs inafter hours? You need to know this, and more, about your system inorder to develop a &quot;feel&quot; for how things should be. Some common UNIXcommands&nbsp;- <BCLASS="emphasis.bold">ps</B> and <BCLASS="emphasis.bold">who</B>&nbsp;- can help you learnwhat normal activity is for your system.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17845"></A>The <BCLASS="emphasis.bold">ps</B> command displays the status of currently running processes.Run <BCLASS="emphasis.bold">ps</B> regularly to gain a clear picture of what processes run onthe system at different times of the day, and who runs them. The Linux<BCLASS="emphasis.bold">ps -au</B> command and the <BCLASS="emphasis.bold">ps -ef</B> Solaris command displaythe user and the command that initiated each process. This should besufficient information to learn who runs what, and when they run it.If you notice something unusual, investigate it. Make sure you understandhow your system is being used.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17852"></A>The <BCLASS="emphasis.bold">who</B> command provides information about who is currentlylogged into your system. It displays who is logged in, what devicethey are using, when they logged in and, if applicable, what remotehost they logged in from. (The <BCLASS="emphasis.bold">w</B> command, a variation of<BCLASS="emphasis.bold">who</B> available on some systems, also displays the currently activeprocess started by each user.)   The <BCLASS="emphasis.bold">who</B> command helps you learnwho is usually logged in, as well as what remote hoststhey normally log in from. Investigate anyvariations from the norm.</P><PCLASS="para">If any of these routine checks gives you reason to suspect a securityproblem, examine the system for unusual or modified files, for files thatyou know should be there but aren't, and for unusual login activity.This close examination of the system can also be made using everydayUNIX commands. Not every command or file we discuss will be availableon every system. But every system will have some tools that help youkeep a close eye on how your system is being used.<ACLASS="indexterm"NAME="AUTOID-17859"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.2">12.4.2 Looking for Trouble </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-TROUBLE-LOOKING-FOR"></A>Intruders often leave behind files or shell scripts to help them re-enterthe system or gain root access. Use the <BCLASS="emphasis.bold">ls -a | grep '^\.'</B>command to check for files with names that begin with a dot (<EMCLASS="emphasis">.</EM>).Intruders particularly favor names such as <EMCLASS="emphasis">.mail</EM>, <EMCLASS="emphasis">.xx</EM>,<EMCLASS="emphasis">...</EM> (dot, dot, dot),<EMCLASS="emphasis">.. </EM> (dot, dot, space), or<EMCLASS="emphasis">..^G</EM> (dot, dot, control-G).</P><PCLASS="para">If any files with names like these are found, suspect a break-in.(Remember that one directory named <CODECLASS="literal">.</CODE> and one directorynamed <CODECLASS="literal">..</CODE> are in every directory except the root directory.)Examine the contents of any suspicious files and follow your normalincident-reporting procedures.</P><PCLASS="para">You should also examine certain key files if you suspect a securityproblem:</P><DLCLASS="variablelist"><DTCLASS="term"><EMCLASS="emphasis">/etc/inetd.conf</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17882"></A><ACLASS="indexterm"NAME="AUTOID-17884"></A>Check the names of the programs started fromthe <EMCLASS="emphasis">/etc/inetd.conf</EM> file. In particular, make sure that it doesnot start any shell programs (e.g., <EMCLASS="emphasis">/bin/csh</EM>). Also check theprograms that are started by <BCLASS="emphasis.bold">inetd</B> to make sure the programs havenot been modified. <EMCLASS="emphasis">/etc/inetd.conf</EM> should not beworld-writable.</P></DD><DTCLASS="term"><EMCLASS="emphasis">r command security files</EM></DT><DDCLASS="listitem"><PCLASS="para">Check <EMCLASS="emphasis">/etc/hosts.equiv</EM>,<ACLASS="indexterm"NAME="AUTOID-17898"></A><ACLASS="indexterm"NAME="AUTOID-17900"></A><ACLASS="indexterm"NAME="AUTOID-17904"></A><ACLASS="indexterm"NAME="AUTOID-17906"></A><EMCLASS="emphasis">/etc/hosts.lpd</EM>, and the <EMCLASS="emphasis">.rhosts</EM> file<ACLASS="indexterm"NAME="AUTOID-17912"></A>in each user's homedirectory to make sure they have not been improperly modified. Inparticular, lookfor any plus-sign (+) entries, and any entries for hosts outside ofyour local trusted network. These files should not be world-writable.</P></DD><DTCLASS="term"><EMCLASS="emphasis">/etc/passwd</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17920"></A><ACLASS="indexterm"NAME="AUTOID-17923"></A>Make sure that the <EMCLASS="emphasis">/etc/passwd</EM> file has notbeen modified. Look for new usernames, and changes to the UID or GIDof any account. <EMCLASS="emphasis">/etc/passwd</EM> should not beworld-writable.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Files run by</EM> <BCLASS="emphasis.bold">cron</B> <EMCLASS="emphasis">or</EM> <BCLASS="emphasis.bold">at</B></DT><DDCLASS="listitem"><PCLASS="para">Check all of the files run by<ACLASS="indexterm"NAME="AUTOID-17937"></A><BCLASS="emphasis.bold">cron</B> or <BCLASS="emphasis.bold">at</B>,<ACLASS="indexterm"NAME="AUTOID-17941"></A>looking for new files or unexplained changes.Sometimes intruders use procedures run by <BCLASS="emphasis.bold">cron</B> or <BCLASS="emphasis.bold">at</B> tore-admitthemselves to the system, even after they have been kicked off.</P></DD><DTCLASS="term"><EMCLASS="emphasis">Executable files</EM></DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17950"></A>Check all executable files, binaries, and shellfiles to make sure they have not been modified by the intruder. Themaster checklist, mentioned in the previous section, is helpfulfor this. Executable files should not be world-writable.</P></DD></DL><PCLASS="para">If you find or even suspect a problem, followyour reporting procedure and let people know<ACLASS="indexterm"NAME="AUTOID-17953"></A>about the problem. Thisis particularly important if you are connected to a local area network.A problem on your system could spread to other systems on the network.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.2.1">12.4.2.1 Checking files </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17960"></A><ACLASS="indexterm"NAME="AUTOID-17963"></A>The <BCLASS="emphasis.bold">find</B> command is a powerful tool for detecting potentialfilesystem security problems because it can search the entirefilesystem for files based on file permissions. Intruders often leavebehind setuid programs to grant themselves root access.The following command searches for these files, recursively, startingfrom the root directory:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># <CODECLASS="userinput"><B>find / -user root -perm -4000 -print</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This <BCLASS="emphasis.bold">find</B> command starts searching at the root (/) for filesowned by the user root (<BCLASS="emphasis.bold">-user root</B>) that have the setuid permissionbit set (<BCLASS="emphasis.bold">-perm -4000</B>). All matches found are displayed at theterminal (<BCLASS="emphasis.bold">-print</B>). If any filenames are displayed by <BCLASS="emphasis.bold">find</B>, closely examine theindividual files to make sure that thesepermissions are correct. As a general rule, shell scripts should nothave setuid permission.</P><PCLASS="para">You can use the <BCLASS="emphasis.bold">find</B> command to check for other problems thatmight open security holes for intruders. The other common problemsthat <BCLASS="emphasis.bold">find</B> checks for are world-writable files (<BCLASS="emphasis.bold">-perm -2</B>),setgid files (<BCLASS="emphasis.bold">-perm -2000</B>), and unowned files (<BCLASS="emphasis.bold">-nouser -o-nogroup</B>). World-writable and setgid files should be checked tomake sure that these permissions are appropriate. As a general rule,files with names beginning with a dot (<CODECLASS="literal">.</CODE>) should not beworld-writable, and setgid permission, like setuid,<ACLASS="indexterm"NAME="AUTOID-17982"></A>should be avoidedfor shell scripts.<ACLASS="indexterm"NAME="AUTOID-17984"></A></P><PCLASS="para">The process of scanning the filesystem can be automated with the<ACLASS="indexterm"NAME="AUTOID-17987"></A>Tripwire program. Tripwire is available from Purdue University at<ACLASS="systemitem.url"HREF="ftp://coast.cs.purdue.edu/pub/tools/unix/Tripwire">ftp://coast.cs.purdue.edu/pub/tools/unix/Tripwire</A>. This package notonly scans the filesystem for problems, it computes digital signaturesto ensure that if any files are changed, the changes will be detected.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.2.2">12.4.2.2 Checking login activity </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-LOGIN-ACTIVITY-IN-SECURITY-CHECKS-SECURITY"></A>Strange login activity, at odd times of the day or from unfamiliarlocations, can indicate attempts by intruders to gain access to yoursystem. We have already used the <BCLASS="emphasis.bold">who</B> command to check who iscurrently logged into the system. To check who has logged into thesystem in the past, use the <BCLASS="emphasis.bold">last</B> command.<ACLASS="indexterm"NAME="AUTOID-17997"></A></P><PCLASS="para">The <BCLASS="emphasis.bold">last</B> command displays the contents of the<ACLASS="indexterm"NAME="AUTOID-18001"></A><EMCLASS="emphasis">wtmp</EM>file.[6]It is useful for learning normal login patterns and detectingabnormal login activity. The <EMCLASS="emphasis">wtmp</EM> file keeps ahistorical record of who logged into the system, when they logged in,what remote site they logged in from, and when they logged out.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] This file is frequently stored in <EMCLASS="emphasis">/usr/adm</EM> or <EMCLASS="emphasis">/etc</EM>.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="xref"HREF="ch12_04.htm#TCP2-CH-12-FIG-1"TITLE="Last command output">Figure 12.2</A>shows a single line of <BCLASS="emphasis.bold">last</B> command output. Thefigure highlights the fields that show the user who logged in, thedevice, the remote location from which the login originated (ifapplicable), the day, the date, the time logged in, the timelogged out (if applicable),and the elapsed time.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-12-FIG-1">Figure 12.2: Last command output</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_1202.gif"ALT="Figure 12.2"><PCLASS="para">Simply typing <BCLASS="emphasis.bold">last</B> produces a large amount of output becauseevery login stored in <EMCLASS="emphasis">wtmp</EM> is displayed. To limit theoutput, specify a username or tty device on the commandline. This limits the display to entries for the specified usernameor terminal. It is also useful to use <BCLASS="emphasis.bold">grep</B> to search<BCLASS="emphasis.bold">last</B>'s output for certainconditions. For example,the command below checks for logins that occur onSaturday or Sunday:&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>last | grep 'S[au]' | more</B></CODE>craig     console                   Sun Dec 15 10:33   still logged inreboot    ~                         Sat Dec 14 18:12shutdown  ~                         Sat Dec 14 18:14craig     ttyp3    modems.nuts.com  Sat Dec 14 17:11 - 17:43  (00:32)craig     ttyp2    172.16.12.24     Sun Dec  8 21:47 - 21:52  (00:05)	.	.--More--</PRE></BLOCKQUOTE></P><PCLASS="para">The next example searches for root logins not originating fromthe console. If you didn't know who made the two logins reported inthis example, be suspicious:&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>last root | grep -v console</B></CODE>root      ttyp3    peanut.nuts.com   Tue Oct 29 13:12 - down   (00:03)root      ftp      almond.nuts.com   Tue Sep 10 16:37 - 16:38  (00:00)</PRE></BLOCKQUOTE></P><PCLASS="para">While the <BCLASS="emphasis.bold">last</B> command is a major source of information aboutprevious login activity, it is not the only source. On some systems,the <EMCLASS="emphasis">messages</EM> file records logins to the root accountand failed logins.[7]Failed logins and root logins at odd times or fromodd places are suspicious. The following <BCLASS="emphasis.bold">grep</B> command checks<EMCLASS="emphasis">/usr/adm/messages</EM><ACLASS="indexterm"NAME="AUTOID-18036"></A><ACLASS="indexterm"NAME="AUTOID-18039"></A>for root login activity on a Linux system:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[7] Some systems, such as Solaris, don't log <BCLASS="emphasis.bold">su</B> activity and rootlogins in the <EMCLASS="emphasis">messages</EM> file.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>grep -i login /usr/adm/messages</B></CODE>Nov 23 10:39:10 peanut login: ROOT LOGIN ON tty1Nov 23 11:11:50 peanut login: 2 LOGIN FAILURES ON tty1, craigNov 23 11:25:11 peanut login: 2 LOGIN FAILURES ON tty1, rootNov 23 11:25:16 peanut login: ROOT LOGIN ON tty1Nov 23 11:28:15 peanut login: ROOT LOGIN ON tty1Nov 24 22:31:40 peanut login: 2 LOGIN FAILURES ON tty1, craigNov 27 19:47:52 peanut login: 2 LOGIN FAILURES ON tty1, craigNov 29 11:10:36 peanut login: 2 LOGIN FAILURES ON tty1, craigDec  1 19:41:50 peanut login: 2 LOGIN FAILURES ON tty1, craigDec  9 22:05:27 peanut login: ROOT LOGIN ON tty1</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18045"></A>Report any security problems that you detect, or even suspect. Don'tbe embarrassed to report a problem because it might turn out to be afalse alarm. Don't keep quiet because you might get &quot;blamed&quot; for thesecurity breach. Your silence will only help the intruder.<ACLASS="indexterm"NAME="AUTOID-18049"></A><ACLASS="indexterm"NAME="AUTOID-18050"></A></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.3">12.4.3 Automated Monitoring </A></H3><PCLASS="para">Manually monitoring your system is time-consuming and prone toerrors and omissions. Fortunately, several automated monitoring tools are<ACLASS="indexterm"NAME="AUTOID-18054"></A>available. The Web site <ACLASS="systemitem.sitename"HREF="http://ciac.llnl.gov/ciac/ToolsUnixSysMon.html">http://ciac.llnl.gov/ciac/ToolsUnixSysMon.html</A> lists many ofthem. Tripwire (mentioned earlier), Tiger, COPS, and SATAN are allpopular monitoring tools. COPS and SATAN are described below.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.3.1">12.4.3.1 COPS </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-COPS-COMPUTER-ORACLE-PASSWORD-AND-SECURITY-PROGRAMS"></A>COPS (Computer Oracle Password and Security) is a collection of programsthat automate many of the computer monitoring procedures discussed inthe previous sections. As with any monitoring system, COPS detectspotential problems; it does not correct them. COPS does not replacepersonal monitoring by the system administrator, but it does provideadditional tools to help the administrator perform monitoring tasks.</P><PCLASS="para">The tools in the COPS package check:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Permissions for files, directories, and devices</P></LI><LICLASS="listitem"><PCLASS="para">Contents of <EMCLASS="emphasis">/etc/passwd</EM> and <EMCLASS="emphasis">/etc/group</EM> files</P></LI><LICLASS="listitem"><PCLASS="para">Contents of <EMCLASS="emphasis">/etc/hosts.equiv</EM> and <EMCLASS="emphasis">~/.rhosts</EM> files</P></LI><LICLASS="listitem"><PCLASS="para">Changes in SUID status</P></LI></UL><PCLASS="para">After completing these checks, COPS mails a report of the results tothe system administrator.</P><PCLASS="para">COPS can be obtained at <ACLASS="systemitem.url"HREF="ftp://coast.cs.purdue.edu/pub/tools/unix">ftp://coast.cs.purdue.edu/pub/tools/unix</A>.The <BCLASS="emphasis.bold">tar</B> file contains the source code and instructions forbuilding COPS. Once COPS is built, edit the COPS shell file so thatthe variable SECURE points<ACLASS="indexterm"NAME="AUTOID-18081"></A>to the directory that contains the COPSprograms, and  the variable<ACLASS="indexterm"NAME="AUTOID-18083"></A>SECURE_USERS contains the email address ofthe person who should receive the COPS report. By default, the reportis not mailed to anyone; it is written to a file. To force the reportto be mailed to the SECURE_USERS, edit the COPS shell script by changingthe MMAIL variable to MMAIL=YES.</P><PCLASS="para">The great advantage of COPS is that it is simple. COPS removes thehassles from security monitoring, making it more likely that these taskswill be performed. To run COPS, simply enter:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cops</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><BCLASS="emphasis.bold">cops</B> uses the system's hostname to create a directory withinthe directory defined by the SECURE variable. It writes the securityreport in this new directory in a file named after the current date.The format of the report's filename is <EMCLASS="emphasis">year</EM>_<EMCLASS="emphasis">month</EM>_<EMCLASS="emphasis">day</EM>.For example, on <EMCLASS="emphasis">peanut</EM> the home directory for the COPSprograms is <EMCLASS="emphasis">/usr/local/cops</EM>. If the current date is January24, 1997, running the <BCLASS="emphasis.bold">cops</B> program creates the directory<EMCLASS="emphasis">/usr/local/cops/peanut</EM> and writes the report into that directorywith the file name <EMCLASS="emphasis">1997_Jan_24</EM>. Here's a sample report:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">peanut:/usr/local/cops/peanut&gt; cat 1997_Jan_24ATTENTION:Security Report for Fri Jan 24 16:21:21 EST 1997from host peanut**** root.chk ******** dev.chk ****Warning! NFS file system /home/craig exported with no restrictions!**** is_able.chk ****Warning! /usr/spool/uucp is _World_ writable!Warning! /etc/securetty is _World_ readable!**** rc.chk ******** cron.chk ******** group.chk ******** home.chk ****Warning! User uucp's home directory /var/spool/uucppublic is mode 01777!Warning! User nobody's home directory /dev/null is not a directory!         (mode 020666)Warning! User guest's home directory /dev/null is not a directory!         (mode 020666)**** passwd.chk ****Warning! Password file, line 15, uid &gt; 8 chars         postmaster:*:14:12:postmaster:/var/spool/mail:/bin/bash**** user.chk ******** misc.chk ******** ftp.chk ****ftp-Warning! Incorrect permissions on &quot;ls&quot; in /home/ftp/bin!ftp-Warning! Incorrect permissions on &quot;passwd&quot; in /home/ftp/etc!ftp-Warning! Incorrect permissions on &quot;group&quot; in /home/ftp/etc!**** pass.chk ******** kuang ******** bug.chk****</PRE></BLOCKQUOTE></P><PCLASS="para">Look at each line in the report you receive. Some lines might indicatereal problems, such as the first warning line in our sample report thatindicates <EMCLASS="emphasis">/home/craig</EM> is exported via NFS without proper accesscontrol. Other lines might indicate conditions that are not problems foryour system. In our example, we decide to leave <EMCLASS="emphasis">/etc/securetty</EM>with world-read permission. Read the file <EMCLASS="emphasis">docs/warnings</EM><ACLASS="indexterm"NAME="AUTOID-18105"></A>for anexplanation of each warning message. Evaluate each line of the reportand correct anything that needs correcting. Rerun COPS and examine thenew report. It should report only the problems that you are willingto accept.</P><PCLASS="para">Once you're satisfied with your system's security, schedule COPS to runat regular intervals. New problems can be introduced into yoursystem over time. It's better to have the COPS discover the problemthan to have the &quot;robbers&quot; discover it!<ACLASS="indexterm"NAME="AUTOID-18108"></A></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="TCP2-CH-12-SECT-4.3.2">12.4.3.2 SATAN </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="TCP2-CH-12-IX-SECURITY-ADMINISTRATORS-TOOL-FOR-ANALYZING-NETWORKS-SATAN"></A>Another tool for testing the security of your system is the <EMCLASS="emphasis">SecurityAdministrator's Tool for Analyzing Networks</EM> (SATAN). SATAN'sintroduction was met by near hysteria in the popular press, largelybecause of the tool's name. Despite its name, SATAN is just anothersecurity tool.</P><PCLASS="para">SATAN does have some unique features. While COPS is intended for useon an individual system, SATAN is designed to test entire networksof systems. This is both a feature and a problem. If you are theadministrator of your network, running SATAN allows you to check allof the systems on the network from one central system. If, however,you are responsible for only one system and you use SATAN to probethe other systems on your network, you will irritate all of the othersystem administrators on the network who will view the SATAN probes asattempted break-ins. Use SATAN only to test systems on your ownnetwork that you have officially recognized authority over.</P><PCLASS="para">Another feature of SATAN is that it uses your system's Web browser asthe interface for viewing the security reports it generates. This ishelpful if you have a large network of systems. The browser's abilityto link together related documents allows SATAN to organize varioushierarchies of security information. Use the browser to search for themost critical errors, the most troublesome subnets, or the mostvulnerable hosts. The screenshot in <ACLASS="xref"HREF="ch12_04.htm#TCP2-CH-12-FIG-2"TITLE="SATAN interface">Figure 12.3</A>shows a display ofhosts listed in sequence from the one with the most security errors tothe one with the least. Clicking on a hostname provides a specificreport of the errors on that host.</P><H4CLASS="figure"><ACLASS="title"NAME="TCP2-CH-12-FIG-2">Figure 12.3: SATAN interface</A></H4><IMGCLASS="graphic"SRC="figs/tcp2_1203.gif"ALT="Figure 12.3"><PCLASS="para">The information in <ACLASS="xref"HREF="ch12_04.htm#TCP2-CH-12-FIG-2"TITLE="SATAN interface">Figure 12.3</A>comes from the <EMCLASS="emphasis">foo.org</EM> database<ACLASS="indexterm"NAME="AUTOID-18124"></A>provided in the SATAN documentation set. Download the binary file<EMCLASS="emphasis">satan.doc.tar.Z</EM> from <ACLASS="systemitem.url"HREF="ftp://ftp.win.tue.nl/pub/security/unix">ftp://ftp.win.tue.nl/pub/security/unix</A>.Uncompress and untar the file and follow the simple instructions in theREADME file to build the documentation system. You can then play with SATANwithout the danger of accidentally probing any of the systems on yournetwork. If you like what you see, you can download the full productfrom the same location by getting the binary file <EMCLASS="emphasis">satan.tar.Z</EM>.<ACLASS="indexterm"NAME="AUTOID-18129"></A></P><PCLASS="para">For many sites, well-informed users and administrators, good passwordsecurity, and good system monitoring provide adequate networksecurity. But for some security-conscious sites, more may be desired.That &quot;more&quot; is usually some technique for limiting access betweensystems connected to the network, or for limiting access to the datathe network carries. In the remainder of this chapter we look atvarious security techniques that limit access.<ACLASS="indexterm"NAME="AUTOID-18131"></A></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_03.htm"TITLE="12.3 Application Security "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 12.3 Application Security "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="TCP/IP Network Administration"><IMGSRC="../gifs/txthome.gif"ALT="TCP/IP Network Administration"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_05.htm"TITLE="12.5 Access Control "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 12.5 Access Control "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">12.3 Application Security </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">12.5 Access Control </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><PCLASS="nav"><FONTSIZE="-1">[ <AHREF="../index.htm"TITLE="The Networking CD Bookshelf">Library Home</A> | <AHREF="../dnsbind/index.htm"TITLE="DNS &amp; BIND">DNS &amp; BIND</A> | <AHREF="index.htm"TITLE="TCP/IP Network Administration">TCP/IP</A> | <AHREF="../sendmail/index.htm"TITLE="sendmail">sendmail</A> | <AHREF="../smdref/index.htm"TITLE="sendmail Desktop Reference">sendmail Reference</A> | <AHREF="../firewall/index.htm"TITLE="Building Internet Firewalls">Firewalls</A> | <AHREF="../puis/index.htm"TITLE="Practical UNIX &amp; Internet Security">Practical Security</A> ]</FONT></P></DIV></BODY></HTML>