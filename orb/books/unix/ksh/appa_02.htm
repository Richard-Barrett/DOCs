<HTML><HEAD><TITLE>[Appendix A] A.2 The IEEE 1003.2 POSIX Shell Standard</TITLE><METANAME="DC.title"CONTENT="Learning the Korn Shell"><METANAME="DC.creator"CONTENT="Bill Rosenblatt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-03T21:18:15Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-054-6"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="appa_01.htm"TITLE="A. Related Shells"><LINKREL="prev"HREF="appa_01.htm"TITLE="A.1 The Bourne Shell"><LINKREL="next"HREF="appa_03.htm"TITLE="A.3 wksh"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Learning the Korn Shell"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,66"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ksrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_01.htm"TITLE="A.1 The Bourne Shell"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: A.1 The Bourne Shell"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Appendix A<BR>Related Shells</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_03.htm"TITLE="A.3 wksh"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A.3 wksh"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="KSH-APA-SECT-2">A.2 The IEEE 1003.2 POSIX Shell Standard</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="KSH-APA-IX-POSIX-SHELL"></A>There have been many attempts to standardize UNIX.Hardware companies' monolithic attempts at marketdomination, fragile industry coalitions, marketing failures,and other suchefforts are the stuff of history-and the stuff of frustration.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-APA-IX-POSIX-HISTORY"></A>Only one standardization effort has not been tied to commercial interests: the Portable Operating SystemInterface, known as POSIX. This effort started in 1981 with the<EMCLASS="emphasis">/usr/group</EM> (now UniForum) Standards Committee, whichproduced the <EMCLASS="emphasis">/usr/group Standard</EM> three years later.<ACLASS="indexterm"NAME="AUTOID-17255"></A><ACLASS="indexterm"NAME="AUTOID-17257"></A><ACLASS="indexterm"NAME="AUTOID-17260"></A><ACLASS="indexterm"NAME="AUTOID-17263"></A>The list of contributors grew to include  the Institute of Electrical and Electronic Engineers (IEEE)and the International Organization for Standardization (ISO).</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17266"></A><ACLASS="indexterm"NAME="AUTOID-17269"></A>The first POSIX standard was published in 1988. This one,called IEEE P1003.1, covers low-level issues at the system call level. IEEE P1003.2,covering the shell, utility programs, and user interface issues, was ratified in September 1992after a six-year effort.<ACLASS="indexterm"NAME="AUTOID-17273"></A></P><PCLASS="para">The POSIX standards were never meant to be rigid and absolute.The committee members certainly weren't about to put gunsto the heads of operating system implementors and force themto adhere. Instead, the standards are designed to be flexibleenough to allow for both coexistence of similar available software,so that existing code isn't in danger of obsolescence, and the addition of new features, so that vendors have the incentiveto innovate. In other words, they aresupposed to be the kind of third-party standards that vendors mightactually be interested in following.</P><PCLASS="para">As a result, most UNIX vendors currently comply withPOSIX 1003.1. Now that POSIX 1003.2 is available,the most important shells will undoubtedlyadhere to it in the future. The Kornshell is no exception; it's expected to be 100%POSIX compliant in its next release, which should be within thenext two years. Therefore you should pay attentionto the differences between the current Korn shell and 1003.2if you write shell code that you would like to be portable inthe not-too-distant future.</P><PCLASS="para">POSIX 1003.2 itself consists of two parts. The first, 1003.2, addresses shell script portability; it defines the shell andthe standard utilities.<ACLASS="indexterm"NAME="AUTOID-17277"></A>The second, 1003.2a, called the User Portability Extensions(UPE), defines standards of interactive shell use andinteractive utilities like the <EMCLASS="emphasis">vi</EM> editor. The combineddocument-on the order of 2000 pages-is available through the IEEE; for information, call (800) 678-IEEE.</P><PCLASS="para">The committee members had two motivating factors to weighwhen they designed the 1003.2 shell standard.  <ACLASS="indexterm"NAME="AUTOID-17282"></A><ACLASS="indexterm"NAME="AUTOID-17286"></A><ACLASS="indexterm"NAME="AUTOID-17290"></A><ACLASS="indexterm"NAME="AUTOID-17294"></A>On the one hand,the design had to accomodate, as much as possible,existing shell code written under various Bourne-derived shells (the Version 7, System V, BSD, and Korn shells).These shells are different in several extremely subtle ways,most of which have to do with the ways certain syntacticelements interact with each other.  </P><PCLASS="para">It must have been quite difficult and tedious to spell out these differences, letalone to reach compromises among them. Throw in biasesof some committee members towards particular shells, and you mightunderstand why it took six years to ratify 1003.2.</P><PCLASS="para">On the other hand, the shell design had to serve as a standardon which to base future shell implementations. This impliedgoals of simplicity, clarity, and precision-objectives that seemespecially elusive in the context of the above problems.</P><PCLASS="para">The designers found one way of ameliorating this dilemma:they decided that the standard should include not only thefeatures included in the shell, but also those explicitlyomitted and those included but with unspecifiedfunctionality. The latter category allows some ofthe existing shells' innovations to &quot;sneak through&quot; withoutbecoming part of the standard, while listing omitted featureshelps programmers determine which features in existingshell scripts won't be portable to future shells.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17300"></A><ACLASS="indexterm"NAME="AUTOID-17302"></A><ACLASS="indexterm"NAME="AUTOID-17306"></A>The POSIX standard is primarily based on the System VBourne shell, which is a superset of the Version 7 shelldiscussed earlier in this Appendix. Therefore you shouldassume that Korn shell features that aren't present in the Bourne shell also aren't included in the POSIX standard.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17311"></A>However, the Korn shell did contribute a few of its features to the POSIX standard, including:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17318"></A><BCLASS="emphasis.bold">$((</B>...<BCLASS="emphasis.bold">))</B> syntax for arithmetic expressions.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17324"></A><ACLASS="indexterm"NAME="AUTOID-17326"></A><BCLASS="emphasis.bold">$(</B>...<BCLASS="emphasis.bold">)</B> syntax for command substitution, exceptthat the <BCLASS="emphasis.bold">$</B>(&lt;<EMCLASS="emphasis">filename)</EM> shorthand for<BCLASS="emphasis.bold">$(cat</B> <EMCLASS="emphasis">filename</EM><BCLASS="emphasis.bold">)</B> isn't supported.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17338"></A><ACLASS="indexterm"NAME="AUTOID-17340"></A>Tilde expansion (originally derived from the C shell).</P></LI></UL><PCLASS="para">The following Korn shell features are left&quot;unspecified&quot; in the standard, meaning that their syntaxis acceptable but their functionality is not standardized:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17346"></A>The <BCLASS="emphasis.bold">((</B>...<BCLASS="emphasis.bold">))</B> syntax for arithmetic conditionals.The arithmetic test operators introduced in <ACLASS="xref"HREF="ch05_01.htm"TITLE="Flow Control">Chapter 5</A>,(e.g., <BCLASS="emphasis.bold">-eq</B>, <BCLASS="emphasis.bold">-lt</B>), however, are included.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17356"></A>The <BCLASS="emphasis.bold">[[</B>...<BCLASS="emphasis.bold">]]</B> syntax for conditional tests.The external <EMCLASS="emphasis">test</EM> or <BCLASS="emphasis.bold">[</B>...<BCLASS="emphasis.bold">]</B> utility shouldbe used instead.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17365"></A>The syntax for defining functions that this book uses.The other syntax shown in <ACLASS="xref"HREF="ch04_01.htm"TITLE="Basic Shell Programming">Chapter 4</A> (<EMCLASS="emphasis">fname</EM><BCLASS="emphasis.bold">()</B> instead of <BCLASS="emphasis.bold">function</B> <EMCLASS="emphasis">fname</EM>) is supported;see below.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17375"></A>The <BCLASS="emphasis.bold">select</B> control structure.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17380"></A>Code blocks (<BCLASS="emphasis.bold">{</B>...<BCLASS="emphasis.bold">}</B>) are supported, but formaximum portability, the curly braces should be quoted(for reasons too complicated to go into here).</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17387"></A><ACLASS="indexterm"NAME="AUTOID-17390"></A><ACLASS="indexterm"NAME="AUTOID-17393"></A>Signal numbers are only allowed ifthe numbers for certain key signals(INT, TERM, and a few others) are the same as on the most important historical versions of UNIX. In general,shell scripts should use symbolic names for signals.</P></LI></UL><PCLASS="para">The POSIX standard supports functions, as shown above, but the semantics are weaker: functions do not have localtraps or options, it is not possible to define localvariables, and functions can't be exported.</P><PCLASS="para">The POSIX standard also has a few new features:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17401"></A>The command lookup order has been changed to allow certain built-in commands to be overridden by functions-sincealiases aren't included in the standard. (Recall that we hadto use an alias as &quot;decoy&quot; for a function that superseded the<BCLASS="emphasis.bold">cd</B> command in <ACLASS="xref"HREF="ch05_01.htm"TITLE="Flow Control">Chapter 5</A>.) Built-in commands are divided into twosets by their positions in the command lookup order:some are processed before functions, some after.Specifically, the built-in commands<BCLASS="emphasis.bold">break</B>, <CODECLASS="literal">:</CODE> (do nothing), <BCLASS="emphasis.bold">continue</B>, <CODECLASS="literal">.</CODE>&nbsp;(dot), <BCLASS="emphasis.bold">eval</B>, <BCLASS="emphasis.bold">exec</B>, <BCLASS="emphasis.bold">exit</B>, <BCLASS="emphasis.bold">export</B>, <BCLASS="emphasis.bold">readonly</B>, <BCLASS="emphasis.bold">return</B>, <BCLASS="emphasis.bold">set</B>, <BCLASS="emphasis.bold">shift</B>, <BCLASS="emphasis.bold">trap</B>, and <BCLASS="emphasis.bold">unset</B> take priority over functions.</P></LI><LICLASS="listitem"><PCLASS="para">A new built-in command, <BCLASS="emphasis.bold">command</B>, allows you to use built-in commands other than the above even if thereare functions of the same name.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17425"></A>A new keyword, <BCLASS="emphasis.bold">!</B>, takes the logical&quot;not&quot; of a command's exit status: if <EMCLASS="emphasis">command</EM> returnsexit status 0, <BCLASS="emphasis.bold">!</B> <EMCLASS="emphasis">command</EM> returns 1; if <EMCLASS="emphasis">command</EM>returns a non-0 value, <BCLASS="emphasis.bold">!</B> <EMCLASS="emphasis">command</EM> returns 0.<ACLASS="indexterm"NAME="AUTOID-17435"></A><ACLASS="indexterm"NAME="AUTOID-17438"></A><ACLASS="indexterm"NAME="AUTOID-17441"></A><BCLASS="emphasis.bold">!</B> can be used with <BCLASS="emphasis.bold">&amp;&amp;</B>, <BCLASS="emphasis.bold">||</B>, and parentheses (for nested subshells)to create logical combinations of exit statuses in conditionals.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17449"></A>The command <BCLASS="emphasis.bold">unset -v</B> is used instead of <BCLASS="emphasis.bold">unset</B>(without an option) to remove the definition of a variable.This provides a better syntactic match with <BCLASS="emphasis.bold">unset -f</B>,for unsetting functions.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17456"></A>Finally, because the POSIX standard is meant to promoteshell script portability, it explicitly avoids mention offeatures that only apply to interactive shell use-includingaliases, editing modes, control keys, and so on. The UPEcovers these.  <ACLASS="indexterm"NAME="AUTOID-17459"></A>It also avoids mentioning certain keyimplementation issues: in particular, there is norequirement that multitasking be used for background jobs,subshells, etc.<ACLASS="indexterm"NAME="AUTOID-17461"></A><ACLASS="indexterm"NAME="AUTOID-17463"></A>This was done to allow portability tonon-multitasking systems like MS-DOS, so that, for example,the MKS Toolkit (see below) can be POSIX compliant.<ACLASS="indexterm"NAME="AUTOID-17465"></A></P></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_01.htm"TITLE="A.1 The Bourne Shell"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: A.1 The Bourne Shell"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Learning the Korn Shell"><IMGSRC="../gifs/txthome.gif"ALT="Learning the Korn Shell"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="appa_03.htm"TITLE="A.3 wksh"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A.3 wksh"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">A.1 The Bourne Shell</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">A.3 wksh</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>