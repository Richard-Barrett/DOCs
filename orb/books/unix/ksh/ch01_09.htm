<HTML><HEAD><TITLE>[Chapter 1] 1.9 Special Characters and Quoting</TITLE><METANAME="DC.title"CONTENT="Learning the Korn Shell"><METANAME="DC.creator"CONTENT="Bill Rosenblatt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-03T20:53:48Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-054-6"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch01_01.htm"TITLE="1. Korn Shell Basics"><LINKREL="prev"HREF="ch01_08.htm"TITLE="1.8 Background Jobs"><LINKREL="next"HREF="ch02_01.htm"TITLE="2. Command-line Editing"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Learning the Korn Shell"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,66"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ksrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_08.htm"TITLE="1.8 Background Jobs"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.8 Background Jobs"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 1<BR>Korn Shell Basics</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch02_01.htm"TITLE="2. Command-line Editing"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2. Command-line Editing"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="KSH-CH-1-SECT-9">1.9 Special Characters and Quoting</A></H2><PCLASS="para">The characters <BCLASS="emphasis.bold">&lt;</B>, <BCLASS="emphasis.bold">&gt;</B>, <BCLASS="emphasis.bold">|</B>, and <BCLASS="emphasis.bold">&amp;</B>are four examples of <EMCLASS="emphasis">special characters</EM> that haveparticular meanings to the shell. The wildcards we sawearlier in this chapter (<CODECLASS="literal">*</CODE>, <CODECLASS="literal">?</CODE>, and <BCLASS="emphasis.bold">[</B>...<BCLASS="emphasis.bold">]</B>)are also special characters.</P><PCLASS="para"><ACLASS="xref"HREF="ch01_09.htm#KSH-CH-1-TAB-5"TITLE="Special Characters">Table 1.6</A>gives indicationsof the meanings of all special characters within shell commandlines only. Other characters have special meanings in specific situations, such as the regular expressions andstring-handling operators we'll see in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3</A> and <ACLASS="xref"HREF="ch04_01.htm"TITLE="Basic Shell Programming">Chapter 4</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-1-TAB-5">Table 1.6: Special Characters</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Character</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Meaning</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">See Chapter</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">~</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Home directory</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">lsquo;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command substitution (archaic)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">4</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">#</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Comment</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">4</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">$</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Variable expression</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">3</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">&amp;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Background job</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold"><CODECLASS="literal">*</CODE></B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">String wildcard</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">(</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Start subshell</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">8</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">)</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End subshell</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">8</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">\</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Quote next character</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">|</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pipe</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">[</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Start character-set wildcard</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">]</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End character-set wildcard</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">{</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Start code block</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">7</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">}</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">End code block</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">7</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Shell command separator</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">3</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">'</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Strong quote</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">&quot;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Weak quote</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">&lt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Input redirect</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">&gt;</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Output redirect</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pathname directory separator</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold"><CODECLASS="literal">?</CODE></B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Single-character wildcard</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR></TBODY></TABLE><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-1-SECT-9.1">1.9.1 Quoting</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-QUOTING"></A>Sometimes you will want to use special characters literally, i.e.,without their special meanings.  This is called <EMCLASS="emphasis">quoting</EM>. If you surround a string ofcharacters with single quotes, you strip all characters withinthe quotes of any special meaning they might have.  </P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-PRINT"></A>The most obvious situation where you might need to quote a stringis with the <BCLASS="emphasis.bold">print</B> command, which just takes its argumentsand prints them to the standard output. What is the point ofthis? As you will see in later chapters, the shell does quitea bit of processing on command lines&nbsp;- most of which involves some of the special characters listed in <ACLASS="xref"HREF="ch01_09.htm#KSH-CH-1-TAB-5"TITLE="Special Characters">Table 1.6</A>.<BCLASS="emphasis.bold">print</B>is a way of making the result of that processing available onthe standard output.</P><PCLASS="para">But what if we wanted to print the string, <BCLASS="emphasis.bold">2 * 3 &gt; 5 is a validinequality</B>?  Suppose you typed this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print 2 * 3 &gt; 5 is a valid inequality.</B></PRE></BLOCKQUOTE></P><PCLASS="para">You would get your shell prompt back, as if nothing happened!But then there would be a newfile, with the name <EMCLASS="emphasis">5</EM>, containing &quot;2&quot;, the names of allfiles in your current directory, and then the string <BCLASS="emphasis.bold">3 is a validinequality</B>.  Make sure you understand why.  [12]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] This should also teach you something about the flexibility of placing I/O redirectors anywhere on the command line-even in places wherethey don't seem to make sense.</P></BLOCKQUOTE><PCLASS="para">However, if you type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print '2 * 3 &gt; 5 is a valid inequality.'</B></PRE></BLOCKQUOTE></P><PCLASS="para">the result is the string, taken literally. You needn't quotethe entire line, just the portion containing special characters(or characters you think <EMCLASS="emphasis">might</EM> be special, if you justwant to be sure):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print '2 * 3 &gt; 5' is a valid inequality.</B></PRE></BLOCKQUOTE></P><PCLASS="para">This has exactly the same result.<ACLASS="indexterm"NAME="AUTOID-1718"></A></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1720"></A>Notice that <ACLASS="xref"HREF="ch01_09.htm#KSH-CH-1-TAB-5"TITLE="Special Characters">Table 1.6</A>lists double quotes (<CODECLASS="literal">&quot;</CODE>) as weak quotes.A string in double quotes is subjected to <EMCLASS="emphasis">some</EM> of the stepsthe shell takes to process command lines, but not all.  (In other words, it treats only some special charactersas special.) You'llsee in later chapters why double quotes are sometimespreferable; <ACLASS="xref"HREF="ch07_01.htm"TITLE="Input/Output and Command-line Processing">Chapter 7</A> contains the most comprehensive explanationof the shell's rules for quoting and other aspects of command-line processing. For now, though, you should stick tosingle quotes.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-1-SECT-9.2">1.9.2 Backslash-escaping</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-BACKSLASH"></A>Another way to change the meaning of a character is to precedeit with a backslash (\). This is called backslash-escapingthe character. In most cases, when you backslash-escapea character, you quote it. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print 2 \* 3 \&gt; 5 is a valid inequality.</B></PRE></BLOCKQUOTE></P><PCLASS="para">will produce the same results as if you surrounded the stringwith single quotes. To use a literal backslash, justsurround it with quotes (<CODECLASS="literal">'\'</CODE>) or, even better, backslash-escapeit (<BCLASS="emphasis.bold">\\</B>).<ACLASS="indexterm"NAME="AUTOID-1737"></A></P><PCLASS="para">Here is a more practical example of quoting special characters.A few UNIX commands take arguments that often include wildcardcharacters, which need to be escaped so the shell doesn'tprocess them first.  <ACLASS="indexterm"NAME="KSH-CH-1-IX-FIND"></A>The most common such command is<EMCLASS="emphasis">find</EM>, which searches for files throughout entire directorytrees.</P><PCLASS="para">To use <EMCLASS="emphasis">find</EM>, you supply the root of the tree you want tosearch and arguments thatdescribe the characteristics of the file(s) you want to find.For example, the command <BCLASS="emphasis.bold">find . -</B>name <EMCLASS="emphasis">string</EM> searches the directorytree whose root is your current directory for files whose namesmatch the string. (Other arguments allow you to searchby the file's size, owner, permissions, date of last access, etc.)</P><PCLASS="para">You can use wildcards in the string, but you must quote them,so that the <EMCLASS="emphasis">find</EM> command itself can match them against namesof files in each directory it searches. The command<BCLASS="emphasis.bold">find . -name '</B>*.c<BCLASS="emphasis.bold">'</B> willmatch all files whose names end in <EMCLASS="emphasis">.c</EM> anywhere in your current directory, subdirectories, sub-subdirectories, etc.<ACLASS="indexterm"NAME="AUTOID-1751"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-1-SECT-9.3">1.9.3 Quoting Quotation Marks</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-FOR-QUOTING-QUOTE-MARKS"></A>You can also use a backslash to include double quotes withina quoted string. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print \&quot;2 \* 3 \&gt; 5\&quot; is a valid inequality.</B></PRE></BLOCKQUOTE></P><PCLASS="para">produces the following output:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&quot;2 * 3 &gt; 5&quot; is a valid inequality.</PRE></BLOCKQUOTE></P><PCLASS="para">However, this won't work with single quotes inside quoted expressions.  For example, <BCLASS="emphasis.bold">print 'Bob\'s hair is brown'</B> will notgive you <BCLASS="emphasis.bold">Bob's hair is brown</B>. You can get around this limitation in various ways. First, try eliminating the quotes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print Bob\'s hair is brown</B></PRE></BLOCKQUOTE></P><PCLASS="para">If no other characters are special (as is the case here),this works. Otherwise, you can use the following command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print 'Bob'\''s hair is brown'</B></PRE></BLOCKQUOTE></P><PCLASS="para">That is, <CODECLASS="literal">'\''</CODE> (i.e., single quote, backslash, single quote, single quote) acts like a single quote within a quotedstring. Why? The first <CODECLASS="literal">'</CODE> in <CODECLASS="literal">'\''</CODE> ends the quoted string we startedwith <BCLASS="emphasis.bold">(</B><CODECLASS="literal">'</CODE><BCLASS="emphasis.bold">Bob)</B>, the \<CODECLASS="literal">'</CODE> inserts a literal single quote, and the next <CODECLASS="literal">'</CODE>starts another quoted string that ends with the word &quot;brown&quot;.  If you understand,then you will have no trouble resolving the other bewilderingissues that arise from the shell's often cryptic syntax.<ACLASS="indexterm"NAME="AUTOID-1783"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-1-SECT-9.4">1.9.4 Continuing Lines</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-BACKSLASH-CONTCHARS"></A>A related issue is how to continuethe text of a command beyond a single line on your terminal or workstationwindow. The answer is conceptually simple: just quote theRETURN key. After all, RETURN is really just another character.</P><PCLASS="para">You can do this in two ways: by ending a line with a backslash,or by not closing a quote mark (i.e., by including RETURN in a quotedstring). If you use the backslash, there must be nothingbetween it and the end of the line-not even spaces or TABs. </P><PCLASS="para">Whether you use a backslash or a single quote, you are tellingthe shell to ignore the special meaning of the RETURN character.After you press RETURN, the shell understands that you haven'tfinished your command line (i.e., since you haven't typed a&quot;real&quot; RETURN), so it responds with a secondaryprompt, which is <CODECLASS="literal">&gt;</CODE> by default, and waits for you to finish the line. You can continue a line as many times as you wish.</P><PCLASS="para">For example, if you want the shell to print the first sentenceof Thomas Hardy's <EMCLASS="emphasis">The Return of the Native</EM>, you can type this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print A Saturday afternoon in November was approaching the \</B>&gt; <BCLASS="emphasis.bold">time of twilight, and the vast tract of unenclosed wild known \</B>&gt; <BCLASS="emphasis.bold">as Egdon Heath embrowned itself moment by moment. </B></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1801"></A>Or you can do it this way:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">print</B> <CODECLASS="literal">'</CODE> <BCLASS="emphasis.bold">A Saturday afternoon in November was approaching the </B> &gt; <BCLASS="emphasis.bold">time of twilight, and the vast tract of unenclosed wild known </B>&gt; <BCLASS="emphasis.bold">as Egdon Heath embrowned itself moment by moment.</B><CODECLASS="literal">'</CODE> </PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1811"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-1-SECT-9.5">1.9.5 Control Keys</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-CONTROL-KEYS"></A>Control keys-those thatyou type by holding down the CONTROL (or CTRL) key and hittinganother key-are another type of special character. These normallydon't print anything on your screen, but the operating systeminterprets a few of them as special commands. You already knowone of them: <ACLASS="indexterm"NAME="AUTOID-1817"></A><ACLASS="indexterm"NAME="AUTOID-1819"></A>RETURN is actually the same as <KBDCLASS="keycap">[CTRL-M]</KBD> (try it and see).You have probably also used the BACKSPACE or DEL key to erasetypos on your command line.</P><PCLASS="para">Actually, many control keys have functions that don't reallyconcern you-yet you should know about them for future referenceand in case you type them by accident.</P><PCLASS="para">Perhaps the most difficult thing about control keys is that theycan differ from systemto system. The usual arrangement is shown in <ACLASS="xref"HREF="ch01_09.htm#KSH-CH-1-TAB-6"TITLE="Control Keys">Table 1.7</A>whichlists the control keys that all major modern versions of UNIX support.Note that <KBDCLASS="keycap">[CTRL-\]</KBD> and <KBDCLASS="keycap">[CTRL-|]</KBD> (control-backslash and control-pipe)are the same character notated twodifferent ways; the same is true of DEL and <KBDCLASS="keycap">[CTRL-?]</KBD>.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-STTY"></A>You can use the <BCLASS="emphasis.bold">stty</B> command to find out what your settingsare and change them if you wish; see <ACLASS="xref"HREF="ch08_01.htm"TITLE="Process Handling">Chapter 8</A> for details.  <ACLASS="indexterm"NAME="AUTOID-1834"></A><ACLASS="indexterm"NAME="AUTOID-1838"></A><ACLASS="indexterm"NAME="AUTOID-1842"></A><ACLASS="indexterm"NAME="AUTOID-1846"></A><ACLASS="indexterm"NAME="AUTOID-1848"></A><ACLASS="indexterm"NAME="AUTOID-1850"></A>If the version of UNIX on your system is one of those that derive from BSD (such as SunOSand Ultrix), type <BCLASS="emphasis.bold">stty all</B> to see your control-key settings;you will see something like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">erase  kill   werase rprnt  flush  lnext  susp   intr   quit   stop   eof^?     ^U     ^W     ^R     ^O     ^V     ^Z/^Y  ^C     ^|     ^S/^Q  ^D</PRE></BLOCKQUOTE></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-1-TAB-6">Table 1.7: Control Keys</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Control Key</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">stty Name</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Function Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-C</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">intr</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Stop current command</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-D</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">eof</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">End of input</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><KBDCLASS="keycap">[CTRL-\]</KBD> or <KBDCLASS="keycap">[CTRL-|]</KBD></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">quit</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Stop current command, if <KBDCLASS="keycap">[CTRL-C]</KBD> doesn't work</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-S</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">stop</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Halt output to screen</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-Q</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Restart output to screen</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">DEL or <KBDCLASS="keycap">[CTRL-?]</KBD></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">erase</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Erase last character</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-U</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">kill</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Erase entire command line</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-Z</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">susp</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Suspend current command (see <ACLASS="xref"HREF="ch08_01.htm"TITLE="Process Handling">Chapter 8</A>)</P></TD></TR></TBODY></TABLE><PCLASS="para">The ^<EMCLASS="emphasis">X</EM> notation stands for CTRL-<EMCLASS="emphasis">X</EM>.<ACLASS="indexterm"NAME="AUTOID-1919"></A><ACLASS="indexterm"NAME="AUTOID-1921"></A><ACLASS="indexterm"NAME="AUTOID-1923"></A><ACLASS="indexterm"NAME="AUTOID-1925"></A><ACLASS="indexterm"NAME="AUTOID-1927"></A><ACLASS="indexterm"NAME="AUTOID-1929"></A><ACLASS="indexterm"NAME="AUTOID-1931"></A><ACLASS="indexterm"NAME="AUTOID-1935"></A><ACLASS="indexterm"NAME="AUTOID-1939"></A><ACLASS="indexterm"NAME="AUTOID-1943"></A><ACLASS="indexterm"NAME="AUTOID-1947"></A><ACLASS="indexterm"NAME="AUTOID-1951"></A>If your UNIX version derives from System III or System V (this includesAIX, HP/UX, <SPANCLASS="acronym">SCO</SPAN>, and Xenix), type <BCLASS="emphasis.bold">stty -a</B>; the resulting outputwill include this information:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">intr = ^c; quit = ^|; erase = DEL; kill = ^u; eof = ^d; eol = ^`; swtch = ^`susp = ^z; dsusp &lt;undef&gt;;</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1960"></A><ACLASS="indexterm"NAME="AUTOID-1961"></A><ACLASS="indexterm"NAME="AUTOID-1964"></A>The control key you will probably use most often is <KBDCLASS="keycap">[CTRL-C]</KBD>, sometimes called the <EMCLASS="emphasis">interrupt</EM> key. This stops-or tries to stop-thecommand that is currently running. You will want to use this whenyou enter a command and find that it's taking too long, you gave itthe wrong arguments by mistake, you change your mind about wanting torun it, or whatever.  </P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1969"></A><ACLASS="indexterm"NAME="AUTOID-1972"></A>Sometimes <KBDCLASS="keycap">[CTRL-C]</KBD> doesn't work; in that case, if youreally want to stop a job, try <KBDCLASS="keycap">[CTRL-\]</KBD>.  But don't just typeCTRL-\; always try <KBDCLASS="keycap">[CTRL-C]</KBD> first! <ACLASS="xref"HREF="ch08_01.htm"TITLE="Process Handling">Chapter 8</A> explains why indetail. For now, suffice it to say that <KBDCLASS="keycap">[CTRL-C]</KBD> gives the running jobmore of a chance to clean up before exiting, so that files andother resources are not left in funny states.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-1-IX-CTRL-D"></A><ACLASS="indexterm"NAME="AUTOID-1983"></A>We've already seen an example of <KBDCLASS="keycap">[CTRL-D]</KBD>.When you are running a command that accepts standard input from your keyboard, <KBDCLASS="keycap">[CTRL-D]</KBD> tells the process that your inputis finished-as if the process were reading a file and it reached theend of the file.  <EMCLASS="emphasis">mail</EM> is a utility in which this happens often.When you are typing in a message, you end bytyping <KBDCLASS="keycap">[CTRL-D]</KBD>. This tells <EMCLASS="emphasis">mail</EM> that your message is complete and ready to be sent. Most utilities that accept standardinput understand <KBDCLASS="keycap">[CTRL-D]</KBD> as the end-of-input character, though many suchprograms accept commands like <BCLASS="emphasis.bold">q</B>, <BCLASS="emphasis.bold">quit</B>, <BCLASS="emphasis.bold">exit</B>, etc.The shell itself understands <KBDCLASS="keycap">[CTRL-D]</KBD> as the end-of-input character:as we saw earlier in this chapter, you can normally end a login sessionby typing <KBDCLASS="keycap">[CTRL-D]</KBD> at the shell prompt. You are just telling the shellthat its command input is finished.<ACLASS="indexterm"NAME="AUTOID-1996"></A></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1998"></A><ACLASS="indexterm"NAME="AUTOID-2001"></A><ACLASS="indexterm"NAME="AUTOID-2003"></A><ACLASS="indexterm"NAME="AUTOID-2006"></A>CTRL-S and <KBDCLASS="keycap">[CTRL-Q]</KBD> are called flow-control characters. They representan antiquated way of stopping and restarting the flow of output fromone device to another (e.g., from the computer to your terminal)that was useful when the speed of such output was low.They are rather obsolete in these days of high-speed local networksand dialup lines.In fact, under the latter conditions,CTRL-S and <KBDCLASS="keycap">[CTRL-Q]</KBD> are basically a nuisance.  The only thing you really need to know about them is that if your screenoutput becomes &quot;stuck,&quot; then you may have hit <KBDCLASS="keycap">[CTRL-S]</KBD> by accident.Type <KBDCLASS="keycap">[CTRL-Q]</KBD> to restart the output; any keys you may have hit inbetween will then take effect.</P><PCLASS="para">The final group of control characters gives you rudimentary ways toedit your command line.  <ACLASS="indexterm"NAME="AUTOID-2013"></A><ACLASS="indexterm"NAME="AUTOID-2016"></A><ACLASS="indexterm"NAME="AUTOID-2018"></A><ACLASS="indexterm"NAME="AUTOID-2021"></A><ACLASS="indexterm"NAME="AUTOID-2023"></A><ACLASS="indexterm"NAME="AUTOID-2026"></A>DEL acts as a backspace key (in fact,some systems use the actual BACKSPACE or <KBDCLASS="keycap">[CTRL-H]</KBD> key as &quot;erase&quot; instead ofDEL); <KBDCLASS="keycap">[CTRL-U]</KBD> erases the entire line and lets you start over.Again, these are outmoded.  [13]Instead of using these, goto the next chapter and read about Korn shell's editingmodes, which are among its most exciting features.<ACLASS="indexterm"NAME="AUTOID-2034"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] Why are so many outmoded control keys still in use?They have nothing to do with the shell <EMCLASS="emphasis">per se</EM>;instead, they are recognized by the <EMCLASS="emphasis">tty driver</EM>, an oldand hoary part of the operating system's lower depths that controls input and output to/from your terminal.  </P></BLOCKQUOTE></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_08.htm"TITLE="1.8 Background Jobs"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.8 Background Jobs"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Learning the Korn Shell"><IMGSRC="../gifs/txthome.gif"ALT="Learning the Korn Shell"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch02_01.htm"TITLE="2. Command-line Editing"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2. Command-line Editing"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">1.8 Background Jobs</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">2. Command-line Editing</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>