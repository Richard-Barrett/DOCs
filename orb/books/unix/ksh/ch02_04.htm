<HTML><HEAD><TITLE>[Chapter 2] 2.4 Vi Editing Mode</TITLE><METANAME="DC.title"CONTENT="Learning the Korn Shell"><METANAME="DC.creator"CONTENT="Bill Rosenblatt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-03T20:57:01Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-054-6"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch02_01.htm"TITLE="2. Command-line Editing"><LINKREL="prev"HREF="ch02_03.htm"TITLE="2.3 Emacs Editing Mode"><LINKREL="next"HREF="ch02_05.htm"TITLE="2.5 The fc Command"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Learning the Korn Shell"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,66"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ksrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_03.htm"TITLE="2.3 Emacs Editing Mode"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.3 Emacs Editing Mode"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 2<BR>Command-line Editing</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_05.htm"TITLE="2.5 The fc Command"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.5 The fc Command"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="KSH-CH-2-SECT-3">2.4 Vi Editing Mode</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE"></A>Like emacs-mode, vi-mode essentially creates a one-line editing windowinto the history file.  <ACLASS="indexterm"NAME="AUTOID-2881"></A>Vi-mode is popular because <EMCLASS="emphasis">vi</EM> isthe most standard UNIX editor. But the function for which <EMCLASS="emphasis">vi</EM>was designed, writing C programs, has different editingrequirements from those of command interpreters. As a result,although it is possible to do complex things in <EMCLASS="emphasis">vi</EM>with relatively few keystrokes, the relatively simple things youneed to do in the Korn shell sometimes take too many keystrokes.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-INPUT-MODE"></A><ACLASS="indexterm"NAME="AUTOID-2890"></A>Like <EMCLASS="emphasis">vi</EM>, vi-mode has two modes of its own: <EMCLASS="emphasis">input</EM>and <EMCLASS="emphasis">control</EM> mode. The former is for typing commands (as innormal Korn shell use); the latter is for moving around the commandline and the history file. When you are in input mode, you cantype commands in and hit <BCLASS="emphasis.bold">RETURN</B> to run them. In addition, you haveminimal editing capabilities via control characters, which are summarizedin <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-5"TITLE="Editing Commands in vi Input Mode">Table 2.6</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-5">Table 2.6: Editing Commands in vi Input Mode</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">DEL</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete previous character </TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><KBDCLASS="keycap">[CTRL-W]</KBD></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Erase previous word (i.e., erase until blank)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><KBDCLASS="keycap">[CTRL-V]</KBD></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&quot;Quote&quot; the next character</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ESC</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Enter control mode (see below)</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-2921"></A><ACLASS="indexterm"NAME="AUTOID-2924"></A><ACLASS="indexterm"NAME="AUTOID-2928"></A>Note that at least some of these-depending on which versionof UNIX you have-are the same as the editing commands providedby UNIX through its terminal interface.[9]Vi-mode will use your &quot;erase&quot; character as the &quot;deleteprevious character&quot; key; usually it is set to <SPANCLASS="acronym">DEL</SPAN> or <KBDCLASS="keycap">[CTRL-H]</KBD> (BACKSPACE).<KBDCLASS="keycap">[CTRL-V]</KBD> will cause the next character you type to appear in the commandline as is; i.e., if it is an editing command (or an otherwise specialcharacter like <KBDCLASS="keycap">[CTRL-D]</KBD>), it will be stripped of its special meaning.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[9] In particular, versionsof UNIX derived from 4.x BSD have all of these commands built in.</P></BLOCKQUOTE><PCLASS="para">Under normal circumstances, you just stay in input mode. But if youwant to go back and make changes to your command line, or if youwant to recall previous commands, you need to go into control mode.To do this, hit <SPANCLASS="acronym">ESC</SPAN>.<ACLASS="indexterm"NAME="AUTOID-2939"></A></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.1">2.4.1 Simple Control Mode Commands</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-BASIC-CONTROL-MODE-CMNDS"></A>A full range of <EMCLASS="emphasis">vi</EM> editing commands are available to you in controlmode. The simplest of these move you around the command lineand are summarized in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-6"TITLE="Basic vi Control Mode Commands">Table 2.7</A>.<ACLASS="indexterm"NAME="AUTOID-2948"></A>Vi-mode contains two &quot;word&quot;concepts. The simplest is any sequence of non-blank characters;we'll call this a <EMCLASS="emphasis">non-blank word</EM>. The other is any sequence ofonly alphanumeric characters (letters and digits) or anysequence of only non-alphanumeric characters; we'lljust call this a <EMCLASS="emphasis">word</EM>.[10]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[10] Neither of these definitions is the same as thedefinition of a word in emacs-mode.</P></BLOCKQUOTE><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-6">Table 2.7: Basic vi Control Mode Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">h</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move left one character</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">l</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move right one character</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">w</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move right one word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">b</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move left one word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">W</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to beginning of next non-blank word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">B</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to beginning of preceding non-blank word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">e</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to end of current word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">E</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to end of current non-blank word</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">0</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to beginning of line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">^</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to first non-blank character in line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to end of line</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-2997"></A>All of these commands except the last three can be preceded bya number that acts as a repeat count. The last two will befamiliar to users of UNIX utilities (such as <EMCLASS="emphasis">grep</EM>) thatuse regular expressions, as well as to <EMCLASS="emphasis">vi</EM> users.</P><PCLASS="para">Time for a few examples. Let's say you type in this lineand, before you hit RETURN, decide you want to change it:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/names<UCLASS="cursor"> </U></B></PRE></BLOCKQUOTE></P><PCLASS="para">As shown, your cursor is beyond the last character of the line.First, type <BCLASS="emphasis.bold">ESC</B> to enter control mode; your cursor will moveback one space so that it is on the <BCLASS="emphasis.bold">s</B>. Then if you type <BCLASS="emphasis.bold">h</B>, yourcursor will move back to the <BCLASS="emphasis.bold">e</B>. If you type <BCLASS="emphasis.bold">3h</B> from the <BCLASS="emphasis.bold">e</B>,you will end up at the <BCLASS="emphasis.bold">n</B>.</P><PCLASS="para">Now we will see the difference between the two &quot;word&quot; concepts.Go back to the end of the line by typing <BCLASS="emphasis.bold">$</B>.If you type <BCLASS="emphasis.bold">b</B>, the word in question is &quot;names&quot;, and the cursorwill end up on the <BCLASS="emphasis.bold">n</B>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/<UCLASS="cursor">n</U>ames</B></PRE></BLOCKQUOTE></P><PCLASS="para">If you type <BCLASS="emphasis.bold">b</B> again, the next word is the slash (it's a &quot;sequence&quot;of non-alphanumeric characters), so the cursor ends up over it:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<UCLASS="cursor">/</U>names</B></PRE></BLOCKQUOTE></P><PCLASS="para">However, if you typed <BCLASS="emphasis.bold">B</B> instead of <BCLASS="emphasis.bold">b</B>, the non-blank wordwould be the entire pathname, and the cursor would end up atthe beginning of it-that is, over the tilde:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; <UCLASS="cursor">~</U>pete/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">You would have had to type <BCLASS="emphasis.bold">b</B> four times-or just <BCLASS="emphasis.bold">4b</B>-to get the same effect, since there are four &quot;words&quot; in thepart of the pathname to the left of <EMCLASS="emphasis">/names</EM>:<EMCLASS="emphasis">wk</EM>, slash, <EMCLASS="emphasis">pete</EM>, and the leading tilde.</P><PCLASS="para">At this point, <BCLASS="emphasis.bold">w</B> and <BCLASS="emphasis.bold">W</B> do the opposite: typing <BCLASS="emphasis.bold">w</B> gets you overthe <BCLASS="emphasis.bold">p</B>, since the tilde is a &quot;word&quot;, while typing <BCLASS="emphasis.bold">W</B> brings youto the end of the line. But whereas <BCLASS="emphasis.bold">w</B> and <BCLASS="emphasis.bold">W</B> take you to thebeginning of the next word, <BCLASS="emphasis.bold">e</B> and <BCLASS="emphasis.bold">E</B> take you to the end of the current word. Thus, if you type <BCLASS="emphasis.bold">w</B> with the cursor on thetilde, you get to:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~<UCLASS="cursor">p</U>ete/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">Then typing <BCLASS="emphasis.bold">e</B> gets you to</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pet<UCLASS="cursor">e</U>/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">And typing an additional <BCLASS="emphasis.bold">w</B> gets you to:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete<UCLASS="cursor">/</U>wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">On the other hand, <BCLASS="emphasis.bold">E</B> gets you to the end of the currentnon-blank word-in this case, the end of the line. (If you findthese commands non-mnemonic, you're right. The only wayto assimilate them is through lots of practice.)<ACLASS="indexterm"NAME="AUTOID-3071"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.2">2.4.2 Entering and Changing Text</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-ENTER-CHNG-TEXT"></A>Now that you know how to enter control mode andmove around on the command line, you need to know howto get back into input mode so you can make changes andtype in additional commands. A number of commands take you from control mode into input mode;they are listed in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-7"TITLE="Commands for Entering vi Input Mode">Table 2.8</A>Allof them enter input mode a bit differently.<ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-ENTERING-INPUT-MODE"></A></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-7">Table 2.8: Commands for Entering vi Input Mode</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">i</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text inserted before current character (insert)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">a</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text inserted after current character (append)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">I</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text inserted at beginning of line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">A</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text inserted at end of line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">R</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Text overwrites existing text</TD></TR></TBODY></TABLE><PCLASS="para">Most likely, you will use either <BCLASS="emphasis.bold">i</B> or <BCLASS="emphasis.bold">a</B> consistently, and youmay use <BCLASS="emphasis.bold">R</B> occasionally. <BCLASS="emphasis.bold">I</B> and <BCLASS="emphasis.bold">A</B> are abbreviations for <BCLASS="emphasis.bold">0i</B> and<BCLASS="emphasis.bold">$a</B> respectively. To illustrate the difference between <BCLASS="emphasis.bold">i</B>, <BCLASS="emphasis.bold">a</B>, and <BCLASS="emphasis.bold">R</B>,say we start out with our example line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<UCLASS="cursor">/</U>names</B></PRE></BLOCKQUOTE></P><PCLASS="para">If you type <BCLASS="emphasis.bold">i</B> followed by <BCLASS="emphasis.bold">end</B>, you will get:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wkend<UCLASS="cursor">/</U>names</B></PRE></BLOCKQUOTE></P><PCLASS="para">That is, the cursor will always appear to be under the / before <EMCLASS="emphasis">names</EM>.But if you type <BCLASS="emphasis.bold">a</B> instead of <BCLASS="emphasis.bold">i</B>, you will notice the cursor move one space tothe right. Then if you type <BCLASS="emphasis.bold">nick</B>, you will get:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/nick<UCLASS="cursor">n</U>ames</B></PRE></BLOCKQUOTE></P><PCLASS="para">That is, the cursor will always be just after the last character youtyped, until you type <BCLASS="emphasis.bold"><SPANCLASS="acronym">ESC</SPAN></B> to end your input.<ACLASS="indexterm"NAME="AUTOID-3139"></A>Finally, if you go back to the <BCLASS="emphasis.bold">n</B> in <EMCLASS="emphasis">names</EM>,type <BCLASS="emphasis.bold">R</B> instead, and then type <BCLASS="emphasis.bold">task</B>, you will see:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/task<UCLASS="cursor">s</U></B></PRE></BLOCKQUOTE></P><PCLASS="para">In other words, you will be <EMCLASS="emphasis">replacing</EM> (hence <EMCLASS="emphasis">R</EM>) insteadof inserting text.</P><PCLASS="para">Why capital <BCLASS="emphasis.bold">R</B> instead of lowercase <BCLASS="emphasis.bold">r</B>? The latter is a slightlydifferent command, which replaces only one character and does notenter input mode. With <BCLASS="emphasis.bold">r</B>, the next single character overwrites thecharacter under the cursor. So if we start with the originalcommand line and type <BCLASS="emphasis.bold">r</B> followed by a semicolon, we get:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk<UCLASS="cursor">;</U>names</B></PRE></BLOCKQUOTE></P><PCLASS="para">If you precede <BCLASS="emphasis.bold">r</B> with a number <EMCLASS="emphasis">N</EM>, it will allow you to replacethe next <EMCLASS="emphasis">N</EM> existing characters on the line-but still not enter input mode.Lowercase <BCLASS="emphasis.bold">r</B> is effective for fixing erroneous option letters, I/O redirection characters, punctuation, etc.<ACLASS="indexterm"NAME="AUTOID-3165"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.3">2.4.3 Deletion Commands</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-DELETION-CMNDS"></A>Now that you know how to enter commands and move around theline, you need to know how to delete.The basic deletion command in vi-mode is <BCLASS="emphasis.bold">d</B> followed by oneother letter. This letter determines what the unit and direction of deletion is, and it corresponds to a motion command, as listed previously in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-6"TITLE="Basic vi Control Mode Commands">Table 2.7</A>.<ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-8"TITLE="Some vi-mode Deletion Commands">Table 2.9</A>shows somecommonly-used examples.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-8">Table 2.9: Some vi-mode Deletion Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dh</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one character backwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dl</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one character forwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">db</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one word backwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dw</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one word forwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dB</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one non-blank word backwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dW</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete one non-blank word forwards</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">d$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete to end of line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">d0</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Delete to beginning of line</TD></TR></TBODY></TABLE><PCLASS="para">These commands have a few variations and abbreviations.If you use a <BCLASS="emphasis.bold">c</B> instead of <BCLASS="emphasis.bold">d</B>, you will enter input modeafter it does the deletion. You can supply a numeric repeat count either before or after the <BCLASS="emphasis.bold">d</B> (or <BCLASS="emphasis.bold">c</B>).  <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-9"TITLE="Abbreviations for vi-mode Delete Commands">Table 2.10</A>lists the available abbreviations.</P><PCLASS="para">Most people tend to use <BCLASS="emphasis.bold">D</B> to delete to end of line,<BCLASS="emphasis.bold">dd</B> to delete an entire line, and <BCLASS="emphasis.bold">x</B> (as &quot;backspace&quot;)to delete single characters. If you aren't a hardcore <EMCLASS="emphasis">vi</EM>user, you may find it difficult to get some of the moreesoteric deletion commands under your fingers.<ACLASS="indexterm"NAME="AUTOID-3218"></A><ACLASS="indexterm"NAME="AUTOID-3219"></A><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-DELETION-CMNDS-ABBREVS"></A></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-9">Table 2.10: Abbreviations for vi-mode Delete Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">D</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">d$</EM> (delete to end of line)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dd</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">0d$</EM> (delete entire line)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">C</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">c$</EM> (delete to end of line, enter input mode)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">cc</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">0c$</EM> (delete entire line, enter input mode)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">X</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">dh</EM> (delete character backwards)</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">x</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equivalent to <EMCLASS="emphasis">dl</EM> (delete character forwards)</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-UNDELETE-CMNDS"></A><ACLASS="indexterm"NAME="AUTOID-3260"></A>Every good editor provides &quot;un-delete&quot; commands as well asdelete commands, and vi-mode is no exception. Vi-mode maintainsa <EMCLASS="emphasis">delete buffer</EM> that stores all of the modifications totext on the current line only (note that this is differentfrom the full <EMCLASS="emphasis">vi</EM> editor). The command <BCLASS="emphasis.bold">u</B> undoes the lasttext modification command only, while <BCLASS="emphasis.bold">U</B> undoes all suchcommands on the current line. So if you make one change butwant to undo it, type <BCLASS="emphasis.bold">u</B>; but if you make lots of changes and findthat the original is closer to what you want, you can undo everythingby typing <BCLASS="emphasis.bold">U</B>. A related command is <CODECLASS="literal">.</CODE> (dot), which redoes thelast text modification command.</P><PCLASS="para">There is also a way to save text in the delete buffer withouthaving deleted it in the first place: just type in a delete commandbut use <BCLASS="emphasis.bold">y</B> (&quot;yank&quot;) instead of <BCLASS="emphasis.bold">d</B>. This does not modify anything,but it allows you to retrieve the yanked text as many times as youlike later on. The command to retrieve yanked text is <BCLASS="emphasis.bold">p</B>, which inserts the text on the current line to the left of the cursor.The <BCLASS="emphasis.bold">y</B> and <BCLASS="emphasis.bold">p</B> commands are powerful but far better suited to&quot;real <EMCLASS="emphasis">vi</EM>&quot; tasks like making global changes to documents or programs than toshell commands, so we doubt you'll use them very often.<ACLASS="indexterm"NAME="AUTOID-3277"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.4">2.4.4 Moving Around in the History File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-MOVING-IN-HIST-FILE"></A>The next group of vi control mode commands we will cover allowsyou to move around in and search your history file. This isthe all-important functionality that lets you go back and fixan erroneous command without retyping the entire line.These commands are summarized in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-10"TITLE="Vi Control Mode Commands for Searching the History File">Table 2.11</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-10">Table 2.11: Vi Control Mode Commands for Searching the History File</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">k</B> or <BCLASS="emphasis.bold">-</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move backward one line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">j</B> or <BCLASS="emphasis.bold">+</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move forward one line</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">G</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move to line given by repeat count</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">?</B><EMCLASS="emphasis">string</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Search backward for string</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">/</B><EMCLASS="emphasis">string</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Search forward for string</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">n</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Repeat search in same direction as previous</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BCLASS="emphasis.bold">N</B></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Repeat search in opposite direction of previous</TD></TR></TBODY></TABLE><PCLASS="para">The first three can be preceded by repeat counts (e.g., <BCLASS="emphasis.bold">3k</B> or 3- moves back three lines in the history file).</P><PCLASS="para">If you aren't familiar with <EMCLASS="emphasis">vi</EM> and its cultural history, youmay be wondering at the wisdom of choosing such seeminglypoor mnemonics as <BCLASS="emphasis.bold">h</B>, <BCLASS="emphasis.bold">j</B>, <BCLASS="emphasis.bold">k</B>, and <BCLASS="emphasis.bold">l</B> for backward character, forward line,backward line, and forward character, respectively. Well, thereactually is a rationale for the choices-other than that theyare all together on the standard keyboard.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3334"></A>Bill Joy originally developed <EMCLASS="emphasis">vi</EM> to run on Lear-Siegler ADM-3a terminals,which were the first popular models with addressable cursors(meaning that a program could send an ADM-3a a commandto move the cursor to a specified location on the screen).The ADM-3a's <BCLASS="emphasis.bold">h</B>, <BCLASS="emphasis.bold">j</B>, <BCLASS="emphasis.bold">k</B>, and <BCLASS="emphasis.bold">l</B> keys had little arrows on them, so Joydecided to use those keys for appropriate commands in <EMCLASS="emphasis">vi</EM>.</P><PCLASS="para">Another (partial) rationale for the command choicesis that <KBDCLASS="keycap">[CTRL-H]</KBD> is the traditional backspace key, and <KBDCLASS="keycap">[CTRL-J]</KBD> denotes linefeed.</P><PCLASS="para">Perhaps <CODECLASS="literal">+</CODE> and <BCLASS="emphasis.bold">-</B> are better mnemonics than <BCLASS="emphasis.bold">j</B> and <BCLASS="emphasis.bold">k</B>, but the latterhave the advantage of being more easily accessible to touchtypists. In either case, these commands are the most basic onesfor moving around the history file. To see how they work,let's take the same examples we used when discussing emacs-modeabove.</P><PCLASS="para">You enter the example command (RETURN works in both input andcontrol modes, as does LINEFEED or <KBDCLASS="keycap">[CTRL-J]</KBD>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">but you get an error message saying that youroption letter was wrong. You want to change it to <BCLASS="emphasis.bold">-s</B> without havingto retype the entire command. Assuming you are in controlmode (you may have to type <BCLASS="emphasis.bold"><SPANCLASS="acronym">ESC</SPAN></B> to put yourself in control mode), youtype <BCLASS="emphasis.bold">k</B> or <BCLASS="emphasis.bold">-</B> to get the command back. Your cursorwill be at the beginning of the line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold"><UCLASS="cursor">f</U>grep -l Bob &lt; ~pete/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">Type <BCLASS="emphasis.bold">w</B> to get to the <CODECLASS="literal">-</CODE>, then <BCLASS="emphasis.bold">l</B> to get to the <BCLASS="emphasis.bold">l</B>. Now you can replaceit by typing <BCLASS="emphasis.bold">rs</B>; press <BCLASS="emphasis.bold">RETURN</B> to run the command.</P><PCLASS="para">Now let's say you get another error message, and you finally decideto look at the manual page for the <EMCLASS="emphasis">fgrep</EM> command. You remember havingdone this a while ago today, so rather than typing in the entire<EMCLASS="emphasis">man</EM>(1) command, you search for the last one you used.  <ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-SEARCH-HIST-FILE"></A>To do this, type <BCLASS="emphasis.bold"><SPANCLASS="acronym">ESC</SPAN></B> to enter control mode (if you are already incontrol mode, this will have no effect), then type <CODECLASS="literal">/</CODE> followedby <BCLASS="emphasis.bold">man</B> or <BCLASS="emphasis.bold">ma</B>. To be on the safe side, you can also type <BCLASS="emphasis.bold">^ma</B>; the <BCLASS="emphasis.bold">^</B> means match only lines that begin with <BCLASS="emphasis.bold">ma</B>.[11]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[11] Fans of <EMCLASS="emphasis">vi</EM> and search utilities like <EMCLASS="emphasis">grep</EM> should note that caret (<BCLASS="emphasis.bold">^</B>) for beginning-of-line is the only context operator vi-mode provides for search strings.</P></BLOCKQUOTE><PCLASS="para">But typing <BCLASS="emphasis.bold">/^</B><BCLASS="emphasis.bold">ma</B> doesn't give you what you want: instead, the shellgives you: </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">make myprogram</B></PRE></BLOCKQUOTE></P><PCLASS="para">To search for &quot;man&quot; again, you can type <BCLASS="emphasis.bold">n</B>, which does another backwardsearch using the last search string. Typing <CODECLASS="literal">/</CODE> again without anargument and hitting <BCLASS="emphasis.bold">RETURN</B> will accomplish the same thing.<ACLASS="indexterm"NAME="AUTOID-3401"></A></P><PCLASS="para">The <BCLASS="emphasis.bold">G</B> command retrieves the command whose number isthe same as the numeric prefix argument you supply. <BCLASS="emphasis.bold">G</B> depends on thecommand numbering scheme described in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3</A>in the section &quot;Prompting Variables.&quot; Without aprefix argument,it goes to command number 1. This may be useful to former C shell userswho still want to use command numbers.<ACLASS="indexterm"NAME="AUTOID-3406"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.5">2.4.5 Character-finding Commands</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-CHARACTER-FIND-CMNDS"></A>There are some additional motion commands in vi-mode, althoughthey are less useful than the ones we saw earlier in the chapter.These commands allow youto move to the position of a particular character in the line.They are summarized in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-11"TITLE="Vi-mode Character-finding Commands">Table 2.12</A>,in which <EMCLASS="emphasis">x</EM> denotes any character.</P><PCLASS="para">All of these commands can be preceded by a repeat count.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-11">Table 2.12: Vi-mode Character-finding Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description </TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">f<EMCLASS="emphasis">x</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move right to next occurrence of <EMCLASS="emphasis">x</EM></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">F<EMCLASS="emphasis">x</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move left to previous occurrence of <EMCLASS="emphasis">x</EM></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">t<EMCLASS="emphasis">x</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move right to next occurrence of <EMCLASS="emphasis">x</EM>, then back one space</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">T<EMCLASS="emphasis">x</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Move left to previous occurrence of <EMCLASS="emphasis">x</EM>, then forward one space</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">;</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Redo last character-finding command</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">,</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Redo last character-finding command in opposite direction</TD></TR></TBODY></TABLE><PCLASS="para">Starting with the previous example: let's say you want to change<EMCLASS="emphasis">Bob</EM> to <EMCLASS="emphasis">Rob</EM>. Make sure that you're at the end of the line (or, inany case, to the left of the <EMCLASS="emphasis">B</EM> in <EMCLASS="emphasis">Bob</EM>); then, if you type <BCLASS="emphasis.bold">FB</B>, yourcursor will move to the B:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l <UCLASS="cursor">B</U>ob &lt; ~pete/wk/names</B></PRE></BLOCKQUOTE></P><PCLASS="para">At this point, you could type <BCLASS="emphasis.bold">r</B> to replace the <EMCLASS="emphasis">B</EM> with <EMCLASS="emphasis">R</EM>.But let's say you wanted to change <EMCLASS="emphasis">Bob</EM> to <EMCLASS="emphasis">Blob</EM>. You wouldneed to move one space to the right of the <EMCLASS="emphasis">B</EM>. Of course, youcould just type <BCLASS="emphasis.bold">l</B>. But, given that you're somewhere to the right of<EMCLASS="emphasis">Bob</EM>, the fastest way to move to the <EMCLASS="emphasis">o</EM> would be to type<BCLASS="emphasis.bold">TB</B> instead of <BCLASS="emphasis.bold">FB</B> followed by <BCLASS="emphasis.bold">l</B>.</P><PCLASS="para">As an example of how the repeat count can be used with character-finding commands, let's say you want to change the filename from<EMCLASS="emphasis">names</EM> to <EMCLASS="emphasis">namfile</EM>.In this case, assuming your cursor is still on the <EMCLASS="emphasis">B</EM>, you need to getto the third <EMCLASS="emphasis">e</EM> to the right, so you can type <BCLASS="emphasis.bold">3te</B>, followed by<BCLASS="emphasis.bold">l</B> to put the cursor back on the <BCLASS="emphasis.bold">e</B> in <EMCLASS="emphasis">names</EM>.</P><PCLASS="para">The character-finding commands also have associated delete commands.Read the command definitions in the previous table and mentallysubstitute &quot;delete&quot; for move. You'll get what happens when youprecede the given character-finding command with a <BCLASS="emphasis.bold">d</B>. The deletionincludes the character given as argument.For example, assume that your cursor is under the <BCLASS="emphasis.bold">n</B> in <EMCLASS="emphasis">names</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">fgrep -l Bob &lt; ~pete/wk/<UCLASS="cursor">n</U>ames</B></PRE></BLOCKQUOTE></P><PCLASS="para">If you want to change <EMCLASS="emphasis">names</EM> to <EMCLASS="emphasis">aides</EM>, one possibility is to type <BCLASS="emphasis.bold">dfm</B>.This means &quot;delete right to next occurrence of m,&quot; i.e., delete &quot;nam.&quot;Then you can type <BCLASS="emphasis.bold">i</B> (to enter input mode) and then &quot;aid&quot; to completethe change.</P><PCLASS="para">One final command rounds out the vi control mode commandsfor getting around on the current line: you can use the pipe character(<BCLASS="emphasis.bold">|</B>) for moving to a specific column, whose number is given bya numeric prefix argument. Column counts start at 1; count only your input, not the space taken up by the prompt string.The default repeat count is 1, of course, whichmeans that typing <BCLASS="emphasis.bold">|</B> by itself is equivalent to 0(see <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-6"TITLE="Basic vi Control Mode Commands">Table 2.7</A>).<ACLASS="indexterm"NAME="AUTOID-3501"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.6">2.4.6 Filename Completion</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-2-IX-VI-MODE-FILENAME-COMPLETION"></A>Although the character-finding commands and <BCLASS="emphasis.bold">|</B> are not particularlyuseful, vi-mode provides one additional feature that we thinkyou will use quite often: filename completion.  <ACLASS="indexterm"NAME="AUTOID-3509"></A><ACLASS="indexterm"NAME="AUTOID-3511"></A>This featureis not part of the real <EMCLASS="emphasis">vi</EM> editor, and it was undoubtedlyinspired by similar features in <EMCLASS="emphasis">emacs</EM>and, originally, in the <SPANCLASS="acronym">TOPS-20</SPAN> operating system for <SPANCLASS="acronym">DEC</SPAN> mainframes.</P><PCLASS="para">The rationale behind filename completion is simple: you shouldhave to type only as much of a filename as is necessary to distinguishit from other filenames in the same directory. Backslash (<BCLASS="emphasis.bold">\</B>) isthe command that tells the Korn shell to do filename completion in vi-mode.If you type in a word, type <SPANCLASS="acronym">ESC</SPAN> to enter control mode,and then type <BCLASS="emphasis.bold">\</B>, one of four things will happen; they arethe same as for <SPANCLASS="acronym">ESC ESC</SPAN> in emacs-mode:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">If there is no file whose name begins with the word, the shellwill beep and nothing further will happen.</P></LI><LICLASS="listitem"><PCLASS="para">If there is exactly one way to complete the filename and the fileis a regular file, the shell will type the rest of the filename,followed by a space in case you want to type in more command arguments.</P></LI><LICLASS="listitem"><PCLASS="para">If there is exactly one way to complete the filename and the fileis a directory, the shell will complete the filename, followedby a slash.</P></LI><LICLASS="listitem"><PCLASS="para">If there is more than one way to complete the filename,the shell will complete out to the longest common prefix amongthe available choices.</P></LI></OL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3533"></A><ACLASS="indexterm"NAME="AUTOID-3534"></A>A related command is <CODECLASS="literal">*</CODE>, which is the same as <SPANCLASS="acronym">ESC</SPAN> <CODECLASS="literal">*</CODE> in emacs-modeas described earlier in this chapter.[12]It behaves similarly to <SPANCLASS="acronym">ESC</SPAN> \, butif there is more than one completion possibility (number four in the listabove), it lists all of them and allows you to type further.  Thus, it resembles the <CODECLASS="literal">*</CODE> shell wildcard character.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[12] If you count the <SPANCLASS="acronym">ESC</SPAN> needed to get out of input mode, the vi-modecommand is identical to emacs-mode.</P></BLOCKQUOTE><PCLASS="para">Less useful is the command <BCLASS="emphasis.bold">=</B>, which does the same kind of filenameexpansion as the <CODECLASS="literal">*</CODE> shell wildcard, but in a different way.Instead of expanding the filenames onto the command line,it prints them in a numbered list with one filename on each line.Then it gives you your shell prompt back and retypes whatever was on your command line before you typed <BCLASS="emphasis.bold">=</B>.For example, if the files in your directory include <EMCLASS="emphasis">program.c</EM>and <EMCLASS="emphasis">problem.c</EM>,and you type <BCLASS="emphasis.bold">pro</B> followed by <SPANCLASS="acronym">ESC</SPAN> and then <BCLASS="emphasis.bold">=</B>, you will see this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <BCLASS="emphasis.bold">cc pro</B>1) problem.c2) program.c</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-2-SECT-3.7">2.4.7 Miscellaneous Commands</A></H3><PCLASS="para">Several miscellaneous commands round out vi-mode;some of them are quite esoteric. They are listed in <ACLASS="xref"HREF="ch02_04.htm#KSH-CH-2-TAB-12"TITLE="Miscellaneous vi-mode Commands">Table 2.13</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="KSH-CH-2-TAB-12">Table 2.13: Miscellaneous vi-mode Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Command</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Description</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Invert (&quot;twiddle&quot;) case of current character(s).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">_</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Append last word of previous command, enter input mode.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">v</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Run the <BCLASS="emphasis.bold">fc</B> command on the current line(actually, run the command <BCLASS="emphasis.bold">fc -e ${VISUAL:-${EDITOR:-vi}}</B>);usually this means run the full <EMCLASS="emphasis">vi</EM> on the current line.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CTRL-L</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Start a new line and redraw the current line on it;good for when your screen becomes garbled.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">#</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Prepend <BCLASS="emphasis.bold">#</B> (comment character) to the line and send it to the history file;[13]useful for saving a command to be executed later without having toretype it.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@<EMCLASS="emphasis">x</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Insert expansion of alias _x (see below).</TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="footnote"><PCLASS="para">[13] The line is also &quot;executed&quot; by the shell. However, <BCLASS="emphasis.bold">#</B> is the shell'scomment character, so the shell ignores it.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3599"></A>The first of these can be preceded by a repeat count.A repeat count of <EMCLASS="emphasis">n</EM> preceding the <BCLASS="emphasis.bold">~</B> changes the case ofthe next <EMCLASS="emphasis">n</EM> characters.[14]The cursor will advance accordingly.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] This, in our opinion, is a design flaw in the <EMCLASS="emphasis">vi</EM> editorthat the Korn shell authors might have corrected. Letting the userappend a motion command to <BCLASS="emphasis.bold">~</B> and having it behave analogously to dor y would have been much more useful; that way, a wordcould be case-twiddled with only two keystrokes.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3610"></A>A repeat count preceding _ causes the <EMCLASS="emphasis">n</EM>-th word in the previouscommand to be inserted in the current line; without the count,the last word is used. Omitting the repeat count is useful because afilename is usually the last thing on a UNIX command line, and becauseusers often run several commands in a row on the same file. With this feature, you can type all of thecommands (except the first) followed by <SPANCLASS="acronym">ESC</SPAN> _, and the shell willinsert the filename.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3616"></A><ACLASS="indexterm"NAME="AUTOID-3619"></A>Finally, the command <BCLASS="emphasis.bold">@</B> allows you to create keyboard shortcutsby interacting with the shell's alias facility (see <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3</A>).If you create an alias called<BCLASS="emphasis.bold">_x</B>, where <BCLASS="emphasis.bold">x</B> is a letter, then the shell will expand the alias on the current line(but not run it) if you type <BCLASS="emphasis.bold">@</B> followed by <BCLASS="emphasis.bold">x</B>. As with the similarfacility in emacs-mode, we don't find this particularly useful.<ACLASS="indexterm"NAME="AUTOID-3627"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_03.htm"TITLE="2.3 Emacs Editing Mode"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.3 Emacs Editing Mode"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Learning the Korn Shell"><IMGSRC="../gifs/txthome.gif"ALT="Learning the Korn Shell"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_05.htm"TITLE="2.5 The fc Command"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.5 The fc Command"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">2.3 Emacs Editing Mode</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">2.5 The fc Command</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>