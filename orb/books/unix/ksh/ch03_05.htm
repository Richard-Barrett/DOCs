<HTML><HEAD><TITLE>[Chapter 3] 3.5 Customization and Subprocesses</TITLE><METANAME="DC.title"CONTENT="Learning the Korn Shell"><METANAME="DC.creator"CONTENT="Bill Rosenblatt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-03T21:00:33Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-054-6"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch03_01.htm"TITLE="3. Customizing Your Environment"><LINKREL="prev"HREF="ch03_04.htm"TITLE="3.4 Shell Variables"><LINKREL="next"HREF="ch03_06.htm"TITLE="3.6 Customization Hints"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Learning the Korn Shell"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,66"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ksrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_04.htm"TITLE="3.4 Shell Variables"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.4 Shell Variables"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 3<BR>Customizing Your Environment</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_06.htm"TITLE="3.6 Customization Hints"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.6 Customization Hints"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="KSH-CH-3-SECT-5">3.5 Customization and Subprocesses</A></H2><PCLASS="para">Some of the variables discussed above are used by commandsyou may run-as opposed to the shell itself-so that they can determine certain aspects ofyour environment. The majority, however, are not even known outsidethe shell.  </P><PCLASS="para">This dichotomy begs an important question:which shell &quot;things&quot; are known outside the shell, and whichare only internal? This question is at theheart of many misunderstandings about the shell and shellprogramming.<ACLASS="indexterm"NAME="KSH-CH-3-IX-SUBPROCESSES"></A>Before we answer, we'll ask it again in amore precise way: which shell &quot;things&quot; are known to subprocesses?Remember that whenever you enter a command, you are tellingthe shell to run that command in a subprocess;furthermore, some complex programs may start their ownsubprocesses.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5018"></A>Now for the answer, which (like many UNIX concepts) isunfortunately not as simple as you might like. A few thingsare known to subprocesses, but the reverse is not true:subprocesses can never make these things known to the processesthat created them.</P><PCLASS="para">Which things are known depends on whether thesubprocess in question is a Korn shell program (see <ACLASS="xref"HREF="ch04_01.htm"TITLE="Basic Shell Programming">Chapter 4</A>) or interactive shell. If the subprocess is a Korn shell program, then it'spossible to propagate every type of thing we've seen in this chapter-aliases, options, and variables-plus a few we'll see later.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-3-SECT-5.1">3.5.1 Environment Variables</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-3-IX-ENV-VARS-ABOUT"></A>By default, only one kind of thing is known to all kinds of subprocesses: a special class of shell variables called<EMCLASS="emphasis">environment variables</EM>. Some of the built-in variableswe have seen are actually environment variables:<ACLASS="indexterm"NAME="AUTOID-5030"></A><ACLASS="indexterm"NAME="AUTOID-5032"></A><ACLASS="indexterm"NAME="AUTOID-5034"></A><ACLASS="indexterm"NAME="AUTOID-5036"></A><ACLASS="indexterm"NAME="AUTOID-5038"></A><ACLASS="indexterm"NAME="AUTOID-5040"></A><ACLASS="indexterm"NAME="AUTOID-5042"></A><ACLASS="indexterm"NAME="AUTOID-5044"></A><ACLASS="indexterm"NAME="AUTOID-5046"></A><ACLASS="indexterm"NAME="AUTOID-5048"></A><ACLASS="indexterm"NAME="AUTOID-5051"></A><ACLASS="indexterm"NAME="AUTOID-5054"></A><ACLASS="indexterm"NAME="AUTOID-5057"></A><ACLASS="indexterm"NAME="AUTOID-5060"></A><ACLASS="indexterm"NAME="AUTOID-5063"></A><ACLASS="indexterm"NAME="AUTOID-5066"></A><ACLASS="indexterm"NAME="AUTOID-5069"></A><ACLASS="indexterm"NAME="AUTOID-5072"></A><BCLASS="emphasis.bold">HISTFILE</B>, <BCLASS="emphasis.bold">HOME</B>, <BCLASS="emphasis.bold">LOGNAME</B>, <BCLASS="emphasis.bold">MAIL</B>, <BCLASS="emphasis.bold">MAILPATH</B>, <BCLASS="emphasis.bold">PATH</B>, <BCLASS="emphasis.bold">PWD</B>, <BCLASS="emphasis.bold">SHELL</B>, and <BCLASS="emphasis.bold">TERM</B>.</P><PCLASS="para">It should be clear why these and other variables need to beknown by subprocesses.  <ACLASS="indexterm"NAME="AUTOID-5085"></A><ACLASS="indexterm"NAME="AUTOID-5087"></A>We have already seen the most obviousexample: text editors like <EMCLASS="emphasis">vi</EM> and <EMCLASS="emphasis">emacs</EM>need to know what kind of terminal you are using; <BCLASS="emphasis.bold">TERM</B>is their way of determining this. As another example, most UNIX mail programs allow you to edit a messagewith your favorite text editor. How does <EMCLASS="emphasis">mail</EM> know whicheditor to use? The value of <BCLASS="emphasis.bold">EDITOR</B> (or sometimes <BCLASS="emphasis.bold">VISUAL</B>).<ACLASS="indexterm"NAME="AUTOID-5095"></A></P><PCLASS="para">Any variable can become an environment variable.  <ACLASS="indexterm"NAME="KSH-CH-3-IX-EXPORT"></A><ACLASS="indexterm"NAME="KSH-CH-3-IX-ENV-VARS-CREATING"></A>First it must be defined as usual; then it must be <EMCLASS="emphasis">exported</EM> with the command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">export <EMCLASS="emphasis">varnames</EM></PRE></BLOCKQUOTE></P><PCLASS="para">(<EMCLASS="emphasis">varnames</EM> can be a list of variable names separated by blanks.)<ACLASS="indexterm"NAME="AUTOID-5108"></A></P><PCLASS="para">You can also define variables to be in the environment of a particular subprocess (command) only, by preceding the command with thevariable assignment, like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><EMCLASS="emphasis">varname</EM>=<EMCLASS="emphasis">value command</EM></PRE></BLOCKQUOTE></P><PCLASS="para">You can put as many assignments before the command as youwant. [14]<ACLASS="indexterm"NAME="AUTOID-5122"></A>For example, assume that you're using the <EMCLASS="emphasis">emacs</EM> editor.<ACLASS="indexterm"NAME="AUTOID-5125"></A><ACLASS="indexterm"NAME="AUTOID-5128"></A>You are having problems getting it to work with your terminal,so you're experimenting with different values of <BCLASS="emphasis.bold">TERM</B>.You can do this most easily by entering commands that looklike:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[14] <ACLASS="indexterm"NAME="AUTOID-5117"></A>There is an obscure option, <BCLASS="emphasis.bold">keyword</B>, that (if turned on) lets youput this type of environment variable definition <EMCLASS="emphasis">anywhere</EM> on thecommand line, not just at the beginning. Future releases, however,won't support this option.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">TERM=<EMCLASS="emphasis">trythisone</EM> emacs <EMCLASS="emphasis">filename</EM></PRE></BLOCKQUOTE></P><PCLASS="para"><EMCLASS="emphasis">emacs</EM> will have <EMCLASS="emphasis">trythisone</EM> defined as its value of <BCLASS="emphasis.bold">TERM</B>,yet the environment variable in your shell will keep whatever value (if any) it had before.<ACLASS="indexterm"NAME="AUTOID-5139"></A>This syntax is not very widely used, so we won't see itvery often throughout the remainder of this book.<ACLASS="indexterm"NAME="AUTOID-5140"></A></P><PCLASS="para">Nevertheless, environment variables are important.  <ACLASS="indexterm"NAME="AUTOID-5142"></A>Most <EMCLASS="emphasis">.profile</EM>files include definitions of environment variables;the sample built-in <EMCLASS="emphasis">.profile</EM> earlier in this chapter contained two such definitions:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">EDITOR=/usr/local/bin/emacsSHELL=/bin/kshexport EDITOR</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5149"></A><ACLASS="indexterm"NAME="AUTOID-5152"></A>For some reason, the Korn shell doesn't make <BCLASS="emphasis.bold">EDITOR</B>an environment variable by default.  <ACLASS="indexterm"NAME="AUTOID-5155"></A>This means, among other things, that <EMCLASS="emphasis">mail</EM> will not knowwhich editor to use when you want to edit a message.[15]Therefore you would have to export it yourself by using the above<BCLASS="emphasis.bold">export</B> command in your <EMCLASS="emphasis">.profile</EM>.  </P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[15] <ACLASS="indexterm"NAME="AUTOID-5160"></A>Actually, it will default to the line editor <EMCLASS="emphasis">ed</EM>.You don't want that, now do you?</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5166"></A><ACLASS="indexterm"NAME="AUTOID-5169"></A>The second line in the above code is meant for systems that do not have the Korn shell installed as the default shell, i.e., as <EMCLASS="emphasis">/bin/sh</EM>.  <ACLASS="indexterm"NAME="AUTOID-5172"></A><ACLASS="indexterm"NAME="AUTOID-5174"></A>Some programs run shells as subprocesseswithin themselves (e.g., many mail programs andthe <EMCLASS="emphasis">emacs</EM> editor's shell mode);by convention they use the <BCLASS="emphasis.bold">SHELL</B> variable todetermine which shell to use.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5179"></A><ACLASS="indexterm"NAME="AUTOID-5182"></A>You can find out which variables are environment variablesand what their values are by typing <BCLASS="emphasis.bold">export</B> withoutarguments.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-3-SECT-5.2">3.5.2 The Environment File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-3-IX-ENV-FILES"></A><ACLASS="indexterm"NAME="AUTOID-5190"></A>Although environment variables will always be known tosubprocesses, the shell must be explicitly told whichother variables, options, aliases, etc., are to becommunicated to subprocesses. The way to do this is toput all such definitions in a special file calledthe <EMCLASS="emphasis">environment file</EM> instead of your <EMCLASS="emphasis">.profile</EM>.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-3-IX-ENV-VARS-ENV"></A><ACLASS="indexterm"NAME="KSH-CH-3-IX-ENV"></A><ACLASS="indexterm"NAME="AUTOID-5202"></A>You can call the environment file anything you like, aslong as you set the environment variable <BCLASS="emphasis.bold">ENV</B> tothe file's name. The usual way to do this is as follows:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Decide which definitions in your <EMCLASS="emphasis">.profile</EM> you wantto propagate to subprocesses. Remove them from <EMCLASS="emphasis">.profile</EM>and put them in a file you will designate as your environment file.</P></LI><LICLASS="listitem"><PCLASS="para">Put a line in your <EMCLASS="emphasis">.profile</EM> that tells the shell whereyour environment file is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ENV=<EMCLASS="emphasis">envfilename</EM></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">For the changes to take effect, type either <BCLASS="emphasis.bold">. .profile</B>or <BCLASS="emphasis.bold">login.</B>  [16]In either case, yourenvironment file will be run when the shell encounters the<BCLASS="emphasis.bold">ENV=</B> statement.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[16] The latter assumes that the Korn shell is defined as your login shell. If it isn't, you must do the former&nbsp;- or better yet, have your system administrator install it as your login shell!</P></BLOCKQUOTE></LI></OL><ACLASS="indexterm"NAME="AUTOID-5225"></A><ACLASS="indexterm"NAME="AUTOID-5226"></A><ACLASS="indexterm"NAME="AUTOID-5227"></A><ACLASS="indexterm"NAME="AUTOID-5229"></A><PCLASS="para">The idea of the environment file comes from the C shell's <EMCLASS="emphasis">.cshrc</EM>file; thus, many Korn shell users who came from the C shell worldcall their environment files <EMCLASS="emphasis">.kshrc</EM>. (The <EMCLASS="emphasis">rc</EM> suffix forinitialization files is practically universal throughout the UNIX world.According to the folklore, it stands for &quot;run commands&quot; and has origins in old DEC operating systems.)</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5236"></A>As a general rule, you should put as few definitionsas possible in <EMCLASS="emphasis">.profile</EM> and as many as possible in yourenvironment file. Because definitions add to rather thantake away from an environment, there is little chance that theywill cause something in a subprocess not to work properly.(An exception might be name clashes if you go overboard withaliases.)</P><PCLASS="para">The only things that really need to be in <EMCLASS="emphasis">.profile</EM>are commands that aren't definitionsbut actually run or produce output when you log in. Optionand alias definitions should go into the environment file.In fact, there are many Korn shell users who have tiny<EMCLASS="emphasis">.profile</EM> files, e.g.:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">stty stop ^S intr ^C erase ^? datefromexport ENV=~/.kshrc</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-5246"></A>(The <EMCLASS="emphasis">from</EM> command, in some versions of UNIX, checks if youhave any mail and prints a list of message headers if you do.)Although this is a small <EMCLASS="emphasis">.profile</EM>, this user's environment filecould be huge.<ACLASS="indexterm"NAME="AUTOID-5250"></A></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_04.htm"TITLE="3.4 Shell Variables"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 3.4 Shell Variables"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Learning the Korn Shell"><IMGSRC="../gifs/txthome.gif"ALT="Learning the Korn Shell"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch03_06.htm"TITLE="3.6 Customization Hints"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 3.6 Customization Hints"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">3.4 Shell Variables</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">3.6 Customization Hints</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>