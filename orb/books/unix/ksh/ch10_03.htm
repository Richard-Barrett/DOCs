<HTML><HEAD><TITLE>[Chapter 10] 10.3 System Security Features</TITLE><METANAME="DC.title"CONTENT="Learning the Korn Shell"><METANAME="DC.creator"CONTENT="Bill Rosenblatt"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-03T21:17:14Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-054-6"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. Korn Shell Administration"><LINKREL="prev"HREF="ch10_02.htm"TITLE="10.2 Environment Customization"><LINKREL="next"HREF="appa_01.htm"TITLE="A. Related Shells"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="Learning the Korn Shell"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,66"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/ksrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_02.htm"TITLE="10.2 Environment Customization"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.2 Environment Customization"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>Korn Shell Administration</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="APPENDIX"HREF="appa_01.htm"TITLE="A. Related Shells"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A. Related Shells"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="KSH-CH-10-SECT-3">10.3 System Security Features</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-10-IX-SECURITY"></A>UNIX security is a problem of legendary notoriety.Just about every aspect of a UNIX system has somesecurity issue associated with it, and it's usuallythe system administrator's job to worry about thisissue.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16547"></A>The Korn shell has three features that help solve thisproblem: the <EMCLASS="emphasis">restricted shell</EM>, which is intentionally&quot;brain damaged,&quot; the <EMCLASS="emphasis">tracked alias</EM> facilitythat we saw in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3, Customizing Your Environment</A>,and <EMCLASS="emphasis">privileged mode</EM>, which isused with shell scripts that run as if the user were<BCLASS="emphasis.bold">root</B>.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-10-SECT-3.1">10.3.1 Restricted Shell</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-10-IX-RESTRICTED-SHELL"></A><ACLASS="indexterm"NAME="AUTOID-16560"></A><ACLASS="indexterm"NAME="AUTOID-16564"></A>The restricted shell is designed to put the user intoan environment where his or her ability to move aroundand write files is severely limited. It's usually usedfor &quot;guest&quot; accounts.  <ACLASS="indexterm"NAME="AUTOID-16567"></A><ACLASS="indexterm"NAME="AUTOID-16570"></A>You can make a user's login shell restricted by putting <BCLASS="emphasis.bold">rksh</B> or <BCLASS="emphasis.bold">ksh -r</B> in theuser's <EMCLASS="emphasis">/etc/passwd</EM> entry.</P><PCLASS="para">The specific constraints imposed by the restricted shelldisallow the user from doing the following:<ACLASS="indexterm"NAME="AUTOID-16576"></A></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16582"></A>Changing working directories: <BCLASS="emphasis.bold">cd</B> isinoperative. If you try to use it, you will get theerror message &quot;ksh: cd: restricted&quot;.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16588"></A>Redirecting output to a file: the redirectors<BCLASS="emphasis.bold">&gt;</B>, <BCLASS="emphasis.bold">&gt;|</B>, <BCLASS="emphasis.bold">&lt;&gt;</B>, and <BCLASS="emphasis.bold">&gt;&gt;</B> are not allowed.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16598"></A>Assigning a new value to the environment variables<BCLASS="emphasis.bold">SHELL</B>, <BCLASS="emphasis.bold">ENV</B>, or <BCLASS="emphasis.bold">PATH</B>.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16606"></A>Specifying any pathnames with slashes (/) in them.The shell will treat files outside of the current directory as &quot;not found.&quot;</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16610"></A><ACLASS="indexterm"NAME="AUTOID-16613"></A>These restrictions go into effect after theuser's <EMCLASS="emphasis">.profile</EM> and environment files are run.</P><PCLASS="para">This means that the restricted shell user's entireenvironment is set up in <EMCLASS="emphasis">.profile</EM>. Since theuser can't overwrite that file, this lets the systemadministrator configure the environment as he or shesees fit.  </P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16620"></A><ACLASS="indexterm"NAME="AUTOID-16624"></A>Two common ways of setting up such environments are to set up a directory of &quot;safe&quot; commands and have thatdirectory be the only one in <BCLASS="emphasis.bold">PATH</B>, and to setup a command menu from which the user can't escape withoutexiting the shell.<ACLASS="indexterm"NAME="AUTOID-16628"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-10-SECT-3.2">10.3.2 A System Break-in Scenario</A></H3><PCLASS="para">Before we explain the other security features, here is some background information on system security that should help you understand why they are necessary.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16633"></A><ACLASS="indexterm"NAME="KSH-CH-10-IX-SUID-SHELL-SCRIPTS"></A>Many problems with UNIX security hinge on a UNIX fileattribute called the <EMCLASS="emphasis">suid</EM> (set user ID) bit.This is like a permission bit (see <BCLASS="emphasis.bold">umask</B> above): when an executable file has it turned on, the file runs with an effective user ID equalto the owner of the file, which is usually<BCLASS="emphasis.bold">root</B>. The effective user ID is distinct fromthe real user ID of the process.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16644"></A>This feature lets administrators write scriptsthat do certain things that require <BCLASS="emphasis.bold">root</B> privilege(e.g., configure printers) in a controlled way.  To set a file's <EMCLASS="emphasis">suid</EM> bit, the superuser can type<BCLASS="emphasis.bold">chmod 4755</B> <CODECLASS="replaceable"><I>filename</I></CODE>; the <BCLASS="emphasis.bold">4</B> is the <EMCLASS="emphasis">suid</EM> bit.</P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-10-IX-SUID-SHELL-SCRIPTS-DANGERS-OF"></A>Modern system administration wisdom says that creating<EMCLASS="emphasis">suid</EM> shell scripts is a very, very bad idea.[5]<ACLASS="indexterm"NAME="AUTOID-16661"></A>This has been especially true under the C shell, because its <EMCLASS="emphasis">.cshrc</EM> environment fileintroduces numerous opportunities for break-ins.  <ACLASS="indexterm"NAME="AUTOID-16664"></A><ACLASS="indexterm"NAME="KSH-CH-10-IX-SECURITY-TROJAN-HORSE-SCHEMES"></A>The Korn shell's environment file feature creates similar securityholes, although the security features we'll see shortly make this problem less severe.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] In fact, some versions of UNIX intentionally disable the <EMCLASS="emphasis">suid</EM> feature for shell scripts.</P></BLOCKQUOTE><PCLASS="para">We'll show why it's dangerous to set a script's <EMCLASS="emphasis">suid</EM> bit.  <ACLASS="indexterm"NAME="AUTOID-16672"></A><ACLASS="indexterm"NAME="AUTOID-16675"></A><ACLASS="indexterm"NAME="AUTOID-16678"></A>Recall that in <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3</A> we mentioned that it's not a goodidea to put your personal <EMCLASS="emphasis">bin</EM> directory at the front of your <BCLASS="emphasis.bold">PATH</B>. Here is a scenario that showshow this combines with <EMCLASS="emphasis">suid</EM> shell scripts to forma security hole: a variation of the infamous &quot;Trojan horse&quot; scheme.</P><PCLASS="para">For this particular technique to work, the computer cracker has to find a user on the system with an <EMCLASS="emphasis">suid</EM> shell script.In addition, the user must have a <BCLASS="emphasis.bold">PATH</B> with his orher personal <EMCLASS="emphasis">bin</EM> directorylisted before the public <EMCLASS="emphasis">bin</EM> directories,and the cracker must have write permission on the user'spersonal <EMCLASS="emphasis">bin</EM> directory.</P><PCLASS="para">Once the cracker finds a user with these requirements, heor she does the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16696"></A>Looks at the <EMCLASS="emphasis">suid</EM> script and finds a common utility that it calls. Let's say it's <EMCLASS="emphasis">grep</EM>.</P></LI><LICLASS="listitem"><PCLASS="para">Creates the Trojan horse: a shell script called <EMCLASS="emphasis">grep</EM>in the user's personal <EMCLASS="emphasis">bin</EM> directory that looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cp /bin/ksh <EMCLASS="emphasis">filename</EM>chown root <EMCLASS="emphasis">filename</EM>chmod 4755 <EMCLASS="emphasis">filename</EM>/bin/grep &quot;$@&quot;rm ~/bin/grep</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16710"></A><ACLASS="indexterm"NAME="AUTOID-16712"></A><EMCLASS="emphasis">filename</EM> should be some unremarkable filenamein a directory with public read and execute permission,such as <EMCLASS="emphasis">/bin</EM> or <EMCLASS="emphasis">/usr/bin</EM>.   <ACLASS="indexterm"NAME="AUTOID-16717"></A>The file, when created,will be that most heinous of securityholes: an <EMCLASS="emphasis">suid</EM> interactive shell.  </P></LI><LICLASS="listitem"><PCLASS="para">Sits back and waits for the user to run the <EMCLASS="emphasis">suid</EM>shell script-which calls the Trojan horse, which inturn creates the <EMCLASS="emphasis">suid</EM> shell and then self-destructs.</P></LI><LICLASS="listitem"><PCLASS="para">Runs the <EMCLASS="emphasis">suid</EM> shell and creates havoc.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16729"></A><ACLASS="indexterm"NAME="AUTOID-16730"></A><ACLASS="indexterm"NAME="AUTOID-16731"></A></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-10-SECT-3.3">10.3.3 Tracked Aliases</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16735"></A>The Korn shell protects against this type of scheme in twoways. First, it defines tracked aliases (see <ACLASS="xref"HREF="ch03_01.htm"TITLE="Customizing Your Environment">Chapter 3</A>) for just about all commonly-used utilities:<EMCLASS="emphasis">ls</EM>, <EMCLASS="emphasis">mv</EM>, <EMCLASS="emphasis">cp</EM>, <EMCLASS="emphasis">who</EM>, <EMCLASS="emphasis">grep</EM>,and many others. Since aliases take priority over executable files, the alias will alwaysrun instead of the Trojan horse.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16746"></A>Furthermore, the shell won't let you know about theseif you type <BCLASS="emphasis.bold">alias -t</B> to see all tracked aliases.[6]You'll have trouble finding a command to use as yourTrojan horse if you want to break in. This is a veryclever-and undocumented-security feature.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[6] <ACLASS="indexterm"NAME="AUTOID-16753"></A>Unless you type <BCLASS="emphasis.bold">whence -v</B> <EMCLASS="emphasis">command</EM> or <BCLASS="emphasis.bold">type</B> <EMCLASS="emphasis">command</EM>. If <EMCLASS="emphasis">command</EM> has a tracked alias,this will say so, and it will cause <BCLASS="emphasis.bold">alias -t</B>to report it next time.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="KSH-CH-10-SECT-3.4">10.3.4 Privileged Mode</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-10-IX-PRIVILEGED-MODE"></A><ACLASS="indexterm"NAME="AUTOID-16768"></A>The second type of protection against Trojan horses is <EMCLASS="emphasis">privileged mode</EM>. This is a <BCLASS="emphasis.bold">set -o</B> option (<BCLASS="emphasis.bold">set -o privileged</B>or <BCLASS="emphasis.bold">set -p</B>), but the shell enters itautomatically whenever it executes a script whose <EMCLASS="emphasis">suid</EM>bit is set.  </P><PCLASS="para"><ACLASS="indexterm"NAME="KSH-CH-10-IX-SUID-SHELL-SCRIPTS-N"></A>In privileged mode, when an <EMCLASS="emphasis">suid</EM> Korn shellscript is invoked, the shell does not run the user'senvironment file-i.e., it doesn't expand the user's<BCLASS="emphasis.bold">ENV</B> environment variable.  <ACLASS="indexterm"NAME="AUTOID-16781"></A><ACLASS="indexterm"NAME="AUTOID-16783"></A><ACLASS="indexterm"NAME="AUTOID-16786"></A><ACLASS="indexterm"NAME="AUTOID-16789"></A><ACLASS="indexterm"NAME="AUTOID-16792"></A>Instead, it runs the file <EMCLASS="emphasis">/etc/suid_profile</EM>.  </P><PCLASS="para"><EMCLASS="emphasis">/etc/suid_profile</EM> should be written so as to restrict<EMCLASS="emphasis">suid</EM> shell scripts in much the same way as therestricted shell does.  <ACLASS="indexterm"NAME="AUTOID-16800"></A><ACLASS="indexterm"NAME="AUTOID-16804"></A><ACLASS="indexterm"NAME="AUTOID-16806"></A><ACLASS="indexterm"NAME="AUTOID-16808"></A>At a minimum, it should make<BCLASS="emphasis.bold">PATH</B> read-only (<BCLASS="emphasis.bold">typeset -r PATH</B> or<BCLASS="emphasis.bold">readonly PATH</B>) and set itto one or more &quot;safe&quot; directories. Once again,this prevents any decoys from being invoked.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16815"></A>Since privileged mode is an option, it is possible toturn it off with the command <BCLASS="emphasis.bold">set +o privileged</B>(or <BCLASS="emphasis.bold">set +p</B>).  But this doesn't help the potentialsystem cracker: the shell automatically changes itseffective user ID to be the same as the real user ID-i.e.,if you turn off privileged mode, you also turnoff <EMCLASS="emphasis">suid</EM>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16822"></A>Privileged mode is an excellent security feature;it solves a problem that originated when the environmentfile idea first appeared in the C shell.<ACLASS="indexterm"NAME="AUTOID-16824"></A><ACLASS="indexterm"NAME="AUTOID-16825"></A>Tracked aliases make protection against Trojan horseseven stronger.   </P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-16830"></A>Furthermore, both features are strong argumentsfor installing the Korn shell as <EMCLASS="emphasis">/bin/sh</EM>. Yoursystem will be all the more impervious to break-ins ifyour standard shell has these security features.</P><PCLASS="para">Nevertheless, we still recommend against creating<EMCLASS="emphasis">suid</EM> shell scripts. We have shown how the Kornshell protects against break-ins in one particular situation,but that certainly does not imply that the Korn shellis &quot;safe&quot; in any absolute sense. If you really must have <EMCLASS="emphasis">suid</EM> scripts, you should carefully consider allrelevant security issues.<ACLASS="indexterm"NAME="AUTOID-16836"></A></P><PCLASS="para">Finally, if you would like to learn more about UNIX security,we recommend the O'Reilly &amp; Associates Nutshell Handbook,<EMCLASS="emphasis">Practical UNIX Security</EM>, by Gene Spafford and Simson Garfinkel.</P><ACLASS="indexterm"NAME="AUTOID-16839"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_02.htm"TITLE="10.2 Environment Customization"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.2 Environment Customization"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="Learning the Korn Shell"><IMGSRC="../gifs/txthome.gif"ALT="Learning the Korn Shell"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="APPENDIX"HREF="appa_01.htm"TITLE="A. Related Shells"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: A. Related Shells"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.2 Environment Customization</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">A. Related Shells</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>