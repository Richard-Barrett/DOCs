<HTML><HEAD><TITLE>Reference: bc</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:52:16Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch02_01.htm"TITLE="2. UNIX Commands"><LINKREL="prev"HREF="c02_011.htm"TITLE="Reference: batch"><LINKREL="next"HREF="c02_013.htm"TITLE="Reference: bdiff"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_011.htm"TITLE="Reference: batch"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: batch"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 2<BR>UNIX Commands</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_013.htm"TITLE="Reference: bdiff"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: bdiff"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="NUTENTRY"><H2CLASS="nutentry"><ACLASS="term"NAME="AUTOID-1338">bc</A></H2><PRECLASS="nutsynopsis"><CODECLASS="userinput"><B>bc</B></CODE> [<CODECLASS="replaceable"><I>options</I></CODE>] [<CODECLASS="replaceable"><I>files</I></CODE>]</PRE><DLCLASS="nutentrybody"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1346"></A><ACLASS="indexterm"NAME="AUTOID-1348"></A>Interactively perform arbitrary-precision arithmetic or convert numbersfrom one base to another.  Input can be taken from<CODECLASS="replaceable"><I>files</I></CODE> or read from the standard input.  To exit, type<BCLASS="emphasis.bold">quit</B> or <CODECLASS="replaceable"><I>EOF</I></CODE>.</P><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1354">Options</A></H3><DLCLASS="variablelist"><DTCLASS="term">-c</DT><DDCLASS="listitem"><PCLASS="para">Do not invoke <BCLASS="emphasis.bold">dc</B>; compile only.(Since <BCLASS="emphasis.bold">bc</B> is a preprocessor for <BCLASS="emphasis.bold">dc</B>, <BCLASS="emphasis.bold">bc</B> normally invokes <BCLASS="emphasis.bold">dc</B>.)</P></DD><DTCLASS="term">-l</DT><DDCLASS="listitem"><PCLASS="para">Make available functions from the math library.</P></DD></DL><PCLASS="para"><BCLASS="emphasis.bold">bc</B> is a language (and compiler) whose syntax resembles that of C.<BCLASS="emphasis.bold">bc</B> consists of identifiers, keywords, and symbols, whichare briefly described below.  Examples follow at end. </P></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1373">Identifiers</A></H3><PCLASS="para">An identifier is a single character, consisting of the lowercaseletters a-z.  Identifiers are used as names for variables, arrays, and functions.Within the same program you may name a variable, an array, and a function using the same letter.  The following identifiers would not conflict:</P><DLCLASS="variablelist"><DTCLASS="term">x</DT><DDCLASS="listitem"><PCLASS="para">Variable <BCLASS="emphasis.bold">x</B>.</P></DD><DTCLASS="term">x[<CODECLASS="replaceable"><I>i</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Element <CODECLASS="replaceable"><I>i</I></CODE> of array <BCLASS="emphasis.bold">x</B>.  <CODECLASS="replaceable"><I>i</I></CODE> can range from 0 to 2047and can also be an expression.</P></DD><DTCLASS="term">x(y,z)</DT><DDCLASS="listitem"><PCLASS="para">Call function <BCLASS="emphasis.bold">x</B> with parameters <BCLASS="emphasis.bold">y</B> and <BCLASS="emphasis.bold">z</B>.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1397">Input-output keywords</A></H3><PCLASS="para"><BCLASS="emphasis.bold">ibase</B>, <BCLASS="emphasis.bold">obase</B>, and <BCLASS="emphasis.bold">scale</B> store a value.  Typing them on a line by themselvesdisplays their current value.  More commonly, you would changetheir values through assignment.  Letters A-F are treatedas digits whose values are 10-15.</P><DLCLASS="variablelist"><DTCLASS="term">ibase = <CODECLASS="replaceable"><I>n</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Numbers that are input (e.g., typed) are read as base <CODECLASS="replaceable"><I>n</I></CODE> (default is 10).</P></DD><DTCLASS="term">obase = <CODECLASS="replaceable"><I>n</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Numbers displayed are in base <CODECLASS="replaceable"><I>n</I></CODE> (default is 10).Note:  Once <BCLASS="emphasis.bold">ibase</B> has been changed from 10, use digit &quot;A&quot;to restore <BCLASS="emphasis.bold">ibase</B> or <BCLASS="emphasis.bold">obase</B> to decimal.</P></DD><DTCLASS="term">scale = <CODECLASS="replaceable"><I>n</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Display computations using <CODECLASS="replaceable"><I>n</I></CODE> decimal places (default is 0,meaning that results are truncated to integers).<BCLASS="emphasis.bold">scale</B> is normally used only for base-10 computations.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1426">Statement keywords</A></H3><PCLASS="para">A semicolon or a newline separates one statement from another.Curly braces are needed only when grouping multiple statements.</P><DLCLASS="variablelist"><DTCLASS="term">if (<CODECLASS="replaceable"><I>rel-expr</I></CODE>) {<CODECLASS="replaceable"><I>statements</I></CODE>}</DT><DDCLASS="listitem"><PCLASS="para">Do one or more <CODECLASS="replaceable"><I>statements</I></CODE> if relational expression<CODECLASS="replaceable"><I>rel-expr</I></CODE> is true; for example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>if(x==y) i = i + 1</B></CODE>.</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term">while (<CODECLASS="replaceable"><I>rel-expr</I></CODE>) {<CODECLASS="replaceable"><I>statements</I></CODE>}</DT><DDCLASS="listitem"><PCLASS="para">Repeat one or more <CODECLASS="replaceable"><I>statements</I></CODE> while <CODECLASS="replaceable"><I>rel-expr</I></CODE> is true; forexample:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>while(i&gt;0) {p = p*n; q = a/b; i = i-1}</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term">for (<CODECLASS="replaceable"><I>expr1</I></CODE>;<CODECLASS="replaceable"><I>rel-expr</I></CODE>;<CODECLASS="replaceable"><I>expr2</I></CODE>) {<CODECLASS="replaceable"><I>statements</I></CODE>}</DT><DDCLASS="listitem"><PCLASS="para">Similar to <BCLASS="emphasis.bold">while</B>; for example, to print the first 10 multiples of5, you could type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>for(i=1; i&lt;=10; i++) i*5</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term">break</DT><DDCLASS="listitem"><PCLASS="para">Terminate a <BCLASS="emphasis.bold">while</B> or <BCLASS="emphasis.bold">for</B> statement.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1473">Function keywords</A></H3><DLCLASS="variablelist"><DTCLASS="term">define <CODECLASS="replaceable"><I>j</I></CODE>(<CODECLASS="replaceable"><I>k</I></CODE>) {</DT><DDCLASS="listitem"><PCLASS="para">Begin the definition of function <CODECLASS="replaceable"><I>j</I></CODE> having a single argument <CODECLASS="replaceable"><I>k</I></CODE>.Additional arguments are allowed, separated by commas.Statements follow on successive lines.  End with a }.</P></DD><DTCLASS="term">auto <CODECLASS="replaceable"><I>x</I></CODE>, <CODECLASS="replaceable"><I>y</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Set up <CODECLASS="replaceable"><I>x</I></CODE> and <CODECLASS="replaceable"><I>y</I></CODE> as variables local to a function definition, initialized to 0 and meaningless outside the function.  Must appear first.</P></DD><DTCLASS="term">return(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Pass the value of expression <CODECLASS="replaceable"><I>expr</I></CODE> back to the program.  Return 0 if <BCLASS="emphasis.bold">(</B><CODECLASS="replaceable"><I>expr</I></CODE><BCLASS="emphasis.bold">)</B> is left off.  Used in function definitions.</P></DD><DTCLASS="term">sqrt(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute the square root of expression <CODECLASS="replaceable"><I>expr</I></CODE>.</P></DD><DTCLASS="term">length(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute how many digits are in <CODECLASS="replaceable"><I>expr</I></CODE>.</P></DD><DTCLASS="term">scale(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Same, but count only digits to the right of the decimal point.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1518">Math library functions</A></H3><PCLASS="para">These are available when <BCLASS="emphasis.bold">bc</B> is invoked with <BCLASS="emphasis.bold">-l</B>.Library functions set <BCLASS="emphasis.bold">scale</B> to 20.</P><DLCLASS="variablelist"><DTCLASS="term">s(<CODECLASS="replaceable"><I>angle</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute the sine of <CODECLASS="replaceable"><I>angle</I></CODE>, a constant or expressionin radians.</P></DD><DTCLASS="term">c(<CODECLASS="replaceable"><I>angle</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute the cosine of <CODECLASS="replaceable"><I>angle</I></CODE>, a constant or expressionin radians.</P></DD><DTCLASS="term">a(<CODECLASS="replaceable"><I>n</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute the arctangent of <CODECLASS="replaceable"><I>n</I></CODE>, returning an angle in radians.</P></DD><DTCLASS="term">e(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute <BCLASS="emphasis.bold">e</B> to the power of <CODECLASS="replaceable"><I>expr</I></CODE>.</P></DD><DTCLASS="term">l(<CODECLASS="replaceable"><I>expr</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">Compute natural log of <CODECLASS="replaceable"><I>expr</I></CODE>.</P></DD><DTCLASS="term">j(<CODECLASS="replaceable"><I>n</I></CODE><BCLASS="emphasis.bold">, </B><CODECLASS="replaceable"><I>x</I></CODE><BCLASS="emphasis.bold">)</B></DT><DDCLASS="listitem"><PCLASS="para">Compute Bessel function of integer order <CODECLASS="replaceable"><I>n</I></CODE>.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1565">Operators</A></H3><PCLASS="para">These consist of operators and other symbols.Operators can be arithmetic, unary, assignment, or relational.</P><DLCLASS="variablelist"><DTCLASS="term">arithmetic</DT><DDCLASS="listitem"><PCLASS="para">+   <CODECLASS="literal">-</CODE>   <CODECLASS="literal">* </CODE>   /   % ^</P></DD><DTCLASS="term">unary</DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">-</CODE> ++  --</P></DD><DTCLASS="term">assignment</DT><DDCLASS="listitem"><PCLASS="para">=+  =<CODECLASS="literal">-</CODE>  =*  =/  =%  =^  =</P></DD><DTCLASS="term">relational</DT><DDCLASS="listitem"><PCLASS="para">&lt;  &lt;=  &gt;  &gt;=  ==  !=</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1589">Other symbols</A></H3><DLCLASS="variablelist"><DTCLASS="term">/*   */</DT><DDCLASS="listitem"><PCLASS="para">Enclose comments.</P></DD><DTCLASS="term">( )</DT><DDCLASS="listitem"><PCLASS="para">Control the evaluation of expressions (change precedence).Can also be used around assignment statements to force the result to print.</P></DD><DTCLASS="term">{ }</DT><DDCLASS="listitem"><PCLASS="para">Used to group statements.</P></DD><DTCLASS="term">[ ]</DT><DDCLASS="listitem"><PCLASS="para">Array index.</P></DD><DTCLASS="term">&quot;<CODECLASS="replaceable"><I>text</I></CODE>&quot;</DT><DDCLASS="listitem"><PCLASS="para">Use as a statement to print <CODECLASS="replaceable"><I>text</I></CODE>.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1614">Examples</A></H3><PCLASS="para">Note below that when you type some quantity (a number or expression), it is evaluated and printed, but assignment statements produce no display.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&#13;<CODECLASS="userinput"><B>ibase = 8</B></CODE>	<ICLASS="lineannotation">Octal input</I>.<CODECLASS="userinput"><B>20</B></CODE>		<ICLASS="lineannotation">Evaluate this octal number</I>.<CODECLASS="literal">16</CODE>		<ICLASS="lineannotation">Terminal displays decimal value</I>.<CODECLASS="userinput"><B>obase = 2</B></CODE>	<ICLASS="lineannotation">Display output in base 2 instead of base 10</I>.<CODECLASS="userinput"><B>20</B></CODE>		<ICLASS="lineannotation">Octal input</I>.<CODECLASS="literal">10000</CODE>	<ICLASS="lineannotation">Terminal now displays binary value</I>.<CODECLASS="userinput"><B>ibase = A</B></CODE>	<ICLASS="lineannotation">Restore base 10 input</I>.<CODECLASS="userinput"><B>scale = 3</B></CODE>	<ICLASS="lineannotation">Truncate results to 3 places</I>.<CODECLASS="userinput"><B>8/7</B></CODE>		<ICLASS="lineannotation">Evaluate a division</I>.<CODECLASS="literal">1.001001000</CODE>	<ICLASS="lineannotation">Oops!  Forgot to reset output base to 10</I>.<CODECLASS="userinput"><B>obase=10</B></CODE>	<ICLASS="lineannotation">Input is decimal now, so &quot;A&quot; isn't needed</I>.<CODECLASS="userinput"><B>8/7</B></CODE><CODECLASS="literal">1.142</CODE>	<ICLASS="lineannotation">Terminal displays result (truncated)</I>.</PRE></BLOCKQUOTE></P><PCLASS="para">The following lines show the use of functions:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>define p(r,n){</B></CODE>    <ICLASS="lineannotation">Function p uses two arguments</I>.  <CODECLASS="userinput"><B>auto v</B></CODE>          <ICLASS="lineannotation">v is a local variable</I>.  <CODECLASS="userinput"><B>v = r^n</B></CODE>         <ICLASS="lineannotation">r raised to the n power</I>.  <CODECLASS="userinput"><B>return(v)}</B></CODE>      <ICLASS="lineannotation">Value returned</I>.<CODECLASS="userinput"><B>scale=5</B></CODE><CODECLASS="userinput"><B>x=p(2.5,2)</B></CODE>        <ICLASS="lineannotation">x = 2.5 ^ 2</I><CODECLASS="userinput"><B>x</B></CODE>                 <ICLASS="lineannotation">Print value of x</I>.6.25<CODECLASS="userinput"><B>length(x)</B></CODE>         <ICLASS="lineannotation">Number of digits</I>.3<CODECLASS="userinput"><B>scale(x)</B></CODE>          <ICLASS="lineannotation">Number of places right of decimal point</I>.2</PRE></BLOCKQUOTE></P></DIV></DL></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_011.htm"TITLE="Reference: batch"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: batch"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_013.htm"TITLE="Reference: bdiff"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: bdiff"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">Reference: batch</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">Reference: bdiff</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>