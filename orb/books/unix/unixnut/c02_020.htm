<HTML><HEAD><TITLE>Reference: cc</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:52:18Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch02_01.htm"TITLE="2. UNIX Commands"><LINKREL="prev"HREF="c02_019.htm"TITLE="Reference: cb"><LINKREL="next"HREF="c02_021.htm"TITLE="Reference: cd"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_019.htm"TITLE="Reference: cb"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: cb"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 2<BR>UNIX Commands</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_021.htm"TITLE="Reference: cd"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: cd"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="NUTENTRY"><H2CLASS="nutentry"><ACLASS="term"NAME="AUTOID-1923">cc</A></H2><PRECLASS="nutsynopsis"><CODECLASS="userinput"><B>cc</B></CODE> [<CODECLASS="replaceable"><I>options</I></CODE>] <CODECLASS="replaceable"><I>files</I></CODE></PRE><DLCLASS="nutentrybody"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1931"></A><ACLASS="indexterm"NAME="AUTOID-1933"></A><ACLASS="indexterm"NAME="AUTOID-1937"></A>Compile one or more C source files (<CODECLASS="replaceable"><I>file</I></CODE><BCLASS="emphasis.bold">.c</B>),assembler source files (<CODECLASS="replaceable"><I>file</I></CODE><BCLASS="emphasis.bold">.s</B>), or preprocessed C source files (<CODECLASS="replaceable"><I>file</I></CODE><BCLASS="emphasis.bold">.i</B>).<BCLASS="emphasis.bold">cc</B> automatically invokes the link editor <BCLASS="emphasis.bold">ld</B> (unless <BCLASS="emphasis.bold">-c</B> is supplied).In some cases, <BCLASS="emphasis.bold">cc</B> generates an object filehaving a <BCLASS="emphasis.bold">.o</B> suffix and a corresponding root name.By default, output is placed in <BCLASS="emphasis.bold">a.out</B>.<BCLASS="emphasis.bold">cc</B> accepts additional system-specific options.Note:  This command runs the ANSI C compiler;use <BCLASS="emphasis.bold">/usr/bin/cc</B> if you want to run the compiler for Kernighan and Ritchie's C.</P><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-1954">Options</A></H3><DLCLASS="variablelist"><DTCLASS="term">-#</DT><DDCLASS="listitem"><PCLASS="para">Show when each compiler tool is invoked.  Solaris 2.0 only.</P></DD><DTCLASS="term">-A <CODECLASS="replaceable"><I>name</I></CODE>[<BCLASS="emphasis.bold">(</B><CODECLASS="replaceable"><I>tokens</I></CODE>)]</DT><DDCLASS="listitem"><PCLASS="para">Supply an <BCLASS="emphasis.bold">#assert</B> directive, assigning <CODECLASS="replaceable"><I>name</I></CODE> with optional<CODECLASS="replaceable"><I>tokens</I></CODE> as parameters.</P></DD><DTCLASS="term">-A -</DT><DDCLASS="listitem"><PCLASS="para">Ignore predefined assertions and macros.</P></DD><DTCLASS="term">-B <CODECLASS="replaceable"><I>mode</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Use with one or more <BCLASS="emphasis.bold">-l</B> options to tell <BCLASS="emphasis.bold">ld</B> what type of libraryfiles to search.  When <CODECLASS="replaceable"><I>mode</I></CODE> is <BCLASS="emphasis.bold">dynamic</B>, libraries are shared, meaning that library files ending in both <BCLASS="emphasis.bold">.so</B> and <BCLASS="emphasis.bold">.a</B> are searched.When <CODECLASS="replaceable"><I>mode</I></CODE> is <BCLASS="emphasis.bold">static</B>, only <BCLASS="emphasis.bold">.a</B> files are searched.To restore the previous search mode for additional <BCLASS="emphasis.bold">-l</B> options,supply <BCLASS="emphasis.bold">-B</B> again and change its <CODECLASS="replaceable"><I>mode</I></CODE>.</P></DD><DTCLASS="term">-C</DT><DDCLASS="listitem"><PCLASS="para">Do not strip comments during preprocessing.</P></DD><DTCLASS="term">-c</DT><DDCLASS="listitem"><PCLASS="para">Suppress link editing and keep any object files that were produced.</P></DD><DTCLASS="term">-D <CODECLASS="replaceable"><I>name</I></CODE>[<BCLASS="emphasis.bold">=</B><CODECLASS="replaceable"><I>def</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Supply a <BCLASS="emphasis.bold">#define</B> directive, defining <CODECLASS="replaceable"><I>name</I></CODE> to be <CODECLASS="replaceable"><I>def</I></CODE>or, if no <CODECLASS="replaceable"><I>def</I></CODE> is given, the value <BCLASS="emphasis.bold">1</B>.</P></DD><DTCLASS="term">-d<CODECLASS="replaceable"><I>c</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Tell <BCLASS="emphasis.bold">ld</B> to link dynamically when <CODECLASS="replaceable"><I>c</I></CODE> is <BCLASS="emphasis.bold">y</B> (the default)or to link statically when <CODECLASS="replaceable"><I>c</I></CODE> is <BCLASS="emphasis.bold">n</B>.</P></DD><DTCLASS="term">-dalign</DT><DDCLASS="listitem"><PCLASS="para">Produce double load/store instructions to improve performance.Solaris 2.0 only.</P></DD><DTCLASS="term">-E</DT><DDCLASS="listitem"><PCLASS="para">Run only the macro preprocessor, sending results to standard output.</P></DD><DTCLASS="term">-fast</DT><DDCLASS="listitem"><PCLASS="para">Use <BCLASS="emphasis.bold">cc</B> options that give fastest compilation.  Solaris 2.0 only.</P></DD><DTCLASS="term">-flags</DT><DDCLASS="listitem"><PCLASS="para">Briefly describe available options.  Solaris 2.0 only.</P></DD><DTCLASS="term">-fnonstd</DT><DDCLASS="listitem"><PCLASS="para">Produce SIGFPE signals for floating-point overflows and division byzero.  Solaris 2.0 only.</P></DD><DTCLASS="term">-fsingle</DT><DDCLASS="listitem"><PCLASS="para">Evaluate float expressions as single-precision.  Solaris 2.0 only.</P></DD><DTCLASS="term">-G</DT><DDCLASS="listitem"><PCLASS="para">Produce a shared object instead of a dynamically linked executable.</P></DD><DTCLASS="term">-g</DT><DDCLASS="listitem"><PCLASS="para">Generate more symbol-table information needed for debuggers<BCLASS="emphasis.bold">dbx</B> (Solaris) or <BCLASS="emphasis.bold">sdb</B> (SVR4).</P></DD><DTCLASS="term">-H</DT><DDCLASS="listitem"><PCLASS="para">List (on standard error) the pathnames of header files used in C <CODECLASS="replaceable"><I>files</I></CODE>.</P></DD><DTCLASS="term">-I <CODECLASS="replaceable"><I>dir</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Search for include files in directory <CODECLASS="replaceable"><I>dir</I></CODE> (in additionto standard locations).  Supply a <BCLASS="emphasis.bold">-I</B> for each new <CODECLASS="replaceable"><I>dir</I></CODE>to be searched.</P></DD><DTCLASS="term">-K <CODECLASS="replaceable"><I>word</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">If <CODECLASS="replaceable"><I>word</I></CODE> is <BCLASS="emphasis.bold">PIC</B>, produce position-independent code;if <CODECLASS="replaceable"><I>word</I></CODE> is <BCLASS="emphasis.bold">minabi</B>, compile with the minimum dynamic linkingthat preserves ABI conformance.</P></DD><DTCLASS="term">-keeptmp</DT><DDCLASS="listitem"><PCLASS="para">Don't delete temporary files.  Solaris 2.0 only.</P></DD><DTCLASS="term">-L <CODECLASS="replaceable"><I>dir</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Like <BCLASS="emphasis.bold">-I</B>, but search <CODECLASS="replaceable"><I>dir</I></CODE> for library archives.</P></DD><DTCLASS="term">-l <CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Link source <CODECLASS="replaceable"><I>file</I></CODE> with library files <BCLASS="emphasis.bold">lib</B><CODECLASS="replaceable"><I>name</I></CODE><BCLASS="emphasis.bold">.so</B> or <BCLASS="emphasis.bold">lib</B><CODECLASS="replaceable"><I>name</I></CODE><BCLASS="emphasis.bold">.a</B>.</P></DD><DTCLASS="term">-O</DT><DDCLASS="listitem"><PCLASS="para">Optimize object code (produced by <BCLASS="emphasis.bold">.c</B> or <BCLASS="emphasis.bold">.i</B> files).</P></DD><DTCLASS="term">-o <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Send object output to <CODECLASS="replaceable"><I>file</I></CODE> instead of to <BCLASS="emphasis.bold">a.out</B>.</P></DD><DTCLASS="term">-P</DT><DDCLASS="listitem"><PCLASS="para">Run only the preprocessor and place the result in <CODECLASS="replaceable"><I>file</I></CODE><BCLASS="emphasis.bold">.i</B>.</P></DD><DTCLASS="term">-p</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-2125"></A>Generate benchmark code to count the times each routine is called.File <BCLASS="emphasis.bold">mon.out</B> is created, so<BCLASS="emphasis.bold">prof</B> can later be used to produce an execution profile.</P></DD><DTCLASS="term">-Q<CODECLASS="replaceable"><I>c</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">List in the output (<CODECLASS="replaceable"><I>c</I></CODE> = <BCLASS="emphasis.bold">y</B>) or do not list (<CODECLASS="replaceable"><I>c</I></CODE> = <BCLASS="emphasis.bold">n</B>)information about the compilation tools invoked.  Default is to list.</P></DD><DTCLASS="term">-ql</DT><DDCLASS="listitem"><PCLASS="para">Invoke the basic block analyzer and produce code to count the timeseach source line is executed.  Use <BCLASS="emphasis.bold">lprof</B> to list the counts.</P></DD><DTCLASS="term">-qp</DT><DDCLASS="listitem"><PCLASS="para">Same as <BCLASS="emphasis.bold">-p</B>.</P></DD><DTCLASS="term">-S</DT><DDCLASS="listitem"><PCLASS="para">Compile (and optimize, if <BCLASS="emphasis.bold">-O</B> is supplied),but don't assemble or link; assembler output is placed in <CODECLASS="replaceable"><I>file</I></CODE><BCLASS="emphasis.bold">.s</B>.</P></DD><DTCLASS="term">-U <CODECLASS="replaceable"><I>name</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Remove definition of name, as if through an <BCLASS="emphasis.bold">#undef</B> directive.</P></DD><DTCLASS="term">-V</DT><DDCLASS="listitem"><PCLASS="para">Print version information for compiler tools.</P></DD><DTCLASS="term">-v</DT><DDCLASS="listitem"><PCLASS="para">Check semantics strictly, andallow some <BCLASS="emphasis.bold">lint</B> constructs to work.</P></DD><DTCLASS="term">-W[p02abl],<CODECLASS="replaceable"><I>arg1</I></CODE>[<BCLASS="emphasis.bold">,</B><CODECLASS="replaceable"><I>arg2...</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">Each comma-separated argument is a command-line token (option, parameter) from <BCLASS="emphasis.bold">cc</B>.  <BCLASS="emphasis.bold">-W</B> hands off these arguments to allow separate processing by a particular compiler tool.  <BCLASS="emphasis.bold">p</B> or <BCLASS="emphasis.bold">0</B> specifies the compiler; <BCLASS="emphasis.bold">2</B>, optimizer; <BCLASS="emphasis.bold">b</B>, basic block analyzer; <BCLASS="emphasis.bold">a</B>, assembler; <BCLASS="emphasis.bold">l</B>, link editor.</P></DD><DTCLASS="term">-X<CODECLASS="replaceable"><I>c</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Set <CODECLASS="replaceable"><I>c</I></CODE> as the level of ANSI C compliance:<DLCLASS="variablelist"><DTCLASS="term">t</DT><DDCLASS="listitem"><PCLASS="para">Transition (default).  Source code must comply with pre-ANSI features.</P></DD><DTCLASS="term">a</DT><DDCLASS="listitem"><PCLASS="para">ANSI.  Code must comply with ANSI features, but doesn't warn about new escape sequences or trigraphs.</P></DD><DTCLASS="term">c</DT><DDCLASS="listitem"><PCLASS="para">Conformance.  More rigorous than <BCLASS="emphasis.bold">a</B>.</P></DD><DTCLASS="term">s</DT><DDCLASS="listitem"><PCLASS="para">Code is allowed to be old Sun C.  Solaris 2.0 only.</P></DD></DL>&#13;</P></DD><DTCLASS="term">-xpg</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-2213"></A>Like <BCLASS="emphasis.bold">-p</B>, but produce file <BCLASS="emphasis.bold">gmon.out</B>; use<BCLASS="emphasis.bold">gprof</B> to produce an execution profile.  Solaris 2.0 only.</P></DD><DTCLASS="term">-xsb</DT><DDCLASS="listitem"><PCLASS="para">Produce symbol-table data for Source Code Browser.Solaris 2.0 only.</P></DD><DTCLASS="term">-xsbfast</DT><DDCLASS="listitem"><PCLASS="para">Same as <BCLASS="emphasis.bold">-xsb</B>, but don't actually compile.Solaris 2.0 only.</P></DD><DTCLASS="term">-xstrconst</DT><DDCLASS="listitem"><PCLASS="para">Add string literals to text segment, not data segment.Solaris 2.0 only.</P></DD><DTCLASS="term">-Y<CODECLASS="replaceable"><I>c</I></CODE><BCLASS="emphasis.bold">,</B><CODECLASS="replaceable"><I>dir</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Specify that item <CODECLASS="replaceable"><I>c</I></CODE> is searched in directory <CODECLASS="replaceable"><I>dir</I></CODE>.<CODECLASS="replaceable"><I>c</I></CODE> can be <BCLASS="emphasis.bold">p</B>, <BCLASS="emphasis.bold">0</B>, <BCLASS="emphasis.bold">2</B>, <BCLASS="emphasis.bold">a</B>, <BCLASS="emphasis.bold">b</B>, or <BCLASS="emphasis.bold">l</B>,as explained under <BCLASS="emphasis.bold">-W</B>.  <CODECLASS="replaceable"><I>c</I></CODE> can also be:<DLCLASS="variablelist"><DTCLASS="term"><BCLASS="emphasis.bold">I</B></DT><DDCLASS="listitem"><PCLASS="para">Include files to search last for (see <BCLASS="emphasis.bold">-I</B>). </P></DD><DTCLASS="term"><BCLASS="emphasis.bold">P</B></DT><DDCLASS="listitem"><PCLASS="para">Libraries; <CODECLASS="replaceable"><I>dir</I></CODE> is a list of directories, separated by a colon(see <BCLASS="emphasis.bold">-L</B>).</P></DD><DTCLASS="term"><BCLASS="emphasis.bold">S</B></DT><DDCLASS="listitem"><PCLASS="para">Startup object files.</P></DD></DL>&#13;</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-2268">Example</A></H3><PCLASS="para">Compile <BCLASS="emphasis.bold">xpop.c</B> and link it to the X libraries:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>cc -o xpop xpop.c -lXaw -lXmu -lXt -lX11</B></CODE></PRE></BLOCKQUOTE></P></DIV></DL></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_019.htm"TITLE="Reference: cb"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: cb"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c02_021.htm"TITLE="Reference: cd"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: cd"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">Reference: cb</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">Reference: cd</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>