<HTML><HEAD><TITLE>Reference: test</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:58:57Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch04_06.htm"TITLE="4.6 Built-in Commands (Bourne and Korn Shell)"><LINKREL="prev"HREF="c04_050.htm"TITLE="Reference: suspend"><LINKREL="next"HREF="c04_052.htm"TITLE="Reference: time"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c04_050.htm"TITLE="Reference: suspend"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: suspend"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 4<BR>The Bourne Shell and Korn Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c04_052.htm"TITLE="Reference: time"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: time"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="NUTENTRY"><H2CLASS="nutentry"><ACLASS="term"NAME="AUTOID-19979">test</A></H2><PRECLASS="nutsynopsis"><CODECLASS="userinput"><B>test</B></CODE> <CODECLASS="replaceable"><I>condition</I></CODE>     or <CODECLASS="userinput"><B>[</B></CODE> <CODECLASS="replaceable"><I>condition</I></CODE> <CODECLASS="userinput"><B>]</B></CODE></PRE><DLCLASS="nutentrybody"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19989"></A>Evaluate a <CODECLASS="replaceable"><I>condition</I></CODE> and, if its value is true, return a zero exit status; otherwise, return a non-zero exit status. An alternate form of the command uses <BCLASS="emphasis.bold">[ ]</B> rather than the word<CODECLASS="replaceable"><I>test</I></CODE>.  The Korn shell allows an additional form, <BCLASS="emphasis.bold">[[ ]]</B>.<CODECLASS="replaceable"><I>condition</I></CODE> is constructed using the expressions below.  Conditionsare true if the description holds true.  Features that areKorn-shell-specific are marked with a (K).&#13;</P><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-19996">File conditions</A></H3><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term">-a <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists.  (K)</P></DD><DTCLASS="term">-b <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a block special file.</P></DD><DTCLASS="term">-c <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a character special file.</P></DD><DTCLASS="term">-d <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a directory.</P></DD><DTCLASS="term">-f <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a regular file.</P></DD><DTCLASS="term">-G <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and its group is the effective group ID.  (K)</P></DD><DTCLASS="term">-g <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and its set-group-id bit is set.</P></DD><DTCLASS="term">-k <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and its sticky bit is set.</P></DD><DTCLASS="term">-L <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a symbolic link.  (K)</P></DD><DTCLASS="term">-O <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and its owner is the effective user ID.  (K)</P></DD><DTCLASS="term">-o <CODECLASS="replaceable"><I>c</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Option <CODECLASS="replaceable"><I>c</I></CODE> is on.  (K)</P></DD><DTCLASS="term">-p <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a named pipe (fifo).</P></DD><DTCLASS="term">-r <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is readable.</P></DD><DTCLASS="term">-S <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is a socket.  (K)</P></DD><DTCLASS="term">-s <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and has a size greater than zero.</P></DD><DTCLASS="term">-t [<CODECLASS="replaceable"><I>n</I></CODE>]</DT><DDCLASS="listitem"><PCLASS="para">The open file descriptor <CODECLASS="replaceable"><I>n</I></CODE> is associated with a terminal device;default <CODECLASS="replaceable"><I>n</I></CODE> is 1.</P></DD><DTCLASS="term">-u <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and its set-user-id bit is set.</P></DD><DTCLASS="term">-w <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is writable.</P></DD><DTCLASS="term">-x <CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>file</I></CODE> exists and is executable.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>f1</I></CODE>  -ef <CODECLASS="replaceable"><I>f2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Files <CODECLASS="replaceable"><I>f1</I></CODE> and <CODECLASS="replaceable"><I>f2</I></CODE> are linked (refer to same file).  (K)</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>f1</I></CODE>  -nt <CODECLASS="replaceable"><I>f2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">File <CODECLASS="replaceable"><I>f1</I></CODE> is newer than <CODECLASS="replaceable"><I>f2</I></CODE>.  (K)</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>f1</I></CODE>  -ot <CODECLASS="replaceable"><I>f2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">File <CODECLASS="replaceable"><I>f1</I></CODE> is older than <CODECLASS="replaceable"><I>f2</I></CODE>.  (K)</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-20139">String conditions</A></H3><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term">-n <CODECLASS="replaceable"><I>s1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">String <CODECLASS="replaceable"><I>s1</I></CODE> has non-zero length.</P></DD><DTCLASS="term">-z <CODECLASS="replaceable"><I>s1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">String <CODECLASS="replaceable"><I>s1</I></CODE> has zero length.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>s1</I></CODE> = <CODECLASS="replaceable"><I>s2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Strings <CODECLASS="replaceable"><I>s1</I></CODE> and <CODECLASS="replaceable"><I>s2</I></CODE> are identical.In the Korn shell, <CODECLASS="replaceable"><I>s2</I></CODE> can be a regular expression.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>s1</I></CODE> != <CODECLASS="replaceable"><I>s2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Strings <CODECLASS="replaceable"><I>s1</I></CODE> and <CODECLASS="replaceable"><I>s2</I></CODE> are <CODECLASS="replaceable"><I>not</I></CODE> identical.In the Korn shell, <CODECLASS="replaceable"><I>s2</I></CODE> can be a regular expression.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>s1</I></CODE> &lt; <CODECLASS="replaceable"><I>s2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">ASCII value of <CODECLASS="replaceable"><I>s1</I></CODE> precedes that of <CODECLASS="replaceable"><I>s2</I></CODE>.(Valid only within <BCLASS="emphasis.bold">[[ ]]</B> construct).  (K)</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>s1</I></CODE> &gt; <CODECLASS="replaceable"><I>s2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">ASCII value of <CODECLASS="replaceable"><I>s1</I></CODE> follows that of <CODECLASS="replaceable"><I>s2</I></CODE>.(Valid only within <BCLASS="emphasis.bold">[[ ]]</B> construct).  (K)</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>string</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>string</I></CODE> is not null.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-20198">Integer comparisons</A></H3><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -eq <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> equals <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -ge <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> is greater than or equal to <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -gt <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> is greater than <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -le <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> is less than or equal to <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -lt <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> is less than <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>n1</I></CODE>  -ne <CODECLASS="replaceable"><I>n2</I></CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="replaceable"><I>n1</I></CODE> does not equal <CODECLASS="replaceable"><I>n2</I></CODE>.</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-20250">Combined forms</A></H3><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term">(<CODECLASS="replaceable"><I>condition</I></CODE>)</DT><DDCLASS="listitem"><PCLASS="para">True if <CODECLASS="replaceable"><I>condition</I></CODE> is true (used for grouping).The <BCLASS="emphasis.bold">( )</B>'s should be preceded by a <CODECLASS="literal">\</CODE>.</P></DD><DTCLASS="term">&quot;!</DT><DDCLASS="listitem"><PCLASS="para">True if <CODECLASS="replaceable"><I>condition</I></CODE> is false.</P></DD><DTCLASS="term">&quot;<CODECLASS="replaceable"><I>condition1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">True if both conditions are true.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>condition1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">True if both conditions are true.(Valid only within <BCLASS="emphasis.bold">[[ ]]</B> construct.)  (K)</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>condition1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">True if either condition is true.</P></DD><DTCLASS="term"><CODECLASS="replaceable"><I>condition1</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">True if either condition is true.(Valid only within <BCLASS="emphasis.bold">[[ ]]</B> construct.)  (K)&#13;</P></DD></DL></DIV><DIVCLASS="refsect2"><H3CLASS="refsect2"><ACLASS="title"NAME="AUTOID-20289">Examples</A></H3><PCLASS="para">Each example below shows the first line of various statementsthat might use a test condition:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">while test $# -gt 0	<ICLASS="lineannotation">While there are arguments ...</I>while [ -n &quot;$1&quot; ]	<ICLASS="lineannotation">While there are nonempty arguments ...</I>if [ $count -lt 10 ]	<ICLASS="lineannotation">If</I><CODECLASS="literal"> $count </CODE>is less than 10 ...if [ -d RCS ]	<ICLASS="lineannotation">If the RCS directory exists ...</I>if [ &quot;$answer&quot; != &quot;y&quot; ]	<ICLASS="lineannotation">If the answer is not </I><CODECLASS="literal"> y</CODE> ...if [ ! -r &quot;$1&quot; -o ! -f &quot;$1&quot; ]	<ICLASS="lineannotation">If the first argument is not a</I>	<ICLASS="lineannotation">readable file or a regular file ...</I></PRE></BLOCKQUOTE></P></DIV></DL></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c04_050.htm"TITLE="Reference: suspend"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: Reference: suspend"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="NUTENTRY"HREF="c04_052.htm"TITLE="Reference: time"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: Reference: time"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">Reference: suspend</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">Reference: time</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>