<HTML><HEAD><TITLE>[Chapter 4] 4.2 Syntax</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:58:32Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch04_01.htm"TITLE="4. The Bourne Shell and Korn Shell"><LINKREL="prev"HREF="ch04_01.htm"TITLE="4.1 Overview of Features"><LINKREL="next"HREF="ch04_03.htm"TITLE="4.3 Variables"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_01.htm"TITLE="4.1 Overview of Features"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 4.1 Overview of Features"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 4<BR>The Bourne Shell and Korn Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_03.htm"TITLE="4.3 Variables"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.3 Variables"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UNUT-CH-4-SECT-2">4.2 Syntax</A></H2><PCLASS="para">This subsection describes the many symbols peculiar tothe Bourne and Korn shell.  The topics are arranged as follows:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Special files </P></LI><LICLASS="listitem"><PCLASS="para">Filename metacharacters </P></LI><LICLASS="listitem"><PCLASS="para">Quoting</P></LI><LICLASS="listitem"><PCLASS="para">Command forms</P></LI><LICLASS="listitem"><PCLASS="para">Redirection forms</P></LI><LICLASS="listitem"><PCLASS="para">Coprocesses (Korn shell only)</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.1">4.2.1 Special Files</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17070"></A><ACLASS="indexterm"NAME="AUTOID-17072"></A><ACLASS="indexterm"NAME="AUTOID-17074"></A><ACLASS="indexterm"NAME="AUTOID-17076"></A><ACLASS="indexterm"NAME="AUTOID-17078"></A><ACLASS="indexterm"NAME="AUTOID-17081"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">/etc/profile</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Executed automatically at login.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$HOME/.profile</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Executed automatically at login. </P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">/etc/passwd</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Source of home directories for <BCLASS="emphasis.bold">~</B><CODECLASS="replaceable"><I>name</I></CODE> abbreviations.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$ENV</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Specifies the name of a file to read when a new Korn shell is created.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.2">4.2.2 Filename Metacharacters</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17112"></A><ACLASS="indexterm"NAME="AUTOID-17116"></A><ACLASS="indexterm"NAME="AUTOID-17119"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any string of zero or more characters.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">?</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any single character.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[<CODECLASS="replaceable"><I>abc</I></CODE>...]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any one of the enclosed characters; a hyphen can be used to specify a range (e.g., a-z, A-Z, 0-9).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">[!<CODECLASS="replaceable"><I>abc</I></CODE>...]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any character <CODECLASS="replaceable"><I>not</I></CODE> enclosed as above.</P></TD></TR></TBODY></TABLE><PCLASS="para">In the Korn shell:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">?(<CODECLASS="replaceable"><I>pattern</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match zero or one instance of <CODECLASS="replaceable"><I>pattern</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">*(<CODECLASS="replaceable"><I>pattern</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match zero or more instances of <CODECLASS="replaceable"><I>pattern</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">+(<CODECLASS="replaceable"><I>pattern</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match one or more instance of <CODECLASS="replaceable"><I>pattern</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">@(<CODECLASS="replaceable"><I>pattern</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match exactly one instance of <CODECLASS="replaceable"><I>pattern</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">!(<CODECLASS="replaceable"><I>pattern</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any strings that don't contain <CODECLASS="replaceable"><I>pattern</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">~</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HOME directory of the current user. </P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">~<CODECLASS="replaceable"><I>name</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HOME directory of user <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">~+</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Current working directory (PWD).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">~-</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Previous working directory (OLDPWD).</P></TD></TR></TBODY></TABLE><PCLASS="para">The <CODECLASS="replaceable"><I>pattern</I></CODE> above can be a sequence of patterns separated by <BCLASS="emphasis.bold">|</B>,meaning that the match applies to any of the patterns.This extended syntax resembles that available to<BCLASS="emphasis.bold">egrep</B> and <BCLASS="emphasis.bold">awk</B>.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.2.1">4.2.2.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>ls new*</B></CODE>	<ICLASS="lineannotation">List</I> new <ICLASS="lineannotation">and</I> new.1.$ <CODECLASS="userinput"><B>cat ch?</B></CODE>	<ICLASS="lineannotation">Match</I> ch9 <ICLASS="lineannotation">but not</I> ch10.$ <CODECLASS="userinput"><B>vi [D-R]*</B></CODE>	<ICLASS="lineannotation">Match files that begin with uppercase D through R.</I>$ <CODECLASS="userinput"><B>cp !(Junk*|Temp*)*.c ..</B></CODE>	<ICLASS="lineannotation">Korn shell only.  Copy C source files		except for <CODECLASS="literal">Junk</CODE> and <CODECLASS="literal">Temp</CODE> files.</I></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.3">4.2.3 Quoting</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17234"></A>Quoting disables a character's special meaning andallows it to be used literally, as itself.The following characters have special meaning to the Bourne andKorn shells:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">;</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Command separator.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&amp;</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Background execution.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(  )</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Command grouping.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">|</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Pipe.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&gt; &lt; &amp;</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Redirection symbols.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">* ? [ ] ~ + - @ !</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Filename metacharacters.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&quot; ' \</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Used in quoting other characters.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">`</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Command substitution.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Variable substitution (or command substitution).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">newlinespacetab</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Word separators.</P></TD></TR></TBODY></TABLE><PCLASS="para">The characters below can be used for quoting:</P><DLCLASS="variablelist"><DTCLASS="term">&quot; &quot; </DT><DDCLASS="listitem"><PCLASS="para">Everything between <BCLASS="emphasis.bold">&quot;</B> and <BCLASS="emphasis.bold">&quot;</B> is taken literally, except for the following characters that keep their special meaning:<DLCLASS="variablelist"><DTCLASS="term">$</DT><DDCLASS="listitem"><PCLASS="para">Variable substitution will occur.</P></DD><DTCLASS="term">`</DT><DDCLASS="listitem"><PCLASS="para">Command substitution will occur.</P></DD><DTCLASS="term">&quot;</DT><DDCLASS="listitem"><PCLASS="para">This marks the end of the double quote.</P></DD></DL>&#13;</P></DD><DTCLASS="term"><CODECLASS="literal">' '</CODE></DT><DDCLASS="listitem"><PCLASS="para">Everything between <CODECLASS="literal">'</CODE> and <CODECLASS="literal">'</CODE> is taken literally except for another <CODECLASS="literal">'</CODE>.</P></DD><DTCLASS="term"><CODECLASS="literal">\</CODE></DT><DDCLASS="listitem"><PCLASS="para">The character following a <BCLASS="emphasis.bold">\</B> is taken literally.Use within <BCLASS="emphasis.bold">&quot; &quot;</B> to escape <BCLASS="emphasis.bold">&quot;</B>, <BCLASS="emphasis.bold">$</B>, and <BCLASS="emphasis.bold">`</B>.Often used to escape itself, spaces, or newlines.</P></DD></DL><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.3.1">4.2.3.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>echo 'Single quotes &quot;protect&quot; double quotes'</B></CODE>Single quotes &quot;protect&quot; double quotes$ <CODECLASS="userinput"><B>echo &quot;Well, isn't that \&quot;special\&quot;?&quot;</B></CODE>Well, isn't that &quot;special&quot;?$ <CODECLASS="userinput"><B>echo &quot;You have `ls|wc -l` files in `pwd`&quot;</B></CODE>You have      43 files in /home/bob$ <CODECLASS="userinput"><B>echo &quot;The value of \$x is $x&quot;</B></CODE>The value of $x is 100</PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.4">4.2.4 Command Forms</A></H3><ACLASS="indexterm"NAME="AUTOID-17339"></A><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &amp;</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute <CODECLASS="replaceable"><I>cmd</I></CODE> in background.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> ; <CODECLASS="replaceable"><I>cmd2</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Command sequence; execute multiple <CODECLASS="replaceable"><I>cmd</I></CODE>s on the same line.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(<CODECLASS="replaceable"><I>cmd1</I></CODE> ; <CODECLASS="replaceable"><I>cmd2</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Subshell; treat <CODECLASS="replaceable"><I>cmd1</I></CODE> and <CODECLASS="replaceable"><I>cmd2</I></CODE> as a command group.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> | <CODECLASS="replaceable"><I>cmd2</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Pipe; use output from <CODECLASS="replaceable"><I>cmd1</I></CODE> as input to <CODECLASS="replaceable"><I>cmd2</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> `<CODECLASS="replaceable"><I>cmd2</I></CODE>`</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Command substitution; use <CODECLASS="replaceable"><I>cmd2</I></CODE> output as arguments to <CODECLASS="replaceable"><I>cmd1</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> $(<CODECLASS="replaceable"><I>cmd2</I></CODE>)</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Korn-shell command substitution; nesting is allowed.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> &amp;&amp; <CODECLASS="replaceable"><I>cmd2</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">AND; execute <CODECLASS="replaceable"><I>cmd1</I></CODE> and then (if <CODECLASS="replaceable"><I>cmd1</I></CODE> succeeds) <CODECLASS="replaceable"><I>cmd2</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> || <CODECLASS="replaceable"><I>cmd2</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">OR; execute either <CODECLASS="replaceable"><I>cmd1</I></CODE> or (if <CODECLASS="replaceable"><I>cmd1</I></CODE> fails) <CODECLASS="replaceable"><I>cmd2</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">{ <CODECLASS="replaceable"><I>cmd1</I></CODE> ; <CODECLASS="replaceable"><I>cmd2</I></CODE> }</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Execute commands in the current shell.</P></TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.4.1">4.2.4.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>nroff file &amp;</B></CODE>	<ICLASS="lineannotation">Format in the background.</I>$ <CODECLASS="userinput"><B>cd; ls</B></CODE>	<ICLASS="lineannotation">Execute sequentially.</I>$ <CODECLASS="userinput"><B>(date; who; pwd) &gt; logfile</B></CODE>	<ICLASS="lineannotation">All output is redirected.</I>$ <CODECLASS="userinput"><B>sort file | pr -3 | lp</B></CODE>		<ICLASS="lineannotation">Sort file, page output, then print.</I>$ <CODECLASS="userinput"><B>vi `grep -l ifdef *.c`</B></CODE>		<ICLASS="lineannotation">Edit files found by grep.</I>$ <CODECLASS="userinput"><B>egrep '(yes|no)' `cat list`</B></CODE>	<ICLASS="lineannotation">Specify a list of files to search.</I>$ <CODECLASS="userinput"><B>egrep '(yes|no)' $(cat list)</B></CODE>	<ICLASS="lineannotation">Korn shell version of previous.</I>$ <CODECLASS="userinput"><B>egrep '(yes|no)' $(&lt;list)</B></CODE>	<ICLASS="lineannotation">Same, but faster.</I>$ <CODECLASS="userinput"><B>grep XX file &amp;&amp; lp file</B></CODE>		<ICLASS="lineannotation">Print file if it contains the pattern,</I>$ <CODECLASS="userinput"><B>grep XX file || echo &quot;XX not found&quot;</B></CODE>	<ICLASS="lineannotation">otherwise, echo an error message.</I></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.5">4.2.5 Redirection Forms</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17448"></A></P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">File</EM></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Common</EM></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Typical</EM></P></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Descriptor</EM></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Name</EM></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Abbreviation</EM></P></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><EMCLASS="emphasis">Default</EM></P></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Standard Input</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">stdin</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Keyboard</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Standard Output</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">stdout</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Terminal</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">2</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Standard Error</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">stderr</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Terminal</P></TD></TR></TBODY></TABLE><PCLASS="para">The usual input source or output destination canbe changed as follows:</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.5.1">4.2.5.1 Simple Redirection</A></H4><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt; <CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to <CODECLASS="replaceable"><I>file</I></CODE> (overwrite).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&gt; <CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to <CODECLASS="replaceable"><I>file</I></CODE> (append).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt; <CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Take input for <CODECLASS="replaceable"><I>cmd</I></CODE> from <CODECLASS="replaceable"><I>file</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt;&lt; <CODECLASS="replaceable"><I>text</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read standard input up to a line identical to <CODECLASS="replaceable"><I>text</I></CODE> (<CODECLASS="replaceable"><I>text</I></CODE> can be stored in a shell variable).  Input is usually typed on the screen or in the shell program.  Commands that typically use this syntax include <BCLASS="emphasis.bold">cat</B>, <BCLASS="emphasis.bold">echo</B>, <BCLASS="emphasis.bold">ex</B>, and <BCLASS="emphasis.bold">sed</B>.  (If &lt;&lt;- is used, leading tabs are ignored when comparing input with end-of-input <CODECLASS="replaceable"><I>text</I></CODE> marker.)  This command form is sometimes called a &quot;Here&quot; document.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.5.2">4.2.5.2 Redirection Using File Descriptors</A></H4><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&amp;<CODECLASS="replaceable"><I>n</I></CODE> </P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send <CODECLASS="replaceable"><I>cmd</I></CODE> output to file descriptor <CODECLASS="replaceable"><I>n</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> <CODECLASS="replaceable"><I>m</I></CODE>&gt;&amp;<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Same, except that output that would normally go to file descriptor <CODECLASS="replaceable"><I>m</I></CODE> is sent to file descriptor <CODECLASS="replaceable"><I>n</I></CODE> instead.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&amp;-</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Close standard output.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt;&amp;<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Take input for <CODECLASS="replaceable"><I>cmd</I></CODE> from file descriptor <CODECLASS="replaceable"><I>n</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> <CODECLASS="replaceable"><I>m</I></CODE>&lt;&amp;<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Same, except that input that would normally come from file descriptor <CODECLASS="replaceable"><I>m</I></CODE> comes from file descriptor <CODECLASS="replaceable"><I>n</I></CODE> instead.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt;&amp;-</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Close standard input.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.5.3">4.2.5.3 Multiple Redirection</A></H4><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> 2&gt;<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send standard error to <CODECLASS="replaceable"><I>file</I></CODE>; standard output remains the same (e.g., the screen).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt; <CODECLASS="replaceable"><I>file</I></CODE> 2&gt;&amp;1</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send both standard error and standard output to <CODECLASS="replaceable"><I>file</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(<CODECLASS="replaceable"><I>cmd</I></CODE> &gt; <CODECLASS="replaceable"><I>f1</I></CODE>) 2&gt;<CODECLASS="replaceable"><I>f2</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send standard output to file <CODECLASS="replaceable"><I>f1</I></CODE>; standard error to file <CODECLASS="replaceable"><I>f2</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> | tee <CODECLASS="replaceable"><I>files</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to standard output (usually the terminal) and to <CODECLASS="replaceable"><I>files</I></CODE>. (See the example in Section 2 under <BCLASS="emphasis.bold">tee</B>.)</P></TD></TR></TBODY></TABLE><PCLASS="para">No space should appear between file descriptors and a redirection symbol; spacing is optional in the other cases.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.5.4">4.2.5.4 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>cat part1 &gt; book</B></CODE>$ <CODECLASS="userinput"><B>cat part2 part3 &gt;&gt; book</B></CODE>$ <CODECLASS="userinput"><B>mail tim &lt; report</B></CODE>$ <CODECLASS="userinput"><B>sed 's/^/XX /g' &lt;&lt; END_ARCHIVE</B></CODE>&gt; <CODECLASS="userinput"><B>This is often how a shell archive is &quot;wrapped&quot;,</B></CODE>&gt; <CODECLASS="userinput"><B>bundling text for distribution.  You would normally</B></CODE>&gt; <CODECLASS="userinput"><B>run sed from a shell program, not from the command line.</B></CODE>&gt; <CODECLASS="userinput"><B>END_ARCHIVE</B></CODE>XX This is often how a shell archive is &quot;wrapped&quot;,XX bundling text for distribution.  You would normallyXX run sed from a shell program, not from the command line.</PRE></BLOCKQUOTE></P><PCLASS="para">To redirect standard output to standard error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>echo &quot;Usage error:  see administrator&quot; 1&gt;&amp;2</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The following command willsend output (files found) to <BCLASS="emphasis.bold">filelist</B> and send errormessages (inaccessible files) to file <BCLASS="emphasis.bold">no_access</B>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>(find / -print &gt; filelist) 2&gt;no_access</B></CODE></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.6">4.2.6 Coprocesses</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17676"></A><ACLASS="indexterm"NAME="AUTOID-17678"></A>Coprocesses are a feature of the Korn shell only.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd1</I></CODE> | <CODECLASS="replaceable"><I>cmd2</I></CODE> |&amp; </P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Coprocess; execute the pipeline in the background.The shell sets up a two-way pipe, allowing redirection ofboth standard input and standard output.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">read -p <CODECLASS="replaceable"><I>var</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read coprocess input into variable <CODECLASS="replaceable"><I>var</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">print -p <CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Write <CODECLASS="replaceable"><I>string</I></CODE> to the coprocess.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt;&amp;p</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Take input for <CODECLASS="replaceable"><I>cmd</I></CODE> from the coprocess.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&amp;p</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to the coprocess.</P></TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-2.6.1">4.2.6.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>ed - memo |&amp;	</B></CODE><ICLASS="lineannotation">Start coprocess.</I><CODECLASS="userinput"><B>print -p /word/	</B></CODE><ICLASS="lineannotation">Send ed command to coprocess.</I><CODECLASS="userinput"><B>read -p search	</B></CODE><ICLASS="lineannotation">Read output of ed command into variable search.</I><CODECLASS="userinput"><B>print &quot;$search&quot;	</B></CODE><ICLASS="lineannotation">Show the line on standard output.</I><CODECLASS="literal">A word to the wise.</CODE></PRE></BLOCKQUOTE></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_01.htm"TITLE="4.1 Overview of Features"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 4.1 Overview of Features"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_03.htm"TITLE="4.3 Variables"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.3 Variables"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">4.1 Overview of Features</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">4.3 Variables</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>