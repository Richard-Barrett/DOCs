<HTML><HEAD><TITLE>[Chapter 4] 4.3 Variables</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:58:33Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch04_01.htm"TITLE="4. The Bourne Shell and Korn Shell"><LINKREL="prev"HREF="ch04_02.htm"TITLE="4.2 Syntax"><LINKREL="next"HREF="ch04_04.htm"TITLE="4.4 Arithmetic Expressions"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_02.htm"TITLE="4.2 Syntax"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 4.2 Syntax"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 4<BR>The Bourne Shell and Korn Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_04.htm"TITLE="4.4 Arithmetic Expressions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.4 Arithmetic Expressions"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UNUT-CH-4-SECT-3">4.3 Variables</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UNUT-CH-4-IX-VARIABLES-SH-AND-KSH-SHELLS"></A><ACLASS="indexterm"NAME="UNUT-CH-4-IX-KSH-KORN-SHELL-VARIABLES"></A><ACLASS="indexterm"NAME="UNUT-CH-4-IX-SH-BOURNE-SHELL-VARIABLES"></A>This subsection describes the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Variable substitution</P></LI><LICLASS="listitem"><PCLASS="para">Built-in shell variables</P></LI><LICLASS="listitem"><PCLASS="para">Other shell variables</P></LI><LICLASS="listitem"><PCLASS="para">Arrays (Korn shell only)</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.1">4.3.1 Variable Substitution</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17756"></A>No spaces should be used in the expressions below.  The colon(<CODECLASS="literal">:</CODE>) is optional; if it's included, <CODECLASS="replaceable"><I>var</I></CODE> must be non-null aswell as set.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><CODECLASS="replaceable"><I>var</I></CODE><BCLASS="emphasis.bold">=</B><CODECLASS="replaceable"><I>value</I></CODE> ...</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Set each variable <CODECLASS="replaceable"><I>var</I></CODE> to a <CODECLASS="replaceable"><I>value</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE><BCLASS="emphasis.bold">}</B></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use value of <CODECLASS="replaceable"><I>var</I></CODE>; braces are optional if <CODECLASS="replaceable"><I>var</I></CODE> is separated.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>:-<CODECLASS="replaceable"><I>value</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use <CODECLASS="replaceable"><I>var</I></CODE> if set; otherwise, use <CODECLASS="replaceable"><I>value</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>:=<CODECLASS="replaceable"><I>value</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use <CODECLASS="replaceable"><I>var</I></CODE> if set; otherwise, use <CODECLASS="replaceable"><I>value</I></CODE>and assign <CODECLASS="replaceable"><I>value</I></CODE> to <CODECLASS="replaceable"><I>var</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>:?<CODECLASS="replaceable"><I>value</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use <CODECLASS="replaceable"><I>var</I></CODE> if set; otherwise, print <CODECLASS="replaceable"><I>value</I></CODE> and exit.If <CODECLASS="replaceable"><I>value</I></CODE> isn't supplied, print the phrase&quot;parameter null or not set.&quot;&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>:+<CODECLASS="replaceable"><I>value</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use <CODECLASS="replaceable"><I>value</I></CODE> if <CODECLASS="replaceable"><I>var</I></CODE> is set; otherwise, use nothing.&#13;</P></TD></TR></TBODY></TABLE><PCLASS="para">In the Korn shell:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${#<CODECLASS="replaceable"><I>var</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use the length of <CODECLASS="replaceable"><I>var</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${#*}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use the number of positional parameters.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${#@}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use the number of positional parameters.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>#<CODECLASS="replaceable"><I>pattern</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use value of <CODECLASS="replaceable"><I>var</I></CODE> after removing <CODECLASS="replaceable"><I>pattern</I></CODE> from the left.Remove the shortest matching piece.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE>##<CODECLASS="replaceable"><I>pattern</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Same as #<CODECLASS="replaceable"><I>pattern</I></CODE>, but remove longest matching piece.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE><CODECLASS="literal">%</CODE><CODECLASS="replaceable"><I>pattern</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use value of <CODECLASS="replaceable"><I>var</I></CODE> after removing <CODECLASS="replaceable"><I>pattern</I></CODE> from the right.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>var</I></CODE><CODECLASS="literal">%%</CODE><CODECLASS="replaceable"><I>pattern</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Same as %<CODECLASS="replaceable"><I>pattern</I></CODE>, but remove longest matching piece.&#13;</P></TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.1.1">4.3.1.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>u=up d=down blank=</B></CODE>	<ICLASS="lineannotation">Assign values to three variables (last is null).</I>$ <CODECLASS="userinput"><B>echo ${u}root</B></CODE>		<ICLASS="lineannotation">Braces are needed here.</I>uproot$ <CODECLASS="userinput"><B>echo ${u-$d}</B></CODE>		<ICLASS="lineannotation">Display value of</I> u <ICLASS="lineannotation">or</I> d; <ICLASS="lineannotation">since</I> u <ICLASS="lineannotation">is set, it is printed.</I>up$ <CODECLASS="userinput"><B>echo ${tmp-`date`}</B></CODE>	<ICLASS="lineannotation">If</I> tmp <ICLASS="lineannotation">is not set, the</I> date <ICLASS="lineannotation">command is executed.</I>Thu Feb  4 15:03:46 EST 1993$ <CODECLASS="userinput"><B>echo ${blank=&quot;no data&quot;}</B></CODE>	blank <ICLASS="lineannotation">is set, so it is printed (a blank line).</I>$ <CODECLASS="userinput"><B>echo ${blank:=&quot;no data&quot;}</B></CODE>	blank <ICLASS="lineannotation">is set but null, so the string is printed</I>no data	$ <CODECLASS="userinput"><B>echo $blank</B></CODE>	blank <ICLASS="lineannotation">now has a new value </I>no data</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.1.2">4.3.1.2 Korn Shell Example</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">tail='${PWD##*/}'	<ICLASS="lineannotation">Take the current directory name and</I>	<ICLASS="lineannotation">remove the longest character string ending with /.</I>	<ICLASS="lineannotation">This removes the leading pathname and leaves the tail.</I></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.2">4.3.2 Built-in Shell Variables</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17911"></A><ACLASS="indexterm"NAME="UNUT-CH-4-IX-SHELL-VARIABLES-SH-AND-KSH-SHELLS"></A><ACLASS="indexterm"NAME="AUTOID-17917"></A>Built-in variables are automatically set by the shell andare typically used inside shell scripts.  Built-in variables can make use of the variable substitution patterns shown above.Note that the <BCLASS="emphasis.bold">$</B> is not actually part of the variable name,although the variable is always referenced this way.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$#</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Number of command-line arguments.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$-</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Options currently in effect (arguments supplied to <BCLASS="emphasis.bold">sh</B> or to <BCLASS="emphasis.bold">set</B>). &#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$?</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Exit value of last executed command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$$</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Process number of current process.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$!</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Process number of last background command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$0</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">First word; that is, command name.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Individual arguments on command line (positional parameters).The Bourne shell allows only nine parameters to be referenceddirectly (<CODECLASS="replaceable"><I>n</I></CODE> = 1-9); the Korn shell allows <CODECLASS="replaceable"><I>n</I></CODE> to begreater than 9 if specified as <BCLASS="emphasis.bold">${</B><CODECLASS="replaceable"><I>n</I></CODE><BCLASS="emphasis.bold">}</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$*</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">All arguments on command line (&quot;<BCLASS="emphasis.bold">$1 $2</B>...&quot;).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&quot;$@&quot;</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">All arguments on command line, individually quoted(&quot;<BCLASS="emphasis.bold">$1</B>&quot; &quot;<BCLASS="emphasis.bold">$2</B>&quot; ...).</P></TD></TR></TBODY></TABLE><PCLASS="para">The Korn shell automatically sets these additional variables:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">$_</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Temporary variable; initialized to pathname of script or program beingexecuted.  Later, stores the last argument of previous command.  Alsostores name of matching MAIL file during mail checks.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">ERRNO</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Error number of last system call that failed.<ACLASS="indexterm"NAME="AUTOID-17994"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">LINENO</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Current line number within the script or function.<ACLASS="indexterm"NAME="AUTOID-18001"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">OLDPWD</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Previous working directory (set by <BCLASS="emphasis.bold">cd</B>).<ACLASS="indexterm"NAME="AUTOID-18009"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">OPTARG</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Name of last option processed by <BCLASS="emphasis.bold">getopts</B>.<ACLASS="indexterm"NAME="AUTOID-18017"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">OPTIND</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Numerical index of OPTARG.<ACLASS="indexterm"NAME="AUTOID-18024"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PPID</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Process number of this shell's parent.<ACLASS="indexterm"NAME="AUTOID-18031"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PWD</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Current working directory (set by <BCLASS="emphasis.bold">cd</B>).<ACLASS="indexterm"NAME="AUTOID-18039"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">RANDOM[=<CODECLASS="replaceable"><I>n</I></CODE>]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Generate a new random number with each reference;<ACLASS="indexterm"NAME="AUTOID-18047"></A>start with integer <CODECLASS="replaceable"><I>n</I></CODE>, if given.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">REPLY</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Default reply used by <BCLASS="emphasis.bold">select</B> and <BCLASS="emphasis.bold">read</B>.<ACLASS="indexterm"NAME="AUTOID-18057"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SECONDS[=<CODECLASS="replaceable"><I>n</I></CODE>]</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Number of seconds since the shell was started,<ACLASS="indexterm"NAME="AUTOID-18065"></A>or, if <CODECLASS="replaceable"><I>n</I></CODE> is given, number of seconds + <CODECLASS="replaceable"><I>n</I></CODE>since the shell started.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.3">4.3.3 Other Shell Variables</A></H3><PCLASS="para">The variables below are not automatically set by the shell.They are typically used in your <BCLASS="emphasis.bold">.profile</B> file,where you can define them to suit your needs.Variables can be assigned values by issuing commands of the form:</P><BLOCKQUOTECLASS="blockquote"><PCLASS="para">$ <CODECLASS="replaceable"><I>variable</I></CODE><BCLASS="emphasis.bold">=</B><CODECLASS="replaceable"><I>value</I></CODE></P></BLOCKQUOTE><PCLASS="para">The list below includes the type of value expected when definingthese variables.  Those that are specific to the Korn shell are markedas (K).</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">CDPATH=<CODECLASS="replaceable"><I>dirs</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Directories searched by <BCLASS="emphasis.bold">cd</B>; allows shortcuts in changing directories;unset by default.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">COLUMNS=<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Screen's column width; used in line edit modes and <BCLASS="emphasis.bold">select</B> lists.<ACLASS="indexterm"NAME="AUTOID-18096"></A><ACLASS="indexterm"NAME="AUTOID-18098"></A></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">EDITOR=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Pathname of line edit mode to turn on<ACLASS="indexterm"NAME="AUTOID-18106"></A><ACLASS="indexterm"NAME="AUTOID-18108"></A>(can end in <BCLASS="emphasis.bold">emacs</B> or <BCLASS="emphasis.bold">vi</B>);used when VISUAL is not set.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">ENV=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Name of script that gets executed at startup;<ACLASS="indexterm"NAME="AUTOID-18118"></A>useful for storing alias and function definitions.For example, <BCLASS="emphasis.bold">ENV=$HOME/.kshrc</B> (like C shell's <BCLASS="emphasis.bold">.cshrc</B>).&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">FCEDIT=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Editor used by <BCLASS="emphasis.bold">fc</B> command (default is <BCLASS="emphasis.bold">/bin/ed</B>).<ACLASS="indexterm"NAME="AUTOID-18130"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">FPATH=<CODECLASS="replaceable"><I>dirs</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Directories to search for function definitions;<ACLASS="indexterm"NAME="AUTOID-18138"></A>undefined functions are set via <BCLASS="emphasis.bold">typeset -fu</B>;FPATH is searched when these functions are first referenced.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HISTFILE=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18147"></A>(K) File in which to store command history(must be set before <BCLASS="emphasis.bold">ksh</B> is started);default is <BCLASS="emphasis.bold">$HOME/.sh_history</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HISTSIZE=<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18157"></A>(K) Number of history commands available(must be set before <BCLASS="emphasis.bold">ksh</B> is started);default is 128.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">HOME=<CODECLASS="replaceable"><I>dir</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Home directory; set by <BCLASS="emphasis.bold">login</B> (from <BCLASS="emphasis.bold">passwd</B> file).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18171"></A>IFS='<CODECLASS="replaceable"><I>chars</I></CODE>'</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Internal field separators; default is space, tab, and newline.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18179"></A>LANG=<CODECLASS="replaceable"><I>dir</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Directory to use for certain language-dependent programs.<ACLASS="indexterm"NAME="AUTOID-18184"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">LINES=<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Screen's line length; used for <BCLASS="emphasis.bold">select</B> lists.<ACLASS="indexterm"NAME="AUTOID-18193"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">MAIL=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Default file in which to receive mail; set by <BCLASS="emphasis.bold">login</B>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18205"></A>MAILCHECK=<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Number of seconds between mail checks; default is 10 minutes.<ACLASS="indexterm"NAME="AUTOID-18210"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">MAILPATH=<CODECLASS="replaceable"><I>files</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">One or more files, delimited by a colon, in which to receive mail.  Each <ACLASS="indexterm"NAME="AUTOID-18218"></A>fileis printed.  The Korn shell prompt is <BCLASS="emphasis.bold">?</B> and the default messageis <CODECLASS="replaceable"><I>You have mail in $_</I></CODE>.  The Bourne shell prompt is <BCLASS="emphasis.bold">%</B> andthe default message is <CODECLASS="replaceable"><I>You have mail</I></CODE>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PATH=<CODECLASS="replaceable"><I>dir</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">One or more pathnames, delimited by a colon, in which to search<ACLASS="indexterm"NAME="AUTOID-18230"></A>for commands to execute;default is <BCLASS="emphasis.bold">/usr/bin</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PS1=<CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Primary prompt string; default is <BCLASS="emphasis.bold">$</B>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18243"></A>PS2=<CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Secondary prompt (used in multi-line commands); default is <BCLASS="emphasis.bold">&gt;</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PS3=<CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Prompt string in <BCLASS="emphasis.bold">select</B> loops; default is <BCLASS="emphasis.bold">#?</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">PS4=<CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">(K) Prompt string for execution trace (<BCLASS="emphasis.bold">ksh -x</B> or <BCLASS="emphasis.bold">set -x</B>);default is <BCLASS="emphasis.bold">+</B>.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SHACCT=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">&quot;Shell account&quot;; file in which to log executed shell scripts.<ACLASS="indexterm"NAME="AUTOID-18272"></A>Not in Korn shell.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">SHELL=<CODECLASS="replaceable"><I>file</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Name of shell environment (e.g., <BCLASS="emphasis.bold">/bin/sh</B>).<ACLASS="indexterm"NAME="AUTOID-18281"></A>&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">TERM=<CODECLASS="replaceable"><I>string</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Terminal type.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18292"></A>TMOUT=<CODECLASS="replaceable"><I>n</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18297"></A>(K) If no command is typed after <CODECLASS="replaceable"><I>n</I></CODE> seconds, exit the shell.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">VISUAL=<CODECLASS="replaceable"><I>path</I></CODE></P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18306"></A>(K) Same as EDITOR, but VISUAL is checked first.&#13;</P></TD></TR></TBODY></TABLE><ACLASS="indexterm"NAME="AUTOID-18308"></A></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-4-SECT-3.4">4.3.4 Arrays</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18312"></A>The Korn shell supports one-dimensional arrays of up to 1024 elements.The first element is numbered 0.An array <CODECLASS="replaceable"><I>name</I></CODE> can be initialized as follows:</P><BLOCKQUOTECLASS="blockquote"><PCLASS="para"><BCLASS="emphasis.bold">set  -A  </B><CODECLASS="replaceable"><I>name  value0  value1 ...</I></CODE></P></BLOCKQUOTE><PCLASS="para">where the specified values become elements of <CODECLASS="replaceable"><I>name</I></CODE>.Declaring arrays is not required, however.  Any valid reference toa subscripted variable can create an array.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18323"></A>When referencing arrays, you can use the <BCLASS="emphasis.bold">${</B> ... <BCLASS="emphasis.bold">}</B> syntax.This isn't needed when referencing arrays inside <BCLASS="emphasis.bold">((  ))</B> (the form of <BCLASS="emphasis.bold">let</B> that does automatic quoting).Note that <BCLASS="emphasis.bold">[</B> and <BCLASS="emphasis.bold">]</B> are typed literally (i.e., they don't stand for optional syntax).</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>name</I></CODE>[<CODECLASS="replaceable"><I>i</I></CODE>]}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use element <CODECLASS="replaceable"><I>i</I></CODE> of array <CODECLASS="replaceable"><I>name</I></CODE>.<CODECLASS="replaceable"><I>i</I></CODE> can be any arithmetic expression as described under <BCLASS="emphasis.bold">let</B>.The expression must return a value between 0 and 1023.&#13;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>name</I></CODE>[*]}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use all elements of array <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>name</I></CODE>}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use element 0 of array <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${<CODECLASS="replaceable"><I>name</I></CODE>[*]}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use all elements in array <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${#<CODECLASS="replaceable"><I>name</I></CODE>[*]}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use the number of elements in array <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">${#<CODECLASS="replaceable"><I>name</I></CODE>[@]}</P></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Use the number of elements in array <CODECLASS="replaceable"><I>name</I></CODE>.</P></TD></TR></TBODY></TABLE><ACLASS="indexterm"NAME="AUTOID-18380"></A><ACLASS="indexterm"NAME="AUTOID-18381"></A><ACLASS="indexterm"NAME="AUTOID-18382"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_02.htm"TITLE="4.2 Syntax"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 4.2 Syntax"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch04_04.htm"TITLE="4.4 Arithmetic Expressions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 4.4 Arithmetic Expressions"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">4.2 Syntax</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">4.4 Arithmetic Expressions</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>