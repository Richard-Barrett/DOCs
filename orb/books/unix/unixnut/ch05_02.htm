<HTML><HEAD><TITLE>[Chapter 5] 5.2 Syntax</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:59:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch05_01.htm"TITLE="5. The C Shell"><LINKREL="prev"HREF="ch05_01.htm"TITLE="5.1 Overview of Features"><LINKREL="next"HREF="ch05_03.htm"TITLE="5.3 Variables"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_01.htm"TITLE="5.1 Overview of Features"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.1 Overview of Features"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 5<BR>The C Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 Variables"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.3 Variables"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UNUT-CH-5-SECT-2">5.2 Syntax</A></H2><PCLASS="para">This subsection describes the many symbols peculiar tothe C shell.  The topics are arranged as follows:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Special files </P></LI><LICLASS="listitem"><PCLASS="para">Filename metacharacters </P></LI><LICLASS="listitem"><PCLASS="para">Quoting</P></LI><LICLASS="listitem"><PCLASS="para">Command forms</P></LI><LICLASS="listitem"><PCLASS="para">Redirection forms</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.1">5.2.1 Special Files</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21028"></A><ACLASS="indexterm"NAME="AUTOID-21030"></A><ACLASS="indexterm"NAME="AUTOID-21032"></A><ACLASS="indexterm"NAME="AUTOID-21034"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~/.cshrc</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Executed at each instance of shell.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~/.history</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">History list saved from previous login.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~/.login</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Executed by login shell after <BCLASS="emphasis.bold">.cshrc</B> at login.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~/.logout</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Executed by login shell at logout.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/etc/passwd</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Source of home directories for <BCLASS="emphasis.bold">~</B><CODECLASS="replaceable"><I>name</I></CODE> abbreviations.</TD></TR></TBODY></TABLE><ACLASS="indexterm"NAME="AUTOID-21057"></A><ACLASS="indexterm"NAME="AUTOID-21059"></A></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.2">5.2.2 Filename Metacharacters</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21064"></A><ACLASS="indexterm"NAME="AUTOID-21068"></A><ACLASS="indexterm"NAME="AUTOID-21071"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">*</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Match any string of zero or more characters.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">?</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Match any single character.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">[<CODECLASS="replaceable"><I>abc</I></CODE>...]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Match any one of the enclosed characters; a hyphen can be used tospecify a range (e.g., a-z, A-Z, 0-9).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">{<CODECLASS="replaceable"><I>abc</I></CODE>,<CODECLASS="replaceable"><I>xxx</I></CODE>,...}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Expand each comma-separated string inside braces.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Home directory for the current user. </TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~<CODECLASS="replaceable"><I>name</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Home directory of user <CODECLASS="replaceable"><I>name</I></CODE>.</TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.2.1">5.2.2.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls new*</B></CODE>       <ICLASS="lineannotation">Match</I> new <ICLASS="lineannotation">and</I> new.1.% <CODECLASS="userinput"><B>cat ch?</B></CODE>       <ICLASS="lineannotation">Match</I> ch9 <ICLASS="lineannotation">but not</I> ch10.% <CODECLASS="userinput"><B>vi [D-R]*</B></CODE>     <ICLASS="lineannotation">Match files that begin with uppercase D through R.</I>% <CODECLASS="userinput"><B>ls {ch,app}?</B></CODE>	 <ICLASS="lineannotation">Expand, then match</I> ch1<ICLASS="lineannotation">,</I> ch2<ICLASS="lineannotation">,</I> app1<ICLASS="lineannotation">,</I> app2.% <CODECLASS="userinput"><B>cd ~tom</B></CODE>	 <ICLASS="lineannotation">Change to</I> <CODECLASS="literal">tom</CODE><ICLASS="lineannotation">'s home directory.</I></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.3">5.2.3 Quoting</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21126"></A>Quoting disables a character's special meaning andallows it to be used literally, as itself.The following characters have special meaning to the C shell:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command separator.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&amp;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Background execution.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">(  )</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command grouping.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">|</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pipe.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">* ? [ ] ~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Filename metacharacters.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">{ }</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">String expansion characters.  Usually don't require quoting.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&gt; &lt; &amp; !</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Redirection symbols.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">! ^</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">History substitution, quick substitution.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&quot; ' \</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Used in quoting other characters.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">`</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command substitution.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Variable substitution.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">newline space tab</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Word separators.</TD></TR></TBODY></TABLE><PCLASS="para">The characters below can be used for quoting:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&quot; &quot;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Everything between <CODECLASS="literal">&quot;</CODE> and <CODECLASS="literal">&quot;</CODE> is taken literally, except forthe following characters that keep their special meaning:</P></TD></TR></TBODY></TABLE><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">$</CODE></DT><DDCLASS="listitem"><PCLASS="para">Variable substitution will occur.</P></DD><DTCLASS="term"><CODECLASS="literal">`</CODE></DT><DDCLASS="listitem"><PCLASS="para">Command substitution will occur.</P></DD><DTCLASS="term"><CODECLASS="literal">&quot;</CODE></DT><DDCLASS="listitem"><PCLASS="para">This marks the end of the double quote.</P></DD><DTCLASS="term"><CODECLASS="literal">\</CODE></DT><DDCLASS="listitem"><PCLASS="para">Escape next character.</P></DD><DTCLASS="term"><CODECLASS="literal">!</CODE></DT><DDCLASS="listitem"><PCLASS="para">The history character.</P></DD></DL><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">' '</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Everything between <CODECLASS="literal">'</CODE> and <CODECLASS="literal">'</CODE> is taken literallyexcept for <BCLASS="emphasis.bold">!</B> (history) and another <CODECLASS="literal">'</CODE>, and newline.</P><PCLASS="para"></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">\</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">The character following a <BCLASS="emphasis.bold">\</B> is taken literally.Use within <BCLASS="emphasis.bold">&quot; &quot;</B> to escape <BCLASS="emphasis.bold">&quot;</B>, <BCLASS="emphasis.bold">$</B>, and <BCLASS="emphasis.bold">`</B>.Often used to escape itself, spaces, or newlines.Always needed to escape a history character (usually <BCLASS="emphasis.bold">!</B>).</P><PCLASS="para"></P></TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.3.1">5.2.3.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo 'Single quotes &quot;protect&quot; double quotes'</B></CODE>Single quotes &quot;protect&quot; double quotes% <CODECLASS="userinput"><B>echo &quot;Well, isn't that \&quot;special\&quot;?&quot;</B></CODE>Well, isn't that &quot;special&quot;?% <CODECLASS="userinput"><B>echo &quot;You have `ls|wc -l` files in `pwd`&quot;</B></CODE>You have 43 files in /home/bob% <CODECLASS="userinput"><B>echo &quot;The value of \$x is $x&quot;</B></CODE>The value of $x is 100</PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.4">5.2.4 Command Forms</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21239"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &amp;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Execute <CODECLASS="replaceable"><I>cmd</I></CODE> in background.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> ; <CODECLASS="replaceable"><I>cmd2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command sequence; execute multiple <CODECLASS="replaceable"><I>cmd</I></CODE>s on the same line.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">(<CODECLASS="replaceable"><I>cmd1</I></CODE> ; <CODECLASS="replaceable"><I>cmd2</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Subshell; treat <CODECLASS="replaceable"><I>cmd1</I></CODE> and <CODECLASS="replaceable"><I>cmd2</I></CODE> as a command group.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> | <CODECLASS="replaceable"><I>cmd2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pipe; use output from <CODECLASS="replaceable"><I>cmd1</I></CODE> as input to <CODECLASS="replaceable"><I>cmd2</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> `<CODECLASS="replaceable"><I>cmd2</I></CODE>`</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Command substitution; use <CODECLASS="replaceable"><I>cmd2</I></CODE> output as arguments to <CODECLASS="replaceable"><I>cmd1</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> &amp;&amp; <CODECLASS="replaceable"><I>cmd2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">AND; execute <CODECLASS="replaceable"><I>cmd1</I></CODE> and then (if <CODECLASS="replaceable"><I>cmd1</I></CODE> succeeds) <CODECLASS="replaceable"><I>cmd2</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> || <CODECLASS="replaceable"><I>cmd2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">OR; execute either <CODECLASS="replaceable"><I>cmd1</I></CODE> or (if <CODECLASS="replaceable"><I>cmd1</I></CODE> fails) <CODECLASS="replaceable"><I>cmd2</I></CODE>.</TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.4.1">5.2.4.1 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>nroff file &amp;</B></CODE>	<ICLASS="lineannotation">Format in the background.</I>% <CODECLASS="userinput"><B>cd; ls</B></CODE>	<ICLASS="lineannotation">Execute sequentially.</I>% <CODECLASS="userinput"><B>(date; who; pwd) &gt; logfile</B></CODE>	<ICLASS="lineannotation">All output is redirected.</I>% <CODECLASS="userinput"><B>sort file | pr -3 | lp</B></CODE>	<ICLASS="lineannotation">Sort file, page output, then print.</I>% <CODECLASS="userinput"><B>vi `grep -l ifdef *.c`</B></CODE>	<ICLASS="lineannotation">Edit files found by grep.</I>% <CODECLASS="userinput"><B>egrep '(yes|no)' `cat list`</B></CODE>	<ICLASS="lineannotation">Specify a list of files to search.</I>% <CODECLASS="userinput"><B>grep XX file &amp;&amp; lp file</B></CODE>	<ICLASS="lineannotation">Print file if it contains the pattern,</I>% <CODECLASS="userinput"><B>grep XX file || echo XX not found</B></CODE>	<ICLASS="lineannotation">otherwise, echo an error message.</I></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.5">5.2.5 Redirection Forms</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21316"></A></P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">File</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Common</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Typical</EM></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Descriptor</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Name</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Abbreviation</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Default</EM></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">0</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Standard Input</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">stdin</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Keyboard</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Standard Output</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">stdout</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Terminal</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">2</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Standard Error</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">stderr</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Terminal</TD></TR></TBODY></TABLE><PCLASS="para">The usual input source or output destination canbe changed as follows:</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.5.1">5.2.5.1 Simple Redirection</A></H4><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt; <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to <CODECLASS="replaceable"><I>file</I></CODE> (overwrite).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;! <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as above, even if <BCLASS="emphasis.bold">noclobber</B> is set.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&gt; <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to <CODECLASS="replaceable"><I>file</I></CODE> (append).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&gt;! <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as above, but create <CODECLASS="replaceable"><I>file</I></CODE> even if <BCLASS="emphasis.bold">noclobber</B> is set.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt; <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Take input for <CODECLASS="replaceable"><I>cmd</I></CODE> from <CODECLASS="replaceable"><I>file</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &lt;&lt; <CODECLASS="replaceable"><I>text</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Read standard input up to a line identical to<CODECLASS="replaceable"><I>text</I></CODE> (<CODECLASS="replaceable"><I>text</I></CODE> can be stored in a shellvariable).Input is usually typed on the screen or in the shellprogram. Commands that typically use this syntax include <BCLASS="emphasis.bold">cat</B>, <BCLASS="emphasis.bold">echo</B>, <BCLASS="emphasis.bold">ex</B>, and <BCLASS="emphasis.bold">sed</B>.If <CODECLASS="replaceable"><I>text</I></CODE> is enclosed in quotes, standard input willnot undergo variable substitution, command substitution, etc.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.5.2">5.2.5.2 Multiple Redirection</A></H4><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&amp; <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send both standard output and standard error to <CODECLASS="replaceable"><I>file</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&amp;! <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as above, even if <BCLASS="emphasis.bold">noclobber</B> is set.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&gt;&amp; <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Append standard output and standard error to end of <CODECLASS="replaceable"><I>file</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> &gt;&gt;&amp;! <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as above, but create <CODECLASS="replaceable"><I>file</I></CODE> even if <BCLASS="emphasis.bold">noclobber</B> is set.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd1</I></CODE> |&amp; <CODECLASS="replaceable"><I>cmd2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Pipe standard error together with standard output.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">(<CODECLASS="replaceable"><I>cmd</I></CODE> &gt; <CODECLASS="replaceable"><I>f1</I></CODE>) &gt;&amp; <CODECLASS="replaceable"><I>f2</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Send standard output to file <CODECLASS="replaceable"><I>f1</I></CODE>; standard error to file <CODECLASS="replaceable"><I>f2</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="replaceable"><I>cmd</I></CODE> | tee <CODECLASS="replaceable"><I>files</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Send output of <CODECLASS="replaceable"><I>cmd</I></CODE> to standard output (usually the terminal)and to <CODECLASS="replaceable"><I>files</I></CODE>.  (See the example in Section 2 under <BCLASS="emphasis.bold">tee</B>.)</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-2.5.3">5.2.5.3 Examples</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cat part1 &gt; book</B></CODE>% <CODECLASS="userinput"><B>cat part2 part3 &gt;&gt; book</B></CODE>% <CODECLASS="userinput"><B>mail tim &lt; report</B></CODE>% <CODECLASS="userinput"><B>cc calc.c &gt;&amp; error_out</B></CODE>% <CODECLASS="userinput"><B>cc newcalc.c &gt;&amp;! error_out</B></CODE>% <CODECLASS="userinput"><B>grep UNIX ch* |&amp; pr</B></CODE>% <CODECLASS="userinput"><B>(find / -print &gt; filelist) &gt;&amp; no_access</B></CODE>% <CODECLASS="userinput"><B>sed 's/^/XX /g' &lt;&lt; &quot;END_ARCHIVE&quot;</B></CODE><CODECLASS="userinput"><B>This is often how a shell archive is &quot;wrapped&quot;,</B></CODE><CODECLASS="userinput"><B>bundling text for distribution.  You would normally</B></CODE><CODECLASS="userinput"><B>run sed from a shell program, not from the command line.</B></CODE><CODECLASS="userinput"><B>&quot;END_ARCHIVE&quot;</B></CODE>XX This is often how a shell archive is &quot;wrapped&quot;,XX bundling text for distribution.  You would normallyXX run sed from a shell program, not from the command line.</PRE></BLOCKQUOTE></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_01.htm"TITLE="5.1 Overview of Features"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.1 Overview of Features"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 Variables"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.3 Variables"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">5.1 Overview of Features</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">5.3 Variables</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>