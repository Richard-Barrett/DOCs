<HTML><HEAD><TITLE>[Chapter 5] 5.3 Variables</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:59:13Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch05_01.htm"TITLE="5. The C Shell"><LINKREL="prev"HREF="ch05_02.htm"TITLE="5.2 Syntax"><LINKREL="next"HREF="ch05_04.htm"TITLE="5.4 Expressions"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_02.htm"TITLE="5.2 Syntax"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.2 Syntax"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 5<BR>The C Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_04.htm"TITLE="5.4 Expressions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.4 Expressions"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UNUT-CH-5-SECT-3">5.3 Variables</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UNUT-CH-5-IX-VARIABLES-CSH-SHELL"></A><ACLASS="indexterm"NAME="UNUT-CH-5-IX-CSH-C-SHELL-VARIABLES"></A>This subsection describes the following:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Variable substitution</P></LI><LICLASS="listitem"><PCLASS="para">Variable modifiers</P></LI><LICLASS="listitem"><PCLASS="para">Predefined shell variables</P></LI><LICLASS="listitem"><PCLASS="para">Example <BCLASS="emphasis.bold">.cshrc</B> file</P></LI><LICLASS="listitem"><PCLASS="para">Environment variables</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.1">5.3.1 Variable Substitution</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21500"></A>In the following substitutions, braces (<CODECLASS="literal">{}</CODE>) are optional,except when needed to separate a variable name from following characters that would otherwise be a part of it.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${<CODECLASS="replaceable"><I>var</I></CODE>}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The value of variable <CODECLASS="replaceable"><I>var</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${<CODECLASS="replaceable"><I>var</I></CODE>[<CODECLASS="replaceable"><I>i</I></CODE>]}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Select word or words in position <CODECLASS="replaceable"><I>i</I></CODE> of <CODECLASS="replaceable"><I>var</I></CODE>.<CODECLASS="replaceable"><I>i</I></CODE> can be a single number, a range <CODECLASS="replaceable"><I>m</I></CODE>-<CODECLASS="replaceable"><I>n</I></CODE>,a range <BCLASS="emphasis.bold">-</B><CODECLASS="replaceable"><I>n</I></CODE> (missing <CODECLASS="replaceable"><I>m</I></CODE> implies 1),a range <CODECLASS="replaceable"><I>m</I></CODE><BCLASS="emphasis.bold">-</B> (missing <CODECLASS="replaceable"><I>n</I></CODE> implies all remaining words),or <BCLASS="emphasis.bold">*</B> (select all words).  <CODECLASS="replaceable"><I>i</I></CODE> can also be a variable thatexpands to one of these values.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${#<CODECLASS="replaceable"><I>var</I></CODE>}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The number of words in <CODECLASS="replaceable"><I>var</I></CODE>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${#argv}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The number of arguments.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$0</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Name of the program.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${#argv[<CODECLASS="replaceable"><I>n</I></CODE>]}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Individual arguments on command line (positional parameters).<CODECLASS="replaceable"><I>n</I></CODE> = 1-9.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${<CODECLASS="replaceable"><I>n</I></CODE>}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as <BCLASS="emphasis.bold">${argv[</B><CODECLASS="replaceable"><I>n</I></CODE><BCLASS="emphasis.bold">]}</B>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${#argv[*]}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">All arguments on command line.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$*</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Same as <BCLASS="emphasis.bold">$argv[*]</B>. </TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$argv[$#argv]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The last argument.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">${?<CODECLASS="replaceable"><I>var</I></CODE>}</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Return 1 if <CODECLASS="replaceable"><I>var</I></CODE> is set; 0 if <CODECLASS="replaceable"><I>var</I></CODE> is not set.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Process number of current shell; useful as part of a filenamefor creating temporary files with unique names.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$?0</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Return 1 if input filename is known; 0 if not.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">$&lt;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Read a line from standard input.</TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.1.1">5.3.1.1 Examples</A></H4><PCLASS="para">Sort the third through last arguments (files)and save the output in a unique temporary file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">sort $argv[3-] &gt; tmp.$$</PRE></BLOCKQUOTE></P><PCLASS="para">Process <BCLASS="emphasis.bold">.cshrc</B> commands only if the shell is interactive(i.e., the <BCLASS="emphasis.bold">prompt</B> variable must be set).</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">if ($?prompt) then   <ICLASS="lineannotation">set commands,</I>   <ICLASS="lineannotation">alias commands,</I>   <ICLASS="lineannotation">etc.</I>endif</PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.2">5.3.2 Variable Modifiers</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21596"></A>Except for <BCLASS="emphasis.bold">$?</B><CODECLASS="replaceable"><I>var</I></CODE>, <BCLASS="emphasis.bold">$$</B>, <BCLASS="emphasis.bold">$?0</B>, and <BCLASS="emphasis.bold">$&lt;</B>,the variable substitutions above may be followed by one of thesemodifiers.When braces are used, the modifier goes inside them.</P><DLCLASS="variablelist"><DTCLASS="term">:r</DT><DDCLASS="listitem"><PCLASS="para">Return the variable's root.</P></DD><DTCLASS="term">:e</DT><DDCLASS="listitem"><PCLASS="para">Return the variable's extension.</P></DD><DTCLASS="term">:h</DT><DDCLASS="listitem"><PCLASS="para">Return the variable's header.</P></DD><DTCLASS="term">:t</DT><DDCLASS="listitem"><PCLASS="para">Return the variable's tail.</P></DD><DTCLASS="term">:gr</DT><DDCLASS="listitem"><PCLASS="para">Return all roots.</P></DD><DTCLASS="term">:ge</DT><DDCLASS="listitem"><PCLASS="para">Return all extensions.</P></DD><DTCLASS="term">:gh</DT><DDCLASS="listitem"><PCLASS="para">Return all headers.</P></DD><DTCLASS="term">:gt</DT><DDCLASS="listitem"><PCLASS="para">Return all tails.</P></DD><DTCLASS="term">:q</DT><DDCLASS="listitem"><PCLASS="para">Quote a wordlist variable, keeping the items separate.Useful when the variable contains filename metacharacters that shouldnot be expanded.</P></DD><DTCLASS="term">:x</DT><DDCLASS="listitem"><PCLASS="para">Quote a pattern, expanding it into a wordlist.</P></DD></DL><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.2.1">5.3.2.1 Examples Using Pathname Modifiers</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21647"></A>The table below shows the use of pathname modifiers on the following variable:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">aa=(/progs/num.c /book/chap.ps)</PRE></BLOCKQUOTE></P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Variable Portion</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Specification</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Output Result</EM></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Normal Variable</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/progs/num.c /book/chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Second Root</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa[2]:r</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/book/chap</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Second Header</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa[2]:h</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/book</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Second Tail</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa[2]:t</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Second Extension</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa[2]:e</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Root</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:r</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/progs/num /book/chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Global Root</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:gr</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/progs/num /book/chap</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Header</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:h</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/progs /book/chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Global Header</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:gh</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/progs /book</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Tail</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:t</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">num.c /book/chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Global Tail</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:gt</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">num.c chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Extension</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:e</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">c /book/chap.ps</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Global Extension</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">echo $aa:ge</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">c ps</TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.2.2">5.3.2.2 Examples Using Quoting Modifiers</A></H4><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set a=&quot;[a-z]*&quot; A=&quot;[A-Z]*&quot;</B></CODE>% <CODECLASS="userinput"><B>echo &quot;$a&quot; &quot;$A&quot;</B></CODE>[a-z]* [A-Z]*% <CODECLASS="userinput"><B>echo $a $A</B></CODE>at cc m4 Book Doc% <CODECLASS="userinput"><B>echo $a:x $A</B></CODE>[a-z]* Book Doc% <CODECLASS="userinput"><B>set d=($a:q $A:q)</B></CODE>% <CODECLASS="userinput"><B>echo $d</B></CODE>at cc m4 Book Doc% <CODECLASS="userinput"><B>echo $d:q</B></CODE>[a-z]* [A-Z]*% <CODECLASS="userinput"><B>echo $d[1] +++ $d[2]</B></CODE>at cc m4 +++ Book Doc% <CODECLASS="userinput"><B>echo $d[1]:q</B></CODE>[a-z]*</PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.3">5.3.3 Predefined Shell Variables</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21734"></A><ACLASS="indexterm"NAME="AUTOID-21737"></A><ACLASS="indexterm"NAME="AUTOID-21740"></A>Variables can be set in one of two ways, by assigning a value:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set <CODECLASS="replaceable"><I>var</I></CODE>=<CODECLASS="replaceable"><I>value</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">or by simply turning them on:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set <CODECLASS="replaceable"><I>var</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">In the table below, variables that accept values are shown with the equal sign followed by the type of value they accept;the value is then described.  (Note, however, that variablessuch as <BCLASS="emphasis.bold">argv</B>, <BCLASS="emphasis.bold">cwd</B>, or <BCLASS="emphasis.bold">status</B> are never explicitly assigned.)For variables that are turned onor off, the table describes what they do when set.The C shell automatically sets the variables <BCLASS="emphasis.bold">argv</B>,<BCLASS="emphasis.bold">cwd</B>,<BCLASS="emphasis.bold">home</B>,<BCLASS="emphasis.bold">path</B>,<BCLASS="emphasis.bold">prompt</B>,<BCLASS="emphasis.bold">shell</B>,<BCLASS="emphasis.bold">status</B>,<BCLASS="emphasis.bold">term</B>, and<BCLASS="emphasis.bold">user</B>.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">argv=(<CODECLASS="replaceable"><I>args</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">List of arguments passed to current command; default is <CODECLASS="literal">()</CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">cdpath=(<CODECLASS="replaceable"><I>dirs</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">List of alternate directories to search when locating arguments for<ACLASS="indexterm"NAME="AUTOID-21778"></A><ACLASS="indexterm"NAME="AUTOID-21780"></A><BCLASS="emphasis.bold">cd</B>, <BCLASS="emphasis.bold">popd</B>, or <BCLASS="emphasis.bold">pushd</B>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">cwd=<CODECLASS="replaceable"><I>dir</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Full pathname of current directory.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="indexterm"NAME="AUTOID-21791"></A>echo</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Re-display each command line before execution; same as<ACLASS="indexterm"NAME="AUTOID-21795"></A><BCLASS="emphasis.bold">csh -x</B> command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">fignore=(<CODECLASS="replaceable"><I>chars</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">List of filename suffixes to ignore during <ACLASS="indexterm"NAME="AUTOID-21803"></A>filename completion (see <BCLASS="emphasis.bold">filec</B>).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">filec</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">If set, a filename that is partially-typed on the command line<ACLASS="indexterm"NAME="AUTOID-21810"></A>can be expanded to its full name when ESC is pressed.  If more than one filename would match, type <CODECLASS="replaceable"><I>EOF</I></CODE> to list possible completions.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">hardpaths</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Tell <BCLASS="emphasis.bold">dirs</B> to display the actual pathname<ACLASS="indexterm"NAME="AUTOID-21818"></A>of any directory that is a symbolic link.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">histchars=<CODECLASS="replaceable"><I>ab</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">A two-character string that sets the characters to use<ACLASS="indexterm"NAME="AUTOID-21825"></A>in history-substitution and quick-substitution (default is !^).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">history=<CODECLASS="replaceable"><I>n</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21832"></A>Number of commands to save in history list.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">home=<CODECLASS="replaceable"><I>dir</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Home directory of user, initialized from HOME. <ACLASS="indexterm"NAME="AUTOID-21839"></A>The ~ character is shorthand for this value.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ignoreeof</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21845"></A>Ignore an end-of-file (<CODECLASS="replaceable"><I>EOF</I></CODE>) from terminals;prevents accidental logout.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">mail=(<CODECLASS="replaceable"><I>n file</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21853"></A>One or more files checked for new mail every 5 minutes or(if <CODECLASS="replaceable"><I>n</I></CODE> is supplied) every <CODECLASS="replaceable"><I>n</I></CODE> seconds.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">nobeep</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21861"></A>Don't ring bell for ambiguous file completion (see <BCLASS="emphasis.bold">filec</B>).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">noclobber</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Don't redirect output to an existing file; prevents accidental<ACLASS="indexterm"NAME="AUTOID-21868"></A>destruction of files.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">noglob</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Turn off filename expansion; useful in shell scripts.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><ACLASS="indexterm"NAME="AUTOID-21876"></A>nonomatch</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21880"></A>Treat filename metacharacters as literal characters;e.g., <BCLASS="emphasis.bold">vi&nbsp;&nbsp;ch</B><CODECLASS="userinput"><B>*</B></CODE> creates new file <BCLASS="emphasis.bold">ch</B><CODECLASS="userinput"><B>*</B></CODE> instead of printing ``No match.&quot;</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">notify</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Notify user of completed jobs right away,<ACLASS="indexterm"NAME="AUTOID-21890"></A>instead of waiting for the next prompt.</P><PCLASS="para"></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">path=(<CODECLASS="replaceable"><I>dirs</I></CODE>)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">List of pathnames in which to search for commands to execute.<ACLASS="indexterm"NAME="AUTOID-21898"></A>Initialized from PATH; default is <BCLASS="emphasis.bold">( . /usr/ucb /usr/bin )</B>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">prompt='<CODECLASS="replaceable"><I>str</I></CODE>'</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21906"></A>String that prompts for interactive input; default is <BCLASS="emphasis.bold">%</B>.  </P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">savehist=<CODECLASS="replaceable"><I>n</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Number of history commands to save in<ACLASS="indexterm"NAME="AUTOID-21914"></A><BCLASS="emphasis.bold">~/.history</B> upon logout; they can be accessedat the next login.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">shell=<CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Pathname of the shell program currently in use; default is <BCLASS="emphasis.bold">/bin/csh</B>.<ACLASS="indexterm"NAME="AUTOID-21923"></A></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">status=<CODECLASS="replaceable"><I>n</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Exit status of last command.  Built-in commands return<ACLASS="indexterm"NAME="AUTOID-21931"></A>0 (success) or 1 (failure).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">term=<CODECLASS="replaceable"><I>ID</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Name of terminal type, initialized to <BCLASS="emphasis.bold">/etc/ttytype</B>; same as TERM.<ACLASS="indexterm"NAME="AUTOID-21939"></A></P><PCLASS="para"></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">time='<CODECLASS="replaceable"><I>n</I></CODE> %<CODECLASS="replaceable"><I>c</I></CODE>'</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">If command execution takes more than <CODECLASS="replaceable"><I>n</I></CODE> CPU seconds,<ACLASS="indexterm"NAME="AUTOID-21949"></A>report user time, system time, elapsed time, and CPU percentage.Supply optional <BCLASS="emphasis.bold">%</B><CODECLASS="replaceable"><I>c</I></CODE> flags to show other data.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">user=<CODECLASS="replaceable"><I>name</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Login name of user, initialized from USER.<ACLASS="indexterm"NAME="AUTOID-21958"></A></P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">verbose</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Display a command after history substitution; same as the <ACLASS="indexterm"NAME="AUTOID-21964"></A>command <BCLASS="emphasis.bold">csh -v</B>.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.4">5.3.4 Example .cshrc File</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21970"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># PREDEFINED VARIABLESset path=(~ ~/bin /usr/ucb /bin /usr/bin . )set mail=(/usr/mail/tom)if ($?prompt) then           # settings for interactive use  set echo  set filec  set noclobber ignoreeof  set cdpath=(/usr/lib /usr/spool/uucp)# Now I can type cd macros# instead of cd /usr/lib/macros  set fignore=.o             # ignore object files for filec  set history=100 savehist=25  set prompt='tom \!% '      # includes history number  set time=3# MY VARIABLES  set man1=&quot;/usr/man/man1&quot;     # lets me do   cd $man1, ls $man1  set a=&quot;[a-z]*&quot;               # lets me do   vi $a  set A=&quot;[A-Z]*&quot;               # or           grep string $A# ALIASES  alias c &quot;clear; dirs&quot;        # use quotes to protect ; or |  alias h &quot;history|more&quot;  alias j jobs -l  alias ls ls -sFC             # redefine ls command  alias del 'mv \!* ~/tmp_dir' # a safe alternative to rmendif</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-3.5">5.3.5 Environment Variables</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21977"></A>The C shell maintains a set of <CODECLASS="replaceable"><I>environment variables</I></CODE>,which are distinct from shell variables and aren't really part of the C shell.Shell variables are meaningful only within the current shell, butenvironment variables are automatically exported,making them available globally.For example, C shell variables are accessible only to a particular script in which they're defined, whereasenvironment variables can be usedby any shell scripts, mail utilities, or editors you might invoke.</P><PCLASS="para">Environment variables are assigned as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">setenv <CODECLASS="replaceable"><I>VAR</I></CODE> <CODECLASS="replaceable"><I>value</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">By convention, environment variable names are all uppercase.You can create your own environment variables,or you can use the predefined environment variables below.</P><PCLASS="para">These environment variables have a corresponding C shell variable.  When either one changes, the value is copied to the other:</P><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term">HOME</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21993"></A>Home directory; same as <BCLASS="emphasis.bold">home</B>.</P></DD><DTCLASS="term">PATH</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22000"></A>Search path for commands; same as <BCLASS="emphasis.bold">path</B>.</P></DD><DTCLASS="term">TERM</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22007"></A>Terminal type; same as <BCLASS="emphasis.bold">term</B>.</P></DD><DTCLASS="term">USER</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22014"></A>User name; same as <BCLASS="emphasis.bold">user</B>.&#13;</P></DD></DL><PCLASS="para">Other environment variables include the following:</P><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term">EXINIT</DT><DDCLASS="listitem"><PCLASS="para">A string of ex commands similar to those found in<ACLASS="indexterm"NAME="AUTOID-22024"></A>the startup <CODECLASS="replaceable"><I>.exrc</I></CODE> file (e.g., <BCLASS="emphasis.bold">set ai</B>).Used by vi and ex.</P></DD><DTCLASS="term">LOGNAME</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22032"></A>Another name for the USER variable.</P></DD><DTCLASS="term">MAIL</DT><DDCLASS="listitem"><PCLASS="para">The file that holds mail.  Used by mail programs.<ACLASS="indexterm"NAME="AUTOID-22038"></A>This is not the same as the C shell <BCLASS="emphasis.bold">mail</B> variable,which only checks for new mail.</P></DD><DTCLASS="term">PWD</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22045"></A>The current directory; the value is copied from <BCLASS="emphasis.bold">cwd</B>.</P></DD><DTCLASS="term">SHELL</DT><DDCLASS="listitem"><PCLASS="para">Undefined by default; once initialized to <BCLASS="emphasis.bold">shell</B>,<ACLASS="indexterm"NAME="AUTOID-22053"></A>the two are identical.</P></DD><DTCLASS="term">TERMCAP</DT><DDCLASS="listitem"><PCLASS="para">The file that holds the cursor-positioning codes for your terminal type.<ACLASS="indexterm"NAME="AUTOID-22059"></A>Default is <BCLASS="emphasis.bold">/etc/termcap</B>.<ACLASS="indexterm"NAME="AUTOID-22062"></A><ACLASS="indexterm"NAME="AUTOID-22063"></A></P></DD></DL></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_02.htm"TITLE="5.2 Syntax"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.2 Syntax"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_04.htm"TITLE="5.4 Expressions"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.4 Expressions"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">5.2 Syntax</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">5.4 Expressions</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>