<HTML><HEAD><TITLE>[Chapter 5] 5.4 Expressions</TITLE><METANAME="DC.title"CONTENT="UNIX in a Nutshell: System V Edition"><METANAME="DC.creator"CONTENT="Daniel Gilly &amp; the Staff of O'Reilly &amp; Associates"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-06T21:59:14Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-001-5"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch05_01.htm"TITLE="5. The C Shell"><LINKREL="prev"HREF="ch05_03.htm"TITLE="5.3 Variables"><LINKREL="next"HREF="ch05_05.htm"TITLE="5.5 Command History csh shell"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX in a Nutshell: System V Edition"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,71"HREF="index.htm"ALT="UNIX in a Nutshell: System V Edition"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/usrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 Variables"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.3 Variables"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 5<BR>The C Shell</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_05.htm"TITLE="5.5 Command History csh shell"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.5 Command History csh shell"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UNUT-CH-5-SECT-4">5.4 Expressions</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UNUT-CH-5-IX-EXPRESSIONS-C-SHELL"></A><ACLASS="indexterm"NAME="UNUT-CH-5-IX-CSH-C-SHELL-EXPRESSIONS"></A><ACLASS="indexterm"NAME="UNUT-CH-5-IX-ARITHMETIC-EXPRESSIONS-CSH-SHELL"></A>Expressions are used in <BCLASS="emphasis.bold">@</B>, <BCLASS="emphasis.bold">if</B>, and <BCLASS="emphasis.bold">while</B> statements to perform arithmetic, string comparisons, file testing, etc.<BCLASS="emphasis.bold">exit</B> and <BCLASS="emphasis.bold">set</B> can also specify expressions.Expressions are formed by combining variables and constants withoperators that resemble those in the C programming language.Operator precedence is the same as in C but can be remembered asfollows:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para"><CODECLASS="literal">* / %</CODE></P></LI><LICLASS="listitem"><PCLASS="para"><CODECLASS="literal">+ -</CODE></P></LI></OL><PCLASS="para">Group all other expressions inside ( )'s.Parentheses are required if the expression contains &lt;, &gt;, &amp;, or |.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1">5.4.1 Operators</A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22091"></A>Operators can be one of the following types:</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1.1">5.4.1.1 Assignment Operators</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22096"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Assign value.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">+=  -=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reassign after addition/subtraction.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">*=  /=  %=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reassign after multiplication/division/remainder.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&amp;= ^= |=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reassign after bitwise AND/XOR/OR.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">++</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Increment</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Decrement.</TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1.2">5.4.1.2 Arithmetic Operators</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22122"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">*  /  %</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Multiplication; integer division; modulus (remainder).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">+  -</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Addition; subtraction.</TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1.3">5.4.1.3 Bitwise and Logical Operators</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22136"></A><ACLASS="indexterm"NAME="AUTOID-22138"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Binary inversion (one's complement).</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">!</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Logical negation.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&lt;  &gt;&gt;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bitwise left shift; bitwise right shift.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&amp;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bitwise AND.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">^</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bitwise exclusive OR.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">|</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Bitwise OR. </TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&amp;&amp;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Logical AND.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">||</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Logical OR. </TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">{ <CODECLASS="replaceable"><I>command</I></CODE> }</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Return 1 if command is successful; 0 otherwise.Note that this is the opposite of <CODECLASS="replaceable"><I>command</I></CODE>'s normalreturn code.  The <BCLASS="emphasis.bold">$status</B> variable may be more practical.</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1.4">5.4.1.4 Comparison Operators</A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22177"></A></P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">==  !=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Equality; inequality.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&lt;=  &gt;=</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Less than or equal to; greater than or equal to.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&lt;  &gt;</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Less than; greater than.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">=~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">String on left matches a filename patterncontaining *, ?, or [...].</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">!~</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">String on left does not match a filename patterncontaining *, ?, or [...].</P></TD></TR></TBODY></TABLE></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.1.5">5.4.1.5 File Inquiry Operators</A></H4><PCLASS="para">Command substitution and filename expansion are performed on<ACLASS="indexterm"NAME="AUTOID-22202"></A><CODECLASS="replaceable"><I>file</I></CODE> before the test is performed.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-d <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The file is a directory.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-e <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The file exists.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-f <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The file is a plain file.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-o <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user owns the file.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-r <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user has read permission.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-w <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user has write permission.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-x <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The user has execute permission.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">-z <CODECLASS="replaceable"><I>file</I></CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">The file has zero size.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">!</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Reverse the sense of any inquiry above.</TD></TR></TBODY></TABLE></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UNUT-CH-5-SECT-4.2">5.4.2 Examples</A></H3><PCLASS="para">The following examples show <BCLASS="emphasis.bold">@</B> commands and assume <BCLASS="emphasis.bold">n</B> = 4:</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Expression</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Value of $x</EM></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = ($n &gt; 10 || $n &lt; 5)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = ($n &gt;= 0 &amp;&amp; $n &lt; 3)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">0</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = ($n &lt;&lt; 2)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">16</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = ($n &gt;&gt; 2)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = $n % 2</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">0</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">@ x = $n % 3</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD></TR></TBODY></TABLE><PCLASS="para">The following examples show the first line of <BCLASS="emphasis.bold">if</B> or <BCLASS="emphasis.bold">while</B>statements:</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Expression</EM></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Meaning</EM></TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">while ($#argv != 0)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">While there are arguments ...</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">if ($today[1] == &quot;Fri&quot;)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">If the first word is &quot;Fri&quot;...</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">if ($file !~ *.[<CODECLASS="replaceable"><I>zZ</I></CODE>])</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">If the file doesn't end with <BCLASS="emphasis.bold">.z</B> or <BCLASS="emphasis.bold">.Z</B> ...</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">if ($argv[1] =~ chap?)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">If the first argument is <BCLASS="emphasis.bold">chap</B> followed by a single character...</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">if (-f $argv[1])</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">If the first argument is a plain file...</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">if (! -d $tmpdir)</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">If <BCLASS="emphasis.bold">tmpdir</B> is not a directory...</TD></TR></TBODY></TABLE><ACLASS="indexterm"NAME="AUTOID-22310"></A><ACLASS="indexterm"NAME="AUTOID-22311"></A><ACLASS="indexterm"NAME="AUTOID-22312"></A></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_03.htm"TITLE="5.3 Variables"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 5.3 Variables"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX in a Nutshell: System V Edition"><IMGSRC="../gifs/txthome.gif"ALT="UNIX in a Nutshell: System V Edition"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch05_05.htm"TITLE="5.5 Command History csh shell"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 5.5 Command History csh shell"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">5.3 Variables</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">5.5 Command History csh shell</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../upt/index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>