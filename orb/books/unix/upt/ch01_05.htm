<HTML><HEAD><TITLE>[Chapter 1] 1.5 Anyone Can Program the Shell </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:30:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch01_01.htm"TITLE="1. Introduction"><LINKREL="prev"HREF="ch01_04.htm"TITLE="1.4 Using Pipes to Create a New Tool "><LINKREL="next"HREF="ch01_06.htm"TITLE="1.6 Power Tools for Editing "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_04.htm"TITLE="1.4 Using Pipes to Create a New Tool "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.4 Using Pipes to Create a New Tool "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 1<BR>Introduction</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_06.htm"TITLE="1.6 Power Tools for Editing "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 1.6 Power Tools for Editing "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1003">1.5 Anyone Can Program the Shell </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-895"></A>One of the really wonderful things about the shell is that itdoesn't just read and execute the commands you type at a prompt.The shell is a complete programming language.</P><PCLASS="para">The ease of shell programming is one of the realhighlights of UNIX for novices.A shell program need be no more than a single complex commandline saved in a file&nbsp;- or a series of commands.</P><PCLASS="para">For example, let's say that you occasionally need to convert aMacintosh Microsoft Word file for use on your UNIX system.<ACLASS="indexterm"NAME="AUTOID-900"></A>Word lets you save the file in ASCII format. But there's acatch: the Macintosh uses a carriage return(<SPANCLASS="link">ASCII character 015 (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>)</SPAN>)to mark the end of each line, while UNIX uses a linefeed(ASCII 012). As a result, with UNIX, the file lookslike one long paragraph, with no end in sight.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-905"></A>That's easy to fix: the UNIX<SPANCLASS="link"><EMCLASS="emphasis">tr</EM> (<ACLASS="linkend"HREF="ch35_11.htm"TITLE="Hacking on Characters with tr ">35.11</A>)</SPAN>command can convert everyoccurrence of one character in a file to another:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tr '\015' '\012' &lt;</B></CODE> <CODECLASS="replaceable"><I>file.mac</I></CODE><CODECLASS="userinput"><B> &gt; </B></CODE><CODECLASS="replaceable"><I>file.UNIX</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-917"></A><ACLASS="indexterm"NAME="AUTOID-920"></A><ACLASS="indexterm"NAME="AUTOID-922"></A>But you're a novice, and you don't want to remember thisparticular piece of magic. Fine. Save the first part ofthis command line in a file called <EMCLASS="emphasis">mac2UNIX</EM> in your<SPANCLASS="link">personal <EMCLASS="emphasis">bin</EM> directory (<ACLASS="linkend"HREF="ch04_02.htm"TITLE="A bin Directory for Your Programs and Scripts ">4.2</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">tr '\015' '\012'</PRE></BLOCKQUOTE></P><PCLASS="para">Make the file executable with<SPANCLASS="link"><EMCLASS="emphasis">chmod</EM> (<ACLASS="linkend"HREF="ch22_07.htm"TITLE="Using chmod to Change File Permission ">22.7</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>chmod +x mac2UNIX</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Now you can say:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mac2UNIX &lt; </B></CODE><CODECLASS="replaceable"><I>file.mac</I></CODE><CODECLASS="userinput"><B> &gt; </B></CODE><CODECLASS="replaceable"><I>file.UNIX</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">But say, why settle for that? What if you want to convert abunch of files at once? Easy. The shell includes a general<ACLASS="indexterm"NAME="AUTOID-945"></A><ACLASS="indexterm"NAME="AUTOID-948"></A><ACLASS="indexterm"NAME="AUTOID-950"></A>way of referring to arguments passed to a script, and a numberof looping constructs. The script:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch44_16.htm"TITLE="44.16 Handling Command-Line Arguments with a for Loop ">for</A> <ACLASS="co"HREF="ch06_08.htm"TITLE="6.8 Shell Variables ">$x</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">for xdo    echo &quot;Converting $x&quot;    tr '\015' '\012' &lt; &quot;$x&quot; &gt; &quot;tmp.$x&quot;    mv &quot;tmp.$x&quot; &quot;$x&quot;done</PRE></TD></TR></TABLE></P><PCLASS="para">will convert any number of files with one command, replacingeach original with the converted version:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mac2UNIX</B></CODE> <CODECLASS="replaceable"><I>file1 file2 file3 ...</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">As you become more familiarwith UNIX, it quickly becomes apparent that doingjust a little homework can save hours of tedium.This script incorporates only two simple programming constructs: the<EMCLASS="emphasis">for</EM> loop<ACLASS="indexterm"NAME="AUTOID-964"></A><ACLASS="indexterm"NAME="AUTOID-966"></A>and<SPANCLASS="link">variable substitution (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>, <ACLASS="linkend"HREF="ch06_01.htm#UPT-ART-1170"TITLE="What Environment Variables Are Good For ">6.1</A>)</SPAN>.As a new user, with no programmingexperience, I learned these two constructs by example: I saved a skeleton<EMCLASS="emphasis">for</EM> loop in a file and simplyfilled in the blanks with whatevercommands I wanted to repeat.</P><PCLASS="para">Simple shell programs like this did more for my feeling that computers couldautomate my work than anything since my first introduction to word processing.It made real sense of the line, &quot;Let the computer do the dirty work.&quot;</P><PCLASS="para">In short, UNIX is sometimes difficult because it is so rich and complex.The user who doesn't want to learn the complexity doesn't have to&nbsp;- thebasic housekeeping commands are as simple as MS-DOS on the IBM PC.But the user who wants to take the time to investigate the possibilitiescan uncover a wealth of useful tools.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">TOR</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_04.htm"TITLE="1.4 Using Pipes to Create a New Tool "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.4 Using Pipes to Create a New Tool "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_06.htm"TITLE="1.6 Power Tools for Editing "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 1.6 Power Tools for Editing "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">1.4 Using Pipes to Create a New Tool </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">1.6 Power Tools for Editing </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>