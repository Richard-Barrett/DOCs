<HTML><HEAD><TITLE>[Chapter 1] 1.16 Wildcards </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:31:16Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch01_01.htm"TITLE="1. Introduction"><LINKREL="prev"HREF="ch01_15.htm"TITLE="1.15 Filenames "><LINKREL="next"HREF="ch01_17.htm"TITLE="1.17 Filename Extensions "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_15.htm"TITLE="1.15 Filenames "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.15 Filenames "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 1<BR>Introduction</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_17.htm"TITLE="1.17 Filename Extensions "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 1.17 Filename Extensions "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1009">1.16 Wildcards </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1467"></A>The shells provide a number of <EMCLASS="emphasis">wildcards</EM> that you can use toabbreviate filenames or refer to groups of files. For example, let'ssay you want to delete all filenames in the<SPANCLASS="link">current directory (<ACLASS="linkend"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>)</SPAN>ending in<EMCLASS="emphasis">.txt</EM>. You could delete these files one by one, but that wouldbe boring if there were only five and <EMCLASS="emphasis">very</EM> boring if there were ahundred. Instead, you can use a wildcarded name to say, &quot;I want allfiles whose names end with <EMCLASS="emphasis">.txt</EM>, regardless of whatthe first part is.&quot; The wildcard is the &quot;regardless&quot; part.Like a wildcard in a poker game, a wildcard in a filename can haveany value.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1475"></A><ACLASS="indexterm"NAME="AUTOID-1478"></A>The wildcard you see most often is <CODECLASS="literal">*</CODE> (asterisk), but we'll start withsomething simpler: <CODECLASS="literal">?</CODE> (question mark).When it appears in a filename, the<CODECLASS="literal">?</CODE> matches any single character. For example,<CODECLASS="literal">letter?</CODE> refers to any filename that begins with<EMCLASS="emphasis">letter</EM> and has one character after that. This wouldinclude <EMCLASS="emphasis">letterA</EM>, <EMCLASS="emphasis">letter1</EM>, as well as filenames with anon-printing character as their last letter, like<EMCLASS="emphasis">letter</EM>^C.</P><PCLASS="para">The <CODECLASS="literal">*</CODE> wildcard matches any character or group of zero or morecharacters. For example, <CODECLASS="literal">*.txt</CODE> matches all files whosenames end with <EMCLASS="emphasis">.txt</EM>, <CODECLASS="literal">*.c</CODE> matches all fileswhose names end with <EMCLASS="emphasis">.c</EM> (by convention, source code for programsin the C language), and so on.</P><PCLASS="para">The <CODECLASS="literal">*</CODE> and <CODECLASS="literal">?</CODE> wildcards are sufficient for 90 percent of thesituations that you will find. However, there are some situations thatthey can't handle. For example, you may want to list files whosenames end with <EMCLASS="emphasis">.txt</EM>, <EMCLASS="emphasis">mail</EM>, or <EMCLASS="emphasis">let</EM>. There's no wayto do this with a single <CODECLASS="literal">*</CODE>; it won't let you exclude the files you don'twant. In this situation, use a separate <CODECLASS="literal">*</CODE> with each filename ending:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">*.txt *mail *let</PRE></BLOCKQUOTE></P><PCLASS="para">Sometimes you need to match a particular group of characters.For example,you may want to list all filenames that begin with digits, or allfilenames that begin with uppercase letters. Let's assume that you wantto work with the files <CODECLASS="literal">program.</CODE><CODECLASS="replaceable"><I>n</I></CODE>, where <CODECLASS="replaceable"><I>n</I></CODE> is asingle-digit number. Use the filename:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">program.[0123456789]</PRE></BLOCKQUOTE></P><PCLASS="para">In other words, the wildcard<CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>character-list</I></CODE><CODECLASS="literal">]</CODE>matches anysingle character that appears in the list. The character list can beany group of ASCII characters; however, if they are consecutive (e.g.,A-Z, a-z, 0-9, or 3-5, for that matter), you can use a hyphen asshorthand for the range. For example, <CODECLASS="literal">[a-zA-Z]</CODE> means any alphabeticcharacter.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1517"></A>There is one exception to these wildcarding rules. Wildcardsnever match <CODECLASS="literal">/</CODE>, which is both the name of the<SPANCLASS="link">filesystem root (<ACLASS="linkend"HREF="ch01_19.htm"TITLE="The Tree Structure of the Filesystem ">1.19</A>)</SPAN>andthe character used to separate directory names in a<SPANCLASS="link">path (<ACLASS="linkend"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>)</SPAN>.</P><PCLASS="para">If you are new to computers, you probably will catch on to UNIXwildcarding quickly. If you have used any other computer system, youhave to watch out for one very important detail. Virtually allcomputer systems except for UNIX consider a period (<CODECLASS="literal">.</CODE>) a special<ACLASS="indexterm"NAME="AUTOID-1525"></A>characterwithin a filename. Many operating systems even require a filename tohave a period in it. With these operating systems, a <CODECLASS="literal">*</CODE> does notmatch a period; you have to say <CODECLASS="literal">*.*</CODE>. Therefore, the equivalent of<CODECLASS="literal">rm&nbsp;*</CODE> does virtually nothing on most operating systems. UnderUNIX, it is very dangerous: it means &quot;delete all the files in thecurrent directory, regardless of their name.&quot; You only want to givethis command when you really mean it.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-1532"></A>But here's the exception to the exception. The shells and the <EMCLASS="emphasis">ls</EM>command consider a<CODECLASS="literal">.</CODE> special if it is the first character of a filename. This isoften used to hide initialization files and other files that youaren't normally concerned with; the <EMCLASS="emphasis">ls</EM> command doesn't showthese files unless you<SPANCLASS="link">ask (<ACLASS="linkend"HREF="ch16_11.htm"TITLE="Showing Hidden Files with ls -A and -a ">16.11</A>)</SPAN>for them.If a file's name begins with<CODECLASS="literal">.</CODE>,you always have to type the <CODECLASS="literal">.</CODE> explicitly. Forexample, <CODECLASS="literal">.*rc</CODE> matches all files whose names begin with <CODECLASS="literal">.</CODE>and end with <EMCLASS="emphasis">rc</EM>. This is a common convention for the names ofUNIX initialization files.</P><PCLASS="para">Table 1-1 has a summary of the different sorts of wildcards available.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="UPT-ART-1009-TAB-0">Table 1.1: Shell</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Wildcard</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Matches</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">?</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any single character</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">*</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any group of zero or more characters</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">[ab]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Either a or b</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">[a-z]</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Any character between a and z, inclusive</TD></TR></TBODY></TABLE><PCLASS="para">Wildcards can be used at any point or points within a path.Remember, wildcards only match names that already exist.You can't use them to<SPANCLASS="link">create new files (<ACLASS="linkend"HREF="ch09_04.htm"TITLE="Use Wildcards to Create Files? ">9.4</A>)</SPAN>-though some shells have<ACLASS="indexterm"NAME="AUTOID-1567"></A><ACLASS="indexterm"NAME="AUTOID-1570"></A><SPANCLASS="link">curly braces (<CODECLASS="literal">{}</CODE>) (<ACLASS="linkend"HREF="ch09_05.htm"TITLE="Build Strings with {&nbsp;} ">9.5</A>, <ACLASS="linkend"HREF="ch15_03.htm"TITLE="Adding { } Operators to Korn (and Bourne) Shells ">15.3</A>)</SPAN>for doing that.Article<ACLASS="xref"HREF="ch01_18.htm"TITLE="Who Handles Wildcards? ">1.18</A>has more about how wildcards are handled.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_15.htm"TITLE="1.15 Filenames "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 1.15 Filenames "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch01_17.htm"TITLE="1.17 Filename Extensions "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 1.17 Filename Extensions "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">1.15 Filenames </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">1.17 Filename Extensions </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>