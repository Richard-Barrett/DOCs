<HTML><HEAD><TITLE>[Chapter 2] 2.5 Tips for Speeding up Slow Logins </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:31:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch02_01.htm"TITLE="2. Logging In"><LINKREL="prev"HREF="ch02_04.htm"TITLE="2.4 Tip for Changing Account Setup: Keep a Shell Ready "><LINKREL="next"HREF="ch02_06.htm"TITLE="2.6 Use Absolute Pathnames in Shell Setup Files "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_04.htm"TITLE="2.4 Tip for Changing Account Setup: Keep a Shell Ready "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.4 Tip for Changing Account Setup: Keep a Shell Ready "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 2<BR>Logging In</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_06.htm"TITLE="2.6 Use Absolute Pathnames in Shell Setup Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.6 Use Absolute Pathnames in Shell Setup Files "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-5740">2.5 Tips for Speeding up Slow Logins </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-2992"></A><ACLASS="indexterm"NAME="AUTOID-2995"></A>When I first started using the C shell in the early 1980s, I madeincredible<SPANCLASS="link"><EMCLASS="emphasis">.cshrc</EM> and <EMCLASS="emphasis">.login</EM> files (<ACLASS="linkend"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>)</SPAN>with all kinds of nice customizations.  Aliases, commands to check mymail, calendar systems, shell scripts in the background to watchthings for me... boy, was this great!  Except when I tried to log in,that is.  I was working on an overloaded VAX 11/750.  Logging in couldtake a few minutes, from when I got the <CODECLASS="literal">;login:</CODE> promptuntil I finally got my shell prompt <CODECLASS="literal">%</CODE> (...well, it was reallya much fancier prompt, but that's another story <CODECLASS="literal">:-)</CODE>).</P><PCLASS="para">The C shell seems (to me) to be pretty slow at reading long<EMCLASS="emphasis">.cshrc</EM> and <EMCLASS="emphasis">.login</EM> files&nbsp;- especially at settingaliases.  So, I learned some ways to get logged in faster.  They wereespecially nice when I was at someone else's terminal and needed tolog in for something quick.  You might not want to use these exacttechniques, but I hope they'll give you some ideas if your logins taketoo long.  The same ideas will work on other shells&nbsp;- but with thatshell's commands and syntax, of course.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-5740-SECT-1.1">2.5.1 Quick Login </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3010"></A>Add a &quot;quick login&quot; setup to the top of your <EMCLASS="emphasis">.cshrc</EM>.As soon as the C shell starts and sets a few essentials, this setupasks whether you want a prompt right away.<ACLASS="indexterm"NAME="AUTOID-3013"></A>If you answer yes, it starts another C shell with the <EMCLASS="emphasis">-f</EM> option(important: this makes the<SPANCLASS="link">subshell (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>skip your <EMCLASS="emphasis">.cshrc</EM> so you don'tget a loop):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">login: <CODECLASS="userinput"><B>jerry</B></CODE>Password:Last login: Tue Jan 21 12:34:56 PST 1985   ...Answer y for quick login or RETURN for standard: <CODECLASS="userinput"><B>y</B></CODE>For a standard login, type 'exit 77'.% <CODECLASS="userinput"><B>mail bigboss</B></CODE>Subject: <CODECLASS="userinput"><B>I'm on my wayCarol, I'm leaving for the meeting now. See you by 10:00..</B></CODE>% <KBDCLASS="keycap">[CTRL-d]</KBD>login:</PRE></BLOCKQUOTE></P><PCLASS="para">From there, I can run a few quick commands.<ACLASS="indexterm"NAME="AUTOID-3027"></A>Typing CTRL-d or <CODECLASS="literal">exit</CODE> quits the quick subshell and kills my originallogin shell, too.If I want to stay logged in on that terminal, I type <CODECLASS="literal">exit</CODE>&nbsp;<CODECLASS="literal">77</CODE>.That makes the quick subshell return an<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>of 77;<ACLASS="indexterm"NAME="AUTOID-3033"></A><ACLASS="indexterm"NAME="AUTOID-3035"></A>the test in the <EMCLASS="emphasis">.cshrc</EM> notices this and continues logging me in,reading the rest of the <EMCLASS="emphasis">.cshrc</EM> and <EMCLASS="emphasis">.login</EM>.</P><PCLASS="para">Here's the top of the <EMCLASS="emphasis">.cshrc</EM> file to set that up:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch47_03.htm"TITLE="47.3 Conditional Statements with if ">if</A> <ACLASS="co"HREF="ch47_04.htm"TITLE="47.4 C Shell Variable Operators and Expressions ">! $?</A> <ACLASS="co"HREF="ch09_05.htm"TITLE="9.5 Build Strings with {&nbsp;} ">{ }</A> <ACLASS="co"HREF="ch47_04.htm"TITLE="47.4 C Shell Variable Operators and Expressions ">$&lt; =~</A> <ACLASS="co"HREF="ch38_10.htm"TITLE="38.10 Destroying Processes with kill ">kill</A> <ACLASS="co"HREF="ch08_19.htm"TITLE='8.19 "Special&quot; Characters and Operators '>$$</A> <ACLASS="co"HREF="ch06_01.htm"TITLE="6.1 What Environment Variables Are Good For ">setenv</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen"># only do stuff below if this is an interactive shellif (! $?prompt) goto cshrc_end# QUICK LOGIN:if (! $?LOGGEDIN) then   set path = (/bin /usr/ucb /usr/local/{bin,mh} {/usr,~}/bin .)   echo -n &quot;Answer y for quick login or RETURN for standard: &quot;   if (&quot;$&lt;&quot; =~ y*) then      echo &quot;For a standard login, type 'exit 77'.&quot;      csh -f      # PLAIN &quot;exit&quot; JUST EXITS .cshrc... THIS IS BRUTAL BUT IT WORKS:      if ($status != 77) kill -9 $$   endifendifsetenv LOGGEDIN yes     ...<EMCLASS="emphasis">Rest of .cshrc</EM>...cshrc_end:</PRE></TD></TR></TABLE></P><BLOCKQUOTECLASS="caution"><PCLASS="para"><STRONG>CAUTION:</STRONG> <ACLASS="indexterm"NAME="AUTOID-3056"></A><ACLASS="indexterm"NAME="AUTOID-3058"></A>Be sure to use an<SPANCLASS="link"><CODECLASS="literal">if</CODE>&nbsp;<CODECLASS="literal">($?prompt)</CODE> test (<ACLASS="linkend"HREF="ch02_09.htm"TITLE="Speeding Up Your C Shell with set prompt Test ">2.9</A>)</SPAN>firstto keep this command from being read by noninteractive shells.If you don't, non-interactive shells for jobs like <EMCLASS="emphasis">at</EM> may hang,waiting for an answer to the &quot;quick login&quot; question&nbsp;- or just be confusedand not work.</P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-5740-SECT-1.2">2.5.2 A Second Alias and Command File </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3067"></A>Maybe you have a set of aliases or setup commands that you use only forcertain projects.If you don't need that setup every time you log in, you can put thesetup commands in a separate file.<ACLASS="indexterm"NAME="AUTOID-3070"></A>Make an alias named something like <EMCLASS="emphasis">setup</EM> that reads the file into yoursetup shell.Only type <CODECLASS="literal">setup</CODE> when you need the extra setup done.</P><PCLASS="para">Here's the alias:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch14_11.htm"TITLE="14.11 Finding (Anyone's) Home Directory, Quickly ">~</A> <ACLASS="co"HREF="ch44_23.htm"TITLE="44.23 Reading Files with the . and source Commands ">source</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">alias setup 'if (! $?setup) source ~/lib/cshrc2'</PRE></TD></TR></TABLE></P><PCLASS="para">and the start of the <EMCLASS="emphasis">~/lib/cshrc2</EM> file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set setup  # variable to stop re-sourcingalias foo bar   ...</PRE></BLOCKQUOTE></P><PCLASS="para">The first line in the <EMCLASS="emphasis">cshrc2</EM> file sets a shell variable thatkeeps the <EMCLASS="emphasis">setup</EM> alias from re-reading the file into this shell.This saves time if you forget that you've already run <EMCLASS="emphasis">setup</EM>.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-5740-SECT-1.3">2.5.3 Once-a-Day Setup </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-3090"></A>Maybe there are some commands that you want to run only once a day,the first time you log in.For example, I had a reminder system that showed my calendar for the day,reminded me of birthdays, etc.A test like this in <EMCLASS="emphasis">.login</EM> handles that:&#13;</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch47_05.htm"TITLE="47.5 Using C Shell Arrays ">$date[n]</A> <ACLASS="co"HREF="ch06_08.htm"TITLE="6.8 Shell Variables ">set</A> <ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">`...`</A> <ACLASS="co"HREF="ch47_04.htm"TITLE="47.4 C Shell Variable Operators and Expressions ">-e</A> <ACLASS="co"HREF="ch21_07.htm"TITLE="21.7 Setting File Modification Time with touch ">touch</A> <ACLASS="co"HREF="ch06_08.htm"TITLE="6.8 Shell Variables ">unset</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen"># Put day name in $date[1], month in $date[2], date in $date[3], etc:set date=(`date`)# if today's daily setup file doesn't exist, make it and do stuff:if (! -e ~/tmp/,setup.$date[3]) then   touch ~/tmp/,setup.$date[3]   do_calendar   ...<EMCLASS="emphasis">Other once-a-day setup</EM>...endifunset date</PRE></TD></TR></TABLE></P><PCLASS="para">That test uses<SPANCLASS="link"><EMCLASS="emphasis">csh</EM> arrays (<ACLASS="linkend"HREF="ch47_05.htm"TITLE="Using C Shell Arrays ">47.5</A>)</SPAN>to get today's date and makean empty file in my <EMCLASS="emphasis">tmp</EM> directory with a name like <EMCLASS="emphasis">,setup.23</EM>.Once a file is created (say, on June 23), then the setup commands won't runagain that day.I have a program that<SPANCLASS="link"> periodically removes files named with a comma(<CODECLASS="literal">,</CODE>)  (<ACLASS="linkend"HREF="ch23_20.htm"TITLE="Deleting Stale Files ">23.20</A>, <ACLASS="linkend"HREF="ch23_22.htm"TITLE="Using find to Clear Out Unneeded Files ">23.22</A>)</SPAN>so <EMCLASS="emphasis">,setup.23</EM> will be long gone by the next month's twenty-third day.That could also be done from the<SPANCLASS="link"><EMCLASS="emphasis">.logout</EM> file (<ACLASS="linkend"HREF="ch03_01.htm#UPT-ART-4800"TITLE="Running Commands When You Log Out ">3.1</A>, <ACLASS="linkend"HREF="ch03_02.htm"TITLE="Running Commands at Bourne/Korn Shell Logout ">3.2</A>)</SPAN>.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_04.htm"TITLE="2.4 Tip for Changing Account Setup: Keep a Shell Ready "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 2.4 Tip for Changing Account Setup: Keep a Shell Ready "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch02_06.htm"TITLE="2.6 Use Absolute Pathnames in Shell Setup Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 2.6 Use Absolute Pathnames in Shell Setup Files "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">2.4 Tip for Changing Account Setup: Keep a Shell Ready </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">2.6 Use Absolute Pathnames in Shell Setup Files </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>