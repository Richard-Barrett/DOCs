<HTML><HEAD><TITLE>[Chapter 6] 6.4 The PATH Environment Variable </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-10-23T15:38:01Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Shell and Environment Variables"><LINKREL="prev"HREF="ch06_03.htm"TITLE="6.3 Predefined Environment Variables "><LINKREL="next"HREF="ch06_05.htm"TITLE="6.5 PATH and path "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Predefined Environment Variables "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.3 Predefined Environment Variables "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Shell and Environment Variables</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_05.htm"TITLE="6.5 PATH and path "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.5 PATH and path "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1172">6.4 The PATH Environment Variable </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6012"></A>Of all the environment variables, the <EMCLASS="emphasis">PATH</EM> and <SPANCLASS="link"><EMCLASS="emphasis">TERM</EM> (<ACLASS="linkend"HREF="ch05_10.htm"TITLE="Finding What Terminal Names You Can Use ">5.10</A>)</SPAN>variables are the most important. The others are often greatconveniences; but <EMCLASS="emphasis">PATH</EM> and <EMCLASS="emphasis">TERM</EM> can make your life miserable if theyget screwed up.<ACLASS="indexterm"NAME="AUTOID-6019"></A></P><PCLASS="para">The <EMCLASS="emphasis">PATH</EM> variable is just a list of directories separated bycolon (<CODECLASS="literal">:</CODE>) characters.The shell searches through these directories in order whenever itneeds to find a command. So, if you want to execute commands in<EMCLASS="emphasis">/bin</EM>, <EMCLASS="emphasis">/usr/bin</EM>, <EMCLASS="emphasis">/usr/local</EM>, the current directory,and your personal <EMCLASS="emphasis">bin</EM> directory, you would put aline like the one below in your <EMCLASS="emphasis">.login</EM> file.An empty entry (<CODECLASS="literal">:</CODE> as the first or last character,or <CODECLASS="literal">::</CODE> in the middle) means &quot;the current directory.&quot;</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch04_02.htm"TITLE="4.2 A bin Directory for Your Programs and Scripts ">$HOME/bin</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">setenv PATH /bin:/usr/bin:/usr/local::$HOME/bin</PRE></TD></TR></TABLE></P><PCLASS="para">Article<ACLASS="xref"HREF="ch08_07.htm"TITLE="Setting Your Search Path ">8.7</A>explains more about setting the path.</P><PCLASS="para">The most common problem with <EMCLASS="emphasis">PATH</EM> is that, somehow, it gets deleted.This usually happens if you try to change <EMCLASS="emphasis">PATH</EM> and do so incorrectly.When <EMCLASS="emphasis">PATH</EM> is deleted, your shell can only find its <SPANCLASS="link">built-in commands (<ACLASS="linkend"HREF="ch01_10.htm"TITLE="Internal and External Commands ">1.10</A>)</SPAN>and commands for which you give the complete pathname.Here's ademonstration:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>setenv PATH   </B></CODE><EMCLASS="emphasis">Set PATH to null accidentally</EM>% <CODECLASS="userinput"><B>ls</B></CODE>ls: Command not found.&#13;</PRE></BLOCKQUOTE></P><PCLASS="para">Needless to say, this can be very frustrating&nbsp;- especially if you can'tfigure out what's going on. There are a couple of easy fixes. Theeasiest is just to log out andlog back in again. (<EMCLASS="emphasis">logout</EM> is a built-in C shell command, soyou won't have trouble finding it. If you get an error message like&quot;Not login shell,&quot; try <EMCLASS="emphasis">exit</EM> instead.)Anotherfix is to<SPANCLASS="link">read (<ACLASS="linkend"HREF="ch44_23.htm"TITLE="Reading Files with the . and source Commands ">44.23</A>)</SPAN>whicheverinitialization file defined your <EMCLASS="emphasis">PATH</EM> variable, usually <EMCLASS="emphasis">.login</EM>for C shell users or <EMCLASS="emphasis">.profile</EM> for Bourne shell users:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>source ~/.login</B></CODE>$ <CODECLASS="userinput"><B>. $HOME/.profile</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This will almost certainly give you <EMCLASS="emphasis">some</EM> of your path back; theproblem is that a lot of initialization files merely add a few &quot;private&quot;directories to a system-wide default path. In this case, just executethe system-wide initialization files first (if your system has them).Their pathnames vary:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>source /usr/lib/Cshrc</B></CODE>% <CODECLASS="userinput"><B>source /usr/lib/Login</B></CODE>% <CODECLASS="userinput"><B>source ~/.login</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The other common <EMCLASS="emphasis">PATH</EM> problem is that users sometimes can't find thecommands they want. This happens most often when someone writes a newshell script with the same name as a standard UNIX command&nbsp;- say,<EMCLASS="emphasis">true</EM>. He or she tries to execute it and can't; in fact, allthat happens is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>true</B></CODE>%</PRE></BLOCKQUOTE></P><PCLASS="para">After staring at the script for a long time, the user sometimes getsthe right idea: the script is fine, it's the path that's wrong. The<EMCLASS="emphasis">PATH</EM> variable will look something like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>printenv PATH</B></CODE>/bin:/usr/local:/usr/ucb:/usr/bin::/home/mkl/bin</PRE></BLOCKQUOTE></P><PCLASS="para">The shell searches the <EMCLASS="emphasis">PATH</EM> in order; therefore, it finds the system'sstandard <EMCLASS="emphasis">true</EM> command before seeing the new one. The newcommand never gets a chance.You <EMCLASS="emphasis">could</EM> fix this problem by putting the current directory and<EMCLASS="emphasis">$HOME/bin</EM> at the head of the search path, in which case,commands in the current directory and your private <EMCLASS="emphasis">bin</EM> directory willoverride the standard commands. However, that's <EMCLASS="emphasis">not</EM>recommended; it's a well-known security hole.</P><PCLASS="para">So what is recommended? Nothing much, except: if you write shellscripts or other programs, give them names that are<SPANCLASS="link">different from the standard UNIX utilities (<ACLASS="linkend"HREF="ch44_21.htm"TITLE="Picking a Name for a New Command ">44.21</A>)</SPAN>.If you really need an overlapping name, you can use a<SPANCLASS="link">relative pathname (<ACLASS="linkend"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>)</SPAN>to specify &quot;the program called <EMCLASS="emphasis">true</EM> in the current directory&quot;:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>./true</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here are some related articles.You can search your <EMCLASS="emphasis">PATH</EM> for a command with<SPANCLASS="link"><EMCLASS="emphasis">which</EM> (<ACLASS="linkend"HREF="ch50_08.htm"TITLE="Which Version Am I Using? ">50.8</A>)</SPAN>,<SPANCLASS="link"><EMCLASS="emphasis">findcmd</EM> (<ACLASS="linkend"HREF="ch16_10.htm"TITLE="findcmd: Find a Command in Your Search Path ">16.10</A>)</SPAN>,and<SPANCLASS="link"><EMCLASS="emphasis">whereiz</EM> (<ACLASS="linkend"HREF="ch04_10.htm"TITLE="Find All Command Versions with whereiz ">4.10</A>)</SPAN>.Article<ACLASS="xref"HREF="ch06_05.htm"TITLE="PATH and path ">6.5</A>explains the C shell's <EMCLASS="emphasis">path</EM> variable.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_03.htm"TITLE="6.3 Predefined Environment Variables "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.3 Predefined Environment Variables "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_05.htm"TITLE="6.5 PATH and path "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.5 PATH and path "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.3 Predefined Environment Variables </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.5 PATH and path </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>