<HTML><HEAD><TITLE>[Chapter 6] 6.8 Shell Variables </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-10-23T15:38:06Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Shell and Environment Variables"><LINKREL="prev"HREF="ch06_07.htm"TITLE="6.7 What Time Is It in Japan? "><LINKREL="next"HREF="ch06_09.htm"TITLE="6.9 Special C Shell Variables "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_07.htm"TITLE="6.7 What Time Is It in Japan? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.7 What Time Is It in Japan? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Shell and Environment Variables</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_09.htm"TITLE="6.9 Special C Shell Variables "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.9 Special C Shell Variables "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1180">6.8 Shell Variables </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6207"></A><ACLASS="indexterm"NAME="AUTOID-6210"></A>Shell variables are really just the &quot;general case&quot; of<SPANCLASS="link">environment variables (<ACLASS="linkend"HREF="ch06_01.htm#UPT-ART-1170"TITLE="What Environment Variables Are Good For ">6.1</A>)</SPAN>.If you're a programmer, remember that a UNIX shell really runsan interpretedprogramming language. Shell variables belong to the shell; you can set them,print them, and work with them much as you can in a C program (or aFORTRAN program or a BASIC program). If you're not a programmer,just remember that shell variables are pigeonholes that storeinformation for you or your shell to use.</P><PCLASS="para">If you've read the section on environment variables, you realize thatwe defined them in exactly the same way. How are shell variablesdifferent from environment variables? Whenever you start a new shellor a UNIX program, it inherits all of its parent's environmentvariables. However, it does <EMCLASS="emphasis">not</EM> inherit any shell variables;it starts with a clean slate. If you're a programmer, you can thinkof environment variables as &quot;global&quot; variables, while shell variablesare &quot;local&quot; variables. By convention, shell variables have lowercasenames.</P><PCLASS="para">Just as some programs use certain environment variables, the shell expectsto use certain shell variables.<ACLASS="indexterm"NAME="AUTOID-6218"></A>For example, the C shell usesthe<ACLASS="indexterm"NAME="AUTOID-6221"></A><SPANCLASS="link"><EMCLASS="emphasis">history</EM> (<ACLASS="linkend"HREF="ch11_01.htm#UPT-ART-4920"TITLE="The Lessons of History ">11.1</A>)</SPAN>variable to determine how many of your previous commandsto remember; if the<ACLASS="indexterm"NAME="AUTOID-6225"></A><SPANCLASS="link"><EMCLASS="emphasis">noclobber</EM> (<ACLASS="linkend"HREF="ch13_06.htm"TITLE="Safe I/O Redirection with noclobber ">13.6</A>)</SPAN>variable is defined, the C shellprevents you from damaging files by making mistakes with standardoutput. Most users insert code into their<SPANCLASS="link"><EMCLASS="emphasis">.cshrc</EM> files (<ACLASS="linkend"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>)</SPAN>to define theseimportant variables appropriately.</P><PCLASS="para">To set a shell variable, use one of these commands:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set </B></CODE><CODECLASS="replaceable"><I>name</I></CODE><CODECLASS="userinput"><B>=</B></CODE><CODECLASS="replaceable"><I>value   </I></CODE><EMCLASS="emphasis">C shell</EM>$ <CODECLASS="replaceable"><I>name</I></CODE><CODECLASS="userinput"><B>=</B></CODE><CODECLASS="replaceable"><I>value   </I></CODE><EMCLASS="emphasis">Bourne shell</EM>&#13;</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6244"></A>As a special case, if you omit <EMCLASS="emphasis">value</EM>, the shell variable is setto a &quot;null&quot; value. For example, the following commandsare valid:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set </B></CODE><CODECLASS="replaceable"><I>name   </I></CODE><EMCLASS="emphasis">C shell</EM>$ <CODECLASS="replaceable"><I>name</I></CODE><CODECLASS="userinput"><B>=   </B></CODE><EMCLASS="emphasis">Bourne shell</EM>&#13;</PRE></BLOCKQUOTE></P><PCLASS="para">This is important:giving a variable a null value is not the same as deletingthe value.Some programs look at variables to see whether or not they exist; theydon't care what the actual value is, and an empty value is as good as anythingelse. If you want to make the shell forget that a variable everexisted, use the <EMCLASS="emphasis">unset</EM> command.Unfortunately, older Bourne shells don't have a command like <EMCLASS="emphasis">unset</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>unset </B></CODE><CODECLASS="replaceable"><I>name   </I></CODE><EMCLASS="emphasis">C shell</EM>$ <CODECLASS="userinput"><B>unset </B></CODE><CODECLASS="replaceable"><I>name   </I></CODE><EMCLASS="emphasis">Bourne shell</EM></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6268"></A><ACLASS="indexterm"NAME="AUTOID-6270"></A><ACLASS="indexterm"NAME="AUTOID-6272"></A>If you want to list all of your environment variables, use thecommand <EMCLASS="emphasis">printenv</EM> (Berkeley UNIX) or <EMCLASS="emphasis">env</EM> (System V).[1]If you want to list all of your Bourne or C shell variables, just type<CODECLASS="literal">set</CODE>.Here's a typical report in the C shell:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] <EMCLASS="emphasis">printenv</EM> and <EMCLASS="emphasis">env</EM> are<SPANCLASS="link">external (<ACLASS="linkend"HREF="ch01_10.htm"TITLE="Internal and External Commands ">1.10</A>)</SPAN>commands; they work with any shell.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set</B></CODE>argv    ()cwd     /home/los/mikel/power/articleshistory 40home    /home/los/mikelnoclobberpath    (/home/los/mikel/bin /usr/local/bin /usr/ucb /bin /usr/bin .)prompt  los%shell   /bin/cshstatus  0term    sunuser    mikel</PRE></BLOCKQUOTE></P><PCLASS="para">If you want to print the value of an individual variable, give the command:<ACLASS="indexterm"NAME="AUTOID-6286"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo &quot;$</B></CODE><CODECLASS="replaceable"><I>variable-name</I></CODE><CODECLASS="userinput"><B>&quot;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">(While the example above gives a C shell prompt, this commandworks in all UNIX shells.)</P><PCLASS="para">Whenever you need the value of a shell variable&nbsp;- not just with<SPANCLASS="link"><EMCLASS="emphasis">echo</EM> (<ACLASS="linkend"HREF="ch08_06.htm"TITLE="Output Command-Line Arguments ">8.6</A>)</SPAN>-<ACLASS="indexterm"NAME="AUTOID-6297"></A>you need to put a dollar sign&nbsp;(<CODECLASS="literal">$</CODE>) in front of the name.You don't need the dollar sign when you're assigning a new value to a<ACLASS="indexterm"NAME="AUTOID-6301"></A>shell variable. You can also stick curly braces (<CODECLASS="literal">{}</CODE>) aroundthe name, if you want (e.g., <CODECLASS="literal">${</CODE><CODECLASS="replaceable"><I>name</I></CODE><CODECLASS="literal">}</CODE>); when you're writing shellprograms, this can often make your code much clearer.Curly braces aremostly used when you need to separate the variable name from what comes after it.</P><PCLASS="para">But that's getting us out of the range of interactive variable useand into<SPANCLASS="link">shell programming (<ACLASS="linkend"HREF="ch44_01.htm#UPT-ART-0065"TITLE="Everyone Should Learn Some Shell Programming ">44.1</A>)</SPAN>.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_07.htm"TITLE="6.7 What Time Is It in Japan? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.7 What Time Is It in Japan? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_09.htm"TITLE="6.9 Special C Shell Variables "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.9 Special C Shell Variables "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.7 What Time Is It in Japan? </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.9 Special C Shell Variables </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>