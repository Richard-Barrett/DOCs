<HTML><HEAD><TITLE>[Chapter 6] 6.9 Special C Shell Variables </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-10-23T15:38:07Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch06_01.htm"TITLE="6. Shell and Environment Variables"><LINKREL="prev"HREF="ch06_08.htm"TITLE="6.8 Shell Variables "><LINKREL="next"HREF="ch06_10.htm"TITLE="6.10 Running a Command with a Temporarily Different Environment "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_08.htm"TITLE="6.8 Shell Variables "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.8 Shell Variables "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 6<BR>Shell and Environment Variables</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_10.htm"TITLE="6.10 Running a Command with a Temporarily Different Environment "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.10 Running a Command with a Temporarily Different Environment "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-6700">6.9 Special C Shell Variables </A></H2><PCLASS="para">[Sorry, no articles about <ICLASS="filename">bash</I> and <ICLASS="filename">tcsh</I> variables.This book focuses on the &quot;base&quot; shells, <ICLASS="filename">sh</I> and <ICLASS="filename">csh</I>.<ICLASS="filename">csh</I> variables work in <ICLASS="filename">tcsh</I>, and many work (in slightlydifferent forms) with <ICLASS="filename">bash</I> too.For a complete list, check your <ICLASS="filename">bash</I> or <ICLASS="filename">tcsh</I> manpage. -JP]</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6326"></A>The C shell recognizes and uses environment variables, but it alsouses a great many simple <SPANCLASS="link">shell variables (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>)</SPAN>to control its own operation. These variables don't need to be putinto the environment so they can be passed to<SPANCLASS="link">subshells (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>,because everyinstance of the C shell always reads the<SPANCLASS="link"><EMCLASS="emphasis">.cshrc</EM> file (<ACLASS="linkend"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>)</SPAN>.Simple shell variables set there are thus propagated to every Cshell.</P><PCLASS="para">Many of the special C shell variables are simply used as flags; that is, theyneed not be set to any particular value. The shell simply testswhether they exist or not. They are set simply by saying:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set <CODECLASS="replaceable"><I>variable</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">rather than:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set <CODECLASS="replaceable"><I>variable</I></CODE>=<CODECLASS="replaceable"><I>value</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Here are some of the special variable names used by the C shell:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">The <SPANCLASS="link"><EMCLASS="emphasis">cdpath</EM> (<ACLASS="linkend"HREF="ch14_05.htm"TITLE="Saving Time When You Change Directories: cdpath ">14.5</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6348"></A>variable stores a list of directories.You can <EMCLASS="emphasis">cd</EM> to subdirectories of these by typing just the subdirectoryname.&#13;</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6353"></A>If the<SPANCLASS="link"><EMCLASS="emphasis">echo</EM> (<ACLASS="linkend"HREF="ch08_17.htm"TITLE="verbose and echo Variables Show Quoting ">8.17</A>)</SPAN>variable is set, the shell will show the commandline, after all variable and <SPANCLASS="link">history (<ACLASS="linkend"HREF="ch11_07.htm"TITLE="History Substitutions ">11.7</A>)</SPAN>substitutions, before executingit. (This is very handy for debugging scripts such as <EMCLASS="emphasis">.cshrc</EM>.)</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6360"></A>If the<SPANCLASS="link"><EMCLASS="emphasis">verbose</EM> (<ACLASS="linkend"HREF="ch08_17.htm"TITLE="verbose and echo Variables Show Quoting ">8.17</A>)</SPAN>variable is set, the shell will show the commandline after history substitution but before any other substitutions.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6365"></A><ACLASS="indexterm"NAME="AUTOID-6368"></A>The Bourne shell <SPANCLASS="link"><EMCLASS="emphasis">-v</EM> and <EMCLASS="emphasis">-x</EM> options (<ACLASS="linkend"HREF="ch46_01.htm#UPT-ART-7160"TITLE="Tips for Debugging Shell Scripts ">46.1</A>)</SPAN>work like the <EMCLASS="emphasis">verbose</EM> and <EMCLASS="emphasis">echo</EM> variables.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6378"></A><ACLASS="indexterm"NAME="AUTOID-6380"></A>If the <EMCLASS="emphasis">filec</EM> or <EMCLASS="emphasis">complete</EM> variable is set, the shell performs <SPANCLASS="link">filename completion (<ACLASS="linkend"HREF="ch09_08.htm"TITLE="Filename Completion: Faster Filename Typing ">9.8</A>)</SPAN>.The <SPANCLASS="link"><EMCLASS="emphasis">fignore</EM> (<ACLASS="linkend"HREF="ch09_09.htm"TITLE="Don't Match Useless Files in Filename Completion ">9.9</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6387"></A>variable makes filename completion skip filenames that endwith certain characters like <EMCLASS="emphasis">.o</EM>.</P></LI><LICLASS="listitem"><PCLASS="para">The <SPANCLASS="link"><EMCLASS="emphasis">cwd</EM> (<ACLASS="linkend"HREF="ch14_13.htm"TITLE="Which Directory Am I in, Really? ">14.13</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6394"></A>variable shows the absolute pathname of the current directory.The <EMCLASS="emphasis">cd</EM>, <EMCLASS="emphasis">pushd</EM>, and <EMCLASS="emphasis">popd</EM> commands set it.</P></LI><LICLASS="listitem"><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-6401"></A><SPANCLASS="link"><EMCLASS="emphasis">hardpaths</EM> (<ACLASS="linkend"HREF="ch14_13.htm"TITLE="Which Directory Am I in, Really? ">14.13</A>)</SPAN>variable fixes errors in the <EMCLASS="emphasis">cwd</EM> variable that occur whenyou <EMCLASS="emphasis">cd</EM> through symbolic links.</P></LI><LICLASS="listitem"><PCLASS="para">Use the <ACLASS="indexterm"NAME="AUTOID-6409"></A><SPANCLASS="link"><EMCLASS="emphasis">histchars</EM> (<ACLASS="linkend"HREF="ch11_15.htm"TITLE="Changing C Shell History Characters with histchars ">11.15</A>)</SPAN>variable to set different history characters thanexclamation point (<CODECLASS="literal">!</CODE>) and caret (<CODECLASS="literal">^</CODE>).</P></LI><LICLASS="listitem"><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-6417"></A><SPANCLASS="link"><EMCLASS="emphasis">history</EM> (<ACLASS="linkend"HREF="ch11_01.htm#UPT-ART-4920"TITLE="The Lessons of History ">11.1</A>)</SPAN>variable stores the number of shell command lines to save.The <SPANCLASS="link"><EMCLASS="emphasis">savehist</EM> (<ACLASS="linkend"HREF="ch11_11.htm"TITLE="Picking Up Where You Left Off ">11.11</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6423"></A>variable stores the number of lines of shell history to be saved when you log out. This amount of history is saved ina file called <EMCLASS="emphasis">.history</EM> in your home directory, andthe lines are restored the next time you log in.</P></LI><LICLASS="listitem"><PCLASS="para">If you set<ACLASS="indexterm"NAME="AUTOID-6428"></A><SPANCLASS="link"><EMCLASS="emphasis">ignoreeof</EM> (<ACLASS="linkend"HREF="ch03_05.htm"TITLE="Stop Accidental C Shell Logouts ">3.5</A>)</SPAN>,the shell won't respond to the end-of-file character (CTRL-d) and willrequire you to type <CODECLASS="literal">logout</CODE> or<SPANCLASS="link"><CODECLASS="literal">exit</CODE> (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>to log out.This can save you from ending the shell accidentally (or logging out).</P></LI><LICLASS="listitem"><PCLASS="para">The shell can tell you about new<SPANCLASS="link">electronic mail (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>or changes in other files with the<SPANCLASS="link"><EMCLASS="emphasis">mail</EM> (<ACLASS="linkend"HREF="ch21_08.htm"TITLE="The MAILCHECK and mail Variables Check More than Mail">21.8</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6440"></A>variable.</P></LI><LICLASS="listitem"><PCLASS="para">Stop the <CODECLASS="literal">&gt;</CODE> redirection character from overwriting files with<ACLASS="indexterm"NAME="AUTOID-6445"></A><ACLASS="indexterm"NAME="AUTOID-6448"></A><ACLASS="indexterm"NAME="AUTOID-6451"></A><SPANCLASS="link"><EMCLASS="emphasis">noclobber</EM> (<ACLASS="linkend"HREF="ch13_06.htm"TITLE="Safe I/O Redirection with noclobber ">13.6</A>)</SPAN>.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6457"></A>The <EMCLASS="emphasis">noglob</EM>variable stops<SPANCLASS="link">wildcard expansion (<ACLASS="linkend"HREF="ch15_01.htm#UPT-ART-1480"TITLE="File Naming Wildcards ">15.1</A>)</SPAN>.(There's an example in article<ACLASS="xref"HREF="ch05_04.htm"TITLE="Setting the TERMCAP Variable with tset ">5.4</A>.)</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6464"></A>Set <EMCLASS="emphasis">nonomatch</EM>when you want the C shell totreat nonmatching wildcards<SPANCLASS="link"> like the Bourne shell does . (<ACLASS="linkend"HREF="ch15_04.htm"TITLE="What if a Wildcard Doesn't Match? ">15.4</A>)</SPAN></P></LI><LICLASS="listitem"><PCLASS="para">The <ACLASS="indexterm"NAME="AUTOID-6470"></A><SPANCLASS="link"><EMCLASS="emphasis">notify</EM> (<ACLASS="linkend"HREF="ch12_06.htm"TITLE="Notification When Jobs Change State ">12.6</A>)</SPAN>variable asks the shell to tell you right away if abackground job finishes or is stopped.</P></LI><LICLASS="listitem"><PCLASS="para">The list of directories that the shell searches for commands is stored in <ACLASS="indexterm"NAME="AUTOID-6476"></A><SPANCLASS="link"><EMCLASS="emphasis">path</EM> (<ACLASS="linkend"HREF="ch06_05.htm"TITLE="PATH and path ">6.5</A>)</SPAN>.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6482"></A><ACLASS="indexterm"NAME="AUTOID-6484"></A>Your login name from the<SPANCLASS="link"><EMCLASS="emphasis">USER</EM> or <EMCLASS="emphasis">LOGNAME</EM> (<ACLASS="linkend"HREF="ch06_03.htm"TITLE="Predefined Environment Variables ">6.3</A>)</SPAN>environment variable is also storedin the C shell variable named <EMCLASS="emphasis">user</EM>.</P></LI><LICLASS="listitem"><PCLASS="para">The shell's command-line prompt is set by the <ACLASS="indexterm"NAME="AUTOID-6492"></A><SPANCLASS="link"><EMCLASS="emphasis">prompt</EM> (<ACLASS="linkend"HREF="ch07_02.htm"TITLE="Basics of Setting the Prompt ">7.2</A>)</SPAN>variable.(The<SPANCLASS="link"><EMCLASS="emphasis">PS1</EM> (<ACLASS="linkend"HREF="ch06_03.htm"TITLE="Predefined Environment Variables ">6.3</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-6498"></A><ACLASS="indexterm"NAME="AUTOID-6500"></A>environment variable is the Bourne shell equivalent.You can set the Bourne shell's<SPANCLASS="link">secondary prompt (<ACLASS="linkend"HREF="ch09_13.htm"TITLE="Multiline Commands, Secondary Prompts ">9.13</A>)</SPAN>,too, in <EMCLASS="emphasis">PS2</EM>.)&#13;</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6506"></A><ACLASS="indexterm"NAME="AUTOID-6509"></A><ACLASS="indexterm"NAME="AUTOID-6511"></A>The<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>of the last command is stored in the <EMCLASS="emphasis">csh</EM> variable named <EMCLASS="emphasis">status</EM>and the <EMCLASS="emphasis">sh</EM> <EMCLASS="emphasis">?</EM> (question mark) variable.</P></LI><LICLASS="listitem"><PCLASS="para">If a job takes more CPU seconds than the number set in the <ACLASS="indexterm"NAME="AUTOID-6521"></A><SPANCLASS="link"><EMCLASS="emphasis">time</EM> (<ACLASS="linkend"HREF="ch39_03.htm"TITLE="The csh time variable ">39.3</A>)</SPAN>variable, the <EMCLASS="emphasis">csh</EM> will print a line of statistics about the job.</P></LI></UL><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN>, <SPANCLASS="authorinitials">TOR</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_08.htm"TITLE="6.8 Shell Variables "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 6.8 Shell Variables "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch06_10.htm"TITLE="6.10 Running a Command with a Temporarily Different Environment "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 6.10 Running a Command with a Temporarily Different Environment "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">6.8 Shell Variables </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">6.10 Running a Command with a Temporarily Different Environment </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>