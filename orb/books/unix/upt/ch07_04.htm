<HTML><HEAD><TITLE>[Chapter 7] 7.4 Faster Prompt Setting with Built-Ins </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:33:44Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Setting Your Shell Prompt"><LINKREL="prev"HREF="ch07_03.htm"TITLE="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><LINKREL="next"HREF="ch07_05.htm"TITLE="7.5 Multiline Shell Prompts "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Setting Your Shell Prompt</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_05.htm"TITLE="7.5 Multiline Shell Prompts "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.5 Multiline Shell Prompts "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1270">7.4 Faster Prompt Setting with Built-Ins </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6713"></A><ACLASS="indexterm"NAME="AUTOID-6716"></A>To set your prompt, you execute a command (on most shells, the commandsets a shell variable).Before setting the prompt, you may run other commands to get informationfor it: the current directory name, for example.A shell can run two kinds of commands:<ACLASS="indexterm"NAME="AUTOID-6718"></A><SPANCLASS="link">built-in and external (<ACLASS="linkend"HREF="ch01_10.htm"TITLE="Internal and External Commands ">1.10</A>)</SPAN>.Built-in commands usually run faster than external commands.On a slow computer, the difference may be important&nbsp;- waiting a fewseconds for your prompt to reset can get irritating.Creative use of your shell's built-in commands might pay off there.Let's look at some examples:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6724"></A><EMCLASS="emphasis">pwd</EM> is an external command that<SPANCLASS="link">searches the filesystem (<ACLASS="linkend"HREF="ch14_04.htm"TITLE="How Does UNIX Find Your Current Directory? ">14.4</A>)</SPAN>to find your current directory name.(<EMCLASS="emphasis">pwd</EM> is built into some shells, but that version doesn't search thefilesystem.) However, some shells can give you the current directory name from a variable, usually<CODECLASS="literal">$cwd</CODE> or <CODECLASS="literal">$PWD</CODE>.On slow computers, the first prompt-setting command below would takemore time:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">`...`</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">set prompt=&quot;`pwd`% &quot;set prompt=&quot;${cwd}% &quot;</PRE></TD></TR></TABLE></P><PCLASS="para">There's a tradeoff here, though&nbsp;- the shell built-in<SPANCLASS="link">may not (<ACLASS="linkend"HREF="ch14_13.htm"TITLE="Which Directory Am I in, Really? ">14.13</A>)</SPAN>give the right answer.Also, in the C shell, each time you change to a new directory, you needto run a new <CODECLASS="literal">set&nbsp;prompt</CODE> command; you can use an alias like<SPANCLASS="link">setprompt (<ACLASS="linkend"HREF="ch07_05.htm"TITLE="Multiline Shell Prompts ">7.5</A>)</SPAN>to do this automatically.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6740"></A>If you're putting your current directory in your prompt, you may onlywant the tail of the pathname (the name past the last slash).How can you edit a pathname?Most people think of<SPANCLASS="link"><EMCLASS="emphasis">basename</EM> (<ACLASS="linkend"HREF="ch45_18.htm"TITLE="Using basename and dirname ">45.18</A>)</SPAN>or<SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_24.htm"TITLE="Quick Reference: sed ">34.24</A>)</SPAN>.Using the current directory from <CODECLASS="literal">$cwd</CODE>, they might type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set prompt=&quot;`basename $cwd`% &quot;</PRE></BLOCKQUOTE></P><PCLASS="para">The faster way is with the C shell's built-in &quot;tail&quot; operator, <CODECLASS="literal">:t</CODE>:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch06_08.htm"TITLE="6.8 Shell Variables ">{}</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">set prompt=&quot;${cwd:t}% &quot;</PRE></TD></TR></TABLE></P><PCLASS="para">If your current directory is <EMCLASS="emphasis">/usr/users/hanna/projects</EM>, either ofthose prompts would look like this (with a space after the percent sign):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">projects%</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6760"></A>The C shell has several of these built-in<SPANCLASS="link">string operators (<ACLASS="linkend"HREF="ch09_06.htm"TITLE="String Editing (Colon) Operators ">9.6</A>)</SPAN>like <CODECLASS="literal">:t</CODE>;the Korn Shell and <EMCLASS="emphasis">bash</EM> havemore-powerful<SPANCLASS="link">string operators (<ACLASS="linkend"HREF="ch09_07.htm"TITLE="String Editing in ksh and bash ">9.7</A>)</SPAN>.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6769"></A><ACLASS="indexterm"NAME="AUTOID-6772"></A>The Korn shell and <EMCLASS="emphasis">bash</EM> can include the current value of anothershell variable in their prompt.So, put<SPANCLASS="link"><CODECLASS="literal">$PWD</CODE> (<ACLASS="linkend"HREF="ch06_03.htm"TITLE="Predefined Environment Variables ">6.3</A>)</SPAN>in your prompt string (the <EMCLASS="emphasis">PS1</EM> shell variable)and the prompt will always show the current directory.Or use any other variable; anytime it changes, the prompt will change too.The important trick is to store the prompt with<ACLASS="indexterm"NAME="AUTOID-6779"></A>single quotes (<CODECLASS="literal">'</CODE>), not double quotes (<CODECLASS="literal">&quot;</CODE>), so thatthe variable name in your prompt won't be<SPANCLASS="link">evaluated (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>, <ACLASS="linkend"HREF="ch08_05.htm"TITLE="Command-Line Evaluation ">8.5</A>)</SPAN>until the prompt is actually printed to the screen.</P><PCLASS="para">For example, I'll put the current directory and the value of a variablenamed <EMCLASS="emphasis">PSX</EM> in my prompt.When I change either, the prompt changes too:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>PSX=foo</B></CODE>$ <CODECLASS="userinput"><B>PS1='$PWD $PSX\$ '</B></CODE>/home/jerry foo$ <CODECLASS="userinput"><B>PSX=bar</B></CODE>/home/jerry bar$ <CODECLASS="userinput"><B>cd ..</B></CODE>/home bar$</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-6796"></A><EMCLASS="emphasis">tcsh</EM> and <EMCLASS="emphasis">bash</EM> also have special prompt string customizationsthat let you include the hostname, username, time, and more.You don't need external UNIX commands; you don't need to use an aliaslike <EMCLASS="emphasis">setprompt</EM> to reset your prompt string.</P><PCLASS="para">For example, to make your shell prompt show your current directory, a newline character (to move to the nextline of a<SPANCLASS="link">two-line prompt (<ACLASS="linkend"HREF="ch07_05.htm"TITLE="Multiline Shell Prompts ">7.5</A>)</SPAN>),then the current time, and finally a <CODECLASS="literal">$</CODE> or <CODECLASS="literal">%</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">PS1='$PWD\n\t \$ '            <ICLASS="lineannotation">...bash</I>set prompt = '%~\\            <ICLASS="lineannotation">...tcsh</I>%p%% '</PRE></BLOCKQUOTE></P><PCLASS="para">For more information, see O'Reilly &amp; Associates'<EMCLASS="emphasis">Using csh &amp; tcsh</EM> and<EMCLASS="emphasis">Learning the bash Shell</EM>-or your shell's manpage.</P></LI></OL><PCLASS="para">So, if your prompt takes too long to set, look for built-ins that cansave time.As another example, article <ACLASS="xref"HREF="ch07_11.htm"TITLE="dirs in Your Prompt: Better than $cwd ">7.11</A>shows how to use <EMCLASS="emphasis">dirs</EM> in a shell prompt.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_03.htm"TITLE="7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.3 C Shell Prompt Causes Problems in vi, rsh, etc. "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_05.htm"TITLE="7.5 Multiline Shell Prompts "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.5 Multiline Shell Prompts "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.3 C Shell Prompt Causes Problems in vi, rsh, etc. </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.5 Multiline Shell Prompts </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>