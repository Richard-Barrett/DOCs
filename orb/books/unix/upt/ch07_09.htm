<HTML><HEAD><TITLE>[Chapter 7] 7.9 Show Subshell Level with $SHLVL </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:33:52Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Setting Your Shell Prompt"><LINKREL="prev"HREF="ch07_08.htm"TITLE="7.8 Highlighting in Shell Prompts "><LINKREL="next"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_08.htm"TITLE="7.8 Highlighting in Shell Prompts "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.8 Highlighting in Shell Prompts "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Setting Your Shell Prompt</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.10 What Good Is a Blank Shell Prompt? "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1340">7.9 Show Subshell Level with $SHLVL </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7049"></A>If you're like me, when you start a<SPANCLASS="link">shell escape (<ACLASS="linkend"HREF="ch30_26.htm"TITLE="Shell Escapes: Running One UNIX Command While Using Another">30.26</A>)</SPAN>or any<SPANCLASS="link">subshell (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>,you can forget that you aren't in your login shell.Your shell<SPANCLASS="link">history (<ACLASS="linkend"HREF="ch11_01.htm#UPT-ART-4920"TITLE="The Lessons of History ">11.1</A>)</SPAN>might get confused,<SPANCLASS="link">shell variables (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>)</SPAN>may not be set, and other problems may come up.<SPANCLASS="link"><EMCLASS="emphasis">tcsh</EM> (<ACLASS="linkend"HREF="ch08_03.htm"TITLE="Introduction to tcsh">8.3</A>)</SPAN>and<SPANCLASS="link"><EMCLASS="emphasis">bash</EM> (<ACLASS="linkend"HREF="ch08_02.htm"TITLE="Introduction to bash">8.2</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-7060"></A>have a built-in <EMCLASS="emphasis">SHLVL</EM><SPANCLASS="link">environment variable (<ACLASS="linkend"HREF="ch06_01.htm#UPT-ART-1170"TITLE="What Environment Variables Are Good For ">6.1</A>)</SPAN>that lets you track how many subshells deep your current shell is.This article shows how to set up <EMCLASS="emphasis">SHLVL</EM> for the C shell.(You could use a similar setup with <EMCLASS="emphasis">ksh</EM>, if you set its<SPANCLASS="link"><EMCLASS="emphasis">ENV</EM> (<ACLASS="linkend"HREF="ch06_03.htm"TITLE="Predefined Environment Variables ">6.3</A>)</SPAN>environment variable.)<EMCLASS="emphasis">tcsh</EM> (and the <EMCLASS="emphasis">csh</EM> setup below, too) also have a <EMCLASS="emphasis">shlvl</EM>shell variable with the same information.</P><PCLASS="para">In your top-level shell, the value of <CODECLASS="literal">$shlvl</CODE> is 1 (one).In the first subshell, it's 2; in a sub-subshell, it's 3; and so on.You can use this to control your shell startup files&nbsp;- for example,have some commands in your <EMCLASS="emphasis">.cshrc</EM> that run when you firstlog in (and <CODECLASS="literal">$shlvl</CODE> is 1), but don't run in subshells.You can also put <CODECLASS="literal">$shlvl</CODE> in your<SPANCLASS="link">prompt (<ACLASS="linkend"HREF="ch07_01.htm#UPT-ART-4820"TITLE="Why Change Your Prompt? ">7.1</A>)</SPAN>(but only during subshells, if you'd like&nbsp;- as a reminder that you aren't inyour top-level shell).You can set your prompt to <CODECLASS="literal">mike%</CODE> in top-levelshells, <CODECLASS="literal">(1)</CODE>&nbsp;<CODECLASS="literal">mike%</CODE> in a first-level subshell, <CODECLASS="literal">(2)</CODE>&nbsp;<CODECLASS="literal">mike%</CODE> in a second-level subshell, and so on.Here's some sample prompt-setting code for your <EMCLASS="emphasis">.cshrc</EM>:<ACLASS="indexterm"NAME="AUTOID-7083"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># If this is a subshell, put shell level in prompt:if ($SHLVL == 1) then    set prompt=&quot;${USER}% &quot;else    set prompt=&quot;($SHLVL) ${USER}% &quot;endif</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7089"></A><EMCLASS="emphasis">bash</EM> doesn't need an <EMCLASS="emphasis">if</EM> because login shells read your<EMCLASS="emphasis">.bash_profile</EM> (or <EMCLASS="emphasis">.profile</EM>)-and subshells read your<EMCLASS="emphasis">.bashrc</EM>.Here are commands to set the prompts I mentioned above:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">PS1='\u\$ '             <ICLASS="lineannotation">...for the .bash_profile</I>PS1='($SHLVL) \u\$ '    <ICLASS="lineannotation">...for the .bashrc</I></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7102"></A>Both <EMCLASS="emphasis">bash</EM> and <EMCLASS="emphasis">tcsh</EM> use the same environment variable, so youcan start one shell from the other and the level will be correct.Here's how to make <EMCLASS="emphasis">csh</EM> work with <EMCLASS="emphasis">tcsh</EM> and <EMCLASS="emphasis">bash</EM>-orwork on its own, if you don't use the other shells.Put the following lines in your <EMCLASS="emphasis">.cshrc</EM> file:[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Do you use both <EMCLASS="emphasis">csh</EM> and <EMCLASS="emphasis">tcsh</EM>-and use the same<EMCLASS="emphasis">.cshrc</EM> file for both shells?<EMCLASS="emphasis">tcsh</EM> shouldn't execute the three lines starting with<CODECLASS="literal">set&nbsp;shlvl</CODE>; it already sets those variables.Surround those three lines with <CODECLASS="literal">if (! $?tcsh)</CODE> and <CODECLASS="literal">endif</CODE>.</P></BLOCKQUOTE><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch47_04.htm"TITLE="47.4 C Shell Variable Operators and Expressions ">shlvm</A> <ACLASS="co"HREF="ch02_09.htm"TITLE="2.9 Speeding Up Your C Shell with set prompt Test ">$?prompt</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen"># Stuff for top-level logins and rsh's...if (! $?SHLVL) then    # This section read by both interactive and non-interactive shells.    #    # $SHLVL has never been set.  Set it to show that this is    # is a top-level shell; increment it to 1 below:    setenv SHLVL 0    ...endif# Set shell level (depth of nested shells).# (Note: csh can't do arithmetic on environment variables.)set shlvl = $SHLVL@ shlvl++setenv SHLVL $shlvlif ($?prompt) then    # This section only read by interactive shells:    <ICLASS="lineannotation">...put prompt-setting code (from above) here</I>endif</PRE></TD></TR></TABLE></P><PCLASS="para">Does your account run a windowing system that's started fromyour top-level shell startup file (like <EMCLASS="emphasis">.login</EM>)?If it does, lines like the examples below (these are for <EMCLASS="emphasis">.login</EM>)will reset <EMCLASS="emphasis">SHLVL</EM> so thatthe shell in the window will start at a <EMCLASS="emphasis">SHLVL</EM> of 1-and act likea top-level shell.This code assumes that your first login shell starts on the <EMCLASS="emphasis">tty</EM>named <EMCLASS="emphasis">/dev/console</EM>, and that the windows that open won't havea tty named <EMCLASS="emphasis">/dev/console</EM>.(If you aren't sure, check<SPANCLASS="link"><EMCLASS="emphasis">who</EM> (<ACLASS="linkend"HREF="ch51_04.htm"TITLE="Who's On? ">51.4</A>)</SPAN>.)You may need to adapt this.The trick is to make <EMCLASS="emphasis">SHLVL</EM> 0 (zero) before you start the windowingsystem.When the windows' shells start, they'll raise <EMCLASS="emphasis">SHLVL</EM> to 1:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># If on workstation console, bury this shell and run X right away:if (&quot;`/bin/tty`&quot; == /dev/console) then   setenv SHLVL 0   xinit            # Start X window systemendif</PRE></BLOCKQUOTE></P><PCLASS="para">Getting this to work right in every situation(<SPANCLASS="link"><EMCLASS="emphasis">rsh</EM> (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>,<SPANCLASS="link"><EMCLASS="emphasis">su</EM> (<ACLASS="linkend"HREF="ch22_22.htm"TITLE="The su Command Isn't Just for the Superuser ">22.22</A>)</SPAN>,<SPANCLASS="link">shell escapes (<ACLASS="linkend"HREF="ch30_26.htm"TITLE="Shell Escapes: Running One UNIX Command While Using Another">30.26</A>)</SPAN>-bothinteractive and noninteractive, subshells, window systems,<SPANCLASS="link"><EMCLASS="emphasis">at</EM> jobs (<ACLASS="linkend"HREF="ch40_03.htm"TITLE="The at Command ">40.3</A>)</SPAN>,and so on)<SPANCLASS="link">can be a challenge (<ACLASS="linkend"HREF="ch02_07.htm"TITLE="C Shell Setup Files Aren't Read When You Want Them to Be? ">2.7</A>)</SPAN>!It takes a little planning.Sit down and think aboutall the ways you start subshells...which subshells are interactive and which aren't...and whether they'll get <EMCLASS="emphasis">SHLVL</EM> passed from their parent process(if you aren't sure, test that with an<SPANCLASS="link"><EMCLASS="emphasis">env</EM> or <EMCLASS="emphasis">printenv</EM> command (<ACLASS="linkend"HREF="ch06_01.htm#UPT-ART-1170"TITLE="What Environment Variables Are Good For ">6.1</A>)</SPAN>).Then plan which kind of shell needs which <EMCLASS="emphasis">SHLVL</EM> settings.If it gets too complicated, make it work in most cases!If you use many subshells, this system is too handy to ignore.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_08.htm"TITLE="7.8 Highlighting in Shell Prompts "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.8 Highlighting in Shell Prompts "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.10 What Good Is a Blank Shell Prompt? "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.8 Highlighting in Shell Prompts </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.10 What Good Is a Blank Shell Prompt? </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>