<HTML><HEAD><TITLE>[Chapter 7] 7.11 dirs in Your Prompt: Better than $cwd </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:33:56Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Setting Your Shell Prompt"><LINKREL="prev"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "><LINKREL="next"HREF="ch07_12.htm"TITLE="7.12 External Commands Send Signals to Set Variables "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.10 What Good Is a Blank Shell Prompt? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Setting Your Shell Prompt</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_12.htm"TITLE="7.12 External Commands Send Signals to Set Variables "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.12 External Commands Send Signals to Set Variables "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1350">7.11 dirs in Your Prompt: Better than $cwd </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7175"></A><ACLASS="indexterm"NAME="AUTOID-7178"></A><ACLASS="indexterm"NAME="AUTOID-7180"></A><ACLASS="indexterm"NAME="AUTOID-7182"></A><ACLASS="indexterm"NAME="AUTOID-7184"></A>The C shell gives the absolute pathname of your current directory in<SPANCLASS="link"><CODECLASS="literal">$cwd</CODE> (<ACLASS="linkend"HREF="ch14_13.htm"TITLE="Which Directory Am I in, Really? ">14.13</A>)</SPAN>.Many people use that in their prompts.If you use the<SPANCLASS="link"><EMCLASS="emphasis">pushd</EM> and <EMCLASS="emphasis">popd</EM> (<ACLASS="linkend"HREF="ch14_06.htm"TITLE="The Shells' pushd and popd Commands ">14.6</A>)</SPAN>commands, you may not always remember exactlywhat's in your directory stack (I don't, at least).Also, do you want to shorten your home directory pathname to just a tilde<ACLASS="indexterm"NAME="AUTOID-7191"></A>(<CODECLASS="literal">~</CODE>) so it takes less room in the prompt?Here's how: run the <EMCLASS="emphasis">dirs</EM> command and use its output in your prompt.A simple alias for <EMCLASS="emphasis">cd</EM> users looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias cd 'chdir \!* &amp;&amp; set prompt=&quot;`dirs`% &quot;'</PRE></BLOCKQUOTE></P><PCLASS="para">and the prompts look like:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/work/project % <CODECLASS="userinput"><B>cd</B></CODE>~ % <CODECLASS="userinput"><B>cd bin</B></CODE>~/bin %</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7205"></A>Here's what to put in <EMCLASS="emphasis">.cshrc</EM> to make a<SPANCLASS="link">multiline prompt (<ACLASS="linkend"HREF="ch07_05.htm"TITLE="Multiline Shell Prompts ">7.5</A>)</SPAN>that shows the directory stack:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch50_07.htm"TITLE="50.7 How UNIX Systems Remember Their Name ">uname -n</A> <ACLASS="co"HREF="ch45_28.htm"TITLE="45.28 Quick Reference: expr ">expr</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen"># PUT hostname.domain.name IN $hostname AND hostname IN $HOST:set hostname=`uname -n`setenv HOST `expr $hostname : '\([^.]*\).*'`alias setprompt 'set prompt=&quot;\\${USER}@${HOST} `dirs`\\\! % &quot;'alias cd  'chdir \!* &amp;&amp; setprompt'alias pushd  'pushd \!* &amp;&amp; setprompt'alias popd  'popd  \!* &amp;&amp; setprompt'setprompt   # SET THE INITIAL PROMPT</PRE></TD></TR></TABLE></P><PCLASS="para">Because <EMCLASS="emphasis">bash</EM> can run a command each time it sets its prompt,and because it has<SPANCLASS="link">built-in prompt operators (<ACLASS="linkend"HREF="ch07_04.htm"TITLE="Faster Prompt Setting with Built-Ins ">7.4</A>)</SPAN>,the <EMCLASS="emphasis">bash</EM> version of all the stuff above fits on one line:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">$(...)</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">PS1='\n\u@\h $(dirs)\n\! \$ '</PRE></TD></TR></TABLE></P><PCLASS="para">&#13;That makes a blank line before each prompt; if you don't want that, join the<ACLASS="indexterm"NAME="AUTOID-7224"></A><ACLASS="indexterm"NAME="AUTOID-7226"></A>first and second lines of the <EMCLASS="emphasis">setprompt</EM> alias or remove thefirst <CODECLASS="literal">\n</CODE>.Let's push a couple of directories and watch the prompt:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">jerry@ora ~1 % <CODECLASS="userinput"><B>pushd /work/src/perl</B></CODE>/work/src/perl ~jerry@ora /work/src/perl ~2 % <CODECLASS="userinput"><B>cd ../cnews</B></CODE>jerry@ora /work/src/cnews ~3 % <CODECLASS="userinput"><B>pushd ~/bin</B></CODE>~/bin /work/src/cnews ~jerry@ora ~/bin /work/src/cnews ~4 %</PRE></BLOCKQUOTE></P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="xref.warning"HREF="ch14_13.htm"TITLE="14.13 Which Directory Am I in, Really? ">Warning!</A> </TH><TDVALIGN="TOP"><ACLASS="indexterm"NAME="AUTOID-7237"></A>Of course, the prompt looks a little redundant there because each <EMCLASS="emphasis">pushd</EM>command also shows the <EMCLASS="emphasis">dirs</EM> output. A few commands later, though,having your directory stack in the prompt will be handy.If your directory stack has a lot of entries, the first line of the prompt can get wider than the screen.In that case, store the <EMCLASS="emphasis">dirs</EM> output in a<SPANCLASS="link">shell array (<ACLASS="linkend"HREF="ch47_05.htm"TITLE="Using C Shell Arrays ">47.5</A>)</SPAN>and editit with a command like <EMCLASS="emphasis">sed</EM> or with the<SPANCLASS="link">built-in <EMCLASS="emphasis">csh</EM> string editing (<ACLASS="linkend"HREF="ch09_06.htm"TITLE="String Editing (Colon) Operators ">9.6</A>)</SPAN>.</TD></TR></TABLE><PCLASS="para">For example, to show just the tail of each path in the <EMCLASS="emphasis">dirs</EM>output, use the alias below; the C shell operator <CODECLASS="literal">:gt</CODE> globally edits allwords, to the tail of each pathname:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&#13;alias setprompt 'set dirs=(`dirs`); set prompt=&quot;\\${USER}@${HOST} $dirs:gt\\\! % &quot;'</PRE></BLOCKQUOTE></P><PCLASS="para">Watch the prompt.If you forget what the names in the prompt mean, just type <CODECLASS="literal">dirs</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">jerry@ora bin cnews jerry5 % <CODECLASS="userinput"><B>pushd ~/tmp/test</B></CODE>~/tmp/test ~/bin /work/src/cnews ~   ...jerry@ora test bin cnews jerry12 % <CODECLASS="userinput"><B>dirs</B></CODE>~/tmp/test ~/bin /work/src/cnews ~</PRE></BLOCKQUOTE></P><PCLASS="para">There's a related tip in article<ACLASS="xref"HREF="ch47_05.htm"TITLE="Using C Shell Arrays ">47.5</A>:storing the directory stack in an array variable.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_10.htm"TITLE="7.10 What Good Is a Blank Shell Prompt? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.10 What Good Is a Blank Shell Prompt? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_12.htm"TITLE="7.12 External Commands Send Signals to Set Variables "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.12 External Commands Send Signals to Set Variables "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.10 What Good Is a Blank Shell Prompt? </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.12 External Commands Send Signals to Set Variables </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>