<HTML><HEAD><TITLE>[Chapter 7] 7.12 External Commands Send Signals to Set Variables </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:33:59Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch07_01.htm"TITLE="7. Setting Your Shell Prompt"><LINKREL="prev"HREF="ch07_11.htm"TITLE="7.11 dirs in Your Prompt: Better than $cwd "><LINKREL="next"HREF="ch07_13.htm"TITLE="7.13 Pre-Prompt Commands in bash "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_11.htm"TITLE="7.11 dirs in Your Prompt: Better than $cwd "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.11 dirs in Your Prompt: Better than $cwd "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 7<BR>Setting Your Shell Prompt</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_13.htm"TITLE="7.13 Pre-Prompt Commands in bash "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.13 Pre-Prompt Commands in bash "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7540">7.12 External Commands Send Signals to Set Variables </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-7266"></A><ACLASS="indexterm"NAME="AUTOID-7268"></A><ACLASS="indexterm"NAME="AUTOID-7271"></A>The Bourne shell's<SPANCLASS="link"><EMCLASS="emphasis">trap</EM> (<ACLASS="linkend"HREF="ch44_12.htm"TITLE="Trapping Exits Caused by Interrupts ">44.12</A>)</SPAN>will run one or more commands when the shell gets a<SPANCLASS="link">signal (<ACLASS="linkend"HREF="ch38_08.htm"TITLE="What Are Signals? ">38.8</A>)</SPAN>(usually, from the <EMCLASS="emphasis">kill</EM> command).The shell will run any command, including commands thatset shell variables.For instance, the shell could re-read a configuration file; article<ACLASS="xref"HREF="ch38_11.htm"TITLE="Printer Queue Watcher: A Restartable Daemon Shell Script">38.11</A>shows that.Or it could set a new <EMCLASS="emphasis">PS1</EM> prompt variable that's updated any timean external command (like another shell script or a<SPANCLASS="link"><EMCLASS="emphasis">cron</EM> job (<ACLASS="linkend"HREF="ch40_12.htm"TITLE="Periodic Program Execution: The cron Facility ">40.12</A>)</SPAN>)sends the shell a signal.There are lots of possibilities.</P><PCLASS="para">This trick takes over signal 5, which usually isn't used.When the shell gets signal 5, a <EMCLASS="emphasis">trap</EM> runs a command to get thedate and time, then resets the prompt.A<SPANCLASS="link">background (<ACLASS="linkend"HREF="ch01_27.htm"TITLE="How Background Processing Works ">1.27</A>)</SPAN>job springs this trap once a minute.So, every minute, after you type any command, your prompt will change.</P><PCLASS="para">You could run any command: count the number of users, show the<SPANCLASS="link">load average (<ACLASS="linkend"HREF="ch39_07.htm"TITLE="Checking System Load: uptime ">39.7</A>)</SPAN>,whatever.And newer shells, like <EMCLASS="emphasis">bash</EM>, can run a command<SPANCLASS="link">in backquotes (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>each time the prompt is displayed&nbsp;- article<ACLASS="xref"HREF="ch07_08.htm"TITLE="Highlighting in Shell Prompts ">7.8</A>has an example.But, to have an external command update a shell variable at any randomtime, this <EMCLASS="emphasis">trap</EM> trick is still the best.</P><PCLASS="para">Now on to the specific example of putting date and time in the oldBourne shell's prompt.<ACLASS="indexterm"NAME="AUTOID-7292"></A><ACLASS="indexterm"NAME="AUTOID-7294"></A>If your system's <EMCLASS="emphasis">date</EM> command doesn't understand date formats(like <CODECLASS="literal">+%a</CODE>), get one that does&nbsp;- like the<SPANCLASS="link">version on the CD-ROM (<ACLASS="linkend"HREF="ch51_10.htm"TITLE="The date Command ">51.10</A>)</SPAN>.Put these lines in your<ACLASS="indexterm"NAME="AUTOID-7300"></A><EMCLASS="emphasis">.profile</EM>file (or just type them in at a Bourne shell prompt):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&#13;# Put date and time in prompt; update every 60 seconds:trap 'PS1=`date &quot;+%a %D %H:%M%n&quot;`\$\ ' 5while :do    sleep 60    kill -5 $$done &amp;promptpid=$!</PRE></BLOCKQUOTE></P><PCLASS="para">Now, every minute after you type a command, your prompt will change:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">Mon 02/17/92 08:59$ <CODECLASS="userinput"><B>cc bigprog.c</B></CODE>undefined symbol                first referenced in filexputc                               bigprog.old fatal: Symbol referencing errors.Mon 02/17/92 08:59$ <CODECLASS="userinput"><B>ls</B></CODE>bigprog.cbigprog.oMon 02/17/92 09:00$</PRE></BLOCKQUOTE></P><PCLASS="para">The prompt format is up to you.This example makes a<SPANCLASS="link">two-line prompt (<ACLASS="linkend"HREF="ch07_05.htm"TITLE="Multiline Shell Prompts ">7.5</A>)</SPAN>,<ACLASS="indexterm"NAME="AUTOID-7314"></A>with backslashes (<CODECLASS="literal">\</CODE>) to protect the newline and space from the<EMCLASS="emphasis">trap</EM>; a single-line prompt might be easier to design.The manual page for<EMCLASS="emphasis">date</EM>lists what you can put in the prompt.</P><PCLASS="para">This setup starts a<SPANCLASS="link"><EMCLASS="emphasis">while</EM> loop (<ACLASS="linkend"HREF="ch44_10.htm"TITLE="Loops That Test Exit Status ">44.10</A>)</SPAN>in thebackground.<ACLASS="indexterm"NAME="AUTOID-7323"></A>The <EMCLASS="emphasis">promptpid</EM> variable holds the<SPANCLASS="link">process ID number (<ACLASS="linkend"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>)</SPAN>of the background shell.Before you log out, you should<ACLASS="indexterm"NAME="AUTOID-7327"></A><SPANCLASS="link"><EMCLASS="emphasis">kill</EM> (<ACLASS="linkend"HREF="ch38_10.htm"TITLE="Destroying Processes with kill ">38.10</A>)</SPAN>the loop.You can type the command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">kill $promptpid</PRE></BLOCKQUOTE></P><PCLASS="para">at a prompt or put it in a file that's<SPANCLASS="link">executed when you log out (<ACLASS="linkend"HREF="ch03_02.htm"TITLE="Running Commands at Bourne/Korn Shell Logout ">3.2</A>)</SPAN>.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_11.htm"TITLE="7.11 dirs in Your Prompt: Better than $cwd "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 7.11 dirs in Your Prompt: Better than $cwd "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch07_13.htm"TITLE="7.13 Pre-Prompt Commands in bash "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 7.13 Pre-Prompt Commands in bash "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">7.11 dirs in Your Prompt: Better than $cwd </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">7.13 Pre-Prompt Commands in bash </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>