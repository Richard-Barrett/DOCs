<HTML><HEAD><TITLE>[Chapter 8] 8.20 How Many Backslashes?</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:34:46Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch08_01.htm"TITLE="8. How the Shell Interprets What You Type"><LINKREL="prev"HREF="ch08_19.htm"TITLE='8.19 "Special&quot; Characters and Operators '><LINKREL="next"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_19.htm"TITLE='8.19 "Special&quot; Characters and Operators '><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 8.19 "Special&quot; Characters and Operators 'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 8<BR>How the Shell Interprets What You Type</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9. Saving Time on the Command Line"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0460">8.20 How Many Backslashes?</A></H2><PCLASS="para">The problem with backslashes is that many different programs use themas quoting characters. As a result, it's difficult to figure out howmany backslashes you need in any situation.<ACLASS="indexterm"NAME="AUTOID-9598"></A></P><PCLASS="para">Here's an example, taken from System V Release 4.(Notice that I'm using the standard System V version of <EMCLASS="emphasis">echo</EM> from<EMCLASS="emphasis">/bin/echo</EM>.SVR4 has four versions of <EMCLASS="emphasis">echo</EM>!)</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>/bin/echo hi \ there</B></CODE>hi  there% <CODECLASS="userinput"><B>/bin/echo hi \\ there</B></CODE>hi \ there% <CODECLASS="userinput"><B>/bin/echo hi \\\\ there</B></CODE>hi \ there</PRE></BLOCKQUOTE></P><PCLASS="para">In the first case, the shell uses the backslash to<SPANCLASS="link">quote (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>the following space character.The space before the backslash is a word separator.So <EMCLASS="emphasis">echo</EM> gets two arguments: &quot;<CODECLASS="literal">hi</CODE>&quot; and &quot;<CODECLASS="literal"><IMGSRC="../chars/squ.gif"ALT=" ">there</CODE>&quot;(without the quotes)-where <CODECLASS="literal"><IMGSRC="../chars/squ.gif"ALT=" "></CODE> is the space characterthat was quoted by the backslash.As always, <EMCLASS="emphasis">echo</EM> prints a single space between each argument.The first space you see in the output is echo's argument-separatingspace, and the second space came along with the second argument(thanks to the backslash).</P><PCLASS="para">In the second case, the shell converts <CODECLASS="literal">\\</CODE> to <CODECLASS="literal">\</CODE>;the first backslash tells the shell to<SPANCLASS="link">quote (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>(turn off the special meaning of) the second backslash.The <EMCLASS="emphasis">echo</EM> command gets three arguments,&quot;<CODECLASS="literal">hi</CODE>&quot;, &quot;<CODECLASS="literal">\</CODE>&quot; and &quot;<CODECLASS="literal">there</CODE>&quot;, and itechoes those arguments with a single space between each.(I've heard claimsthat, on some systems, this command wouldn't print any backslashes,but I wasn't able to reconstruct that situation.)</P><PCLASS="para">In the third case, the shell converts each pair of backslashes into abackslash, and runs the command <CODECLASS="literal">echo&nbsp;hi&nbsp;\\&nbsp;there</CODE>.But this isSystem V, and System V's <EMCLASS="emphasis">echo</EM><SPANCLASS="link">interprets backslashes (<ACLASS="linkend"HREF="ch08_06.htm"TITLE="Output Command-Line Arguments ">8.6</A>)</SPAN>as special characters.So when <EMCLASS="emphasis">echo</EM> sees the remaining two backslashes, it convertsthem into a single backslash. So you only see a single backslash,even though you typed four. On BSD systems, <EMCLASS="emphasis">echo</EM> doesn't dothis; you'd see two backslashes.For that matter, if you're using SVR4's C shell, with its built-in <EMCLASS="emphasis">echo</EM> command, you'll see the BSD behavior.You'll also see the BSD behavior if you're using SVR4's <EMCLASS="emphasis">/usr/ucb/echo</EM>.</P><PCLASS="para">The<SPANCLASS="link">terminal driver (<ACLASS="linkend"HREF="ch42_01.htm#UPT-ART-1142"TITLE="Making Sense Out of the Terminal Mess ">42.1</A>)</SPAN>is also capable of &quot;eating&quot; backslashes if theyappear before special characters. If abackslash precedes the &quot;erase&quot; character (normally CTRL-h) or the &quot;kill&quot; character (normallyCTRL-u), the terminal driver will pass the controlcharacter to the shell, rather than interpretingit as an editingcharacter. In the process, it &quot;eats&quot; the backslash. So if you type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo \</B></CODE><KBDCLASS="keycap">[CTRL-u]</KBD></PRE></BLOCKQUOTE></P><PCLASS="para">The shell receives the line <CODECLASS="literal">echo&nbsp;CTRL-u</CODE>.See the <EMCLASS="emphasis">termio</EM> manual page for more information; there arecertainly system-dependent variations.</P><PCLASS="para">What's the point of this article? Well, backslashes are messy. Theshell, the terminal driver, <EMCLASS="emphasis">echo</EM> (sometimes), and several otherutilities use them. If you think very carefully, you can figure outexactly what's consuming them. If you're not of a rigorous frame ofmind, you can just add backslashes until you get what you want.(But, obviously, the non-rigorous approach has pitfalls.)I've seen situations in<SPANCLASS="link"><EMCLASS="emphasis">troff</EM> (<ACLASS="linkend"HREF="ch43_13.htm"TITLE="The Text Formatters nroff, troff, ditroff, ... ">43.13</A>)</SPAN>(which is another storyaltogether) where you need eight backslashes in order to have a singlebackslash left at the point where you want it!</P><PCLASS="para">(Extra credit:What happens when you put quotes (<CODECLASS="literal">&quot;</CODE> or <CODECLASS="literal">'</CODE>) around thestrings in the <EMCLASS="emphasis">echo</EM> commands above?Especially, should quotes affect the way that the <CODECLASS="literal">\</CODE><KBDCLASS="keycap">[CTRL-u]</KBD>is interpreted?)<ACLASS="indexterm"NAME="AUTOID-9652"></A><ACLASS="indexterm"NAME="AUTOID-9653"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN>, <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch08_19.htm"TITLE='8.19 "Special&quot; Characters and Operators '><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 8.19 "Special&quot; Characters and Operators 'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9. Saving Time on the Command Line"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">8.19 "Special&quot; Characters and Operators </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9. Saving Time on the Command Line</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>