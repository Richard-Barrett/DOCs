<HTML><HEAD><TITLE>[Chapter 9] 9.16 Command Substitution </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:35:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"><LINKREL="prev"HREF="ch09_15.htm"TITLE="9.15 Throwaway Scripts for Complicated Commands "><LINKREL="next"HREF="ch09_17.htm"TITLE="9.17 Handling Lots of Text with Temporary Files "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_15.htm"TITLE="9.15 Throwaway Scripts for Complicated Commands "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.15 Throwaway Scripts for Complicated Commands "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9<BR>Saving Time on the Command Line</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_17.htm"TITLE="9.17 Handling Lots of Text with Temporary Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.17 Handling Lots of Text with Temporary Files "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-6630">9.16 Command Substitution </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10605"></A><ACLASS="indexterm"NAME="AUTOID-10608"></A>A pair of backquotes (<CODECLASS="literal">``</CODE>) does<EMCLASS="emphasis">command substitution</EM>. This is really useful&nbsp;- itlets you use the standard output from one command as arguments toanother command.</P><PCLASS="para">Here's an example. Assume you want to edit all files in thecurrent directory that containthe word &quot;error.&quot; Type this:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch15_07.htm"TITLE="15.7 Getting a List of Matching Files with grep -l ">-l</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">$ <CODECLASS="userinput"><B>vi `grep -l error *.c`</B></CODE>3 files to edit&quot;bar.c&quot; 254 lines, 28338 characters   ...$</PRE></TD></TR></TABLE></P><PCLASS="para">But why does this work? How did we build the incantation above?First, think about how you'd do this without using any specialtechniques. You'd use <EMCLASS="emphasis">grep</EM> to find out which commandscontain<ACLASS="indexterm"NAME="AUTOID-10620"></A>the word &quot;error&quot;; then you'd use <EMCLASS="emphasis">vi</EM>to edit this list:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>grep error *.c</B></CODE>bar.c:  error(&quot;input too long&quot;);bar.c:  error(&quot;input too long&quot;);baz.c:  error(&quot;data formatted incorrectly&quot;);foo.c:  error(&quot;can't divide by zero&quot;):foo.c:  error(&quot;insufficient memory&quot;):$ <CODECLASS="userinput"><B>vi bar.c baz.c foo.c</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Is there any way to compress these into one command? Yes, by usingcommand substitution. First, we need to modify our <EMCLASS="emphasis">grep</EM> commandso that it only produces a list of filenames, rather than filenamesand text. That's easy; use <EMCLASS="emphasis">grep -l</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>grep -l error *.c</B></CODE>bar.cbaz.cfoo.c</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10634"></A>The <EMCLASS="emphasis">-l</EM> option lists each filename only once, evenif many lines in the file match. (This makes me think that<EMCLASS="emphasis">grep -l</EM> was designed with precisely thisapplication in mind.) Now, we want toedit these files; so we put the <EMCLASS="emphasis">grep</EM> command inside backquotes, and use it as the argument to <EMCLASS="emphasis">vi</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>vi `grep -l error *.c`</B></CODE>3 files to edit&quot;bar.c&quot; 254 lines, 28338 characters   ...$</PRE></BLOCKQUOTE></P><PCLASS="para">You might be wondering about the difference betweenthe &quot;vertical&quot; output from <EMCLASS="emphasis">grep</EM>,and the &quot;horizontal&quot; way that people usuallytype arguments on a command line. The shell handles thiswith no problems. Inside backquotes, both a newline anda space are argument separators.</P><PCLASS="para">The list you use with command substitution doesn't have to be filenames.Let's see how to send a<SPANCLASS="link">mail message (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>to all the users logged on to the system now.You want a command line like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mail joe lisa franka mondo bozo harpo ...</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Getting there takes a little thinking about what UNIX commands you needto run to get the output you want.(This is real &quot;Power Tools&quot; stuff!)To get a list of those users, you could use<ACLASS="indexterm"NAME="AUTOID-10652"></A><SPANCLASS="link"><EMCLASS="emphasis">who</EM> (<ACLASS="linkend"HREF="ch51_04.htm"TITLE="Who's On? ">51.4</A>)</SPAN>.The <EMCLASS="emphasis">who</EM> output also lists login time and other information&nbsp;- butyou can cut that off with a command like<SPANCLASS="link"><EMCLASS="emphasis">cut</EM> (<ACLASS="linkend"HREF="ch35_14.htm"TITLE="Cutting Columns or Fields with cut ">35.14</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>who | cut -c1-8</B></CODE>joelisafrankalisajoemondojoe...</PRE></BLOCKQUOTE></P><PCLASS="para">Some users are logged on more than once.To get a unique list, use<SPANCLASS="link"><EMCLASS="emphasis">sort -u</EM> (<ACLASS="linkend"HREF="ch36_06.htm"TITLE="Miscellaneous sort Hints ">36.6</A>)</SPAN>.You're done.Just put the name-making command line between backquotes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>mail `who | cut -c1-8 | sort -u`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If you aren't sure how this works, replace the command youwant to run with<SPANCLASS="link"><EMCLASS="emphasis">echo</EM> (<ACLASS="linkend"HREF="ch08_06.htm"TITLE="Output Command-Line Arguments ">8.6</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>echo `who | cut -c1-8 | sort -u`</B></CODE>bozo franka harpo joe lisa mondo</PRE></BLOCKQUOTE></P><PCLASS="para">After using UNIX for awhile, you'll find that this is one of its mostuseful features. You'll find many situations where youuse one command to generate a list of words, then put that command inbackquotes and use it as an argument to something else.Sometimes you'll want to<SPANCLASS="link">nest (<ACLASS="linkend"HREF="ch45_31.htm"TITLE="Nested Command Substitution ">45.31</A>)</SPAN>the backquotes&nbsp;- this is where the <EMCLASS="emphasis">bash</EM> and <EMCLASS="emphasis">ksh</EM> <CODECLASS="literal">$(&nbsp;)</CODE>operators (which replace the opening and closing backquote,respectively) come in handy.There are<SPANCLASS="link">some problems (<ACLASS="linkend"HREF="ch09_20.htm"TITLE="Too Many Files for the Command Line ">9.20</A>)</SPAN>with command substitution but you usually won't run into them.</P><PCLASS="para">This book has many, many examples of command substitution.Here are some of them:<SPANCLASS="link">making unique filenames (<ACLASS="linkend"HREF="ch16_16.htm"TITLE="Picking a Unique Filename Automatically ">16.16</A>)</SPAN>,<SPANCLASS="link">removing some files from a list (<ACLASS="linkend"HREF="ch23_21.htm"TITLE="Removing Every File but One ">23.21</A>)</SPAN>,<SPANCLASS="link">counting words (<ACLASS="linkend"HREF="ch29_06.htm"TITLE="Counting Lines, Words, and Characters: wc ">29.6</A>)</SPAN>,<SPANCLASS="link">getting a list of files (<ACLASS="linkend"HREF="ch15_09.htm"TITLE="nom: List Files that Don't Match a Wildcard ">15.9</A>)</SPAN>,<SPANCLASS="link">setting your shell prompt (<ACLASS="linkend"HREF="ch07_04.htm"TITLE="Faster Prompt Setting with Built-Ins ">7.4</A>, <ACLASS="linkend"HREF="ch07_06.htm"TITLE="Session Information in Your Terminal's Status Line ">7.6</A>, <ACLASS="linkend"HREF="ch07_11.htm"TITLE="dirs in Your Prompt: Better than $cwd ">7.11</A>)</SPAN>,<SPANCLASS="link">setting variables (<ACLASS="linkend"HREF="ch05_04.htm"TITLE="Setting the TERMCAP Variable with tset ">5.4</A>, <ACLASS="linkend"HREF="ch45_30.htm"TITLE="Grabbing Parts of a String ">45.30</A>)</SPAN>,<SPANCLASS="link">making a wildcard (<ACLASS="linkend"HREF="ch15_05.htm"TITLE='Matching All "Dot Files&quot; with Wildcards'>15.5</A>)</SPAN>,and<SPANCLASS="link">running a loop (<ACLASS="linkend"HREF="ch40_02.htm"TITLE="Waiting a Little While: sleep ">40.2</A>)</SPAN>.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_15.htm"TITLE="9.15 Throwaway Scripts for Complicated Commands "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.15 Throwaway Scripts for Complicated Commands "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_17.htm"TITLE="9.17 Handling Lots of Text with Temporary Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.17 Handling Lots of Text with Temporary Files "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">9.15 Throwaway Scripts for Complicated Commands </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.17 Handling Lots of Text with Temporary Files </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>