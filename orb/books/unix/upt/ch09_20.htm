<HTML><HEAD><TITLE>[Chapter 9] 9.20 Too Many Files for the Command Line </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:35:23Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"><LINKREL="prev"HREF="ch09_19.htm"TITLE="9.19 For the Impatient: Type-Ahead "><LINKREL="next"HREF="ch09_21.htm"TITLE="9.21 Handle Too-Long Command Lines with xargs "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_19.htm"TITLE="9.19 For the Impatient: Type-Ahead "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.19 For the Impatient: Type-Ahead "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9<BR>Saving Time on the Command Line</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_21.htm"TITLE="9.21 Handle Too-Long Command Lines with xargs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.21 Handle Too-Long Command Lines with xargs "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0001">9.20 Too Many Files for the Command Line </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-10922"></A><ACLASS="indexterm"NAME="UPT-ART-1-IX-TOO-LONG-COMMANDS"></A><ACLASS="indexterm"NAME="UPT-ART-1-IX-TOO-LONG-FOR-COMMAND-LINE"></A>A pair of<SPANCLASS="link">backquotes (<CODECLASS="literal">``</CODE>) (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>lets you run a command like<SPANCLASS="link"><EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_01.htm#UPT-ART-7410"TITLE="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A>)</SPAN>and put its output onto another command's command line.For example:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch43_07.htm"TITLE="43.7 Quick-and-Dirty Formatting Before Printing ">pr</A> <ACLASS="co"HREF="ch43_02.htm"TITLE="43.2 Introduction to Printing on UNIX ">lpr</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>pr </B></CODE><CODECLASS="userinput"><B>-n `find . -type f -mtime -1 -print` | lpr</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para">would give a list of all the files you edited today to <EMCLASS="emphasis">pr</EM> andpipe <EMCLASS="emphasis">pr</EM>'s output to the printer.</P><PCLASS="para">One day I was making<SPANCLASS="link">global substitutions to a lot of files (<ACLASS="linkend"HREF="ch34_03.htm"TITLE="Testing and Using a sed Script: checksed, runsed ">34.3</A>, <ACLASS="linkend"HREF="ch28_09.htm"TITLE="ex Scripts Built by diff ">28.9</A>)</SPAN><ACLASS="indexterm"NAME="AUTOID-10946"></A><ACLASS="indexterm"NAME="AUTOID-10949"></A>and got the error <CODECLASS="literal">Arguments too long</CODE>when I tried to print the files I had edited.Turned out that <EMCLASS="emphasis">find</EM> output such a long list of files that itoverflowed the command line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>pr -n ./</B></CODE><CODECLASS="replaceable"><I>path</I></CODE><CODECLASS="userinput"><B>/</B></CODE><CODECLASS="replaceable"><I>file1 </I></CODE><CODECLASS="userinput"><B>./</B></CODE><CODECLASS="replaceable"><I>path</I></CODE><CODECLASS="userinput"><B>/</B></CODE><CODECLASS="replaceable"><I>path</I></CODE><CODECLASS="userinput"><B>/</B></CODE><CODECLASS="replaceable"><I>file2 </I></CODE><CODECLASS="userinput"><B>./</B></CODE><CODECLASS="replaceable"><I>path</I></CODE><CODECLASS="userinput"><B>/</B></CODE><CODECLASS="replaceable"><I>file3</I></CODE> <CODECLASS="userinput"><B>... | lpr</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">(This can happen for any command inside backquotes, not just <EMCLASS="emphasis">find</EM>.)</P><PCLASS="para">I had to split <EMCLASS="emphasis">find</EM>'s standard output into chunks that wouldn'tbe too long.<ACLASS="indexterm"NAME="AUTOID-10975"></A>This was on a UNIX that didn't have the great<SPANCLASS="link"><EMCLASS="emphasis">xargs</EM> (<ACLASS="linkend"HREF="ch09_21.htm"TITLE="Handle Too-Long Command Lines with xargs ">9.21</A>)</SPAN>,so I decided to use<SPANCLASS="link"><EMCLASS="emphasis">fmt</EM> (<ACLASS="linkend"HREF="ch35_02.htm"TITLE="Neatening Text with fmt ">35.2</A>)</SPAN>instead.<EMCLASS="emphasis">fmt</EM> reads its standard input and collects enough text to fill anoutput line.I used <EMCLASS="emphasis">fmt -1000</EM>,which makes output lines about 1000 characterswide-long enough so I wouldn't need too many <EMCLASS="emphasis">pr</EM> commands, butnot too long...I started a Bourne shell, which lets you<SPANCLASS="link">pipe to the input of a loop (<ACLASS="linkend"HREF="ch45_23.htm"TITLE="The Ins and Outs of Redirected I/O Loops ">45.23</A>)</SPAN>.The shell prints<SPANCLASS="link">secondary prompts (<ACLASS="linkend"HREF="ch09_13.htm"TITLE="Multiline Commands, Secondary Prompts ">9.13</A>)</SPAN>until you finish entering the loop:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch44_13.htm"TITLE="44.13 read: Reading from the Keyboard ">read</A> <ACLASS="co"HREF="ch38_04.htm"TITLE="38.4 Subshells ">exit</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>sh</B></CODE>$ <CODECLASS="userinput"><B>find . -type f -mtime -1 -print |</B></CODE>&gt; <CODECLASS="userinput"><B>fmt -1000 |</B></CODE>&gt; <CODECLASS="userinput"><B>while </B></CODE><CODECLASS="userinput"><B>read </B></CODE><CODECLASS="userinput"><B>files</B></CODE>&gt; <CODECLASS="userinput"><B>do pr -n $files</B></CODE>&gt; <CODECLASS="userinput"><B>done | lpr</B></CODE>$ <CODECLASS="userinput"><B>exit</B></CODE>%</PRE></TD></TR></TABLE></P><PCLASS="para">The shell put each line of filenames from <EMCLASS="emphasis">fmt -1000</EM> into the<EMCLASS="emphasis">files</EM> shell variable, ran <EMCLASS="emphasis">pr</EM> with those filenames, andpiped the output of all the <EMCLASS="emphasis">pr</EM>s to the standard input of <EMCLASS="emphasis">lpr</EM>.The <EMCLASS="emphasis">lpr</EM> command didn't know that it was being fed by lots of <EMCLASS="emphasis">pr</EM>commands&nbsp;- all it saw was a series of 66&nbsp;- line pages that the <EMCLASS="emphasis">pr</EM>soutput.</P><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-1-IX-XARGS-COMMAND"></A>If you have<EMCLASS="emphasis">xargs</EM>on your system, you can do the same thing this way:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find . -type f -mtime -1 -print | xargs pr -n | lpr</B></CODE></PRE></BLOCKQUOTE></P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="xref.warning"HREF="ch09_22.htm"TITLE="9.22 xargs: Problems with Spaces and Newlines ">Warning!</A> </TH><TDVALIGN="TOP">&#13;<EMCLASS="emphasis">xargs</EM> reads text from its standard input, collects a reasonable amount,then runs the command line <CODECLASS="literal">pr&nbsp;-n&nbsp;</CODE><CODECLASS="replaceable"><I>path</I></CODE><CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>file&nbsp;path</I></CODE><CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>file</I></CODE><CODECLASS="literal">...</CODE>.Then <EMCLASS="emphasis">xargs</EM> reads more text and runs <EMCLASS="emphasis">pr</EM> again, over and over,until it's read all the text.The output of the <EMCLASS="emphasis">xargs</EM> command (which is actually the output ofall those <EMCLASS="emphasis">pr</EM>s) is fed to a single <EMCLASS="emphasis">lpr</EM> command.</TD></TR></TABLE><PCLASS="para">Parting shot (by ML): there's really no excuse for <EMCLASS="emphasis">xargs</EM> or any of these other tricks;they're just a patch for a design error. UNIX should be ableto handle arbitrarily long command lines; maybe in some futureversion, it will.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_19.htm"TITLE="9.19 For the Impatient: Type-Ahead "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 9.19 For the Impatient: Type-Ahead "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_21.htm"TITLE="9.21 Handle Too-Long Command Lines with xargs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.21 Handle Too-Long Command Lines with xargs "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">9.19 For the Impatient: Type-Ahead </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.21 Handle Too-Long Command Lines with xargs </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>