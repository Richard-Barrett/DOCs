<HTML><HEAD><TITLE>[Chapter 9] 9.24 Get File List by Editing Output of ls -l, grep, etc. </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:35:31Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch09_01.htm"TITLE="9. Saving Time on the Command Line"><LINKREL="prev"HREF="ch09_23.htm"TITLE='9.23 Workaround for "Arguments too long&quot; Error'><LINKREL="next"HREF="ch09_25.htm"TITLE="9.25 The C Shell repeat Command "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_23.htm"TITLE='9.23 Workaround for "Arguments too long&quot; Error'><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 9.23 Workaround for "Arguments too long&quot; Error'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 9<BR>Saving Time on the Command Line</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_25.htm"TITLE="9.25 The C Shell repeat Command "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.25 The C Shell repeat Command "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7630">9.24 Get File List by Editing Output of ls -l, grep, etc. </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11252"></A><ACLASS="indexterm"NAME="AUTOID-11255"></A><ACLASS="indexterm"NAME="AUTOID-11258"></A><ACLASS="indexterm"NAME="AUTOID-11261"></A><ACLASS="indexterm"NAME="AUTOID-11264"></A>It seems like I'm always using <EMCLASS="emphasis">ls</EM>-also, usually, <EMCLASS="emphasis">-l</EM> andmaybe other options&nbsp;- to find out which of my files I need to dosomething to.I also use <EMCLASS="emphasis">grep</EM> or one of the<SPANCLASS="link">other <EMCLASS="emphasis">grep</EM>s (<ACLASS="linkend"HREF="ch27_01.htm#UPT-ART-7420"TITLE="Different Versions of grep ">27.1</A>)</SPAN>to search for files that have certain text in them.No matter what command I use, I<SPANCLASS="link">redirect the output (<ACLASS="linkend"HREF="ch13_01.htm#UPT-ART-1023"TITLE="Using Standard Input and Output">13.1</A>)</SPAN>to a<SPANCLASS="link">temporary file (<ACLASS="linkend"HREF="ch21_02.htm"TITLE="A Better Place for Temporary Files: /tmp ">21.2</A>, <ACLASS="linkend"HREF="ch21_03.htm"TITLE="Unique Names for Temporary Files ">21.3</A>)</SPAN>and then edit the file.After the editing, I have a list of filenames that I can use inside<SPANCLASS="link">backquotes (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>with some other command&nbsp;- or store in a<SPANCLASS="link">shell variable (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>)</SPAN>.</P><PCLASS="para">Here are two examples.These show the <EMCLASS="emphasis">vi</EM> editor, but you can use any other UNIX editorthat handles plain text files.Depending on what you need, there are probably UNIX utilities that can help.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-7630-SECT-1.1">9.24.1 What Files Have I Just Edited? </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11281"></A>While I was working on this book, my current directory could have around1000 files.If I wanted to find out which files I'd edited today, I would use<SPANCLASS="link"><EMCLASS="emphasis">ls -lt</EM> (<ACLASS="linkend"HREF="ch16_02.htm"TITLE="Finding Oldest or Newest Files with ls -t and ls -u ">16.2</A>)</SPAN>to get a listing of files with the most recently modifiedlisted first.Edit the file, delete all lines except files I'd edited today, thenremove everything from each line except the filename.Finally, use backquotes and<SPANCLASS="link"><EMCLASS="emphasis">rcp</EM> (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>to copy the files to the <EMCLASS="emphasis">ptbackup</EM> directory on the <EMCLASS="emphasis">fserver</EM>computer:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Make the file list and start the editor:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch11_03.htm"TITLE="11.3 My Favorite Is !$ ">!$</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -lt &gt; /tmp/bk$$</B></CODE>% <CODECLASS="userinput"><B>vi !$</B></CODE>vi /tmp/bk28182</PRE></TD></TR></TABLE></P></LI><LICLASS="listitem"><PCLASS="para">Delete all lines except the ones for files from February 29:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">total 4294                                           <ICLASS="lineannotation">&lt;&lt; delete</I>-rw-r--r--  1 jerry        1529 Feb 29 17:25 a7630-rw-r--r--  1 jerry        1864 Feb 29 16:29 a0147   ...<ICLASS="lineannotation">Keep these lines</I>...-rw-r--r--  1 jerry        1772 Feb 29 09:01 a1900-rw-r--r--  1 jerry        2693 Feb 29 08:51 a0031-rw-r--r--  1 jerry         744 Feb 28 23:35 a7600   <ICLASS="lineannotation">&lt;&lt; delete</I>-rw-r--r--  1 jerry        1957 Feb 28 22:18 a5210   <ICLASS="lineannotation">&lt;&lt; delete</I>   ...<ICLASS="lineannotation">Delete the rest</I>...</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">In <EMCLASS="emphasis">vi</EM>, use the<SPANCLASS="link"><CODECLASS="literal">|</CODE> (vertical bar) command (<ACLASS="linkend"HREF="ch30_34.htm"TITLE="vi Line Commands vs. Character Commands ">30.34</A>)</SPAN>to find the columnnumber just before the filenames start.For example, here's where the commands <CODECLASS="literal">30|</CODE>, <CODECLASS="literal">39|</CODE>,and <CODECLASS="literal">45|</CODE> moved the cursor:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">-rw-r--r--  1 jerry        1529 Feb 29 17:25 a7630                           30^      39^   45^</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">So, I want to delete columns 1-45 from every line.The easiest way is a<SPANCLASS="link">filter-through (<ACLASS="linkend"HREF="ch30_22.htm"TITLE="Filtering Text Through a UNIX Command ">30.22</A>)</SPAN>with<SPANCLASS="link"><EMCLASS="emphasis">colrm&nbsp;1&nbsp;45</EM> (<ACLASS="linkend"HREF="ch35_15.htm"TITLE="Cutting Columns with colrm ">35.15</A>)</SPAN>or<SPANCLASS="link"><EMCLASS="emphasis">cut -c46-</EM> (<ACLASS="linkend"HREF="ch35_14.htm"TITLE="Cutting Columns or Fields with cut ">35.14</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>:%!cut -c46-</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Now the file looks like this&nbsp;- just the filenames:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">a7630a0147...a1900a0031</PRE></BLOCKQUOTE></P><PCLASS="para">I can sort it with<CODECLASS="literal">:%!sort</CODE>if I want to&nbsp;- or do more editing.Then I write the file and quit.</P></LI><LICLASS="listitem"><PCLASS="para">Feed the list of filenames to the UNIX command I want to run:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>rcp `cat /tmp/bk$$` fserver:ptbackup</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This works with most any UNIX command&nbsp;- not just <EMCLASS="emphasis">rcp</EM>.For example, if I want to print the files, I can use:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>lpr `cat /tmp/bk$$`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">If I'll be doing a lot of work with the filenames, typing the backquotesover and over is a pain.I'll store the filenames in a<SPANCLASS="link">shell variable (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>)</SPAN>:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">First, pick a name for the shell variable.I usually choose <EMCLASS="emphasis">temp</EM> because it's not used on my account.You should check the name you choose before you set it by typing <CODECLASS="literal">echo</CODE><CODECLASS="literal">&quot;$</CODE><CODECLASS="replaceable"><I>varname</I></CODE><CODECLASS="literal">&quot;</CODE>; be sure it's empty or useless.</P></LI><LICLASS="listitem"><PCLASS="para">Store the filenames from your temporary file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set temp=(`cat /tmp/bk$$`)</B></CODE> <ICLASS="lineannotation">...C shells</I> $ <CODECLASS="userinput"><B>temp=&quot;`cat /tmp/bk$$`&quot;</B></CODE> <ICLASS="lineannotation">...Bourne shells</I></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Use the shell variable.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cp $temp</B></CODE><CODECLASS="replaceable"><I> backupdir</I></CODE>% <CODECLASS="userinput"><B>vi $temp</B></CODE>% ...</PRE></BLOCKQUOTE></P></LI></UL></LI></OL><PCLASS="para">(Sometimes,<SPANCLASS="link"><EMCLASS="emphasis">find</EM> with operators like <EMCLASS="emphasis">-newer</EM> (<ACLASS="linkend"HREF="ch17_08.htm"TITLE="Exact File Time Comparisons ">17.8</A>)</SPAN>is easier&nbsp;- but <EMCLASS="emphasis">find</EM> searches subdirectories too,unless you use<SPANCLASS="link"><EMCLASS="emphasis">-prune</EM> (<ACLASS="linkend"HREF="ch17_23.htm"TITLE="Finding Files with -prune ">17.23</A>)</SPAN>.)Oh, try to remember to <EMCLASS="emphasis">rm</EM> the temp file when you're done with it.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-7630-SECT-1.2">9.24.2 Search for Text with grep </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-11385"></A><ACLASS="indexterm"NAME="AUTOID-11388"></A>The <EMCLASS="emphasis">grep</EM><SPANCLASS="link"><EMCLASS="emphasis">-l</EM> option (<ACLASS="linkend"HREF="ch15_07.htm"TITLE="Getting a List of Matching Files with grep -l ">15.7</A>)</SPAN>gives you a list of filenames that match a string&nbsp;- that might be all Ineed.But sometimes I need to see the lines that <EMCLASS="emphasis">grep</EM> found to decidewhether to include that file or not.Here's how:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Search the files.Be sure that your <EMCLASS="emphasis">grep</EM>-like command will print the filename beforeeach matching line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>egrep -i &quot;summar(y|ies)&quot; * &gt; /tmp/bk$$</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Edit the temporary file.The lines will look something like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">a0066:Here is a summary of the different components:a0183:Summary: String functions in awka0183:for a summary of all the string functionsa0184:Let's start wlth a short summary how awk treats commanda1000:Here's a summary of the rules that UNIX uses to interpret paths:a1000:Here's a summary of the different sorts of wildcards available:a1680:cumulative summary files and ASCII reports in a2710:In summary, \fIcomm\fP is similar to \fIdiff\fP:   ...</PRE></BLOCKQUOTE></P><PCLASS="para">Leave a line for each file that you want to operate on; delete the rest:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">a0066:Here is a summary of the different components:a0183:Summary: String functions in awka1000:Here's a summary of the different sorts of wildcards available:   ...</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Strip off everything after the filenames.Unless any of your filenames have colons (<CODECLASS="literal">:</CODE>) in them, youcan tell <EMCLASS="emphasis">vi</EM> to strip off the colons and everything after them.That command is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>:%s/:.*//</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If there's a chance that a filename might be repeated (because<EMCLASS="emphasis">grep</EM> matched more than one line), filter the filenames through<EMCLASS="emphasis">sort -u</EM> to get rid of duplicates.In <EMCLASS="emphasis">vi</EM>, type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>:%!sort -u</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Like before, what's left is a list of filenames:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">a0066a0183a1000    ...</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;You can feed them to whatever command you need to run, as in theprevious example.</P></LI></OL><PCLASS="para">I hope those two examples give you the idea, which is: learn what UNIX utilitiesare &quot;out there&quot;-and how to grab and edit their output to do what you want.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_23.htm"TITLE='9.23 Workaround for "Arguments too long&quot; Error'><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 9.23 Workaround for "Arguments too long&quot; Error'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch09_25.htm"TITLE="9.25 The C Shell repeat Command "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 9.25 The C Shell repeat Command "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">9.23 Workaround for "Arguments too long&quot; Error</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">9.25 The C Shell repeat Command </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>