<HTML><HEAD><TITLE>[Chapter 10] 10.5 Sourceable Scripts </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:35:49Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch10_01.htm"TITLE="10. Aliases"><LINKREL="prev"HREF="ch10_04.htm"TITLE="10.4 Aliases in ksh and bash "><LINKREL="next"HREF="ch10_06.htm"TITLE="10.6 Avoiding C Shell Alias Loops "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_04.htm"TITLE="10.4 Aliases in ksh and bash "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.4 Aliases in ksh and bash "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 10<BR>Aliases</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_06.htm"TITLE="10.6 Avoiding C Shell Alias Loops "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.6 Avoiding C Shell Alias Loops "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-5600">10.5 Sourceable Scripts </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-5600-IX-SOURCEABLE-SCRIPTS-DESCRIBED"></A><ACLASS="indexterm"NAME="UPT-ART-5600-IX-SCRIPTS-SOURCEABLE"></A>A powerful concept in <EMCLASS="emphasis">csh</EM> is that of aliases. Another greatcapability is shell scripts. Each has its strengths. An alias is justright for common sequences of commands, calling a command by a differentname, and so on.Scripts are great for more flexible processing and batch processing.There are limitations to both, and I will show a way around them.</P><PCLASS="para">The limitation to aliases is that you are working pretty much withone command line. Consider this example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias pp 'set o2=$cwd; popd; set old=$o2; dir_number; record_dir pp; \\  prompt_set; set cd_attempt=(\!*); if ($#cd_attempt &gt; 0) cd $cd_attempt'</PRE></BLOCKQUOTE></P><PCLASS="para">Now this works fine for me, and it served me well for a few yearsand thousands of invocations, but it's at the point where I start thinking thata script is more suited to the job. This brings me to the limitationof scripts...</P><PCLASS="para">Shell scripts are great for accomplishing some task that might changea file, start a program, etc. They are limited by the fact thatany changes they make to shell or environment variables<SPANCLASS="link">are not visible (<ACLASS="linkend"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>)</SPAN>to the parent shell that started them.In other words, you can write somereally cool script that will change directories for you if you don'ttouch the keyboard for five seconds, but once the script exits, you arestill in the same place you started.</P><PCLASS="para">The answer is to combine the best of both worlds. Consider this:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch47_05.htm"TITLE="47.5 Using C Shell Arrays ">( )</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">alias pp 'set cd_attempt=(\!*); source ~/bin/pp_csh'</PRE></TD></TR></TABLE></P><PCLASS="para">We set up a variable and source a script. The conceptis this: put your command-line arguments into a variable and then<SPANCLASS="link"><EMCLASS="emphasis">source</EM> (<ACLASS="linkend"HREF="ch44_23.htm"TITLE="Reading Files with the . and source Commands ">44.23</A>)</SPAN>a script in order to accomplish something. The difference here is thatbecause you are not starting a<SPANCLASS="link">subshell (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>for the script, it can do everythingan alias can and more. This is much like<SPANCLASS="link">Bourne shell functions (<ACLASS="linkend"HREF="ch10_09.htm"TITLE="Shell Functions ">10.9</A>)</SPAN>.</P><PCLASS="para">Some hints on using this technique:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">Naming:</B>I like to name the script that is doing all of thework after the alias, with <EMCLASS="emphasis">_csh</EM> or <EMCLASS="emphasis">.csh</EM> at the end of itsname. I put all of the scripts in my<SPANCLASS="link"><EMCLASS="emphasis">~/bin</EM> (<ACLASS="linkend"HREF="ch04_02.htm"TITLE="A bin Directory for Your Programs and Scripts ">4.2</A>)</SPAN>.[Instead of names ending in <EMCLASS="emphasis">.csh</EM>, I put mine in a directory named<EMCLASS="emphasis">~/.lib/csh</EM>. <EMCLASS="emphasis">-JP</EM>&nbsp;]</P></LI><LICLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">Feedback:</B>You don't want to execute the script directly. You wantto source it.Here's a good first line that detects this:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch45_05.htm"TITLE="45.5 A File That Shows Itself... and What #! Does ">#!</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">#! /bin/echo sorry,try:source</PRE></TD></TR></TABLE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">Usage statement:</B>Check the variable that you expect to see from the alias.If it isn't there, you can show a usage statement, anddo a <EMCLASS="emphasis">goto</EM> to the end of the script:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch47_04.htm"TITLE="47.4 C Shell Variable Operators and Expressions ">$#</A> <ACLASS="co"HREF="ch08_18.htm"TITLE="8.18 Here Documents ">&lt;&lt;</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">if ($#lg_args == 0) then1usage: lg [-a][-p] pattern [command]    -a  lists all (.dot files)    -p  pipe resulting list into command+++    goto lg_endendif   ...lg_end:</PRE></TD></TR></TABLE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">Alias options:</B>You aren't limited to what an alias can do, since you aresourcing a script. You gain some flexibility here. Here's one way ofhandling options:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch47_06.htm"TITLE="47.6 Quick Reference: C Shell switch Statement ">switch</A> <ACLASS="co"HREF="ch47_05.htm"TITLE="47.5 Using C Shell Arrays ">[1]</A> <ACLASS="co"HREF="ch06_08.htm"TITLE="6.8 Shell Variables ">set</A> <ACLASS="co"HREF="ch47_05.htm"TITLE="47.5 Using C Shell Arrays ">shift</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">unset ls_argwhile (! $?ls_arg)    switch (&quot;$lg_args[1]&quot;)        case &quot;-a&quot;:            set ls_arg=&quot;-a&quot;            shift lg_args        case &quot;-p&quot;:            set use_pipe            shift lg_args        default:            set ls_arg            breaksw    endswend</PRE></TD></TR></TABLE></P></LI></UL><PCLASS="para">Have fun with this! You may find yourself tossing some old aliasesand rewriting them as sourceable scripts. They're also easier to maintain.<ACLASS="indexterm"NAME="AUTOID-11997"></A><ACLASS="indexterm"NAME="AUTOID-11998"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DS</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_04.htm"TITLE="10.4 Aliases in ksh and bash "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 10.4 Aliases in ksh and bash "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch10_06.htm"TITLE="10.6 Avoiding C Shell Alias Loops "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 10.6 Avoiding C Shell Alias Loops "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">10.4 Aliases in ksh and bash </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">10.6 Avoiding C Shell Alias Loops </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>