<HTML><HEAD><TITLE>[Chapter 12] Job Control</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:36:24Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part02.htm"TITLE="II. Let the Computer Do the Dirty Work "><LINKREL="prev"HREF="ch11_16.htm"TITLE="11.16 Instead of Changing History Characters "><LINKREL="next"HREF="ch12_02.htm"TITLE="12.2 Other Ways to Refer to Jobs "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch11_16.htm"TITLE="11.16 Instead of Changing History Characters "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 11.16 Instead of Changing History Characters "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 12</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_02.htm"TITLE="12.2 Other Ways to Refer to Jobs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 12.2 Other Ways to Refer to Jobs "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="CHAPTER"><H1CLASS="chapter"><ACLASS="title"NAME="UPT-CHP-12">12. Job Control</A></H1><DIVCLASS="htmltoc"><P><B>Contents:</B><BR><ACLASS="sect1"HREF="#UPT-ART-0439"TITLE="12.1 Job Control: Work Faster, Stop Runaway Jobs ">Job Control: Work Faster, Stop Runaway Jobs </A><BR><ACLASS="sect1"HREF="ch12_02.htm"TITLE="12.2 Other Ways to Refer to Jobs ">Other Ways to Refer to Jobs </A><BR><ACLASS="sect1"HREF="ch12_03.htm"TITLE="12.3 The &#34;Current Job&quot; Isn't Always What You Expect">The &quot;Current Job&quot; Isn't Always What You Expect</A><BR><ACLASS="sect1"HREF="ch12_04.htm"TITLE="12.4 Job Control and autowrite: Real Time Savers! ">Job Control and autowrite: Real Time Savers! </A><BR><ACLASS="sect1"HREF="ch12_05.htm"TITLE="12.5 System Overloaded? Try Stopping Some Jobs ">System Overloaded? Try Stopping Some Jobs </A><BR><ACLASS="sect1"HREF="ch12_06.htm"TITLE="12.6 Notification When Jobs Change State ">Notification When Jobs Change State </A><BR><ACLASS="sect1"HREF="ch12_07.htm"TITLE="12.7 Stop Background Output with stty tostop ">Stop Background Output with stty tostop </A><BR><ACLASS="sect1"HREF="ch12_08.htm"TITLE="12.8 Job Control in a Nutshell ">Job Control in a Nutshell </A><BR><ACLASS="sect1"HREF="ch12_09.htm"TITLE="12.9 Running Multiple Shell Sessions with screen ">Running Multiple Shell Sessions with screen </A></P><P></P></DIV><DIVCLASS="sect1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0439">12.1 Job Control: Work Faster, Stop Runaway Jobs </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13440"></A><ACLASS="indexterm"NAME="AUTOID-13443"></A>Multitasking, letting you run more than one program at a time, is one ofthe great things about UNIX.Before job control, though, you had to decide ahead of time whether youwanted to run a job in the foreground (on your screen) or in thebackground (where you couldn't touch the program except to terminate itbefore it finished).</P><PCLASS="para">The C shell&nbsp;- and other shells since it, including some new Bourneshells&nbsp;- have job control built into them.You can start and stop jobs, pop them in and out of the background,and more.Windowing systems, which let you have multiple terminal windowsactive on the screen at the same time, make this less essential.Still, there are some important areas where you'll get more productivityout of job control than from simply opening another window.This article is an introduction to job control&nbsp;- there's more to learn.</P><PCLASS="para">Job control takes more than a shell to work right: the UNIX kernel hasto support it.Berkeley UNIX since BSD 4.0 has had job control, so most Berkeley-type UNIXeswill have it, too.Most versions of UNIX System V before Release 4 did not have job control.If your UNIX doesn't support job control, you can still put a job in thebackground&nbsp;- see the last paragraph in this article.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-439-SECT-1.1">12.1.1 Foreground and Background </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13450"></A><ACLASS="indexterm"NAME="AUTOID-13452"></A>UNIX distinguishes between foreground and backgroundprograms. This feature allows you to run several programssimultaneously from your terminal.When a program is running in the foreground, anything youtype at the keyboard is sent to the program's standard input unlessyou have redirected it. As a result, you can't do anything else untilthe program finishes. When you run a programin the background, it is disconnected from the keyboard.Anything you type reaches the UNIX shell and is interpreted as acommand. Therefore, you can run many programs simultaneously in thebackground. You can run only one program at a time in theforeground.</P><PCLASS="para">To run a program in the background, type an ampersand (<CODECLASS="literal">&amp;</CODE>)at the end of the command line. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>f77 program.F &amp;</B></CODE>[1] 9145%</PRE></BLOCKQUOTE></P><PCLASS="para">This runs a FORTRAN compilation in the background, letting youcontinue other work while the compilation proceeds.  The shellresponds by printing a job number in brackets (<CODECLASS="literal">[]</CODE>), followedby the<SPANCLASS="link">process identification (PID) number (<ACLASS="linkend"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>)</SPAN>for the command.It then prompts you for a new command. Entering the command <EMCLASS="emphasis">jobs</EM> produces a short report describing all the programs you are executing in the background. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>f77 program.F &amp;</B></CODE>[1] 9145% <CODECLASS="userinput"><B>jobs</B></CODE>[1]     + Running       f77 program.F%</PRE></BLOCKQUOTE></P><PCLASS="para">To bring a program from the background into the foreground, use the<ACLASS="indexterm"NAME="AUTOID-13468"></A>foreground command, <EMCLASS="emphasis">fg</EM>. If you have more than one background job, follow <EMCLASS="emphasis">fg</EM> with a job identifier&nbsp;- a percent sign(<CODECLASS="literal">%</CODE>) followed by the job number: </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>jobs</B></CODE>[1]     - Running       f77 program.F[2]     + Stopped       vi sinus.F% <CODECLASS="userinput"><B>fg %1</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13478"></A>The plus sign (<CODECLASS="literal">+</CODE>) in the report from <EMCLASS="emphasis">jobs</EM> indicates which job will return to the foreground<SPANCLASS="link">by default (<ACLASS="linkend"HREF="ch12_03.htm"TITLE="The &#34;Current Job&quot; Isn't Always What You Expect">12.3</A>)</SPAN>.</P><PCLASS="para">To suspend a job running in the foreground, press<ACLASS="indexterm"NAME="AUTOID-13485"></A>CTRL-z.[You can use this to stop most frozen or runaway programs until youfigure out what to do next.Also, CTRL-z can stop programs that<SPANCLASS="link">interrupt characters (<ACLASS="linkend"HREF="ch05_09.htm"TITLE="Setting Your Erase, Kill, and Interrupt Characters ">5.9</A>)</SPAN>likeCTRL-c can't.<EMCLASS="emphasis">-JP</EM>&nbsp;]</P><PCLASS="para">Entering the <ACLASS="indexterm"NAME="AUTOID-13490"></A>background command, <EMCLASS="emphasis">bg</EM>, lets a stopped program continue execution in the background. The foreground command, <EMCLASS="emphasis">fg</EM>, restores thisprogram to execution in the foreground. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>f77 -o program program.F</B></CODE><KBDCLASS="keycap">[CTRL-z]</KBD>Stopped% <CODECLASS="userinput"><B>bg</B></CODE>[1]     + Running       f77 -o program program.F%</PRE></BLOCKQUOTE></P><PCLASS="para">There is no prompt after the <EMCLASS="emphasis">f77</EM> command because the compileris running in the foreground. After you pressCTRL-z,the shell prints the word &quot;Stopped&quot; to indicate that it has stoppedexecution. At this point, you can enter any command; the <EMCLASS="emphasis">bg</EM>command lets the job continue executing in the background. Thisfeature is useful if you forget to type an <CODECLASS="literal">&amp;</CODE> at the end of thecommand line or if you decide to do something else while the job isrunning.</P><PCLASS="para">To terminate a background job, you can use the command's job numberrather than its PID number, as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>kill %1</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13508"></A>If you omit it, UNIX interprets the job number as a process number.This will probably be the process number of some operating system function. UNIX will not let you make such a mistake unless you are<SPANCLASS="link">superuser (<ACLASS="linkend"HREF="ch01_24.htm"TITLE="The Superuser (Root) ">1.24</A>)</SPAN>.If you are superuser, the command is fatal.You may be superuser from time to time and therefore should not developsloppy habits.</P><PCLASS="para">In the next few seconds, press RETURNa few times.You should see the message: </P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">[1]  Terminated    f77 -o program program.F</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-13516"></A>If you don't see that, use the <EMCLASS="emphasis">jobs</EM> command to checkwhether the job is still running. If it's still running,use the <EMCLASS="emphasis">-9</EM> option as a last resort:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>kill -9 %1</B></CODE>[1]  Killed        f77 -o program program.F</PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">-9</EM> option doesn't give the process a chance to clean up itstemporary files and exit gracefully, so don't use it unless you need to.</P><PCLASS="para">A program running in the background cannot read input from a terminal. If a background job needs terminal input, it will stop; the <EMCLASS="emphasis">jobs</EM> command will print the message <CODECLASS="literal">Stopped (tty input)</CODE>.Before the programcan continue, you must bring it into the foreground with the <EMCLASS="emphasis">fg</EM>command and type the required input. You can save yourself thistrouble by redirecting the program's input so that itreads all its data from a file. You may alsowant to redirect standard output and standard error.If you don't, any output the program produces will appear on your terminal(unless you've used<SPANCLASS="link"><EMCLASS="emphasis">stty tostop</EM> (<ACLASS="linkend"HREF="ch12_07.htm"TITLE="Stop Background Output with stty tostop ">12.7</A>)</SPAN>).Since you will probably be using other commands, having miscellaneousdata and other messages flying across your terminal may be confusing.</P><PCLASS="para">On systems and shells without job control features, an <CODECLASS="literal">&amp;</CODE>will start a command in the background. It isimpossible to move a job from the foreground to the backgroundor vice versa.The<SPANCLASS="link"><EMCLASS="emphasis">ps</EM> (<ACLASS="linkend"HREF="ch38_05.htm"TITLE="The ps Command ">38.5</A>)</SPAN>command is the only tool availablefor determining what background jobs you have running.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">UNIX for FORTRAN Programmers</CITE>, Chapter 1</SPAN></P></DIV></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch11_16.htm"TITLE="11.16 Instead of Changing History Characters "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 11.16 Instead of Changing History Characters "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch12_02.htm"TITLE="12.2 Other Ways to Refer to Jobs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 12.2 Other Ways to Refer to Jobs "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">11.16 Instead of Changing History Characters </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">12.2 Other Ways to Refer to Jobs </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>