<HTML><HEAD><TITLE>[Chapter 14] 14.9 cd by Directory Initials </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:37:06Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch14_01.htm"TITLE="14. Moving Around in a Hurry"><LINKREL="prev"HREF="ch14_08.htm"TITLE="14.8 Quick cds with Aliases "><LINKREL="next"HREF="ch14_10.htm"TITLE="14.10 Variables Help You Find Directories and Files "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch14_08.htm"TITLE="14.8 Quick cds with Aliases "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 14.8 Quick cds with Aliases "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 14<BR>Moving Around in a Hurry</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch14_10.htm"TITLE="14.10 Variables Help You Find Directories and Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 14.10 Variables Help You Find Directories and Files "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7901">14.9 cd by Directory Initials </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-15514"></A><ACLASS="indexterm"NAME="AUTOID-15517"></A>Here's a handy shell function called <EMCLASS="emphasis">c</EM> for people who <EMCLASS="emphasis">cd</EM> all over the filesystem.(I first saw Marc Brumlik's posting of it on Usenet years ago, as aC shell alias.He and I have both made some changes to it since then.)This function is great for shells that don't have<SPANCLASS="link">filename completion (<ACLASS="linkend"HREF="ch09_08.htm"TITLE="Filename Completion: Faster Filename Typing ">9.8</A>)</SPAN>.This function works a bit likefilename completion,but it's faster because the &quot;initials&quot; only match directories&nbsp;- and you don'thave to press TAB or ESC after each part of the pathname.Instead, you just type the initials (first letter, or more) of each directoryin the pathname.Start at the root directory.Put a dot (<CODECLASS="literal">.</CODE>) after each part.</P><PCLASS="para">Here are three examples.The first one shows that there's no subdirectory of root whose namestarts with <EMCLASS="emphasis">q</EM>.The second one matches the directory <EMCLASS="emphasis">/usr/include/hsfs</EM> and <EMCLASS="emphasis">cd</EM>sthere:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>c q.</B></CODE>c: no match for /q*/.$ <CODECLASS="userinput"><B>c u.i.h.</B></CODE>/usr/include/hsfs/.$</PRE></BLOCKQUOTE></P><PCLASS="para">In the next example, trying to change to <EMCLASS="emphasis">/usr/include/pascal</EM>, the abbreviations aren't unique the first time.The function shows me all the matches; the second time, I add another letter(&quot;a&quot;) to make the name unique:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>c u.i.p.</B></CODE>c: too many matches for u.i.p.:/usr/include/pascal/. /usr/include/pixrect/. /usr/include/protocols/.$ <CODECLASS="userinput"><B>c u.i.pa.</B></CODE>/usr/include/pascal/.$</PRE></BLOCKQUOTE></P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="sh_init">sh_init</A><BR><ACLASS="programreference"HREF="examples/index.htm"TITLE="csh_init">csh_init</A><BR></TH><TDVALIGN="TOP">&#13;The Bourne shell function is straightforward; it's shown below.The C shell alias needs some trickery, and there are two versions of iton the Power Tools disk: one if you already have an alias for <EMCLASS="emphasis">cd</EM>and another if you don't.(The C shell<SPANCLASS="link"><EMCLASS="emphasis">if</EM> (<ACLASS="linkend"HREF="ch47_03.htm"TITLE="Conditional Statements with if ">47.3</A>)</SPAN>used in the <EMCLASS="emphasis">c</EM> alias won't work with a <EMCLASS="emphasis">cd</EM> alias.Although the <EMCLASS="emphasis">csh</EM> manual page admits it won't work, I'd call that another<SPANCLASS="link">C shell bug (<ACLASS="linkend"HREF="ch47_02.htm"TITLE="C Shell Programming Considered Harmful ">47.2</A>)</SPAN>.)</TD></TR></TABLE><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch44_19.htm"TITLE="44.19 The Bourne Shell set Command ">set</A> <ACLASS="co"HREF="ch44_15.htm"TITLE="44.15 Handling Command-Line Arguments in Shell Scripts ">$#</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">c(){   dir=&quot;$1&quot;   # Delete dots.  Surround every letter with &quot;/&quot; and &quot;*&quot;.   # Add a final &quot;/.&quot; to be sure this only matches a directory:   dirpat=&quot;`echo $dir | sed 's/\([^.]*\)\./\/\1*/g'`/.&quot;   # In case $dirpat is empty, set dummy &quot;x&quot; then shift it away:   set x $dirpat; shift   # Do the cd if we got one match, else print error:   if [ &quot;$1&quot; = &quot;$dirpat&quot; ]; then      # pattern didn't match (shell didn't expand it)      echo &quot;c: no match for $dirpat&quot; 1&gt;&amp;2   elif [ $# = 1 ]; then      echo &quot;$1&quot;      cd &quot;$1&quot;   else      echo &quot;c: too many matches for $dir:&quot; 1&gt;&amp;2      ls -d &quot;$@&quot;   fi   unset dir dirpat}</PRE></TD></TR></TABLE></P><PCLASS="para">The function starts by building a wildcard pattern to match thedirectory initials.For example, if you type <CODECLASS="literal">c&nbsp;u.i.h.</CODE>, <EMCLASS="emphasis">sed</EM> makes the pattern<CODECLASS="literal">/u*/i*/h*/.</CODE> in <CODECLASS="literal">$dirpat</CODE>.Next, the shell expands the wildcards onto its command-line parameters;the trailing dot makes sure the pattern only matches a directory (as inarticle<ACLASS="xref"HREF="ch21_12.htm"TITLE="Copying Files to a Directory ">21.12</A>).If the Bourne shell can't match a wildcard pattern, it leaves thepattern unchanged; the first <CODECLASS="literal">if</CODE> test spots that.If there was just one match, there'll be one command-line parameterleft, and the shell <EMCLASS="emphasis">cd</EM>s there.Otherwise, there were too many matches; the function shows them so youcan make your pattern longer and more specific.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch14_08.htm"TITLE="14.8 Quick cds with Aliases "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 14.8 Quick cds with Aliases "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch14_10.htm"TITLE="14.10 Variables Help You Find Directories and Files "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 14.10 Variables Help You Find Directories and Files "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">14.8 Quick cds with Aliases </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">14.10 Variables Help You Find Directories and Files </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>