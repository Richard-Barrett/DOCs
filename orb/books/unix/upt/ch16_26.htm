<HTML><HEAD><TITLE>[Chapter 16] 16.26 Finding Text Files with findtext </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:38:03Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch16_01.htm"TITLE="16. Where Did I Put That?"><LINKREL="prev"HREF="ch16_25.htm"TITLE="16.25 Listing Files by Age and Size "><LINKREL="next"HREF="ch16_27.htm"TITLE="16.27 newer: Print the Name of the Newest File "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_25.htm"TITLE="16.25 Listing Files by Age and Size "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.25 Listing Files by Age and Size "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 16<BR>Where Did I Put That?</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_27.htm"TITLE="16.27 newer: Print the Name of the Newest File "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 16.27 newer: Print the Name of the Newest File "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-4310">16.26 Finding Text Files with findtext </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17844"></A><ACLASS="indexterm"NAME="AUTOID-17847"></A><ACLASS="indexterm"NAME="AUTOID-17850"></A><ACLASS="indexterm"NAME="AUTOID-17854"></A>Some of my directories&nbsp;- my<SPANCLASS="link"><EMCLASS="emphasis">bin</EM> (<ACLASS="linkend"HREF="ch04_02.htm"TITLE="A bin Directory for Your Programs and Scripts ">4.2</A>)</SPAN>,for instance&nbsp;- have some text files (like shell scripts anddocumentation) as well as non-text files (executable binary files, compressedfiles, archives, etc.).If I'm trying to find a certain file&nbsp;- with<SPANCLASS="link"><EMCLASS="emphasis">grep</EM> (<ACLASS="linkend"HREF="ch27_01.htm#UPT-ART-7420"TITLE="Different Versions of grep ">27.1</A>)</SPAN>or a<SPANCLASS="link">pager (<ACLASS="linkend"HREF="ch25_03.htm"TITLE="Using more to Page Through Files ">25.3</A>, <ACLASS="linkend"HREF="ch25_04.htm"TITLE='The "less&quot; Pager: More than "more&quot;'>25.4</A>)</SPAN>-the non-text files can print garbage on my screen.I want some way to say &quot;only look at the files that have text in them.&quot;</P><PCLASS="para">The <EMCLASS="emphasis">findtext</EM> shell script does that.It runs<ACLASS="indexterm"NAME="AUTOID-17863"></A><SPANCLASS="link"><EMCLASS="emphasis">file</EM> (<ACLASS="linkend"HREF="ch25_08.htm"TITLE="Finding File Types ">25.8</A>)</SPAN>to guess what's in each file.It only prints filenames of text files.</P><PCLASS="para">So, for example, instead of typing:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>egrep something *</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">I type:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">`...`</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>egrep something `findtext *`</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para">Here's the script, then some explanation of how to set it up on your system:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&#13;#!/bin/sh# PIPE OUTPUT OF file THROUGH sed TO PRINT FILENAMES FROM LINES# WE LIKE.  NOTE: DIFFERENT VERSIONS OF file RETURN DIFFERENT# MESSAGES.  CHECK YOUR SYSTEM WITH strings /usr/bin/file OR# cat /etc/magic AND ADAPT THIS./usr/bin/file &quot;$@&quot; |sed -n  '/MMDF mailbox/b print/Interleaf ASCII document/b print/PostScript document/b print/Frame Maker MIF file/b print/c program text/b print/fortran program text/b print/assembler program text/b print/shell script/b print/c-shell script/b print/shell commands/b print/c-shell commands/b print/English text/b print/ascii text/b print/\[nt\]roff, tbl, or eqn input text/b print/executable .* script/b printb:prints/:<KBDCLASS="keycap">[TAB]</KBD>.*//p'</PRE></BLOCKQUOTE></P><PCLASS="para">The script is simple: It runs <EMCLASS="emphasis">file</EM> on the command-line arguments.The output of <EMCLASS="emphasis">file</EM> looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">COPY2PC:        directoryEx24348:        emptyFROM_consult.tar.Z:     compressed data block compressed 16 bitsGET_THIS:       ascii texthmo:            English textmsg:            English text1991.ok:        [nt]roff, tbl, or eqn input text</PRE></BLOCKQUOTE></P><PCLASS="para">The output is piped to a<SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_24.htm"TITLE="Quick Reference: sed ">34.24</A>)</SPAN>script that selects the lines that seem to be from text files&nbsp;- after the<CODECLASS="literal">print</CODE> label, the script strips off everything after the filename(starting at the colon) and prints the filename.</P><PCLASS="para">Different versions of <EMCLASS="emphasis">file</EM> produce different output.Some versions also read an <EMCLASS="emphasis">/etc/magic</EM> file.To find the kinds of names your <EMCLASS="emphasis">file</EM> calls text files,use commands like:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>strings /usr/bin/file &gt; possible</B></CODE>% <CODECLASS="userinput"><B>cat /etc/magic &gt;&gt; possible</B></CODE>% <CODECLASS="userinput"><B>vi possible</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The <EMCLASS="emphasis">possible</EM> file will have a list of descriptions that <EMCLASS="emphasis">strings</EM>found in the <EMCLASS="emphasis">file</EM> binary; some of them are for text files.If your system has an <EMCLASS="emphasis">/etc/magic</EM> file, it will have lines like these:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">0    long         0x1010101       MMDF mailbox0    string       &lt;!OPS           Interleaf ASCII document0    string       %!              PostScript document0    string       &lt;MIFFile        Frame Maker MIF file</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Save the descriptions of text-type files from the right-hand column.</P><PCLASS="para">Then, turn each line of your edited <EMCLASS="emphasis">possible</EM> file into a <EMCLASS="emphasis">sed</EM> command:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch34_19.htm"TITLE="34.19 Making Edits Everywhere Except... ">b print</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen"><CODECLASS="userinput"><B>/</B></CODE><CODECLASS="replaceable"><I>description</I></CODE><CODECLASS="userinput"><B>/b print</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para">Watch for special characters in the <EMCLASS="emphasis">file</EM> descriptions.I had to handle two special cases in the last two lines of the script above:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">I had to change the string <CODECLASS="literal">executable&nbsp;%s&nbsp;script</CODE>from our <EMCLASS="emphasis">file</EM> command to <CODECLASS="literal">/executable&nbsp;.*&nbsp;script/b&nbsp;print</CODE>in the <EMCLASS="emphasis">sed</EM> script.That's because our <EMCLASS="emphasis">file</EM> command replaces <CODECLASS="literal">%s</CODE> with a namelike <CODECLASS="literal">/bin/ksh</CODE>.</P></LI><LICLASS="listitem"><PCLASS="para">Characters that <EMCLASS="emphasis">sed</EM> will treat as a regular expression, such as the brackets in <CODECLASS="literal">[nt]roff</CODE>, need to be escaped with backslashes.I used <CODECLASS="literal">\[nt\]troff</CODE> in the script.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-17934"></A>If you have <SPANCLASS="link"><EMCLASS="emphasis">perl</EM> (<ACLASS="linkend"HREF="ch37_01.htm#UPT-ART-5560"TITLE="What We Do and Don't Tell You About Perl ">37.1</A>)</SPAN>,you can make a simpler version of this script, since <EMCLASS="emphasis">perl</EM> has a built-intest for whether or not a file is a text file.Perl picks a &quot;text file&quot; by checkingthe first block or so for strange control codes or metacharacters.If there are too many (more than 10%), it's not a text file.You can't tune the Perl script to, for example, skip a certain kind offile by type.But the Perl version is simpler!It looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>perl -le '-T &amp;&amp; print while $_ = shift' *</B></CODE></PRE></BLOCKQUOTE></P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="csh_init">csh_init</A><BR><ACLASS="programreference"HREF="examples/index.htm"TITLE="sh_init">sh_init</A><BR></TH><TDVALIGN="TOP">&#13;If you want to put that into an<SPANCLASS="link">alias (<ACLASS="linkend"HREF="ch10_02.htm"TITLE="Aliases for Common Commands ">10.2</A>)</SPAN>,the C shell's<SPANCLASS="link">quoting problems (<ACLASS="linkend"HREF="ch47_02.htm"TITLE="C Shell Programming Considered Harmful ">47.2</A>, <ACLASS="linkend"HREF="ch08_15.htm"TITLE="Differences Between Bourne and C Shell Quoting ">8.15</A>)</SPAN>make it tough to do.Thanks to<SPANCLASS="link"><EMCLASS="emphasis">makealias</EM> (<ACLASS="linkend"HREF="ch10_08.htm"TITLE="Fix Quoting in csh Aliases with makealias and quote ">10.8</A>)</SPAN>,though, here's an alias that does the job:</TD></TR></TABLE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias findtext 'perl -le '\''-T &amp;&amp; print while $_ = shift'\'' *'</PRE></BLOCKQUOTE></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_25.htm"TITLE="16.25 Listing Files by Age and Size "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 16.25 Listing Files by Age and Size "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch16_27.htm"TITLE="16.27 newer: Print the Name of the Newest File "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 16.27 newer: Print the Name of the Newest File "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">16.25 Listing Files by Age and Size </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">16.27 newer: Print the Name of the Newest File </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>