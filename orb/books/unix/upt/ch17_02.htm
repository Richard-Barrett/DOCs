<HTML><HEAD><TITLE>[Chapter 17] 17.2 Delving Through a Deep Directory Tree </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:38:16Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch17_01.htm"TITLE="17. Finding Files with find"><LINKREL="prev"HREF="ch17_01.htm"TITLE="17.1 The find Command Is Great; The Problem Is Finding How to Use It"><LINKREL="next"HREF="ch17_03.htm"TITLE="17.3 Don't Forget -print "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_01.htm"TITLE="17.1 The find Command Is Great; The Problem Is Finding How to Use It"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.1 The find Command Is Great; The Problem Is Finding How to Use It"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17<BR>Finding Files with find</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_03.htm"TITLE="17.3 Don't Forget -print "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.3 Don't Forget -print "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0412">17.2 Delving Through a Deep Directory Tree </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-18375"></A><ACLASS="indexterm"NAME="AUTOID-18379"></A><ACLASS="indexterm"NAME="AUTOID-18382"></A>The first, and most obvious, use is <EMCLASS="emphasis">find</EM>'sability to locate old, big, or unused files whose locations you'veforgotten. However, what may be <EMCLASS="emphasis">find</EM>'s most fundamentally importantcharacteristic is itsability to travel down subdirectories.</P><PCLASS="para">Normally the shell provides the argument list to a command.That is, UNIX programs are frequently given filenames and not directory names.Only a few programs can be given a directory name and march down the directorysearching for subdirectories. The programs<EMCLASS="emphasis">find</EM>,<EMCLASS="emphasis">tar</EM>,<EMCLASS="emphasis">du</EM>,and <EMCLASS="emphasis">diff</EM>do this.Some versions of<EMCLASS="emphasis">chmod</EM>,<EMCLASS="emphasis">chgrp</EM>,<EMCLASS="emphasis">ls</EM>,<EMCLASS="emphasis">rm</EM>,and<EMCLASS="emphasis">cp</EM>will, but only if a<EMCLASS="emphasis">-r</EM>or<EMCLASS="emphasis">-R</EM>option is specified.</P><PCLASS="para">In general, most commands do not understand directory structures, and rely on the shell toexpand<ACLASS="indexterm"NAME="AUTOID-18400"></A><SPANCLASS="link">wildcards (<ACLASS="linkend"HREF="ch15_02.htm"TITLE="Filename Wildcards in a Nutshell ">15.2</A>)</SPAN>to directory names.That is, to delete all files whose names end with a <EMCLASS="emphasis">.o</EM> in a group of directories,you could type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>rm *.o */*.o */*/*.o</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Not only is this tedious to type, it may not find all of the filesyou are searching for. The shell has certain blind spots.It will not match files in directories whose names start with a dot.And, if any files match<CODECLASS="literal">*/*/*/*.o</CODE>,they would not be deleted.</P><PCLASS="para">Another problemis typing the above and getting the error <CODECLASS="literal">Arguments</CODE> <CODECLASS="literal">too</CODE> <CODECLASS="literal">long.</CODE>This means the shell would expand too many arguments from the wildcardsyou typed.</P><PCLASS="para"><EMCLASS="emphasis">find</EM> is the answer to these problems.</P><PCLASS="para">A simple example of <EMCLASS="emphasis">find</EM> is using it to print the names of all the filesin the directory and all subdirectories. This is done with the simple command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find . -print</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The first arguments to <EMCLASS="emphasis">find</EM>are directory and file pathnames&nbsp;- in that example,<SPANCLASS="link">a dot (<CODECLASS="literal">.</CODE>) is one name for the current directory (<ACLASS="linkend"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>)</SPAN>.The arguments after the pathnames always start with a minus sign (<CODECLASS="literal">-</CODE>) and tell <EMCLASS="emphasis">find</EM> what to do once it finds a file.These are the search operators.In this case, the filename is printed.You can use the<SPANCLASS="link">tilde (<CODECLASS="literal">~</CODE>) (<ACLASS="linkend"HREF="ch14_11.htm"TITLE="Finding (Anyone's) Home Directory, Quickly ">14.11</A>)</SPAN>supported by the C shell, as well asparticular paths. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find ~ ~barnett /usr/local -print</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">And if you have a very slow day, you can type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find / -print</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">which will list every file on the system.[This command is okay on single-user workstations with their own disks.It can tie up disks on multiuser systems enough to make users think ofgruesome crimes!If you really need that list and your system has<SPANCLASS="link">fast <EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_18.htm"TITLE='Using "Fast find&quot;'>17.18</A>)</SPAN>,try the command <CODECLASS="literal">find&nbsp;'/*'</CODE> instead. <EMCLASS="emphasis">-JP</EM>&nbsp;]</P><PCLASS="para"><EMCLASS="emphasis">find </EM>sends its output to standard output, so once you've &quot;found&quot; a list of filenames, you can pass them to other commands.One way to use this is with <SPANCLASS="link"> command substitution : (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN></P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch16_08.htm"TITLE="16.8 The ls -d Option ">-d</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -l `find . -print`</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para">The<EMCLASS="emphasis">find</EM>command is executed, and its output replaces the backquoted string.<EMCLASS="emphasis">ls</EM>sees the output of <EMCLASS="emphasis">find</EM>,and doesn't even know <EMCLASS="emphasis">find</EM>was used.</P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="xref.warning"HREF="ch09_22.htm"TITLE="9.22 xargs: Problems with Spaces and Newlines ">Warning!</A> </TH><TDVALIGN="TOP">An alternate method uses the<ACLASS="indexterm"NAME="AUTOID-18454"></A><ACLASS="indexterm"NAME="AUTOID-18457"></A><SPANCLASS="link"><EMCLASS="emphasis">xargs</EM> (<ACLASS="linkend"HREF="ch09_21.htm"TITLE="Handle Too-Long Command Lines with xargs ">9.21</A>)</SPAN>command.<EMCLASS="emphasis">xargs</EM>and <EMCLASS="emphasis">find</EM>work together beautifully.<EMCLASS="emphasis">xargs</EM>executes its arguments as commands and reads standard input to specify arguments to that command.<EMCLASS="emphasis">xargs</EM>knows the maximum number of arguments each command line can handleand does not exceed that limit.While the command:</TD></TR></TABLE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -ld `find / -print`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">might generate an error when the command line is too large, the equivalent command using <EMCLASS="emphasis">xargs</EM>will never generate that error:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find / -print | xargs ls -ld</B></CODE></PRE></BLOCKQUOTE></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">BB</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_01.htm"TITLE="17.1 The find Command Is Great; The Problem Is Finding How to Use It"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.1 The find Command Is Great; The Problem Is Finding How to Use It"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_03.htm"TITLE="17.3 Don't Forget -print "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.3 Don't Forget -print "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">17.1 The find Command Is Great; The Problem Is Finding How to Use It</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.3 Don't Forget -print </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>