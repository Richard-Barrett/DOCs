<HTML><HEAD><TITLE>[Chapter 17] 17.18 Using "Fast find&quot;</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:38:33Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch17_01.htm"TITLE="17. Finding Files with find"><LINKREL="prev"HREF="ch17_17.htm"TITLE="17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)"><LINKREL="next"HREF="ch17_19.htm"TITLE="17.19 Finding Files (Much) Faster with a find Database "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_17.htm"TITLE="17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17<BR>Finding Files with find</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_19.htm"TITLE="17.19 Finding Files (Much) Faster with a find Database "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.19 Finding Files (Much) Faster with a find Database "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1620">17.18 Using &quot;Fast find&quot;</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-1620-IX-FAST-FIND"></A><ACLASS="indexterm"NAME="UPT-ART-1620-IX-FIND-COMMAND-FAST-FIND"></A>Berkeley added a handy feature to its <EMCLASS="emphasis">find</EM> command&nbsp;- if you give it a single argument, it will search a database for file ordirectory names that match.(If your system doesn't have this feature, see the <EMCLASS="emphasis">locate</EM> utility below.)For example, if you know there's a file named <EMCLASS="emphasis">MH.eps</EM> somewhere onthe computer but you don't know where, type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find MH.eps</B></CODE>/nutshell/graphics/cover/MH.eps</PRE></BLOCKQUOTE></P><PCLASS="para">The database is usually rebuilt every night.So, it's not completely up-to-date, but it's usually close enough.If your system administrator has set this up, the database usually listsall files on the filesystem&nbsp;- although it may not list files indirectories that don't have world-access permission.If the database isn't set up at all, you'll get an error like<CODECLASS="literal">/usr/lib/find/find.codes: No such file or directory</CODE>.(If that's the case, you can set up a &quot;fast <EMCLASS="emphasis">find</EM>&quot; database yourself.Use GNU <EMCLASS="emphasis">locate</EM>, below, or seearticle<ACLASS="xref"HREF="ch17_19.htm"TITLE="Finding Files (Much) Faster with a find Database ">17.19</A>.)</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19403"></A><ACLASS="indexterm"NAME="AUTOID-19406"></A>Unless you use wildcards, fast <EMCLASS="emphasis">find</EM> does a simple string search, like<SPANCLASS="link"><EMCLASS="emphasis">fgrep</EM> (<ACLASS="linkend"HREF="ch27_06.htm"TITLE="Fast grep Isn't ">27.6</A>)</SPAN>,through a list of<SPANCLASS="link">absolute pathnames (<ACLASS="linkend"HREF="ch14_02.htm"TITLE="Using Relative and Absolute Pathnames ">14.2</A>)</SPAN>.Here's an extreme example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find bin</B></CODE>/bin/bin/ar   .../home/robin/home/robin/afile/home/sally/bin   ...</PRE></BLOCKQUOTE></P><PCLASS="para">You can cut down this output by piping it through<SPANCLASS="link"><EMCLASS="emphasis">grep</EM> (<ACLASS="linkend"HREF="ch27_01.htm#UPT-ART-7420"TITLE="Different Versions of grep ">27.1</A>)</SPAN>,<SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_24.htm"TITLE="Quick Reference: sed ">34.24</A>)</SPAN>,and so on.All the fast <EMCLASS="emphasis">find</EM> commands I've used have an undocumented feature, though:they can match<SPANCLASS="link">shell wildcards (<CODECLASS="literal">*</CODE>, <CODECLASS="literal">?</CODE>, <CODECLASS="literal">[]</CODE>) (<ACLASS="linkend"HREF="ch15_02.htm"TITLE="Filename Wildcards in a Nutshell ">15.2</A>)</SPAN>.If you use a wildcard on one end of the pattern, the search pattern isautomatically &quot;anchored&quot; to the opposite end of the string (the end where thewildcard isn't).The shell matches filenames in the same way.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19427"></A>The difference between the shell's wildcard matching and fast <EMCLASS="emphasis">find</EM>'smatching is that the shell treats slashes (<CODECLASS="literal">/</CODE>) specially: youhave to type them as part of the expression.In fast <EMCLASS="emphasis">find</EM>, a wildcard matches slashes and any other character.When you use a wildcard, be sure to put quotes around the pattern so the shellwon't touch it.</P><PCLASS="para">&#13;Here are some examples:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">To find any pathname that ends with <EMCLASS="emphasis">bin</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find '*bin'</B></CODE>/bin/home/robin/home/robin/bin   ...</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">To find any pathname that ends with <EMCLASS="emphasis">/bin</EM> (a good way to find a file ordirectory named exactly <EMCLASS="emphasis">bin</EM>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find '*/bin'</B></CODE>/bin/home/robin/bin/usr/bin   ...</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Typing <CODECLASS="literal">find&nbsp;'*bin*'</CODE> is the same as typing <CODECLASS="literal">find&nbsp;bin</CODE>.</P></LI><LICLASS="listitem"><PCLASS="para">To match the files in a directory named <EMCLASS="emphasis">bin</EM>, but not the directoryitself, try something like:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find '*/bin/*'</B></CODE>/bin/ar/bin/cat   .../home/robin/bin/prog</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19463"></A><ACLASS="indexterm"NAME="AUTOID-19466"></A>To find the files in <EMCLASS="emphasis">/home</EM> whose names end with a tilde (<CODECLASS="literal">~</CODE>)(these are probably backup files from the Emacs editor):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find '/home/*~'</B></CODE>/home/testfile~/home/allan/.cshrc~/home/allan/.login~/home/dave/.profile~   ...</PRE></BLOCKQUOTE></P><PCLASS="para">Notice that the fast <EMCLASS="emphasis">find</EM> asterisk matches &quot;dot files,&quot; too.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-19478"></A><ACLASS="indexterm"NAME="AUTOID-19481"></A>The <CODECLASS="literal">?</CODE> (question mark) and <CODECLASS="literal">[]</CODE> (square brackets) operatorswork, too.They're not quite as useful as they are in the shell because they matchthe slashes (<CODECLASS="literal">/</CODE>) in the pathnames.Here are a couple of quick examples:&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find '????'</B></CODE>/bin/etc/lib/src/sys/usr% <CODECLASS="userinput"><B>find '/[bel]??'</B></CODE>/bin/etc/lib</PRE></BLOCKQUOTE></P></LI></UL><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="locate">locate</A><BR></TH><TDVALIGN="TOP"><ACLASS="indexterm"NAME="AUTOID-19493"></A>Unfortunately, not all systems have fast find.Fortunately, the Free Software Foundation has <EMCLASS="emphasis">locate</EM>.It's similar to fast find, but<EMCLASS="emphasis">locate</EM> has an advantage: you can have multiple file databasesand you can search some or all of them.<EMCLASS="emphasis">Locate</EM> comes with a database building program.</TD></TR></TABLE><PCLASS="para">Because fast <EMCLASS="emphasis">find</EM> and <EMCLASS="emphasis">locate</EM> areso fast, they're worth trying to use whenever you can.Pipe the output to<SPANCLASS="link"><EMCLASS="emphasis">xargs</EM> (<ACLASS="linkend"HREF="ch09_21.htm"TITLE="Handle Too-Long Command Lines with xargs ">9.21</A>)</SPAN>and any other UNIX command,run a shell or <EMCLASS="emphasis">awk</EM> script to test its output&nbsp;- almost anything willbe faster than running a standard <EMCLASS="emphasis">find</EM>.For example, if you want a long listing of the files, here are two<EMCLASS="emphasis">find</EM> commands to do it:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch16_08.htm"TITLE="16.8 The ls -d Option ">-d</A> <ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">`...`</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -l `find <CODECLASS="replaceable"><I>whatever</I></CODE>`</B></CODE>% <CODECLASS="userinput"><B>find </B></CODE><CODECLASS="replaceable"><I>whatever </I></CODE><CODECLASS="userinput"><B>| xargs ls -ld</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para">There's one problem with that trick.The fast <EMCLASS="emphasis">find</EM> list may be built by <EMCLASS="emphasis">root</EM>,which can see all thefiles on the filesystem; your <EMCLASS="emphasis">ls -l</EM> commandmay not be able to access all files in the list.<ACLASS="indexterm"NAME="AUTOID-19519"></A><ACLASS="indexterm"NAME="AUTOID-19520"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_17.htm"TITLE="17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_19.htm"TITLE="17.19 Finding Files (Much) Faster with a find Database "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.19 Finding Files (Much) Faster with a find Database "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">17.17 Duplicating a Directory Tree (No Pathnames with find {} Operator)</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.19 Finding Files (Much) Faster with a find Database </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>