<HTML><HEAD><TITLE>[Chapter 17] 17.19 Finding Files (Much) Faster with a find Database </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:38:35Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch17_01.htm"TITLE="17. Finding Files with find"><LINKREL="prev"HREF="ch17_18.htm"TITLE='17.18 Using "Fast find&quot;'><LINKREL="next"HREF="ch17_20.htm"TITLE="17.20 grepping a Directory Tree (and a Gotcha) "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_18.htm"TITLE='17.18 Using "Fast find&quot;'><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 17.18 Using "Fast find&quot;'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 17<BR>Finding Files with find</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_20.htm"TITLE="17.20 grepping a Directory Tree (and a Gotcha) "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.20 grepping a Directory Tree (and a Gotcha) "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1640">17.19 Finding Files (Much) Faster with a find Database </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-1640-IX-SEARCHING-IN-DATABASES--DATABASES"></A><ACLASS="indexterm"NAME="UPT-ART-1640-IX-DATABASES-SEARCHING"></A><ACLASS="indexterm"NAME="UPT-ART-1640-IX-FAST-FIND-WITH-DATABASE--DATABASE"></A>If you use<SPANCLASS="link"><EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_02.htm"TITLE="Delving Through a Deep Directory Tree ">17.2</A>)</SPAN>to search for files, you know that it can take a longtime to work, especially when there are lots of directories to search.Here are some ideas for speeding up your <EMCLASS="emphasis">find</EM>s.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> By design, setups like these that build a file database won't have absolutelyup-to-date information about all your files.</P></BLOCKQUOTE><PCLASS="para">If your system has<SPANCLASS="link">&quot;fast <EMCLASS="emphasis">find</EM>&quot; or GNU <EMCLASS="emphasis">locate</EM> (<ACLASS="linkend"HREF="ch17_18.htm"TITLE='Using "Fast find&quot;'>17.18</A>)</SPAN>,that's probably all you need.It lets you search a list of all pathnames on the system.</P><PCLASS="para">Even if you have the fast <EMCLASS="emphasis">find</EM> or <EMCLASS="emphasis">locate</EM>,it still might not do what you need.For example, those utilties only search for pathnames.To find files by the owner's name, the number of links, the size, and so on,you have to use &quot;slow&quot; <EMCLASS="emphasis">find</EM>.In that case&nbsp;- or, when you don't have fast <EMCLASS="emphasis">find</EM> or <EMCLASS="emphasis">locate</EM>&nbsp;- youmay want to set up your own version.</P><PCLASS="para">The basic fast <EMCLASS="emphasis">find</EM> has two parts.<ACLASS="indexterm"NAME="AUTOID-19552"></A>One part is a command, a shell script named <EMCLASS="emphasis">/usr/lib/find/updatedb</EM>, thatbuilds a database of the files on your system&nbsp;- if your system has it, take alook to see a fancy way to build the database.The other part is the <EMCLASS="emphasis">find</EM> command itself&nbsp;- it searches the database forpathnames that match the name (regular expression) you type.</P><PCLASS="para">To make your own fast <EMCLASS="emphasis">find</EM>:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Pick a filename for the database.We'll use <EMCLASS="emphasis">$HOME/.fastfind</EM> (some systems use <CODECLASS="literal">$LOGDIR</CODE> instead of<CODECLASS="literal">$HOME</CODE>).</P></LI><LICLASS="listitem"><PCLASS="para">Design the <EMCLASS="emphasis">find</EM> command you want to use.The command to build a database of all the files in your home directorymight look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cdfind . -print | sed &quot;s@^./@@&quot; &gt; $HOME/.fastfind</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;If you're short on disk space, use this instead:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch24_07.htm"TITLE="24.7 Compressing Files to Save Space ">gzip</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">cdfind . -print | sed &quot;s@^./@@&quot; | gzip &gt; $HOME/.fastfind.gz</PRE></TD></TR></TABLE></P><PCLASS="para">To save disk space, the script starts from your home directory, then uses<SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_24.htm"TITLE="Quick Reference: sed ">34.24</A>)</SPAN>to strip the start of the pathname (like <CODECLASS="literal">./</CODE>)from every entry.(If you're building a database of the whole filesystem, don't do that!)</P></LI><LICLASS="listitem"><PCLASS="para">Set up<SPANCLASS="link"><EMCLASS="emphasis">cron</EM> (<ACLASS="linkend"HREF="ch40_12.htm"TITLE="Periodic Program Execution: The cron Facility ">40.12</A>)</SPAN>or<SPANCLASS="link"><EMCLASS="emphasis">at</EM> (<ACLASS="linkend"HREF="ch40_03.htm"TITLE="The at Command ">40.3</A>)</SPAN>to run that <EMCLASS="emphasis">find</EM> as often as you want&nbsp;- usually once early everymorning is fine.</P></LI><LICLASS="listitem"><PCLASS="para">Finally, make a<SPANCLASS="link">shell script (<ACLASS="linkend"HREF="ch01_05.htm"TITLE="Anyone Can Program the Shell ">1.5</A>)</SPAN>(I call mine <EMCLASS="emphasis">ffind</EM>) to search thedatabase.It's usually fastest to use<SPANCLASS="link"><EMCLASS="emphasis">egrep</EM> (<ACLASS="linkend"HREF="ch27_05.htm"TITLE="Extended Searching for Text with egrep ">27.5</A>)</SPAN>-and that lets you search with flexible<SPANCLASS="link">regular expressions (<ACLASS="linkend"HREF="ch26_04.htm"TITLE="Using Metacharacters in Regular Expressions ">26.4</A>)</SPAN>,too:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">egrep &quot;$1&quot; $HOME/.fastfind | sed &quot;s@^@$HOME/@&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">or, for a <EMCLASS="emphasis">gzip</EM>ped database:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch24_07.htm"TITLE="24.7 Compressing Files to Save Space ">gzcat</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">gzcat $HOME/.fastfind.gz | egrep &quot;$1&quot; | sed &quot;s@^@$HOME/@&quot;</PRE></TD></TR></TABLE></P><PCLASS="para">The <EMCLASS="emphasis">sed</EM> expressions add your home directory's pathname (like<EMCLASS="emphasis">/usr/freddie</EM>) to each line.</P></LI></OL><PCLASS="para">To search the database, type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ffind somefile</B></CODE>/usr/freddie/lib/somefile% <CODECLASS="userinput"><B>ffind '/(sep|oct)[^/]*$'</B></CODE>/usr/freddie/misc/project/september/usr/freddie/misc/project/october</PRE></BLOCKQUOTE></P><PCLASS="para">You can do much more.I'll get you started.If you have room to store more information than just pathnames, you canfeed your <EMCLASS="emphasis">find</EM> output to a command like <EMCLASS="emphasis">ls -l</EM> or<SPANCLASS="link"><EMCLASS="emphasis">sls</EM> (<ACLASS="linkend"HREF="ch16_29.htm"TITLE="sls: Super ls with Format You Can Choose ">16.29</A>)</SPAN>.For example, if you do a lot of work with<SPANCLASS="link">links (<ACLASS="linkend"HREF="ch18_03.htm"TITLE="Files with Two or More Names">18.3</A>)</SPAN>,you might want to keep the files'<SPANCLASS="link">i-numbers (<ACLASS="linkend"HREF="ch01_22.htm"TITLE="How UNIX Keeps Track of Files: Inodes ">1.22</A>)</SPAN>as well as their names.You'd build your database with a command like the one below.Use <SPANCLASS="link"><EMCLASS="emphasis">xargs</EM> (<ACLASS="linkend"HREF="ch09_21.htm"TITLE="Handle Too-Long Command Lines with xargs ">9.21</A>)</SPAN>or<SPANCLASS="link">something like it (<ACLASS="linkend"HREF="ch09_20.htm"TITLE="Too Many Files for the Command Line ">9.20</A>)</SPAN>.&#13;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cdfind . -print | xargs ls -id &gt; $HOME/.fastfind</PRE></BLOCKQUOTE></P><PCLASS="para">Or, if your version of <EMCLASS="emphasis">find</EM> has the handy <EMCLASS="emphasis">-ls</EM> operator, usethe next script.Watch out for really large i-numbers; they might shift the columns andmake<SPANCLASS="link"><EMCLASS="emphasis">cut</EM> (<ACLASS="linkend"HREF="ch35_14.htm"TITLE="Cutting Columns or Fields with cut ">35.14</A>)</SPAN>give wrong output.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cdfind . -ls | cut -c1-7,67- &gt; $HOME/.fastfind</PRE></BLOCKQUOTE></P><PCLASS="para">The exact column numbers will depend on your system.Then, your <EMCLASS="emphasis">ffind</EM> script could search for files by i-number.For instance, if you had a file with i-number&nbsp;1234 and you wanted to find allits links:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ffind &quot;^1234 &quot;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">(The space at the end prevents matches with i-numbers like 12345.)You could also search by pathname.</P><PCLASS="para">Article<ACLASS="xref"HREF="ch16_21.htm"TITLE="Finding All Directories with the Same Name ">16.21</A>shows another <EMCLASS="emphasis">find</EM> database setup, a list of directories or fileswith the same names.</P><PCLASS="para">With some information about UNIX shell programming and utilities like<SPANCLASS="link"><EMCLASS="emphasis">awk</EM> (<ACLASS="linkend"HREF="ch33_11.htm"TITLE="Quick Reference: awk ">33.11</A>)</SPAN>,the techniques in this articleshould let you build and search a sophisticated file database&nbsp;- and getinformation much faster than with plain old <EMCLASS="emphasis">find</EM>.<ACLASS="indexterm"NAME="AUTOID-19638"></A><ACLASS="indexterm"NAME="AUTOID-19639"></A><ACLASS="indexterm"NAME="AUTOID-19640"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_18.htm"TITLE='17.18 Using "Fast find&quot;'><IMGSRC="../gifs/txtpreva.gif"ALT='Previous: 17.18 Using "Fast find&quot;'BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch17_20.htm"TITLE="17.20 grepping a Directory Tree (and a Gotcha) "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 17.20 grepping a Directory Tree (and a Gotcha) "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">17.18 Using "Fast find&quot;</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">17.20 grepping a Directory Tree (and a Gotcha) </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>