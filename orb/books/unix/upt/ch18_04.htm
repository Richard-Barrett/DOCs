<HTML><HEAD><TITLE>[Chapter 18] 18.4 More About Links </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:38:57Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch18_01.htm"TITLE="18. Linking, Renaming, and Copying Files"><LINKREL="prev"HREF="ch18_03.htm"TITLE="18.3 Files with Two or More Names"><LINKREL="next"HREF="ch18_05.htm"TITLE="18.5 Creating and Removing Links "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_03.htm"TITLE="18.3 Files with Two or More Names"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 18.3 Files with Two or More Names"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 18<BR>Linking, Renaming, and Copying Files</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_05.htm"TITLE="18.5 Creating and Removing Links "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 18.5 Creating and Removing Links "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7944">18.4 More About Links </A></H2><PCLASS="para">UNIX provides two different kinds of links:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-7944-IX-LINKS"></A><ACLASS="indexterm"NAME="AUTOID-20234"></A><ACLASS="indexterm"NAME="AUTOID-20236"></A><ACLASS="indexterm"NAME="AUTOID-20239"></A><ACLASS="indexterm"NAME="AUTOID-20242"></A><BCLASS="emphasis.bold">Hard links</B>: With a hard link, two filenames (i.e., two<SPANCLASS="link">directory entries (<ACLASS="linkend"HREF="ch18_02.htm"TITLE="What's Really in a Directory ">18.2</A>)</SPAN>)point to the sameinodeand thesame set of data blocks.All UNIX versions support hard links.They have two importantlimitations: a hard link can't cross a filesystem (i.e., bothfilenames must be in the same filesystem), and you can't create a hardlink to a directory (i.e., a directory can only have one name).[1]They have two important advantages: the link and the original fileare absolutely and always identical, and the extra link takes no diskspace (except an occasional extra disk block in the directory file).</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Actually, every directory has at least two names.See the last section of this article.</P></BLOCKQUOTE></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20252"></A><BCLASS="emphasis.bold">Symbolic links</B> (also called <BCLASS="emphasis.bold">soft links</B> or <BCLASS="emphasis.bold">symlinks</B>):With a symboliclink, there really are twodifferent files.One file contains the actual data; the other filejust contains the name of the first file and serves as a &quot;pointer.&quot;We call the pointer the <EMCLASS="emphasis">link</EM>.The system knowsthat whenever it opens a link, it should read the contents of thelink, and then access the file that really holds the data you want.All Berkeley UNIX systems and System V.4 support symbolic links.Symbolic links are infinitely more flexible than hard links.They cancross filesystems, or even computer systems (if you are using NFS orRFS). You can make a symbolic link to a directory.A symbolic link has its own inode and takes a small amount of disk spaceto store.</P></LI></UL><PCLASS="para">You obviously can't do without copies of files: copies are importantwhenever users need their own &quot;private version&quot; of some master file.But it is also important to know about links.With links, there'sonly one set of data and many different names that can access it.Article<ACLASS="xref"HREF="ch18_05.htm"TITLE="Creating and Removing Links ">18.5</A>shows how to make links.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-7944-SECT-1.1">18.4.1 Differences Between Hard and Symbolic Links </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20263"></A><ACLASS="indexterm"NAME="AUTOID-20266"></A>With a hard link, the two filenames are identical in everyway.You can delete one without harming the other.The systemdeletes the directory entry for one filename and leaves the data blocks(which are shared) untouched.The only thing <EMCLASS="emphasis">rm</EM> does to theinode is decrement its &quot;link count,&quot; which (as the name implies) countsthe number of hard links to the file.The data blocks are only deletedwhen the link count goes to zero&nbsp;- meaning that there are no moredirectory entries that point to this inode.Article<ACLASS="xref"HREF="ch17_22.htm"TITLE="Finding the Links to a File ">17.22</A>shows how to find the hard links to a file.</P><PCLASS="para">With a symbolic link, the two filenames are really not the same.Deleting the link with <EMCLASS="emphasis">rm</EM>leaves the original file untouched, which is whatyou'd expect.But deleting or renaming the original file removes boththe filename and the data.You are left with a link that doesn'tpoint anywhere.(Article<ACLASS="xref"HREF="ch16_28.htm"TITLE="oldlinks: Find Unconnected Symbolic Links ">16.28</A>has a script that finds unconnected symlinks.)Remember that the link itself doesn't have any dataassociated with it.Despite this disadvantage, you rarely see hardlinks on UNIX versions that support symbolic links.Symbolic linksare so much more versatile that they have become omnipresent.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20275"></A>Let's finish by taking a look at the <EMCLASS="emphasis">ls</EM> listing for a directory.This directory has a file named <EMCLASS="emphasis">file</EM> with another hard link to itnamed <EMCLASS="emphasis">hardlink</EM>.There's also a symlink to <EMCLASS="emphasis">file</EM> named (are you ready?) <EMCLASS="emphasis">symlink</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>ls -lai</B></CODE>total 8 140330 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:11 .  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 .. 140331 -rw-r--r--   2 jerry    ora      2764 Aug 18 10:11 file 140331 -rw-r--r--   2 jerry    ora      2764 Aug 18 10:11 hardlink 140332 lrwxrwxrwx   1 jerry    ora         4 Aug 18 10:11 symlink -&gt; file</PRE></BLOCKQUOTE></P><PCLASS="para">You've seen the<SPANCLASS="link"><EMCLASS="emphasis">-l</EM> option (<ACLASS="linkend"HREF="ch22_02.htm"TITLE="Tutorial on File and Directory Permissions ">22.2</A>)</SPAN>and also, probably, the<SPANCLASS="link"><EMCLASS="emphasis">-a</EM> option (<ACLASS="linkend"HREF="ch16_11.htm"TITLE="Showing Hidden Files with ls -A and -a ">16.11</A>)</SPAN>for listing &quot;dot files.&quot;<ACLASS="indexterm"NAME="AUTOID-20291"></A>The <EMCLASS="emphasis">-i</EM> option lists the<SPANCLASS="link">i-number (<ACLASS="linkend"HREF="ch01_22.htm"TITLE="How UNIX Keeps Track of Files: Inodes ">1.22</A>)</SPAN>for each<SPANCLASS="link">entry in the directory (<ACLASS="linkend"HREF="ch18_02.htm"TITLE="What's Really in a Directory ">18.2</A>)</SPAN>;see the first column.The third column has the <EMCLASS="emphasis">link count</EM>: this is the number of hard linksto the file.</P><PCLASS="para">When you compare the entries for <EMCLASS="emphasis">file</EM> and <EMCLASS="emphasis">hardlink</EM>, you'll seethat they have a link count of 2.In this case, both links are in the same directory.Every other entry (i-number, size, owner, etc.) for<EMCLASS="emphasis">file</EM> and <EMCLASS="emphasis">hardlink</EM> is the same;that's because they both refer to exactly the same file, with two links (names).</P><PCLASS="para">A symbolic link has an <CODECLASS="literal">l</CODE> at the start ofthe permissions field.Its i-number isn't the same as the file it points tobecause a symbolic link takes a separateinode; so, it also takes disk space (which an extra hard link doesn't).The name has two parts: the name of the link (here, <EMCLASS="emphasis">symlink</EM>) followedby an arrow and the name the link points to (in this case, to <EMCLASS="emphasis">file</EM>).The symlink takes just 4 characters, which is exactly enough to store thepathname (<CODECLASS="literal">file</CODE>) that the link points to.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-7944-SECT-1.2">18.4.2 Links to a Directory </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20311"></A><ACLASS="indexterm"NAME="AUTOID-20314"></A>While we're at it, here's a section that isn't aboutlinking to files or making symbolic links.Let's look at the first two entries in the previous sample directoryin terms of links and link counts.This should help to tie the filesystem together (both literally and in yourmind!).</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20318"></A><ACLASS="indexterm"NAME="AUTOID-20321"></A>You've seen <CODECLASS="literal">.</CODE> and <CODECLASS="literal">..</CODE> in<SPANCLASS="link">pathnames (<ACLASS="linkend"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>)</SPAN>;you might also have read an<SPANCLASS="link">explanation of what's in a directory (<ACLASS="linkend"HREF="ch18_02.htm"TITLE="What's Really in a Directory ">18.2</A>)</SPAN>.The <CODECLASS="literal">.</CODE> entry is a link to the current directory; notice that itslink count is 2.Where's the other link?It's in the parent directory:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>ls -li ..</B></CODE>total 2 140330 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:11 sub  85524 drwxr-xr-x   2 jerry    ora      1024 Aug 18 10:47 sub2</PRE></BLOCKQUOTE></P><PCLASS="para">Look at the i-numbers for the entries in the parent directory.Which entry is for our current directory?The entry for <EMCLASS="emphasis">sub</EM> has the i-number 140330, and so doesthe <CODECLASS="literal">.</CODE> listing in the current directory.So the current directory is named <EMCLASS="emphasis">sub</EM>.</P><PCLASS="para">Now you should be able see why every directory has at least two links.One link, named <CODECLASS="literal">.</CODE>, is to the directory itself.The other link, in its parent, gives the directory its name.(Article<ACLASS="xref"HREF="ch14_04.htm"TITLE="How Does UNIX Find Your Current Directory? ">14.4</A>has a picture of this.)</P><PCLASS="para">Every directory has a <CODECLASS="literal">..</CODE> entry, which isa link to its parent directory.If you look back at the listing of our current directory,you can see that the parent directory has four links.Where are they?Think for a minute.(No fair peeking ahead!)</P><PCLASS="para">Bzzzzzzt... time's up.<ACLASS="indexterm"NAME="AUTOID-20342"></A>When a directory has subdirectories, it will also have a hard link named<CODECLASS="literal">..</CODE> in each subdirectory.You can see above, in the output from <CODECLASS="literal">ls&nbsp;-li&nbsp;..</CODE>, that the parentdirectory has two subdirectories:<EMCLASS="emphasis">sub</EM> and <EMCLASS="emphasis">sub2</EM>.That's two of the four links.The other two links arethe <CODECLASS="literal">.</CODE> entry in the parent directory,and the entry for the parent directory (which is named <EMCLASS="emphasis">test</EM>)in <EMCLASS="emphasis">its</EM> parent directory:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch16_08.htm"TITLE="16.8 The ls -d Option ">-d</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -dli ../. ../../test</B></CODE>  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 ../.  85523 drwxr-xr-x   4 jerry    ora      1024 Aug 18 10:47 ../../test</PRE></TD></TR></TABLE></P><PCLASS="para">As they should, all the links have the same i-number: 85523.Make sense?This concept can be a little abstract and hard to follow at first.Understanding it will help you, though&nbsp;- especially if you're a systemadministrator who has to use strong medicine like <SPANCLASS="link"><EMCLASS="emphasis">clri</EM> (<ACLASS="linkend"HREF="ch23_13.htm"TITLE="Deleting Files with the Null Name ">23.13</A>)</SPAN>.For more practice, make a subdirectory and experiment in it the waywe've shown in this article.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-20361"></A>By the way, directories and their hard links <CODECLASS="literal">.</CODE> and <CODECLASS="literal">..</CODE>are added by the <EMCLASS="emphasis">mkdir</EM>(2) system call.That's the only way that normal users can create a directory (and thelinks to it).Article<ACLASS="xref"HREF="ch23_18.htm"TITLE="How Making and Deleting Directories Works ">23.18</A>has even more low-level details.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN>, <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_03.htm"TITLE="18.3 Files with Two or More Names"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 18.3 Files with Two or More Names"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch18_05.htm"TITLE="18.5 Creating and Removing Links "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 18.5 Creating and Removing Links "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">18.3 Files with Two or More Names</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">18.5 Creating and Removing Links </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>