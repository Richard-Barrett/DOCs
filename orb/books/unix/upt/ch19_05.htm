<HTML><HEAD><TITLE>[Chapter 19] 19.5 Using tar to Create and Unpack Archives </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:39:26Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch19_01.htm"TITLE="19. Creating and Reading Archives"><LINKREL="prev"HREF="ch19_04.htm"TITLE="19.4 A Simple Version of unshar "><LINKREL="next"HREF="ch19_06.htm"TITLE="19.6 GNU tar Sampler "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_04.htm"TITLE="19.4 A Simple Version of unshar "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.4 A Simple Version of unshar "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 19<BR>Creating and Reading Archives</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_06.htm"TITLE="19.6 GNU tar Sampler "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 19.6 GNU tar Sampler "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-3690">19.5 Using tar to Create and Unpack Archives </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21342"></A><ACLASS="indexterm"NAME="AUTOID-21344"></A><ACLASS="indexterm"NAME="AUTOID-21346"></A>Many UNIX users think of<SPANCLASS="link"><EMCLASS="emphasis">tar</EM> (<ACLASS="linkend"HREF="ch20_01.htm#UPT-ART-8024"TITLE="tar in a Nutshell ">20.1</A>)</SPAN>as a utility for creating tapes.Like most UNIX utilities though, that's only the beginning. Forexample, you can use <EMCLASS="emphasis">tar</EM> for<SPANCLASS="link">copying directory trees (<ACLASS="linkend"HREF="ch18_16.htm"TITLE="Copying Directory Trees with (tar | tar) ">18.16</A>)</SPAN>.</P><PCLASS="para">One common use for <EMCLASS="emphasis">tar</EM> is creating archive files that can beshipped to other systems. We've already seen a utility for creating<SPANCLASS="link">shell archives (<ACLASS="linkend"HREF="ch19_02.htm"TITLE="Introduction to Shell Archives ">19.2</A>)</SPAN>,but there are a lot of things that a shell archive can't do.<EMCLASS="emphasis">tar</EM> is very useful when you're sendingbinary data; I've seen some <EMCLASS="emphasis">shar</EM> utilities that can handlebinary data, but they're rare, and I don't particularly like the waythey do it. If you use <EMCLASS="emphasis">tar</EM>, you can package severaldirectories into an archive, you can send directories that includelinks, you can preserve file ownership and access permissions, etc.</P><PCLASS="para">To create a <EMCLASS="emphasis">tar</EM> archive, use the <EMCLASS="emphasis">c</EM> (create) and <EMCLASS="emphasis">f</EM> (filename) options to save<EMCLASS="emphasis">tar</EM>'s output in a file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cd /home/src/fsf</B></CODE>% <CODECLASS="userinput"><B>tar cf emacs.tar emacs</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This command puts everything in the <EMCLASS="emphasis">emacs</EM> directory into afile (called a <EMCLASS="emphasis">tar file</EM>) named <EMCLASS="emphasis">emacs.tar</EM>. You can thengive this file to other users, via<SPANCLASS="link">FTP, UUCP (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>,or any other means.</P><PCLASS="para">Archives (no matter how you make them) are usually rather large, soit's common to <SPANCLASS="link">compress (<ACLASS="linkend"HREF="ch24_07.htm"TITLE="Compressing Files to Save Space ">24.7</A>)</SPAN>them, with a command like:<ACLASS="indexterm"NAME="AUTOID-21375"></A></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>gzip emacs.tar</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This creates the file <EMCLASS="emphasis">emacs.tar.gz</EM>, which should besignificantly smaller than the original <EMCLASS="emphasis">tar</EM> archive.</P><PCLASS="para">If you're going to use UUCP or FTP to transfer the file, this is goodenough; both UUCP and FTP know how to handle binary data. Oftenthough, you'd like to send the archive via<SPANCLASS="link">electronic mail (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>,and some mail programs only know how to handle<SPANCLASS="link">ASCII (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>)</SPAN>data.In that case, you'll need to createan ASCII version. To do this, use the<ACLASS="indexterm"NAME="AUTOID-21386"></A><SPANCLASS="link"><EMCLASS="emphasis">uuencode</EM> (<ACLASS="linkend"HREF="glossary.htm#UPT-ART-1010"TITLE="Glossary">52.9</A>)</SPAN>command.To read the file directly, repeat its name twice:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>uuencode emacs.tar.gz emacs.tar.gz &gt; emacs.tar.gz.uu</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">You can then insert <EMCLASS="emphasis">emacs.tar.gz.uu</EM> into a mail message andsend it to someone. Of course, the ASCII-only encoding won't be asefficient as the original binary file. It's about 33&nbsp;percent larger.[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] If so, why bother <EMCLASS="emphasis">gzip</EM>ping? Why not forget about both<EMCLASS="emphasis">gzip</EM> and <EMCLASS="emphasis">uuencode</EM>? Well, you can't. Remember that<EMCLASS="emphasis">tar</EM> files are binary files to start with&nbsp;- even if every file inthe archive is an ASCII text file. You'd need to <EMCLASS="emphasis">uuencode</EM> afile before mailing it, anyway&nbsp;- so you'd still pay the 33 percent size penaltythat <EMCLASS="emphasis">uuencode</EM> incurs. Using <EMCLASS="emphasis">gzip</EM> minimizes the damage.</P></BLOCKQUOTE><PCLASS="para">If you'd rather, you can combine the steps above into one pipeline.Giving <EMCLASS="emphasis">tar</EM> the archive<SPANCLASS="link">filename (<ACLASS="linkend"HREF="ch13_13.htm"TITLE='The "Filename&quot; - '>13.13</A>)</SPAN>tells it to write toits standard output.That feeds the archive down the pipe:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar cf - emacs | gzip | uuencode emacs.tar.gz &gt; emacs.tar.gz.uu</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">What happens when you receive a uuencoded, compressed <EMCLASS="emphasis">tar</EM> file?The same thing, inreverse. You'll get a mail message that (after the various headerlines) looks something like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">begin 644 emacs.tar.gzM+DQ0&quot;D%L;&quot;!O9B!T:&amp;5S92!P&lt;F]B;&amp;5M&lt;R!C86X@8F4@&lt;V]L=F5D(&amp;)Y(&quot;)LM:6YK&lt;RPB(&amp;$@;65C:&amp;%N:7-M('=H:6-H&quot;F%L;&amp;]W&lt;R!A(&amp;9I;&amp;4@=&amp;\@:&amp;%VM92!T=V\@;W(@;6]R92!N86UE&lt;RX@(%5.25@@&lt;')O=FED97,@='=O(&amp;1I9F9EM&lt;F5N= IK:6YD&lt;R!O9B!L:6YK&lt;SH*+DQS($(*+DQI&quot;EQF0DAA&lt;F0@;&amp;EN:W-&lt;</PRE></BLOCKQUOTE></P><PCLASS="para">So you save the message in a file, complete with headers. Let's sayyou call this file <EMCLASS="emphasis">mailstuff</EM>. How do you get the original filesback? Use the following sequence of commands:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>uudecode mailstuff</B></CODE>% <CODECLASS="userinput"><B>gunzip emacs.tar.gz</B></CODE>% <CODECLASS="userinput"><B>tar xf emacs.tar</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-21422"></A><ACLASS="indexterm"NAME="AUTOID-21424"></A>The <EMCLASS="emphasis">uudecode</EM> command creates the file <EMCLASS="emphasis">emacs.tar.gz</EM>.Then <EMCLASS="emphasis">gunzip</EM> recreates your original <EMCLASS="emphasis">tar</EM> file, and<EMCLASS="emphasis">tar&nbsp;xf</EM> extracts the individual files from the archive.Article<ACLASS="xref"HREF="ch19_07.htm"TITLE="Extracting Files from a Compressed Archive ">19.7</A>shows a more efficient method&nbsp;- and also explains the <EMCLASS="emphasis">tar o</EM> option,which many System V users will need.</P><PCLASS="para">By the way, <EMCLASS="emphasis">tar</EM> is so flexible precisely because of UNIX'sfile-oriented design: everything, even a tape drive, &quot;looks like&quot; afile. So <EMCLASS="emphasis">tar</EM> creates a certain kind of file and sends it outinto the world; it usually lands on a tape, but you can put itsomewhere else if you want.   With most operating systems, a tape utility would know how to talk toa tape drive, and that's all.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_04.htm"TITLE="19.4 A Simple Version of unshar "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 19.4 A Simple Version of unshar "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch19_06.htm"TITLE="19.6 GNU tar Sampler "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 19.6 GNU tar Sampler "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">19.4 A Simple Version of unshar </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">19.6 GNU tar Sampler </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>