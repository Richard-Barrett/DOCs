<HTML><HEAD><TITLE>[Chapter 20] 20.8 Telling tar Which Files to Exclude or Include </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-10-23T15:44:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch20_01.htm"TITLE="20. Backing Up Files"><LINKREL="prev"HREF="ch20_07.htm"TITLE="20.7 Creating a Timestamp File for Selective Backups "><LINKREL="next"HREF="ch20_09.htm"TITLE="20.9 When a Program Doesn't Understand Wildcards "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_07.htm"TITLE="20.7 Creating a Timestamp File for Selective Backups "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 20.7 Creating a Timestamp File for Selective Backups "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 20<BR>Backing Up Files</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_09.htm"TITLE="20.9 When a Program Doesn't Understand Wildcards "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 20.9 When a Program Doesn't Understand Wildcards "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0424">20.8 Telling tar Which Files to Exclude or Include </A></H2><PCLASS="para">[This article was written for SunOS.Many versions of tar don't have some or all ofthese features.Some do it in a different way.Check your tar manual page, or use the<SPANCLASS="link"><EMCLASS="emphasis">GNU </EM>tar (<ACLASS="linkend"HREF="ch19_06.htm"TITLE="GNU tar Sampler ">19.6</A>)</SPAN>that we provideon the disc. -JP]</P><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-424-IX-ARCHIVES-TAR-ARCHIVES"></A><ACLASS="indexterm"NAME="UPT-ART-424-IX-TAR-ARCHIVES-EXCLUDING-INCLUDING-FILES-IN"></A>On some systems,<SPANCLASS="link"><EMCLASS="emphasis">make</EM> (<ACLASS="linkend"HREF="ch28_13.htm"TITLE="make Isn't Just for Programmers! ">28.13</A>)</SPAN>creates filenames starting with acomma&nbsp;(<CODECLASS="literal">,</CODE>) to keep track of dependencies.Various editors create backup files whose names end with apercent sign&nbsp;(<CODECLASS="literal">%</CODE>) or atilde&nbsp;(<CODECLASS="literal">~</CODE>).I often keep the original copy of a program with the <EMCLASS="emphasis">.orig</EM>extension and old versions with a <EMCLASS="emphasis">.old</EM>extension.</P><PCLASS="para">I often don't want to save these files on my backups.There may be some binary files that I don'twant to archive, but don't want to delete either.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22299"></A><ACLASS="indexterm"NAME="AUTOID-22302"></A><ACLASS="indexterm"NAME="AUTOID-22305"></A>A solution is to use the<EMCLASS="emphasis">X</EM>flag to<SPANCLASS="link"><EMCLASS="emphasis">tar</EM> (<ACLASS="linkend"HREF="ch20_01.htm#UPT-ART-8024"TITLE="tar in a Nutshell ">20.1</A>)</SPAN>.[Check your <EMCLASS="emphasis">tar</EM> manual page for the <EMCLASS="emphasis">F</EM> and <EMCLASS="emphasis">FF</EM> options, too.<EMCLASS="emphasis">-JIK</EM>&nbsp;]This flag specifies that the matching argument to <EMCLASS="emphasis">tar</EM>is the name of a file that lists files to exclude from the archive.Here is an example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find project ! -type d -print | \egrep '/,|%$|~$|\.old$|SCCS|/core$|\.o$|\.orig$' &gt; Exclude</B></CODE>% <CODECLASS="userinput"><B>tar cvfX project.tar Exclude project</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">In this example,<SPANCLASS="link"><EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_01.htm#UPT-ART-7410"TITLE="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A>)</SPAN>lists all files in the directories, but does notprint the directory names explicitly.If you have a directory name in an excluded list, it will also exclude all the files inside the directory.<SPANCLASS="link"><EMCLASS="emphasis">egrep</EM> (<ACLASS="linkend"HREF="ch27_05.htm"TITLE="Extended Searching for Text with egrep ">27.5</A>)</SPAN>is then used as a filter to exclude certain files from the archive.Here,<EMCLASS="emphasis">egrep</EM>is given several regular expressions to match certain files.This expression seems complex but is simple once you understanda few special characters:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">/</CODE></DT><DDCLASS="listitem"><PCLASS="para">The slash is not a special character. However, since no filenamecan contain a slash, it matches the beginning of a filename,as output by the <EMCLASS="emphasis">find</EM>command.</P></DD><DTCLASS="term"><CODECLASS="literal">|</CODE></DT><DDCLASS="listitem"><PCLASS="para">The vertical bar separates each regular expression.</P></DD><DTCLASS="term"><CODECLASS="literal">$</CODE></DT><DDCLASS="listitem"><PCLASS="para">The dollar sign is one of the two regular expression&quot;anchors&quot;and specifies the end of the line, or filename in this case.The other anchor, which specifies the beginning of the line, is<CODECLASS="literal">^</CODE> (caret).But because we are matching filenames output by<EMCLASS="emphasis">find</EM>,the only filenames that can match<CODECLASS="literal">^</CODE>are those in the top directory.</P></DD><DTCLASS="term"><CODECLASS="literal">\.</CODE></DT><DDCLASS="listitem"><PCLASS="para">Normally the dot matches any character in a regularexpression. Here, we want to match the actualcharacter <CODECLASS="literal">.</CODE> (dot),which is why the backslash is used toquoteorescapethe normal meaning.</P></DD></DL><PCLASS="para">A breakdown of the patterns and examples of the filesthat match these patterns is given here:</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Pattern</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Matches Files</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Used by</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/,</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">starting with <EMCLASS="emphasis">,</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">make</EM> dependency files</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">%$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ending with <EMCLASS="emphasis">%</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">textedit</EM> backup files</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">~$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ending with <EMCLASS="emphasis">~</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">emacs</EM> backup files</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">\.old$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ending with <EMCLASS="emphasis">.old</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">old copies</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">SCCS</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">in <EMCLASS="emphasis">SCCS</EM> directory</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><SPANCLASS="link">Source Code Control System (<ACLASS="linkend"HREF="ch20_13.htm"TITLE="SCCS Basics ">20.13</A>)</SPAN></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">/core$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">with name of <EMCLASS="emphasis">core</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><SPANCLASS="link">core dump (<ACLASS="linkend"HREF="glossary.htm#UPT-ART-1010"TITLE="Glossary">52.9</A>)</SPAN></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">\.o$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ending with <EMCLASS="emphasis">.o</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">object files</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">\.orig$</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">ending with <EMCLASS="emphasis">.orig</EM></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">original version</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22407"></A>Instead of specifying which files are to be excluded, you can specify which files to archive using the<EMCLASS="emphasis">-I</EM> option.As with the exclude flag, specifying a directory tells<EMCLASS="emphasis">tar</EM>to include (or exclude) the entire directory.You should also note that the syntax of the<EMCLASS="emphasis">-I</EM>option is different from the typical<EMCLASS="emphasis">tar</EM>flag.The next example archives all C files and makefiles.It uses <EMCLASS="emphasis">egrep</EM>'s <CODECLASS="literal">()</CODE> grouping operators to makethe <CODECLASS="literal">$</CODE> anchor character apply to all patterns inside theparentheses:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>find project -type f -print | \egrep '(\.[ch]|[Mm]akefile)$' &gt; Include</B></CODE>% <CODECLASS="userinput"><B>tar cvf project.tar -I Include</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">I suggest using<EMCLASS="emphasis">find</EM>to create the include or exclude file.You can edit it afterward, if you wish.One caution: extra spaces at the end of any line will cause that fileto be ignored.</P><PCLASS="para">One way to debug theoutputof the<EMCLASS="emphasis">find</EM>command is to use<SPANCLASS="link"><EMCLASS="emphasis">/dev/null</EM> (<ACLASS="linkend"HREF="ch13_14.htm"TITLE="What Can You Do with an Empty File? ">13.14</A>)</SPAN>as the output file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar cvfX /dev/null Exclude project</B></CODE></PRE></BLOCKQUOTE></P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-424-SECT-1.1">20.8.1 Including Other Directories </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22433"></A><ACLASS="indexterm"NAME="AUTOID-22436"></A>There are times when you want to make an archive of several directories.You may want to archive a source directory andanother directory like<EMCLASS="emphasis">/usr/local</EM>.The natural, but wrong, way to do this is to use the command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar cvf /dev/rmt8 project /usr/local</B></CODE></PRE></BLOCKQUOTE></P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> When using <EMCLASS="emphasis">tar</EM>, you must never specify a directory name starting with aslash (/).This will cause problems when you restore a directory,<SPANCLASS="link">as you will see later (<ACLASS="linkend"HREF="ch20_10.htm"TITLE="Avoid Absolute Paths with tar ">20.10</A>)</SPAN>.</P></BLOCKQUOTE><PCLASS="para">The proper way to handle the incorrect example above is to use the<ACLASS="indexterm"NAME="AUTOID-22448"></A><EMCLASS="emphasis">-C</EM> flag:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar cvf /dev/rmt8 project -C /usr local</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This will archive<EMCLASS="emphasis">/usr/local/...</EM>as<EMCLASS="emphasis">local/...</EM>.Article<ACLASS="xref"HREF="ch20_10.htm"TITLE="Avoid Absolute Paths with tar ">20.10</A>has more information.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-424-SECT-1.2">20.8.2 Type Pathnames Exactly </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-22462"></A>For the above options to work when you extract files from an archive,the pathname given in the include or exclude filemust exactly match the pathname on the tape.</P><PCLASS="para">Here's a sample run.I'm extracting from a file named <EMCLASS="emphasis">appe.tar</EM>.Of course, this example applies to tapes, too:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar tf appe.tar</B></CODE>appecode/appendix/font_styles.ccode/appendix/xmemo.ccode/appendix/xshowbitmap.ccode/appendix/zcard.ccode/appendix/zcard.icon</PRE></BLOCKQUOTE></P><PCLASS="para">Next, I create an exclude file, named <EMCLASS="emphasis">exclude</EM>, that contains thelines:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">code/appendix/zcard.ccode/appendix/zcard.icon</PRE></BLOCKQUOTE></P><PCLASS="para">Now, I run the following <EMCLASS="emphasis">tar</EM> command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>tar xvfX appe.tar exclude</B></CODE>x appe, 6421 bytes, 13 tape blocksx code/appendix/font_styles.c, 3457 bytes, 7 tape blocksx code/appendix/xmemo.c, 10920 bytes, 22 tape blocksx code/appendix/xshowbitmap.c, 20906 bytes, 41 tape blockscode/appendix/zcard.c excludedcode/appendix/zcard.icon excluded</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-424-SECT-1.3">20.8.3 Exclude the Archive File! </A></H3><PCLASS="para">If you're archiving the current directory (<CODECLASS="literal">.</CODE>) instead ofstarting at a subdirectory, remember to start withtwo pathnames in the <EMCLASS="emphasis">Exclude</EM> file:the archive that <EMCLASS="emphasis">tar</EM> creates and the <EMCLASS="emphasis">Exclude</EM> file itself.That keeps <EMCLASS="emphasis">tar</EM> from trying to archive its own output!</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cat &gt; Exclude./somedir.tar./Exclude</B></CODE><KBDCLASS="keycap">[CTRL-d]</KBD>% <CODECLASS="userinput"><B>find . -type f -print | \egrep  '/,|%$|~$|\.old$|SCCS|/core$|\.o$|\.orig$' &gt;&gt;Exclude</B></CODE>% <CODECLASS="userinput"><B>tar cvfX somedir.tar Exclude .</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">In that example,we used<SPANCLASS="link"><CODECLASS="literal">cat</CODE>&nbsp;<CODECLASS="literal">&gt;</CODE> (<ACLASS="linkend"HREF="ch25_02.htm"TITLE="Four Ways to Skin a cat ">25.2</A>)</SPAN>to create the file quickly; you could use a texteditor instead.Notice that the pathnames in the <EMCLASS="emphasis">Exclude</EM> file start with <CODECLASS="literal">./</CODE>;that's what the <EMCLASS="emphasis">tar</EM> command expects when you tell it to archivethe current directory (<CODECLASS="literal">.</CODE>).The long <EMCLASS="emphasis">find</EM>/<EMCLASS="emphasis">egrep</EM> command line uses the<SPANCLASS="link"><CODECLASS="literal">&gt;&gt;</CODE> operator (<ACLASS="linkend"HREF="ch13_01.htm#UPT-ART-1023"TITLE="Using Standard Input and Output">13.1</A>)</SPAN>to add other pathnames to the end of the <EMCLASS="emphasis">Exclude</EM> file.</P><PCLASS="para">&#13;Or, instead of adding the archive and exclude file's pathnames to theexclude file, you can move those two files somewhere out of thedirectory tree that <EMCLASS="emphasis">tar</EM> will read.<ACLASS="indexterm"NAME="AUTOID-22508"></A><ACLASS="indexterm"NAME="AUTOID-22509"></A></P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">BB, TOR</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_07.htm"TITLE="20.7 Creating a Timestamp File for Selective Backups "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 20.7 Creating a Timestamp File for Selective Backups "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch20_09.htm"TITLE="20.9 When a Program Doesn't Understand Wildcards "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 20.9 When a Program Doesn't Understand Wildcards "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">20.7 Creating a Timestamp File for Selective Backups </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">20.9 When a Program Doesn't Understand Wildcards </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>