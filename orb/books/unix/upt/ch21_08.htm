<HTML><HEAD><TITLE>[Chapter 21] 21.8 The MAILCHECK and mail Variables Check More than Mail</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:40:08Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch21_01.htm"TITLE="21. More About Managing Files"><LINKREL="prev"HREF="ch21_07.htm"TITLE="21.7 Setting File Modification Time with touch "><LINKREL="next"HREF="ch21_09.htm"TITLE="21.9 Keep File Printouts Up-to-Date Automatically with make"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_07.htm"TITLE="21.7 Setting File Modification Time with touch "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 21.7 Setting File Modification Time with touch "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 21<BR>More About Managing Files</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_09.htm"TITLE="21.9 Keep File Printouts Up-to-Date Automatically with make"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 21.9 Keep File Printouts Up-to-Date Automatically with make"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1220">21.8 The MAILCHECK and mail Variables Check More than Mail</A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23296"></A>Depending on how your system is set up, you may notice that itperiodically says something like <CODECLASS="literal">You have new mail</CODE>.When you run your<SPANCLASS="link">mail program (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>,the mail will be waiting for you in your mailbox.You can also use this feature to check for changesin several mailboxes, as well as changes in files and directories that don'thold mail&nbsp;- more about that in a minute.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-1220-SECT-1.1">21.8.1 For C Shell Users </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23304"></A>If you use the C shell, this feature is controlledby the <EMCLASS="emphasis">mail</EM> shell variable (usually set in your<SPANCLASS="link"><EMCLASS="emphasis">.cshrc</EM> file (<ACLASS="linkend"HREF="ch02_03.htm"TITLE="What Goes in Shell Setup Files? ">2.3</A>)</SPAN>).</P><PCLASS="para">The shell normally checks your mailbox every five minutes.However, you can set a different interval at the start ofthe list. For example, the command below tells the shell to checkmy mailbox every 60 seconds:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set mail=(60 /usr/spool/mail/mikel)</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Note that the exact filename depends upon how your mail system isset up.For example, many systems use <EMCLASS="emphasis">/usr/mail</EM> instead of <EMCLASS="emphasis">/usr/spool/mail</EM>.Checking for mail takes time and can delay your prompt on busy systems.Don't set a short interval unless you need to.</P><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UPT-ART-1220-SECT-1.1.1">21.8.1.1 Multiple Mailboxes </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23320"></A><ACLASS="indexterm"NAME="AUTOID-23323"></A>Many users need to watch more than one mailbox. For example, I needto watch <EMCLASS="emphasis">/usr/spool/mail/mikel</EM>; but if I'm responsible forproduct support, and my company maintains a special mail ID forsupport questions, I might also want to watch<EMCLASS="emphasis">/usr/spool/mail/prodsupport</EM>. To do this, we set the <EMCLASS="emphasis">mail</EM>variable so that it's a list of important files and directories:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set mail=(/usr/spool/mail/mikel /usr/spool/mail/prodsupport)</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;When the list has more than one file, the shell will tell you which filehas changed with a message like <CODECLASS="literal">new mail in /usr/spool/mail/prodsupport</CODE>.</P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UPT-ART-1220-SECT-1.1.2">21.8.1.2 Watching Other Files </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23337"></A>All <EMCLASS="emphasis">mail</EM> is doing is looking to see whether or not the file haschanged; it doesn't know that it's looking at a &quot;mail&quot; file.Therefore, you can use it to watch anything you want; your list can even include directories. For example, let's say thatyou're running a program that periodically writes to the file<EMCLASS="emphasis">/home/los/mikel/radio/log.out</EM>. Then you can set <EMCLASS="emphasis">mail</EM> asfollows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set mail=(/home/los/mikel/radio/log.out </B></CODE><CODECLASS="replaceable"><I>other-files</I></CODE><CODECLASS="userinput"><B>)</B></CODE></PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UPT-ART-1220-SECT-1.1.3">21.8.1.3 Watching Directories </A></H4><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23351"></A>Watching a directory isthe same as watching a file; you'll be notified whenever the directorychanges (whenever a file isadded or deleted in the directory). So let's modify our previous exampleslightly; let's say that your reports are named<EMCLASS="emphasis">/home/los/mikel/radio/log/</EM><CODECLASS="replaceable"><I>date</I></CODE>, where the <EMCLASS="emphasis">date</EM>indicates when the report was created. Every report thus generates anew file. In this case, you'd want to watch the log directory for thecreation of new files.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set mail=(/home/los/mikel/radio/log </B></CODE><CODECLASS="replaceable"><I>other-files</I></CODE><CODECLASS="userinput"><B>)</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Here's another example. Let's say that you suspect someone is using<SPANCLASS="link">UUCP (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>to send company secrets to a system named <EMCLASS="emphasis">somewhere</EM>.You want to watch this systems's UUCP traffic very carefully. To doso, you can tell the shell to inform you whenever the logfile changes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set mail=(5 /usr/spool/uucp/.Log/uucico/somewhere)</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">We've told the shell to check the log every five seconds because,given that we suspect security problems, we want to get our reportsimmediately.</P><PCLASS="para">If the directory you're watching is actually a<SPANCLASS="link">symbolic link (<ACLASS="linkend"HREF="ch18_04.htm"TITLE="More About Links ">18.4</A>)</SPAN>to anotherdirectory,be sure to check the actual directory and not the link.<ACLASS="indexterm"NAME="AUTOID-23371"></A><ACLASS="indexterm"NAME="AUTOID-23373"></A>The<SPANCLASS="link"><EMCLASS="emphasis">sl</EM> (<ACLASS="linkend"HREF="ch18_08.htm"TITLE="Showing the Actual Filenames for Symbolic Links ">18.8</A>)</SPAN>script is handy for this&nbsp;- or you can use<SPANCLASS="link"><EMCLASS="emphasis">ls -ld</EM> (<ACLASS="linkend"HREF="ch16_08.htm"TITLE="The ls -d Option ">16.8</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -ld /usr/local/logs</B></CODE>lrwxrwxrwx  1 root    15 Jul 10  1990 /usr/local/logs -&gt; /foo/bar/logs% <CODECLASS="userinput"><B>ls -ld /foo/bar/logs</B></CODE>drwxrwxr-x  2 root  512 Aug 10 12:20 /foo/bar/logs% <CODECLASS="userinput"><B>set mail=(/foo/bar/logs)</B></CODE></PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-1220-SECT-1.2">21.8.2 For Bourne Shell Users </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23388"></A>Now, let's assume that you're a Bourne shell user, and go througheverything once more. The Bourne shell uses three variables tocontrol mail notification.(These are usually set in users'<SPANCLASS="link"><EMCLASS="emphasis">.profile</EM> (<ACLASS="linkend"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>)</SPAN>files.To make them work in<SPANCLASS="link">subshells (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>,<SPANCLASS="link"><EMCLASS="emphasis">export</EM> (<ACLASS="linkend"HREF="ch06_01.htm#UPT-ART-1170"TITLE="What Environment Variables Are Good For ">6.1</A>)</SPAN>the variables.)We'll assume that you read the C shelldescription already given, and move a bit faster.</P><PCLASS="para">First, if you want to check only one file or directory, set thevariable <EMCLASS="emphasis">MAIL</EM> accordingly.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>MAIL=/usr/spool/mail/mikel</B></CODE>$ <CODECLASS="userinput"><B>export MAIL</B></CODE></PRE></BLOCKQUOTE></P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> The next three features don't work on some Bourne shells.</P></BLOCKQUOTE><PCLASS="para">By default, the Bourne shell checks every ten minutes.<ACLASS="indexterm"NAME="AUTOID-23405"></A>To check at some other interval, set the variable <EMCLASS="emphasis">MAILCHECK</EM> to yournew interval, in seconds: for example, the command below tells theshell to check every 55 seconds:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>MAILCHECK=55</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;One useful trick: if you set <EMCLASS="emphasis">MAILCHECK</EM> to 0, the shell will checkwhenever it prints the &quot;primary&quot; prompt (by default, <CODECLASS="literal">$</CODE>).In otherwords, it will check after each command.This may be slow on busy systems.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-23415"></A>If you want to watch several files, use the <EMCLASS="emphasis">MAILPATH</EM> variable. Itsvalue must be a list of file or directory names, separated by colons.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>MAILPATH=/usr/spool/mail/mikel:/usr/spool/mail/prodsupport</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">If <EMCLASS="emphasis">MAILPATH</EM> is set, the shell will ignore the <EMCLASS="emphasis">MAIL</EM>variable. You can't use both.</P><PCLASS="para">Normally,the Bourne shell prints <CODECLASS="literal">you have mail</CODE> whenever any file that it'swatching changes. However, if you follow a filenamein <EMCLASS="emphasis">MAILPATH</EM> with a percent sign (<CODECLASS="literal">%</CODE>) and a message,the shell will printthe message whenever the file changes. For example, let's have the shellprint <CODECLASS="literal">you have mail</CODE> when mail comes in and<CODECLASS="literal">New log!</CODE> when a log file changes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>MAILPATH=/usr/spool/mail/mikel:/home/mikel/Z/log%&quot;New log!&quot;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">You can create a different message for every file that you care about.Note that the Korn shell and <EMCLASS="emphasis">bash</EM> use <CODECLASS="literal">?</CODE> (a question mark)instead of the <CODECLASS="literal">%</CODE> before each message.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_07.htm"TITLE="21.7 Setting File Modification Time with touch "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 21.7 Setting File Modification Time with touch "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch21_09.htm"TITLE="21.9 Keep File Printouts Up-to-Date Automatically with make"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 21.9 Keep File Printouts Up-to-Date Automatically with make"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">21.7 Setting File Modification Time with touch </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">21.9 Keep File Printouts Up-to-Date Automatically with make</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>