<HTML><HEAD><TITLE>[Chapter 26] 26.5 Getting Regular Expressions Right </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:44:07Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch26_01.htm"TITLE="26. Regular Expressions (Pattern Matching)"><LINKREL="prev"HREF="ch26_04.htm"TITLE="26.4 Using Metacharacters in Regular Expressions "><LINKREL="next"HREF="ch26_06.htm"TITLE="26.6 Just What Does a Regular Expression Match? "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch26_04.htm"TITLE="26.4 Using Metacharacters in Regular Expressions "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 26.4 Using Metacharacters in Regular Expressions "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 26<BR>Regular Expressions (Pattern Matching)</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch26_06.htm"TITLE="26.6 Just What Does a Regular Expression Match? "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 26.6 Just What Does a Regular Expression Match? "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7949">26.5 Getting Regular Expressions Right </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-28986"></A>Writing regular expressions involves more than learning the mechanics.You not only haveto learn how to describe patterns, you also have to recognizethe context in which they appear.You have to be able to think through the level ofdetail that is necessary in a regular expression, basedon the context in which the pattern will be applied.</P><PCLASS="para">The same thing that makes writing regular expressions difficult is what makes writing them interesting:the variety of occurrences or contexts in which a pattern appears.This complexity is inherent in language itself, just as you can't always understand an<SPANCLASS="link">expression (<ACLASS="linkend"HREF="ch26_01.htm#UPT-ART-7844"TITLE="That's an Expression ">26.1</A>)</SPAN>by looking up each word in the dictionary. </P><PCLASS="para">The process of writing a regular expression involvesthree steps:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Knowing what it is you want to match and how it might appear in the text. </P></LI><LICLASS="listitem"><PCLASS="para">Writing a pattern to describe what you want to match.</P></LI><LICLASS="listitem"><PCLASS="para">Testing the pattern to see what it matches.</P></LI></OL><PCLASS="para">This process is virtually the same kind of process that a programmerfollows to develop a program.Step 1 might be considered the specification,which should reflect an understanding of the problem to be solved as wellas how to solve it.Step 2 is analogous to the actual coding of the program,and step 3 involves running the program and testing it against the specification.Steps 2 and 3 form a loop that is repeated until the programworks satisfactorily.</P><PCLASS="para">Testing your description of what you want to match ensures that the descriptionworks as expected.It usually uncovers a few surprises.Carefully examining the results of a test, comparing the outputagainst the input, will greatly improve yourunderstanding of regular expressions.You might consider evaluating theresults of a pattern-matching operation as follows: </P><DLCLASS="variablelist"><DTCLASS="term">Hits</DT><DDCLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">The lines that I wanted to match.</EM></P></DD><DTCLASS="term">Misses</DT><DDCLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">The lines that I didn't want to match.</EM></P></DD><DTCLASS="term">Misses that should be hits</DT><DDCLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">The lines that I didn't match but wanted to match.</EM></P></DD><DTCLASS="term">Hits that should be misses</DT><DDCLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">The lines that I matched but didn't want to match.</EM></P></DD></DL><PCLASS="para">Trying to perfect your description of a pattern is something that you work at from opposite ends: you try to eliminate the &quot;hits that should be misses&quot;by limiting the possible matches and you try to capture the &quot;misses that should be hits&quot; by expandingthe possible matches.</P><PCLASS="para">The difficulty is especially apparent when you must describe patterns using fixed strings. Each character you remove from the fixed-string pattern increases the number of possible matches.For instance, while searching for the string <CODECLASS="literal">what</CODE>,you determine that you'd like to match <CODECLASS="literal">What</CODE> as well.The only fixed-string pattern that will match <CODECLASS="literal">What</CODE> and <CODECLASS="literal">what</CODE> is <CODECLASS="literal">hat</CODE>, the longest string common to both. It is obvious, though, that searching for <CODECLASS="literal">hat</CODE> willproduce unwanted matches.Each character you add to a fixed-string pattern decreasesthe number of possible matches.The string <CODECLASS="literal">them</CODE> is going to produce fewer matches than the string <CODECLASS="literal">the</CODE>.</P><PCLASS="para">Using metacharacters in patterns provides greater flexibility in extending or narrowing the range of matches.Metacharacters, used in combination with literalsor other metacharacters, can be used to expand the range of matcheswhile still eliminating the matches that you do not want.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DD</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">sed &amp; awk</CITE></SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch26_04.htm"TITLE="26.4 Using Metacharacters in Regular Expressions "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 26.4 Using Metacharacters in Regular Expressions "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch26_06.htm"TITLE="26.6 Just What Does a Regular Expression Match? "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 26.6 Just What Does a Regular Expression Match? "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">26.4 Using Metacharacters in Regular Expressions </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">26.6 Just What Does a Regular Expression Match? </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>