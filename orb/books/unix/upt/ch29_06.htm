<HTML><HEAD><TITLE>[Chapter 29] 29.6 Counting Lines, Words, and Characters: wc </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:45:06Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch29_01.htm"TITLE="29. Spell Checking, Word Counting, and Textual Analysis"><LINKREL="prev"HREF="ch29_05.htm"TITLE="29.5 Adding Words to ispell's Dictionary "><LINKREL="next"HREF="ch29_07.htm"TITLE="29.7 Count How Many Times Each Word Is Used "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch29_05.htm"TITLE="29.5 Adding Words to ispell's Dictionary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 29.5 Adding Words to ispell's Dictionary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 29<BR>Spell Checking, Word Counting, and Textual Analysis</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch29_07.htm"TITLE="29.7 Count How Many Times Each Word Is Used "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 29.7 Count How Many Times Each Word Is Used "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-2730">29.6 Counting Lines, Words, and Characters: wc </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-2730-IX-WORDS-COUNTING"></A><ACLASS="indexterm"NAME="UPT-ART-2730-IX-TEXT-COUNTING-ELEMENTS-OF"></A><ACLASS="indexterm"NAME="UPT-ART-2730-IX-WC-COMMAND"></A><ACLASS="indexterm"NAME="UPT-ART-2730-IX-COUNTING-TEXT-ELEMENTS"></A><ACLASS="indexterm"NAME="UPT-ART-2730-IX-LINES-IN-FILES-COUNTING"></A><ACLASS="indexterm"NAME="UPT-ART-2730-IX-CHARACTERS-COUNTING"></A>The <EMCLASS="emphasis">wc</EM> (word count) command counts the number of lines, words, andcharacters in the files you specify.(<SPANCLASS="link">Like most UNIX utilities (<ACLASS="linkend"HREF="ch01_30.htm"TITLE="Redirecting Input and Output ">1.30</A>)</SPAN>,<EMCLASS="emphasis">wc</EM> reads from its standard inputif you don't specify a filename.)For example, the file <EMCLASS="emphasis">letter</EM> has 120 lines, 734 words, and 4297characters:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>wc letter</B></CODE>     120     734    4297 letter</PRE></BLOCKQUOTE></P><PCLASS="para">You can restrict what is countedby specifying the options <EMCLASS="emphasis">-l</EM> (count lines only), <EMCLASS="emphasis">-w</EM> (count words only), and <EMCLASS="emphasis">-c</EM> (count characters only).For example, you can count the number of lines in a file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>wc -l letter</B></CODE>     120 letter</PRE></BLOCKQUOTE></P><PCLASS="para">or you can count the number of files in a directory:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cd man_pages</B></CODE>% <CODECLASS="userinput"><B>ls | wc -w</B></CODE>     233</PRE></BLOCKQUOTE></P><PCLASS="para">The first example uses a file as input; the second example pipesthe output of an <EMCLASS="emphasis">ls</EM> command to the input of <EMCLASS="emphasis">wc</EM>.(Be aware that the<SPANCLASS="link"><EMCLASS="emphasis">-a</EM> option (<ACLASS="linkend"HREF="ch16_11.htm"TITLE="Showing Hidden Files with ls -A and -a ">16.11</A>)</SPAN>makes <EMCLASS="emphasis">ls</EM> list dot files.If your <EMCLASS="emphasis">ls</EM> command is<SPANCLASS="link">aliased (<ACLASS="linkend"HREF="ch10_02.htm"TITLE="Aliases for Common Commands ">10.2</A>)</SPAN>to include <EMCLASS="emphasis">-a</EM>or other options that add words to the normal output&nbsp;- such as theline <CODECLASS="literal">total </CODE><CODECLASS="replaceable"><I>nnn</I></CODE> from <EMCLASS="emphasis">ls -l</EM>-thenyou may not get the results you want.)</P><PCLASS="para">The fact that you can pipe the output of a command through <EMCLASS="emphasis">wc</EM> lets youuse <EMCLASS="emphasis">wc</EM> to perform addition and subtraction. For example, I once wrotea shell script that involved, among other things, splitting files into several pieces, and I needed the script to keep track of how many files werecreated. (The script ran<SPANCLASS="link"><EMCLASS="emphasis">csplit</EM> (<ACLASS="linkend"HREF="ch35_10.htm"TITLE="Splitting Files by Context: csplit ">35.10</A>)</SPAN>on each file, producing an arbitrarynumber of new files named <EMCLASS="emphasis">file.00</EM>, <EMCLASS="emphasis">file.01</EM>, <EMCLASS="emphasis">file.02</EM>, etc.)Here's the code I used to solve this problem:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch09_16.htm"TITLE="9.16 Command Substitution ">`...`</A> <ACLASS="co"HREF="ch49_06.htm"TITLE="49.6 Quick Arithmetic with expr ">expr</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">before=`ls $file* | wc -l`              # count the file<EMCLASS="emphasis">   split the file by running it through csplit</EM>after=`ls $file* | wc -l`               # count file plus new splitsnum_files=`expr $after - $before`       # evaluate the difference</PRE></TD></TR></TABLE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-32221"></A>As another trick, the following command will tell you how many more wordsare in <EMCLASS="emphasis">new.file</EM> than in <EMCLASS="emphasis">old.file</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>expr `wc -w &lt; new.file`    -    `wc -w &lt; old.file`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">[The C and Korn shells have built-in arithmetic commands and don't really need<EMCLASS="emphasis">expr</EM>-but <EMCLASS="emphasis">expr</EM> works in all shells. <EMCLASS="emphasis">-JP</EM>&nbsp;]&#13;</P><PCLASS="para">Notice that you should have <EMCLASS="emphasis">wc</EM> read the input files by using a <CODECLASS="literal">&lt;</CODE> character. If instead you say:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>expr `wc -w new.file` - `wc -w old.file`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">the filenames will show up in the expressions and produce a syntax error.[1]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] You could also type <CODECLASS="literal">cat new.file | wc -w</CODE>, but thisinvolves two commands, so it's<SPANCLASS="link">less efficient (<ACLASS="linkend"HREF="ch13_02.htm"TITLE="One Argument with a cat Isn't Enough ">13.2</A>)</SPAN>.</P></BLOCKQUOTE><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="count.it">count.it</A><BR></TH><TDVALIGN="TOP">Taking this concept further, here's a simple shell script to calculatethe differences in word count between two files:<ACLASS="indexterm"NAME="AUTOID-32245"></A>&#13;</TD></TR></TABLE><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch08_06.htm"TITLE="8.6 Output Command-Line Arguments ">echo</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">count_1=`wc -w &lt; $1`   # number of words in file 1count_2=`wc -w &lt; $2`   # number of words in file 2diff_12=`expr $count_1 - $count_2`   # difference in word count# if $diff_12 is negative, reverse order and don't show the minus sign:case &quot;$diff_12&quot; in-*) echo &quot;$2 has `expr $diff_12 : '-\(.*\)'` more words than $1&quot; ;;*)  echo &quot;$1 has $diff_12 more words than $2&quot; ;;esac</PRE></TD></TR></TABLE></P><PCLASS="para">If this script were called <EMCLASS="emphasis">count.it</EM>, then you could invoke it like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>count.it draft.2 draft.1</B></CODE>draft.1 has 23 more words than draft.2</PRE></BLOCKQUOTE></P><PCLASS="para">You could modify this script to count lines or characters.</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> <ACLASS="indexterm"NAME="AUTOID-32259"></A>Unless the counts are very large, the output of <EMCLASS="emphasis">wc</EM> will have leadingspaces. This can cause trouble in scripts if you aren't careful.For instance, in the script above, the command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">echo &quot;$1 has $count_1 words&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">might print:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">draft.2 has       79 words</PRE></BLOCKQUOTE></P><PCLASS="para">See the extra spaces?Understanding how the shell handles<SPANCLASS="link">quoting (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>will help here.If you can, let the shell read the <EMCLASS="emphasis">wc</EM> output and remove extra spaces.For example, without quotes, the shell passes four separate words to<EMCLASS="emphasis">echo</EM>-and <EMCLASS="emphasis">echo</EM> adds a single space between each word:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">echo $1 has $count_1 words</PRE></BLOCKQUOTE></P><PCLASS="para">that might print:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">draft.2 has 79 words</PRE></BLOCKQUOTE></P><PCLASS="para">That's especially important to understand when you use <EMCLASS="emphasis">wc</EM>with commands like <EMCLASS="emphasis">test</EM> or <EMCLASS="emphasis">expr</EM> which don't expect spacesin their arguments.If you can't use the shell to strip out the spaces, delete them bypiping the <EMCLASS="emphasis">wc</EM> output through<SPANCLASS="link"><CODECLASS="literal">tr&nbsp;-d&nbsp;'&nbsp;'</CODE> (<ACLASS="linkend"HREF="ch35_11.htm"TITLE="Hacking on Characters with tr ">35.11</A>)</SPAN>.</P></BLOCKQUOTE><PCLASS="para">&#13;Finally, two notes about file size:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><EMCLASS="emphasis">wc -c</EM> isn't an efficient way to count the characters in largenumbers of files.<EMCLASS="emphasis">wc</EM> opens and reads each file, which takes time.The fourth or fifth column of output from <EMCLASS="emphasis">ls -l</EM> (depending onyour version) gives the character count without opening the file.You can sum <EMCLASS="emphasis">ls -l</EM> counts for multiple files with the<ACLASS="indexterm"NAME="AUTOID-32293"></A><SPANCLASS="link"><EMCLASS="emphasis">addup</EM> (<ACLASS="linkend"HREF="ch49_07.htm"TITLE="Total a Column with addup ">49.7</A>)</SPAN>command.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -l </B></CODE><CODECLASS="replaceable"><I>files</I></CODE><CODECLASS="userinput"><B> | addup 4</B></CODE>670518</PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">Using character counts (as in the item above) doesn't give you the totaldisk space used by files.That's because, in general, each file takes at least one disk blockto store.The<SPANCLASS="link"><EMCLASS="emphasis">du</EM> (<ACLASS="linkend"HREF="ch24_09.htm"TITLE="How Much Disk Space? ">24.9</A>)</SPAN>command gives accurate disk usage.</P></LI></UL><ACLASS="indexterm"NAME="AUTOID-32307"></A><ACLASS="indexterm"NAME="AUTOID-32308"></A><ACLASS="indexterm"NAME="AUTOID-32309"></A><ACLASS="indexterm"NAME="AUTOID-32310"></A><ACLASS="indexterm"NAME="AUTOID-32311"></A><ACLASS="indexterm"NAME="AUTOID-32312"></A><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DG</SPAN>, <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch29_05.htm"TITLE="29.5 Adding Words to ispell's Dictionary "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 29.5 Adding Words to ispell's Dictionary "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch29_07.htm"TITLE="29.7 Count How Many Times Each Word Is Used "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 29.7 Count How Many Times Each Word Is Used "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">29.5 Adding Words to ispell's Dictionary </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">29.7 Count How Many Times Each Word Is Used </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>