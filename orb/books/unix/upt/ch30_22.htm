<HTML><HEAD><TITLE>[Chapter 30] 30.22 Filtering Text Through a UNIX Command </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:45:38Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch30_01.htm"TITLE="30. vi Tips and Tricks"><LINKREL="prev"HREF="ch30_21.htm"TITLE="30.21 Per File Setups in Separate Files "><LINKREL="next"HREF="ch30_23.htm"TITLE="30.23 Safer vi Filter-Throughs "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_21.htm"TITLE="30.21 Per File Setups in Separate Files "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 30.21 Per File Setups in Separate Files "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 30<BR>vi Tips and Tricks</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_23.htm"TITLE="30.23 Safer vi Filter-Throughs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 30.23 Safer vi Filter-Throughs "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0139">30.22 Filtering Text Through a UNIX Command </A></H2><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="xref.warning"HREF="ch30_23.htm"TITLE="30.23 Safer vi Filter-Throughs ">Warning!</A> </TH><TDVALIGN="TOP">When you're editing in <EMCLASS="emphasis">vi</EM>, you can send a block of text asstandard input to a UNIX command. <ACLASS="indexterm"NAME="AUTOID-33727"></A><ACLASS="indexterm"NAME="AUTOID-33730"></A>The output from this command replaces the block of text in the buffer.You can filter text through a command from either <EMCLASS="emphasis">ex</EM> or <EMCLASS="emphasis">vi</EM>. The main difference between the two methods is that you indicate the block of text with line addresses in <EMCLASS="emphasis">ex</EM> andwith text objects (movement commands) in <EMCLASS="emphasis">vi</EM>.</TD></TR></TABLE><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-139-SECT-1.1">30.22.1 Filtering Text with ex </A></H3><PCLASS="para">The first example demonstrates how to filter text with <EMCLASS="emphasis">ex</EM>.Assume that you're editing a file with a list of names and youwant to alphabetize (sort) lines&nbsp;96 through&nbsp;99.You simply type the addresses of the lines you want to filter, followedby an exclamation markand the UNIX command to be executed.For example, the command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>:96,99!sort</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">will pass lines 96 through 99 through the<SPANCLASS="link"><EMCLASS="emphasis">sort</EM> (<ACLASS="linkend"HREF="ch36_01.htm#UPT-ART-7640"TITLE="Putting Things in Order ">36.1</A>)</SPAN>filter and replacethose lines with the output of <EMCLASS="emphasis">sort</EM>.</P><PCLASS="para">The <EMCLASS="emphasis">ex</EM> <CODECLASS="literal">%</CODE> operator is the easiest way to filter all the lines inyour buffer.If you're editing a C program, for instance, you could feed it allthrough theformatting program named <EMCLASS="emphasis">indent</EM>by typing:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">:%!indent</PRE></BLOCKQUOTE></P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-139-SECT-1.2">30.22.2 Filtering Text with vi </A></H3><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-139-IX-VI-EDITOR-FILTERING-TEXT"></A><ACLASS="indexterm"NAME="UPT-ART-139-IX-FILTERS-VI-EDITOR"></A>In <EMCLASS="emphasis">vi</EM>, text is filtered through a UNIX command by typing an exclamation mark (<CODECLASS="literal">!</CODE>)followed by any of <EMCLASS="emphasis">vi</EM>'s movement keystrokesthat indicate a block of text,and then by the UNIX command line to be executed.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>!)</B></CODE><CODECLASS="replaceable"><I>command</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">will pass the next sentence through <EMCLASS="emphasis">command</EM>.</P><PCLASS="para">There are a couple of unusual features about how <EMCLASS="emphasis">vi</EM> acts whenyou use this structure.</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">First, the exclamation mark doesn't appear on your screen right away.  Whenyou type the keystroke(s) for the text object you want to filter, theexclamation mark appears at the bottom of the screen, <EMCLASS="emphasis">but thecharacter you type to reference the object does not.</EM></P></LI><LICLASS="listitem"><PCLASS="para">Second, text blocks must be more than one line, so you can use onlythe keystrokes that would move more than one line ( <CODECLASS="literal">G</CODE>, <CODECLASS="literal">{}</CODE>, <CODECLASS="literal">( )</CODE>, <CODECLASS="literal">[[ ]]</CODE>, <CODECLASS="literal">+</CODE>, <CODECLASS="literal">-</CODE>&nbsp;).  To repeatthe effect, a number may precede either the exclamation mark or thetext object.  (For example, both <CODECLASS="literal">!10+</CODE> and <CODECLASS="literal">10!+</CODE> wouldindicate the next ten lines.)  Objects such as <CODECLASS="literal">w</CODE> do not workunless enough of them are specified so as to exceed a single line.You can also use a slash (<CODECLASS="literal">/</CODE>) followed by a <EMCLASS="emphasis">pattern</EM> and acarriage return to specify the object.  This takes the text up to thepattern as input to the command.</P></LI><LICLASS="listitem"><PCLASS="para">Third, there is a special text object that can be used only with this commandsyntax; you can specify the current line by entering a secondexclamation mark:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>!!</B></CODE><CODECLASS="replaceable"><I>command</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Remember that either the entire sequence or the text object can be preceded by a number to repeat the effect.For instance, to change lines&nbsp;96 through&nbsp;99 as in the previous example,you could position the cursor on line&nbsp;96 and enter either:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>4!!sort</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">or:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>!4!sort</B></CODE></PRE></BLOCKQUOTE></P></LI></UL><PCLASS="para">As another example, assume you have a portion of text in a message thatyou're going to send to the<SPANCLASS="link">Usenet (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>&quot;net news.&quot;<ACLASS="indexterm"NAME="AUTOID-33807"></A>On Usenet, text that might be offensive or would give away the answer toa question is &quot;rotated.&quot;The letter <EMCLASS="emphasis">a</EM> is changed to <EMCLASS="emphasis">n</EM>, <EMCLASS="emphasis">b</EM> is changed to <EMCLASS="emphasis">o</EM>,and so on.There are programs for rotating text,but it's also easy to rotate text with the<ACLASS="indexterm"NAME="AUTOID-33813"></A><SPANCLASS="link"><EMCLASS="emphasis">tr</EM> (<ACLASS="linkend"HREF="ch35_11.htm"TITLE="Hacking on Characters with tr ">35.11</A>)</SPAN>command.In this example, the second sentence is the block of text that will be filtered to the command.</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"></TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"> One sentence before. <UCLASS="cursor">W</U>ith a screen editor you can scroll the page move the cursor, delete lines, insert characters,  and more, while seeing the results of your edits  as you make them. One sentence after.</PRE></BLOCKQUOTE></TH></TR><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Keystrokes</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Results</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">!)</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"> One sentence after. ~ ~ ~ !_</PRE></BLOCKQUOTE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">An exclamation mark appears on the last line to prompt youfor the UNIX command.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">tr '[a-z]' '[A-Z]'</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"> One sentence before.   <UCLASS="cursor">W</U>ITH A SCREEN EDITOR YOU CAN SCROLL THE PAGE MOVE THE CURSOR, DELETE LINES, INSERT CHARACTERS,  AND MORE, WHILE SEEING THE RESULTS OF YOUR EDITS  AS YOU MAKE THEM. One sentence after.</PRE></BLOCKQUOTE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Enter the UNIX command and press RETURN.  The input is replaced by the output.</P></TD></TR></TBODY></TABLE><PCLASS="para">To repeat the previous command, the syntax is:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">! <EMCLASS="emphasis">object</EM> !</PRE></BLOCKQUOTE></P><PCLASS="para">It is sometimes useful to send sections of a coded document to<EMCLASS="emphasis">nroff</EM> to be replaced by formatted output.  Remember that the &quot;original&quot; input is replaced by the output.  Fortunately, if there is a mistake, such as an error message being sent instead of the expected output, you can undo the command and restore the lines.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">TOR</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">Learning the vi Editor</CITE>, Chapter 7</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_21.htm"TITLE="30.21 Per File Setups in Separate Files "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 30.21 Per File Setups in Separate Files "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_23.htm"TITLE="30.23 Safer vi Filter-Throughs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 30.23 Safer vi Filter-Throughs "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">30.21 Per File Setups in Separate Files </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">30.23 Safer vi Filter-Throughs </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>