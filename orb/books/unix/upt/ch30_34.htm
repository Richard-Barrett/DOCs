<HTML><HEAD><TITLE>[Chapter 30] 30.34 vi Line Commands vs. Character Commands </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:45:55Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch30_01.htm"TITLE="30. vi Tips and Tricks"><LINKREL="prev"HREF="ch30_33.htm"TITLE="30.33 Fixing Typos with vi Abbreviations "><LINKREL="next"HREF="ch30_35.htm"TITLE="30.35 Out of Temporary Space? Use Another Directory "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_33.htm"TITLE="30.33 Fixing Typos with vi Abbreviations "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 30.33 Fixing Typos with vi Abbreviations "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 30<BR>vi Tips and Tricks</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_35.htm"TITLE="30.35 Out of Temporary Space? Use Another Directory "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 30.35 Out of Temporary Space? Use Another Directory "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0159">30.34 vi Line Commands vs. Character Commands </A></H2><PCLASS="para">[Quite a few <EMCLASS="emphasis">vi</EM> users understand how to build <EMCLASS="emphasis">vi</EM> commands withthe <EMCLASS="emphasis">(number)(command)(text object)</EM> model.But not too many people understand the difference between line commandsand character commands.This article explains that and gives some examples. -JP]</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34382"></A>The <CODECLASS="literal">_</CODE> (underscore) command is very similar to the <CODECLASS="literal"></CODE> (caret)command in that it movesto the first non-blank character of the current line. The keydifference is that <CODECLASS="literal">_</CODE> is a <EMCLASS="emphasis">line</EM> command while <CODECLASS="literal"></CODE>is a <EMCLASS="emphasis">character</EM>command. This is important for all functions that read an &quot;address,&quot;for example, <CODECLASS="literal">d</CODE>, <CODECLASS="literal">y</CODE>, and <CODECLASS="literal">c</CODE>.</P><PCLASS="para">In fact, delete, yank, and so on all call a common internalroutine in <EMCLASS="emphasis">vi</EM> to get an &quot;address.&quot; If the address is of a particularcharacter, <EMCLASS="emphasis">vi</EM> does a character-mode delete or yank or whatever. Ifit is a line address, <EMCLASS="emphasis">vi</EM> does a line-mode operation. The&quot;address&quot; command may be any of the regular positioning commands(e.g., <CODECLASS="literal">W</CODE>,<CODECLASS="literal"> b</CODE>,<CODECLASS="literal"> $</CODE>, or<CODECLASS="literal"> /pattern/</CODE>) or the original character repeated (as in<CODECLASS="literal">dd</CODE> or <CODECLASS="literal">yy</CODE>).</P><PCLASS="para">Some examples are in<ACLASS="xref"HREF="ch30_34.htm#UPT-ART-159-TAB-0"TITLE="Examples of vi Character and Line Commands">Table 30.1</A>.</P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="UPT-ART-159-TAB-0">Table 30.1: Examples of vi Character and Line Commands</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Keystrokes</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Results</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">dd</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Deletes the current line.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">d'a</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Deletes all lines between the current line and the line containing mark<CODECLASS="literal">a</CODE>, inclusive.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">d`a</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Deletes all characters between the current characterand the character at mark <CODECLASS="literal">a</CODE>. This works muchlike an Emacs <CODECLASS="literal">W</CODE> in that the two endpoints areconsidered to be between two characters. Note thata character-oriented delete may delete newlines.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">c/accord/</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Changes all characters (<EMCLASS="emphasis">not</EM> lines!) between thecurrent character up to but not including the <CODECLASS="literal">a</CODE>in <CODECLASS="literal">accord</CODE>. (However, see the following Note.)</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">c?accord?</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Changes all characters between the current characterand the <CODECLASS="literal">accord</CODE>, including the word <CODECLASS="literal">accord</CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">yj</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Yanks two lines, the current line and the one below.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">yH</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Yanks all the lines from the top of the screen to the current line, inclusive.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">&lt;G</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Unindents or &quot;dedents&quot; the lines between the current line and thelast line, inclusive. (The variable <CODECLASS="literal">shiftwidth</CODE>determines the amount of dedenting.) Note thatthis command turns character addresses into lineaddresses (so does <CODECLASS="literal">&gt;</CODE>).</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">!}fmt</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Runs the lines between the current line and theend of the paragraph through the program<SPANCLASS="link"><EMCLASS="emphasis">fmt</EM> (<ACLASS="linkend"HREF="ch30_37.htm"TITLE="Neatening Lines ">30.37</A>)</SPAN>.</P></TD></TR></TBODY></TABLE><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> If you have <CODECLASS="literal">wrapscan</CODE> set, asearch like <CODECLASS="literal">c?accord?</CODE> may wrap from the beginning of the file tothe end. This can cause unexpected results, and is one reasonwhy I have <CODECLASS="literal">set nows</CODE> in my <EMCLASS="emphasis">.exrc</EM>.Unfortunately, turning off <CODECLASS="literal">wrapscan</CODE> breaks<SPANCLASS="link"><EMCLASS="emphasis">tags</EM> (<ACLASS="linkend"HREF="ch30_28.htm"TITLE="Keep Track of Functions and Included Files with ctags and tags">30.28</A>)</SPAN>in many versions of <EMCLASS="emphasis">vi</EM>.</P></BLOCKQUOTE><PCLASS="para"><EMCLASS="emphasis">vi</EM> combines the repeat count, if any, on the command character withthe repeat count on the motion command, so that <CODECLASS="literal">2y2j</CODE> yanks fivelines. Interestingly, <CODECLASS="literal">2y2_</CODE> yanks 4&nbsp;lines (so does <CODECLASS="literal">2y2y</CODE>) sincethe <CODECLASS="literal">_</CODE> command moves down (repeat count minus 1) lines. Beware,however, of using repeat counts on all of the motion commands; they'renot all implemented in the same way. <CODECLASS="literal">4$</CODE> moves to the end of the thirdline below the current; <CODECLASS="literal">4</CODE> merely moves to the first non-blankcharacter of the current line. <CODECLASS="literal">|</CODE> (vertical bar) is a synonym for<CODECLASS="literal">0</CODE> (zero); given a repeat count it goes that many characters to the rightof the beginning of the line (as if you had typed <CODECLASS="literal">|</CODE> (<EMCLASS="emphasis">rept-1</EM>)<CODECLASS="literal">l</CODE>). (Exercise for the reader: why can't you give a repeat countto <CODECLASS="literal">0</CODE>?)</P><PCLASS="para">Uppercase letters do different things depending on the command. Theexact actions may not always seem sensible, but typically they affectthe &quot;current line&quot;: <CODECLASS="literal">D</CODE> acts like <CODECLASS="literal">d$</CODE>; <CODECLASS="literal">C</CODE> actslike <CODECLASS="literal">c$</CODE>; <CODECLASS="literal">Y</CODE> acts like <CODECLASS="literal">yy</CODE>. The list must merelybe memorized, or you can usea good <EMCLASS="emphasis">vi</EM> reference guide.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">CT</SPAN> <SPANCLASS="bibliomisc">in <ACLASS="systemitem.newsgroup"HREF="news:net.unix">net.unix</A> on Usenet, 19 March 1984</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_33.htm"TITLE="30.33 Fixing Typos with vi Abbreviations "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 30.33 Fixing Typos with vi Abbreviations "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch30_35.htm"TITLE="30.35 Out of Temporary Space? Use Another Directory "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 30.35 Out of Temporary Space? Use Another Directory "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">30.33 Fixing Typos with vi Abbreviations </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">30.35 Out of Temporary Space? Use Another Directory </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>