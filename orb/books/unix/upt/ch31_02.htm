<HTML><HEAD><TITLE>[Chapter 31] 31.2 Save Time and Typing with the vi map Commands </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:46:09Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch31_01.htm"TITLE="31. Creating Custom Commands in vi"><LINKREL="prev"HREF="ch31_01.htm"TITLE="31.1 Why Type More Than You Have To? "><LINKREL="next"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_01.htm"TITLE="31.1 Why Type More Than You Have To? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.1 Why Type More Than You Have To? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 31<BR>Creating Custom Commands in vi</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.3 What You Lose When You Use map! "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-2770">31.2 Save Time and Typing with the vi map Commands </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-2770-IX-VI-EDITOR-MAP-COMMANDS"></A><ACLASS="indexterm"NAME="UPT-ART-2770-IX-KEYBOARD-SHORTCUTS-VI-MAP-COMMANDS"></A>While you're editing, you may find that you are using a commandsequence frequently, or you may occasionally use a very complexcommand sequence.  To save yourself keystrokes, or the time it takesto remember the sequence, assign the sequence to an unused key byusing the <CODECLASS="literal">map</CODE> and <CODECLASS="literal">map!</CODE> commands.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-2770-SECT-1.1">31.2.1 Command Mode Maps </A></H3><PCLASS="para">The <CODECLASS="literal">map</CODE> command acts a lot like<SPANCLASS="link"><CODECLASS="literal">ab</CODE> (<ACLASS="linkend"HREF="ch30_31.htm"TITLE="vi Word Abbreviation ">30.31</A>)</SPAN>except that youdefine a macro for command mode instead of text-input mode.(The <CODECLASS="literal">map!</CODE> command works during text-input mode.See below.)</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">map </CODE><CODECLASS="replaceable"><I>x sequence</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Define <EMCLASS="emphasis">x</EM> as a <EMCLASS="emphasis">sequence</EM> of editing commands.</P></DD><DTCLASS="term"><CODECLASS="literal">unmap </CODE><CODECLASS="replaceable"><I>x</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Disable the <EMCLASS="emphasis">x</EM> definition.</P></DD><DTCLASS="term"><CODECLASS="literal">map</CODE></DT><DDCLASS="listitem"><PCLASS="para">List the characters that are currently mapped.</P></DD></DL><PCLASS="para">As with other <EMCLASS="emphasis">ex</EM>-mode commands, these map commands can be saved in your<SPANCLASS="link"><EMCLASS="emphasis">.exrc</EM> file (<ACLASS="linkend"HREF="ch04_09.htm"TITLE="Setting Up vi with the .exrc File ">4.9</A>)</SPAN>-or typed in after a colon (<CODECLASS="literal">:</CODE>).If you want a keymap to use only during this editing session, you mightfind that <EMCLASS="emphasis">vi</EM><SPANCLASS="link"><CODECLASS="literal">@</CODE>-functions (<ACLASS="linkend"HREF="ch31_04.htm"TITLE="vi @-Functions ">31.4</A>)</SPAN>are easier to create and use.The map commands are best for keymaps that you save in your <EMCLASS="emphasis">.exrc</EM>file and use during many editing sessions.</P><PCLASS="para">Before you can start creating your own maps, you need to know thekeys not used in command mode that are available for user-definedcommands:<ACLASS="indexterm"NAME="AUTOID-34855"></A></P><DLCLASS="variablelist"><DTCLASS="term">Letters:</DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">g K q V v</CODE></P></DD><DTCLASS="term">Control keys:</DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">^A ^K ^O ^T ^W ^X</CODE></P></DD><DTCLASS="term">Symbols:</DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">_ * \ =</CODE>(Note: the = is used by <EMCLASS="emphasis">vi</EM> if Lisp mode is set.)</P></DD></DL><PCLASS="para">With maps you can create simple or complex command sequences.As a simple example, you could define a command to reverse the order ofwords.In <EMCLASS="emphasis">vi</EM>, with the cursor as shown:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">you can _the scroll page</PRE></BLOCKQUOTE></P><PCLASS="para">the sequence to put <EMCLASS="emphasis">the</EM> after <EMCLASS="emphasis">scroll</EM> would be<CODECLASS="literal">dwwP</CODE>: delete word, <CODECLASS="literal">dw</CODE>; move to the next word,<CODECLASS="literal">w</CODE>; put the deleted word before that word, <CODECLASS="literal">P</CODE>.(You can also use <CODECLASS="literal">W</CODE> instead of <CODECLASS="literal">w</CODE>.)Saving this sequence:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">map v dwwP</PRE></BLOCKQUOTE></P><PCLASS="para">enables you to reverse the order of two words at any time in the editingsession with the single keystroke <CODECLASS="literal">v</CODE>.</P><PCLASS="para">You can also map certain multiple-character sequences.Start the map with one of the symbols in the list above.For example, to map the keystrokes <CODECLASS="literal">*s</CODE> to put single quotesaround a word (<CODECLASS="literal">'</CODE><CODECLASS="replaceable"><I>word</I></CODE><CODECLASS="literal">'</CODE>),and <CODECLASS="literal">*d</CODE> to use double quotes (<CODECLASS="literal">&quot;</CODE><CODECLASS="replaceable"><I>word</I></CODE><CODECLASS="literal">&quot;</CODE>):</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch31_06.htm"TITLE="31.6 Protecting Keys from Interpretation by ex ">^[</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">map *s Ea'^[Bi'^[map *d Ea&quot;^[Bi&quot;^[</PRE></TD></TR></TABLE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34905"></A><ACLASS="indexterm"NAME="AUTOID-34907"></A>Now you'll be able to make hundreds of key maps (though your versionof <EMCLASS="emphasis">vi</EM> probably has a limit).Article<ACLASS="xref"HREF="ch31_09.htm"TITLE="Good Stuff for Your .exrc File ">31.9</A>has lots of examples.</P><PCLASS="para">&#13;You may also be able to associate mapsequences with your terminal's function keys ifyour<SPANCLASS="link"><EMCLASS="emphasis">termcap</EM> or <EMCLASS="emphasis">terminfo</EM> entry (<ACLASS="linkend"HREF="ch05_02.htm"TITLE="The Idea of a Terminal Database ">5.2</A>)</SPAN>defines those keys.For example, to make function key F1 transpose words:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">map #1 dwelp</PRE></BLOCKQUOTE></P><PCLASS="para">A final note: map assignments are not really limited to unused keys.You can map keys that are defined as other <EMCLASS="emphasis">vi</EM> commands,but then the key's original meaning is inaccessible.But this is probably okay if the key is tied to a command that you rarely use.There's more information in article<ACLASS="xref"HREF="ch31_14.htm"TITLE="Don't Lose Important Functions with vi Maps: Use noremap">31.14</A>about the <EMCLASS="emphasis">noremap</EM> option.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-2770-SECT-1.2">31.2.2 Text-Input Mode Maps </A></H3><PCLASS="para">The <CODECLASS="literal">map!</CODE> command works like <CODECLASS="literal">map</CODE>,but <CODECLASS="literal">map!</CODE> works during text-input mode.You actually set the <CODECLASS="literal">map!</CODE> during command mode, in the sameway as a plain <CODECLASS="literal">map</CODE>:at a colon (<CODECLASS="literal">:</CODE>) prompt, type <CODECLASS="literal">map!</CODE> followed by a space andthe key(s) that activate the map; then type a space and the text thatthe text-input mode map stands for.These text-input mode maps are a lot like<SPANCLASS="link">abbreviations (<ACLASS="linkend"HREF="ch30_31.htm"TITLE="vi Word Abbreviation ">30.31</A>)</SPAN>;the difference is that <CODECLASS="literal">map!</CODE> lets you switch from text-input mode tocommand mode, execute commands, then go back to text-input mode.To go to command mode during a <CODECLASS="literal">map!</CODE>, you'll need to put an ESC key in thevalue of the map by<SPANCLASS="link">typing CTRL-v and then ESC (<ACLASS="linkend"HREF="ch31_06.htm"TITLE="Protecting Keys from Interpretation by ex ">31.6</A>)</SPAN>.After your <CODECLASS="literal">map!</CODE> does whatever in command mode, it can re-entertext-input mode with the usual commands <CODECLASS="literal">a</CODE>, <CODECLASS="literal">i</CODE>, and so on.</P><PCLASS="para">Let's say you normally never type the caret (<CODECLASS="literal">^</CODE>) key duringinput mode.When you're typing along, as you realize that what you're typing isimportant, you want to press the caret key.Then, <EMCLASS="emphasis">vi</EM> should open a line above and insert the phrase&quot;THIS IS IMPORTANT:&quot;.Finally, <EMCLASS="emphasis">vi</EM> should return you to text-input mode at the end of the linewhere you pressed the caret key.To do that, go to command mode and enter the following <CODECLASS="literal">map!</CODE>command.The first <CODECLASS="literal">^</CODE> comes from pressing the caret key.Then you'll see two places with <CODECLASS="literal">^[</CODE>; that's made by pressingCTRL-v followed by the ESC key.Finish the map by pressing RETURN:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">:map! ^ ^[OTHIS IS IMPORTANT:^[jA</PRE></BLOCKQUOTE></P><PCLASS="para">What does that do?It executes the same <EMCLASS="emphasis">vi</EM> commands you'd use to add those three wordsyourself, manually.During text-input mode, typing a caret (<CODECLASS="literal">^</CODE>) will:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Do ESC to go to command mode,</P></LI><LICLASS="listitem"><PCLASS="para">Use <CODECLASS="literal">O</CODE> to open a new line above (in text-input mode),</P></LI><LICLASS="listitem"><PCLASS="para">Enter the text <CODECLASS="literal">THIS IS IMPORTANT:</CODE></P></LI><LICLASS="listitem"><PCLASS="para">Do another ESC to go back to command mode,</P></LI><LICLASS="listitem"><PCLASS="para">Do <CODECLASS="literal">j</CODE> to go down a line (to the line where you started), and</P></LI><LICLASS="listitem"><PCLASS="para">Do <CODECLASS="literal">A</CODE> to put you at the end of the line, in text-input mode.</P></LI></OL><PCLASS="para">The trick is to use <CODECLASS="literal">map!</CODE> only to redefine keys you'llnever use for anything else during text-input mode.To temporarily disable a text-input mode map, press CTRL-vbefore the key.For example, to put a real caret into your file, type<KBDCLASS="keycap">[CTRL-v]</KBD><KBDCLASS="keycap">[<CODECLASS="literal">^</CODE>]</KBD>To disable an input-mode map for the rest of your <EMCLASS="emphasis">vi</EM> session,type <CODECLASS="literal">:unmap!</CODE> followed by the character(s) that activate themap.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-34976"></A>A more common example is mapping your keyboard's arrow or function keysto do something during text-input mode.These keys send a special series of characters.Normally, without a <CODECLASS="literal">map!</CODE> defined for these keys, the charactersthey send will be put into your editor buffer&nbsp;- just as if you'd typedthe characters they make, yourself, one by one.For instance, my left arrow key sends the characters <CODECLASS="literal">ESC</CODE>, then<CODECLASS="literal">[</CODE> (left bracket), then <CODECLASS="literal">D</CODE>.Without an text-input mode <CODECLASS="literal">map!</CODE> defined for that three-charactersequence, <EMCLASS="emphasis">vi</EM> will be hopelessly confused[1]if I press that arrow key.Many UNIX developers have added text-input mode maps for arrow keys.You can see them when you list all your text-input mode maps by typing<CODECLASS="literal">:map!</CODE> by itself, with nothing after:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[1] Actually, the <CODECLASS="literal">ESC</CODE> will switch <EMCLASS="emphasis">vi</EM> back to command mode.The first <CODECLASS="literal">[</CODE> will make <EMCLASS="emphasis">vi</EM> think you're about to typethe section-motion command <CODECLASS="literal">[[</CODE>, so the following <CODECLASS="literal">D</CODE>will make <EMCLASS="emphasis">vi</EM> beep.Ugly, eh?</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">up      ^[[A    ^[kadown    ^[[B    ^[jaleft    ^[[D    ^[hiright   ^[[C    ^[la^       ^       ^[OTHIS IS IMPORTANT:^[jA</PRE></BLOCKQUOTE></P><PCLASS="para">Article<ACLASS="xref"HREF="ch31_03.htm"TITLE="What You Lose When You Use map! ">31.3</A>lists some problems with <CODECLASS="literal">map!</CODE>.</P></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN>, <SPANCLASS="authorinitials">DG</SPAN>, <SPANCLASS="authorinitials">LL</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_01.htm"TITLE="31.1 Why Type More Than You Have To? "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.1 Why Type More Than You Have To? "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.3 What You Lose When You Use map! "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">31.1 Why Type More Than You Have To? </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">31.3 What You Lose When You Use map! </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>