<HTML><HEAD><TITLE>[Chapter 31] 31.4 vi @-Functions </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:46:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch31_01.htm"TITLE="31. Creating Custom Commands in vi"><LINKREL="prev"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "><LINKREL="next"HREF="ch31_05.htm"TITLE="31.5 Keymaps for Pasting into a Window Running vi "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.3 What You Lose When You Use map! "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 31<BR>Creating Custom Commands in vi</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_05.htm"TITLE="31.5 Keymaps for Pasting into a Window Running vi "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.5 Keymaps for Pasting into a Window Running vi "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-9913">31.4 vi @-Functions </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-9913-IX-VI-EDITOR-FUNCTIONS-AT-FUNCTIONS"></A><ACLASS="indexterm"NAME="UPT-ART-9913-IX-FUNCTIONS-VI-AT-FUNCTIONS"></A>The <EMCLASS="emphasis">vi</EM><SPANCLASS="link"><EMCLASS="emphasis">map</EM> command (<ACLASS="linkend"HREF="ch31_02.htm"TITLE="Save Time and Typing with the vi map Commands ">31.2</A>)</SPAN>lets you define keymaps:short names for a series of one or more other commands.You can enter <CODECLASS="literal">:map</CODE> to define a keymap while you're editing afile with <EMCLASS="emphasis">vi</EM>.But if you make a mistake, you usually have to re-enter the whole <CODECLASS="literal">:map</CODE>command to correct the problem.</P><PCLASS="para"><CODECLASS="literal">@</CODE>-functions (say &quot;at-functions&quot;)give you another way to define complex commands.You can define 26 <CODECLASS="literal">@</CODE>-functions named <CODECLASS="literal">@a</CODE> through <CODECLASS="literal">@z</CODE>.They're stored in<SPANCLASS="link">named buffers (<ACLASS="linkend"HREF="ch30_05.htm"TITLE="Edits Between Files ">30.5</A>)</SPAN>.So if you're also using named buffers for copying and pasting text, you'llneed to share them with your <CODECLASS="literal">@</CODE>-functions.</P><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-9913-SECT-1.1">31.4.1 Defining and Using Simple @-Functions </A></H3><PCLASS="para">To define an <CODECLASS="literal">@</CODE>-function:</P><OLCLASS="orderedlist"><LICLASS="listitem"><PCLASS="para">Enter the command(s) you want to execute onto one or more lines of thefile you're editing.</P></LI><LICLASS="listitem"><PCLASS="para">Yank or delete the line(s) into a named buffer with a command like<CODECLASS="literal">&quot;ay$</CODE> or <CODECLASS="literal">&quot;bD</CODE>.</P></LI><LICLASS="listitem"><PCLASS="para">To use the function, type a command like <CODECLASS="literal">@a</CODE> or <CODECLASS="literal">@b</CODE>.You can repeat the function by typing <CODECLASS="literal">@@</CODE> or a dot (<CODECLASS="literal">.</CODE>).Use <CODECLASS="literal">u</CODE> or <CODECLASS="literal">U</CODE> to undo the effects of the <CODECLASS="literal">@</CODE>-function.</P></LI></OL><PCLASS="para">Here's an example.You're editing a long HTML file with lines like these:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">&lt;STRONG&gt;<CODECLASS="replaceable"><I>Some heading here</I></CODE>&lt;/STRONG&gt;&lt;STRONG&gt;<CODECLASS="replaceable"><I>Another heading here</I></CODE>&lt;/STRONG&gt;</PRE></BLOCKQUOTE></P><PCLASS="para">When you see one of those lines, you need to change the <CODECLASS="literal">STRONG</CODE>sto either <CODECLASS="literal">H3</CODE> or <CODECLASS="literal">H4</CODE>.A global substitution with <CODECLASS="literal">:%s</CODE> won't do the job becausesome lines need <CODECLASS="literal">H3</CODE> and others need <CODECLASS="literal">H4</CODE>; you have todecide line-by-line as you work through the file.So you define the function <CODECLASS="literal">@a</CODE> to change a line to <CODECLASS="literal">H3</CODE>,and <CODECLASS="literal">@b</CODE> to change to <CODECLASS="literal">H4</CODE>.</P><PCLASS="para">To design an <CODECLASS="literal">@</CODE>-function, start by thinking how you'dmake the changes by hand.You'd probably move to the start of the line with <CODECLASS="literal">0</CODE>, move tothe right one character with <CODECLASS="literal">l</CODE>, type <CODECLASS="literal">cw</CODE> to change theword <CODECLASS="literal">STRONG</CODE>, and type in <CODECLASS="literal">H3</CODE> (or <CODECLASS="literal">H4</CODE>).Then press ESC to return to command mode.Go to the end of the line with <CODECLASS="literal">$</CODE>, move to the character afterthe slash with <CODECLASS="literal">T/</CODE>, then change the second <CODECLASS="literal">STRONG</CODE> theway you fixed the first one.</P><PCLASS="para">To define the function, open a new empty line of your file(go into text-input mode).Then type the keystrokes that will make the <CODECLASS="literal">H3</CODE> changes;<SPANCLASS="link">type CTRL-v before each ESC or RETURN (<ACLASS="linkend"HREF="ch31_06.htm"TITLE="Protecting Keys from Interpretation by ex ">31.6</A>)</SPAN>.When you're done, press ESC again to go to command mode.Because the commands for the <CODECLASS="literal">H4</CODE> change are similar, the easiestway to make them is by copying and pasting the line for <CODECLASS="literal">H3</CODE>(by typing <CODECLASS="literal">yy</CODE> and <CODECLASS="literal">p</CODE>)-then edit the copy.The pair of command lines should look like this (where <CODECLASS="literal">^[</CODE> standsfor the <KBDCLASS="keycap">[CTRL-v]</KBD> <KBDCLASS="keycap">[ESC]</KBD> keys):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">0lcwH3^[$T/cwH3^[0lcwH4^[$T/cwH4^[</PRE></BLOCKQUOTE></P><PCLASS="para">Move to the start of the first line and delete it into the <EMCLASS="emphasis">a</EM>buffer by typing <CODECLASS="literal">&quot;aD</CODE>.Go to the next line and type <CODECLASS="literal">&quot;bD</CODE>.(This will leave two empty lines; delete them with <CODECLASS="literal">dd</CODE> if you'dlike.)Now, when you type <CODECLASS="literal">@a</CODE>, it will execute the commands to change aline to <CODECLASS="literal">H3</CODE>; typing <CODECLASS="literal">@b</CODE> on a line will change it tohave <CODECLASS="literal">H4</CODE>.Move through your file (maybe with a search: <CODECLASS="literal">/STRONG</CODE> ...<CODECLASS="literal">n</CODE> ...), typing <CODECLASS="literal">@a</CODE> or <CODECLASS="literal">@b</CODE> as you go.Or use <CODECLASS="literal">@@</CODE> to make the same change you made on a previous line.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-9913-SECT-1.2">31.4.2 Combining @-Functions </A></H3><PCLASS="para">An <CODECLASS="literal">@</CODE>-function can execute other <CODECLASS="literal">@</CODE>-functions.For example, here are four lines ready for storing as <CODECLASS="literal">@a</CODE> through<CODECLASS="literal">@d</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">0l@c$T/@c   <ICLASS="lineannotation">...becomes @a</I>0l@d$T/@d   <ICLASS="lineannotation">...becomes @b</I>cwH3^[   <ICLASS="lineannotation">...becomes @c</I>cwH4^[   <ICLASS="lineannotation">...becomes @d</I></PRE></BLOCKQUOTE></P><PCLASS="para">See that the definition of <CODECLASS="literal">@a</CODE> has <CODECLASS="literal">@c</CODE> in it twice?When you execute <CODECLASS="literal">@a</CODE>, it will do <CODECLASS="literal">0l</CODE> to move to thesecond character on the line, then do <CODECLASS="literal">@c</CODE> to change the wordto <CODECLASS="literal">H3</CODE>, move to the end of the line and use <CODECLASS="literal">@c</CODE> again.Calling one <CODECLASS="literal">@</CODE>-function from another can save re-typingrepetitive commands.</P><PCLASS="para">A disadvantage is that <CODECLASS="literal">@@</CODE> won't always work as you might expect.If you type <CODECLASS="literal">@a</CODE> to make a change in one place,then move somewhere else and type <CODECLASS="literal">@@</CODE>, the <CODECLASS="literal">@@</CODE> willdo what <CODECLASS="literal">@c</CODE> does (instead of what you might have wanted,<CODECLASS="literal">@a</CODE>).That's because the <CODECLASS="literal">@a</CODE> function finishes by doing a <CODECLASS="literal">@c</CODE>.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-9913-SECT-1.3">31.4.3 Reusing a Definition </A></H3><PCLASS="para">You don't have to delete the definition line into a buffer with <CODECLASS="literal">dd</CODE>.If you think you might need to fine-tune the command, you can yank(copy) it into a buffer with a command like <CODECLASS="literal">&quot;ay$</CODE>.Then, if you need to revise the command, re-edit the line and type<CODECLASS="literal">&quot;ay$</CODE> to put the revised version into the buffer.Or use <CODECLASS="literal">&quot;by$</CODE> to copy the revised line into another buffer.</P></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-9913-SECT-1.4">31.4.4 Newlines in an @-Function </A></H3><PCLASS="para">Stored <CODECLASS="literal">@</CODE>-functions can span multiple lines.For example, if you delete the following four lines with <CODECLASS="literal">&quot;z4dd</CODE>,typing <CODECLASS="literal">@z</CODE> will open a new line below (<CODECLASS="literal">o</CODE>) andinsert four new lines of text:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">oThis is the new line one.This is the new line two.This is the third line.This is the fourth.^[</PRE></BLOCKQUOTE></P><PCLASS="para">After you execute the function with <CODECLASS="literal">@z</CODE>,your cursor will move to the line below the new fourth line.Why?Because you included the newlines (RETURNs) in the buffer; eachRETURN moves down a line&nbsp;- including the RETURN after thelast ESC.</P><PCLASS="para">If you don't want that, there are two ways to fix it:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Delete the first three lines, including the newlines, into the bufferby typing <CODECLASS="literal">&quot;z3dd</CODE>.Delete the fourth line, without its newline, and <EMCLASS="emphasis">append</EM> it tothe buffer by typing <CODECLASS="literal">&quot;ZD</CODE>.(An uppercase letter like <CODECLASS="literal">Z</CODE> appends to a named buffer.<CODECLASS="literal">D</CODE> deletes all of a line except the newline.)</P><PCLASS="para">Some versions of <EMCLASS="emphasis">vi</EM> will delete four lines, without the lastnewline, when you use <CODECLASS="literal">&quot;z4D</CODE>.</P></LI><LICLASS="listitem"><PCLASS="para">Type all of the text onto a single line; embed the newlines inthat line by typing <KBDCLASS="keycap">[CTRL-v]</KBD> <KBDCLASS="keycap">[RETURN]</KBD>between each finished line.It'll look like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">oThis is the new line one.^MThis is the new line two.^MThis is the new...</PRE></BLOCKQUOTE></P><PCLASS="para">Delete that long line into your buffer with <CODECLASS="literal">&quot;zD</CODE>.Because <CODECLASS="literal">D</CODE> doesn't delete the final newline, your cursor willstay at the end of the fourth new line after you execute the <CODECLASS="literal">@z</CODE>.</P></LI></UL><ACLASS="indexterm"NAME="AUTOID-35196"></A><ACLASS="indexterm"NAME="AUTOID-35197"></A></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_03.htm"TITLE="31.3 What You Lose When You Use map! "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 31.3 What You Lose When You Use map! "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch31_05.htm"TITLE="31.5 Keymaps for Pasting into a Window Running vi "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 31.5 Keymaps for Pasting into a Window Running vi "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">31.3 What You Lose When You Use map! </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">31.5 Keymaps for Pasting into a Window Running vi </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>