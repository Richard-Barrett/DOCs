<HTML><HEAD><TITLE>[Chapter 34] 34.14 Transforming Part of a Line </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:47:22Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch34_01.htm"TITLE="34. The sed Stream Editor"><LINKREL="prev"HREF="ch34_13.htm"TITLE="34.13 Hold Space: The Set-Aside Buffer "><LINKREL="next"HREF="ch34_15.htm"TITLE="34.15 Making Edits Across Line Boundaries "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_13.htm"TITLE="34.13 Hold Space: The Set-Aside Buffer "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 34.13 Hold Space: The Set-Aside Buffer "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 34<BR>The sed Stream Editor</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_15.htm"TITLE="34.15 Making Edits Across Line Boundaries "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 34.15 Making Edits Across Line Boundaries "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-8002">34.14 Transforming Part of a Line </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-8002-IX-SED-EDITOR-TRANSFORM-COMMAND"></A>The <SPANCLASS="link">transform command, <EMCLASS="emphasis">y</EM> (<ACLASS="linkend"HREF="ch34_12.htm"TITLE="Transformations on Text ">34.12</A>)</SPAN>,acts on the entire contents of the pattern space.It is something of a chore to do a letter-by-lettertransformation of a portion of the line,but it is possible (thoughconvoluted) as the following example will demonstrate.[The real importance of this example is probably not the use of the<EMCLASS="emphasis">y</EM> command, but the use of the hold space to isolate andpreserve part of the line. -<EMCLASS="emphasis">TOR</EM>&nbsp;]</P><PCLASS="para">While working on a programming guide, we found that the namesof statements were entered inconsistently.They needed tobe uppercase, but some were lowercase while others hadan initial capital letter.While the task was simple&nbsp;- to capitalizethe name of the statement&nbsp;- there were nearly a hundred statementsand it seemed a tedious project to write that many explicitsubstitutions of the form:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">s/find the Match statement/find the MATCH statement/g</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;The transform command could do the lowercase-to-uppercaseconversion but it applies the conversionto the entire line.The hold space makes this taskpossible because we use it to store a copy of the input line whilewe isolate and convertthe statement name in the pattern space.Look at the script first:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># capitalize statement names/the .* statement/{    h    s/.*the \(.*\) statement.*/\1/    y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/    G    s/\(.*\)\n\(.*the \).*\( statement.*\)/\2\1\3/}</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;The address limits the procedure to lines that match <CODECLASS="literal">the .* statement</CODE>.Let's look at what each command does:</P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">h</CODE></DT><DDCLASS="listitem"><PCLASS="para">The hold command copiesthe current input line into the hold space.Using the sample line <CODECLASS="literal">find the Match statement</CODE>, we'll showwhat the contents of the pattern space and hold spacecontain.After the <EMCLASS="emphasis">h</EM> command, both the pattern spaceand the hold space are identical.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Pattern space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Hold space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR></TBODY></TABLE><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">s/.*the \(.*\) statement.*/\1/</CODE></DT><DDCLASS="listitem"><PCLASS="para">&#13;The substitute command extracts the name of the statement fromthe line and replaces the entire line with it.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Pattern space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">Match</CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Hold space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR></TBODY></TABLE><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/</CODE> </DT><DDCLASS="listitem"><PCLASS="para">&#13;The transform command changes each lowercase letterto an uppercase letter.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Pattern space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">MATCH</CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Hold space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR></TBODY></TABLE><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">G</CODE></DT><DDCLASS="listitem"><PCLASS="para">The Get command appends the line saved in the hold spaceto the pattern space.The embedded newline from the Get command is shown as <CODECLASS="literal">\n</CODE>.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Pattern space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">MATCH\nfind the Match statement</CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Hold space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR></TBODY></TABLE><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">s/\(.*\)\n\(.*the \).*\( statement.*\)/\2\1\3/</CODE></DT><DDCLASS="listitem"><PCLASS="para">&#13;The substitute command matches three different parts of the patternspace: (1) all characters up to the embedded newline,(2) all characters followingthe embedded newline and up to and including <CODECLASS="literal">the</CODE> followed by aspace, and (3) all characters beginning with a space and followed by<CODECLASS="literal">statement</CODE> up to the end of the pattern space.The nameof the statement as it appeared in the original line is matchedbut not saved.The replacement section ofthis command recalls the saved portions and reassembles themin a different order, puttingthe capitalized name of the command in between <CODECLASS="literal">the</CODE> and <CODECLASS="literal">statement</CODE>.</P><TABLECLASS="informaltable"><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Pattern space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the MATCH statement</CODE></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><EMCLASS="emphasis">Hold space</EM>:</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><CODECLASS="literal">find the Match statement</CODE></TD></TR></TBODY></TABLE><PCLASS="para"></P></DD></DL><PCLASS="para">Let's look at a test run.Here's our sample file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">find the Match statementConsult the Get statement.using the Read statement to retrieve data</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Running the script on the sample file produces:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">find the MATCH statementConsult the GET statement.using the READ statement to retrieve data</PRE></BLOCKQUOTE></P><PCLASS="para">As you can see from this script, the hold space can be skillfullyused to isolate and manipulate portions of the input line.<ACLASS="indexterm"NAME="AUTOID-38952"></A><ACLASS="indexterm"NAME="AUTOID-38953"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DD</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">sed &amp; awk</CITE></SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_13.htm"TITLE="34.13 Hold Space: The Set-Aside Buffer "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 34.13 Hold Space: The Set-Aside Buffer "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_15.htm"TITLE="34.15 Making Edits Across Line Boundaries "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 34.15 Making Edits Across Line Boundaries "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">34.13 Hold Space: The Set-Aside Buffer </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">34.15 Making Edits Across Line Boundaries </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>