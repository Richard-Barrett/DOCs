<HTML><HEAD><TITLE>[Chapter 34] 34.24 Quick Reference: sed </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:47:38Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch34_01.htm"TITLE="34. The sed Stream Editor"><LINKREL="prev"HREF="ch34_23.htm"TITLE="34.23 sed Newlines, Quoting, and Backslashes in a Shell Script"><LINKREL="next"HREF="ch35_01.htm"TITLE="35. You Can't Quite Call This Editing"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_23.htm"TITLE="34.23 sed Newlines, Quoting, and Backslashes in a Shell Script"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 34.23 sed Newlines, Quoting, and Backslashes in a Shell Script"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 34<BR>The sed Stream Editor</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch35_01.htm"TITLE="35. You Can't Quite Call This Editing"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35. You Can't Quite Call This Editing"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-2850">34.24 Quick Reference: sed </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-2850-IX-SED-EDITOR-COMMAND-LIST"></A>How <EMCLASS="emphasis">sed</EM> operates:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">Each line of input is copied into a pattern space.</P></LI><LICLASS="listitem"><PCLASS="para">Editing commands may be given on the command line (if more than one, usea <EMCLASS="emphasis">-e</EM> option before each command) and/or in script files named after<EMCLASS="emphasis">-f</EM> options.All editing commands are applied in order to each line of input.</P></LI><LICLASS="listitem"><PCLASS="para">Editing commands are applied to all lines (globally) unless lineaddressing restricts the lines affected.</P></LI><LICLASS="listitem"><PCLASS="para">If a command changes the input, subsequent command-addresses will be applied to the current line in the pattern space, not the original input line.</P></LI><LICLASS="listitem"><PCLASS="para">The original input file is unchanged; editing commands modify a copy of the original input line.The copy is sent to<SPANCLASS="link">standard output (<ACLASS="linkend"HREF="ch13_01.htm#UPT-ART-1023"TITLE="Using Standard Input and Output">13.1</A>)</SPAN>unless the <EMCLASS="emphasis">-n</EM> option was used; standard output can be<SPANCLASS="link">redirected to a file (<ACLASS="linkend"HREF="ch13_01.htm#UPT-ART-1023"TITLE="Using Standard Input and Output">13.1</A>, <ACLASS="linkend"HREF="ch34_03.htm"TITLE="Testing and Using a sed Script: checksed, runsed ">34.3</A>)</SPAN>.</P></LI></UL><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-2850-SECT-1.1">34.24.1 Syntax of sed Commands </A></H3><PCLASS="para"><EMCLASS="emphasis">sed</EM> commands have the general form:</P><BLOCKQUOTECLASS="blockquote"><PCLASS="para">[<CODECLASS="replaceable"><I>address</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address</I></CODE>][<CODECLASS="literal">!</CODE>]<CODECLASS="replaceable"><I>command </I></CODE>[<CODECLASS="replaceable"><I>arguments</I></CODE>]</P></BLOCKQUOTE><PCLASS="para"><EMCLASS="emphasis">sed</EM> commands consist of <CODECLASS="replaceable"><I>addresses</I></CODE> and editing <CODECLASS="replaceable"><I>commands</I></CODE>.<CODECLASS="replaceable"><I>commands</I></CODE> consist of a single letter or symbol; they aredescribed later, alphabetically and by group.<CODECLASS="replaceable"><I>arguments</I></CODE> include the label supplied to <EMCLASS="emphasis">b</EM> or <EMCLASS="emphasis">t</EM>, thefilename supplied to <EMCLASS="emphasis">r</EM> or <EMCLASS="emphasis">w</EM>, and the substitution flagsfor <EMCLASS="emphasis">s</EM>.<CODECLASS="replaceable"><I>addresses</I></CODE> are described below.Elements in <CODECLASS="literal">[</CODE>brackets<CODECLASS="literal">]</CODE> are optional; don't type thebrackets.</P><PCLASS="para">Braces (<CODECLASS="literal">{}</CODE>) are used in <EMCLASS="emphasis">sed</EM> to nest one address inside another orto apply multiple commands at the same address:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">[<CODECLASS="replaceable"><I>address</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address</I></CODE>]{   <CODECLASS="replaceable"><I>command1   command2</I></CODE>}</PRE></BLOCKQUOTE></P><PCLASS="para">The left curly brace (<CODECLASS="literal">{</CODE>) is a command that starts a group ofother <EMCLASS="emphasis">sed</EM> commands.The group ends with a right curly brace (<CODECLASS="literal">}</CODE>).Commands within the braces may be spread across multiple lines, as shownabove.Or commands may be on the same line, with a semicolon(<CODECLASS="literal">;</CODE>) after each command (including the last command on aline)&nbsp;- as in:</P><BLOCKQUOTECLASS="blockquote"><PCLASS="para">[<CODECLASS="replaceable"><I>address</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address</I></CODE>]<CODECLASS="literal">{</CODE><CODECLASS="replaceable"><I>command1</I></CODE><CODECLASS="literal">; </CODE>...<CODECLASS="replaceable"><I>commandN</I></CODE><CODECLASS="literal">; }</CODE></P></BLOCKQUOTE></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-2850-SECT-1.2">34.24.2 Pattern Addressing </A></H3><PCLASS="para">A <EMCLASS="emphasis">sed</EM> command can specify zero, one, or two addresses.An address can be a line number, the symbol <CODECLASS="literal">$</CODE> (for last line),or a regular expression enclosed in slashes (<CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>pattern</I></CODE><CODECLASS="literal">/</CODE>).Regular expressions are described in <ACLASS="xref"HREF="ch26_01.htm"TITLE="Regular Expressions (Pattern Matching)">Chapter 26, Regular Expressions (Pattern Matching)</A>.Additionally, <CODECLASS="literal">\n</CODE> canbe used to match any newline in thepattern space (resulting from the <EMCLASS="emphasis">N</EM> command), but not thenewline at the end of the pattern space.See article<ACLASS="xref"HREF="ch34_04.htm"TITLE="sed Addressing Basics ">34.4</A>.</P><TABLECLASS="informaltable"><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">If the command specifies:</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Then it is applied to:</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">No address</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Each input line.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">One address</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">Any line matching the address.  Some commands accept only one address: <EMCLASS="emphasis">a</EM>, <EMCLASS="emphasis">i</EM>, <EMCLASS="emphasis">r</EM>, <EMCLASS="emphasis">q</EM>, and <CODECLASS="literal">=</CODE>.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Two comma-separated addresses</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">First matching line and all succeeding lines up to and including a line matching the second address. Repeat for each matching range in the text.</P></TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">An address followed by <CODECLASS="literal">!</CODE></TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1"><PCLASS="para">All lines that do <EMCLASS="emphasis">not</EM> match the address.</P></TD></TR></TBODY></TABLE><DIVCLASS="sect3"><H4CLASS="sect3"><ACLASS="title"NAME="UPT-ART-2850-SECT-1.2.1">34.24.2.1 Examples </A></H4><PCLASS="para">Substitute on all lines (all occurrences):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">s/xx/yy/g</PRE></BLOCKQUOTE></P><PCLASS="para">Delete lines containing <CODECLASS="literal">BSD</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/BSD/d</PRE></BLOCKQUOTE></P><PCLASS="para">Print the lines between each pair of<CODECLASS="literal">BEGIN</CODE> and <CODECLASS="literal">END</CODE>, inclusive:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/^BEGIN/,/^END/p</PRE></BLOCKQUOTE></P><PCLASS="para">Delete any line that doesn't contain <CODECLASS="literal">SAVE</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/SAVE/!d</PRE></BLOCKQUOTE></P><PCLASS="para">Substitute on all lines, except between <CODECLASS="literal">BEGIN</CODE> and <CODECLASS="literal">END</CODE>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/BEGIN/,/END/!s/xx/yy/g</PRE></BLOCKQUOTE></P></DIV></DIV><DIVCLASS="sect2"><H3CLASS="sect2"><ACLASS="title"NAME="UPT-ART-2850-SECT-1.3">34.24.3 Alphabetical Summary of sed Commands </A></H3><PCLASS="para"></P><DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="literal">#</CODE></DT><DDCLASS="listitem"><PCLASS="para">Begin a comment in a <EMCLASS="emphasis">sed</EM> script.If the first such line is exactly <CODECLASS="literal">#n</CODE>, <EMCLASS="emphasis">sed</EM> setsits <EMCLASS="emphasis">-n</EM> command-line option.</P></DD><DTCLASS="term"><CODECLASS="literal">:</CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">:</CODE><CODECLASS="replaceable"><I>label</I></CODE></P><PCLASS="para">Label a line in the script for the transfer of control by <EMCLASS="emphasis">b</EM> or <EMCLASS="emphasis">t</EM>. <CODECLASS="replaceable"><I>label</I></CODE>may contain up to seven characters.</P></DD><DTCLASS="term"><CODECLASS="literal">=</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address</I></CODE>]<CODECLASS="literal">=</CODE></P><PCLASS="para">Write to standard output the line number of each line addressed.</P></DD><DTCLASS="term"><CODECLASS="literal">a</CODE></DT><DDCLASS="listitem"><PCLASS="para"><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address</I></CODE><CODECLASS="literal">]a\</CODE><BR><CODECLASS="replaceable"><I>text</I></CODE></P></BLOCKQUOTE></P><PCLASS="para">Append <CODECLASS="replaceable"><I>text</I></CODE> following each line matched by<CODECLASS="replaceable"><I>address</I></CODE>.If there is more than one line of <CODECLASS="replaceable"><I>text</I></CODE>,all newlines except the last must be &quot;hidden&quot; by precedingthem with a backslash. <CODECLASS="replaceable"><I>text</I></CODE> will be terminated by the firstnewline that is not hidden in this way. <CODECLASS="replaceable"><I>text</I></CODE> isnot available in the pattern space, and subsequent commandscannot be applied to it. The results of this commandare sent to standard output when the list of editing commands is finished,regardless of what happens to the current line in the pattern space.(There's an example in article<ACLASS="xref"HREF="ch43_22.htm"TITLE="Converting Text Files to PostScript ">43.22</A>,among others.)</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$a\This goes after the last line in the file\(marked by $). This text is escaped at the\end of each line, except for the last one.</PRE></BLOCKQUOTE><ACLASS="indexterm"NAME="AUTOID-39560"></A></P></DD><DTCLASS="term"><CODECLASS="literal">b</CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address1</I></CODE><CODECLASS="literal">][,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">b[</CODE><CODECLASS="replaceable"><I>label</I></CODE><CODECLASS="literal">]</CODE></P><PCLASS="para">Transfer control unconditionally to <CODECLASS="literal">:</CODE><CODECLASS="replaceable"><I>label</I></CODE> elsewhere in script.That is, the command followingthe <CODECLASS="replaceable"><I>label</I></CODE> is the next command applied to the current line.If no <CODECLASS="replaceable"><I>label</I></CODE> is specified, control falls throughto the end of the script, so no more commands are appliedto the current line.  See articles <ACLASS="xref"HREF="ch34_19.htm"TITLE="Making Edits Everywhere Except... ">34.19</A> and<ACLASS="xref"HREF="ch34_17.htm"TITLE="Searching for Patterns Split Across Lines ">34.17</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Ignore tbl tables; resume script after TE:/^\.TS/,/^\.TE/b</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">c</CODE></DT><DDCLASS="listitem"><PCLASS="para"><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE><CODECLASS="literal">]c\</CODE><BR><CODECLASS="replaceable"><I>text</I></CODE></P></BLOCKQUOTE></P><PCLASS="para">Replace the lines selected by the address with <CODECLASS="replaceable"><I>text</I></CODE>.When a range of lines is specified, all lines as a group are replacedby a single copy of <CODECLASS="replaceable"><I>text</I></CODE>.The newline following each line of <CODECLASS="replaceable"><I>text</I></CODE> must be escaped bya backslash, except the last line.The contents of the pattern space are, in effect, deleted andno subsequent editing commands can be applied to it (or <CODECLASS="replaceable"><I>text</I></CODE>).</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Replace first 100 lines in a file:1,100c\<ICLASS="lineannotation">...first replacement line</I>\<ICLASS="lineannotation">...second replacement line</I>\<ICLASS="lineannotation">...</I>\<ICLASS="lineannotation">...last replacement line</I></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">d</CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address1</I></CODE><CODECLASS="literal">][,</CODE><CODECLASS="replaceable"><I>address2</I></CODE><CODECLASS="literal">]d</CODE></P><PCLASS="para">Delete the addressed line (or lines) from the pattern space. Thus, the line is not passed to standardoutput. A new line of input is read, and editing resumes with the firstcommand in the script.See articles<ACLASS="xref"HREF="ch34_04.htm"TITLE="sed Addressing Basics ">34.4</A>and<ACLASS="xref"HREF="ch34_18.htm"TITLE="Multiline Delete ">34.18</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># delete all blank lines:/^$/d</PRE></BLOCKQUOTE></P></DD><DTCLASS="term"><CODECLASS="literal">D</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">D</CODE></P><PCLASS="para">Delete first part (up to embedded newline) of multiline pattern space createdby <EMCLASS="emphasis">N</EM> command and resume editing with first command inscript. If this command empties the pattern space, then a new lineof input is read, as if <EMCLASS="emphasis">d</EM> had been executed.See article <ACLASS="xref"HREF="ch34_18.htm"TITLE="Multiline Delete ">34.18</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Strip multiple blank lines, leaving only one:/^$/{    N    /^\n$/D}</PRE></BLOCKQUOTE></P></DD><DTCLASS="term"><CODECLASS="literal">g</CODE></DT><DDCLASS="listitem"><PCLASS="para"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address1</I></CODE><CODECLASS="literal">][,</CODE><CODECLASS="replaceable"><I>address2</I></CODE><CODECLASS="literal">]g</CODE></P><PCLASS="para">Paste the contents of the hold space (see <EMCLASS="emphasis">h</EM> or <EMCLASS="emphasis">H</EM>) backinto the pattern space, wiping out the previous contents of the pattern space.See articles <ACLASS="xref"HREF="ch34_13.htm"TITLE="Hold Space: The Set-Aside Buffer ">34.13</A> and <ACLASS="xref"HREF="ch34_16.htm"TITLE="The Deliberate Scrivener ">34.16</A>.The example shows a simple way to copy lines.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">This script collects all lines containing the word <CODECLASS="literal">Item:</CODE>and copies them to a place marker later in the file.The place marker is overwritten.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/Item:/H/&lt;Replace this line with the item list&gt;/g</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">G</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">G</CODE></P><PCLASS="para">Same as <EMCLASS="emphasis">g</EM>, except that the hold space is pasted below the addressinstead of overwriting it.The example shows a simple way to &quot;cut and paste&quot; lines.See articles <ACLASS="xref"HREF="ch34_13.htm"TITLE="Hold Space: The Set-Aside Buffer ">34.13</A> and <ACLASS="xref"HREF="ch34_16.htm"TITLE="The Deliberate Scrivener ">34.16</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">This script collects all lines containing the word <CODECLASS="literal">Item:</CODE>and moves them after a place marker later in the file.The original <CODECLASS="literal">Item:</CODE> lines are deleted.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/Item:/{    H    d}/Summary of items:/G</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">h</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">h</CODE>Copy the pattern space into the hold space, a special temporary buffer.The previous contents of the hold space are obliterated.You can use <EMCLASS="emphasis">h</EM> to save a line before editing it.See articles <ACLASS="xref"HREF="ch34_13.htm"TITLE="Hold Space: The Set-Aside Buffer ">34.13</A> and <ACLASS="xref"HREF="ch34_16.htm"TITLE="The Deliberate Scrivener ">34.16</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Edit a line; print the change; replay the original/UNIX/{    h    s/.* UNIX \(.*\) .*/\1:/    p    x}</PRE></BLOCKQUOTE></P><PCLASS="para"><EMCLASS="emphasis">Sample input:</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">This describes the UNIX ls command.This describes the UNIX cp command.</PRE></BLOCKQUOTE></P><PCLASS="para"><EMCLASS="emphasis">Sample output:</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ls:This describes the UNIX ls command.cp:This describes the UNIX cp command.</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;</P></DD><DTCLASS="term"><CODECLASS="literal">H</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">H</CODE></P><PCLASS="para">Append the contents of the pattern space (preceded by a newline)to the contents of the hold space. Even if the hold space is empty,<EMCLASS="emphasis">H</EM> still appends a newline. <EMCLASS="emphasis">H</EM> is like an incremental copy.See examples under <EMCLASS="emphasis">g</EM> and <EMCLASS="emphasis">G</EM>,also articles<ACLASS="xref"HREF="ch34_13.htm"TITLE="Hold Space: The Set-Aside Buffer ">34.13</A>and<ACLASS="xref"HREF="ch34_16.htm"TITLE="The Deliberate Scrivener ">34.16</A>.&#13;</P></DD><DTCLASS="term"><CODECLASS="literal">i</CODE></DT><DDCLASS="listitem"><PCLASS="para"><BLOCKQUOTECLASS="literallayout"><PCLASS="literallayout"><CODECLASS="literal">[</CODE><CODECLASS="replaceable"><I>address</I></CODE><CODECLASS="literal">]i\</CODE><BR><CODECLASS="replaceable"><I>text</I></CODE> </P></BLOCKQUOTE>Insert <CODECLASS="replaceable"><I>text</I></CODE> before each line matched by <CODECLASS="replaceable"><I>address</I></CODE>.(See <EMCLASS="emphasis">a</EM> for details on <CODECLASS="replaceable"><I>text</I></CODE>.)Article<ACLASS="xref"HREF="ch43_20.htm"TITLE="Displaying a troff Macro Definition ">43.20</A>shows a script that uses <EMCLASS="emphasis">i</EM>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/Item 1/i\The five items are listed below:</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">l</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">l</CODE></P><PCLASS="para">List the contents of the pattern space, showing non-printingcharacters as<SPANCLASS="link">ASCII codes (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>, <ACLASS="linkend"HREF="ch25_07.htm"TITLE="Show Non-Printing Characters with cat -v or od -c ">25.7</A>)</SPAN>.Long lines are wrapped.</P></DD><DTCLASS="term"><CODECLASS="literal">n</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">n</CODE></P><PCLASS="para">Read next line of input into pattern space. The current line is sent tostandard output, and the next line becomes the current line.Control passes to the command following <EMCLASS="emphasis">n</EM> instead of resuming at the topof the script.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">In the<SPANCLASS="link"><EMCLASS="emphasis">ms</EM> macros (<ACLASS="linkend"HREF="ch43_14.htm"TITLE="nroff/troff and Macro Packages ">43.14</A>)</SPAN>,a section header occurs on the linebelow an <CODECLASS="literal">.NH</CODE> macro. To print all lines of header text, invoke thisscript with <EMCLASS="emphasis">sed -n</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/^\.NH/{    n    p}<ACLASS="indexterm"NAME="AUTOID-39783"></A></PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">N</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">N</CODE></P><PCLASS="para">Append next input line to contents of pattern space; the two lines areseparated by an embedded newline.(This command is designed to allow pattern matches across twolines.) Using <CODECLASS="literal">\n</CODE> to match the embedded newline, you can matchpatterns across multiple lines. See example under <EMCLASS="emphasis">D</EM>, also article<ACLASS="xref"HREF="ch34_15.htm"TITLE="Making Edits Across Line Boundaries ">34.15</A>.</P><PCLASS="para"><EMCLASS="emphasis">Examples</EM></P><PCLASS="para">Like previous example, but print <CODECLASS="literal">.NH</CODE> line as well as header title:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/^\.NH/{    N    p}</PRE></BLOCKQUOTE></P><PCLASS="para">Join two lines (replace newline with space):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/^\.NH/{    N    s/\n/ /    p}</PRE></BLOCKQUOTE></P></DD><DTCLASS="term"><CODECLASS="literal">p</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">p</CODE></P><PCLASS="para">Print the addressed line(s). Unless the <EMCLASS="emphasis">-n</EM> command-lineoption is used, this command will cause duplicate lines to beoutput. Also, it is typically used before commands thatchange flow control (<EMCLASS="emphasis">d</EM>, <EMCLASS="emphasis">N</EM>, <EMCLASS="emphasis">b</EM>) and that mightprevent the current line from being output.See examples under <EMCLASS="emphasis">h</EM>, <EMCLASS="emphasis">n</EM>, and <EMCLASS="emphasis">N</EM>.</P></DD><DTCLASS="term"><CODECLASS="literal">P</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">P</CODE></P><PCLASS="para">Print first part (up to embedded newline) of multiline pattern createdby <EMCLASS="emphasis">N</EM> command. Same as <EMCLASS="emphasis">p</EM> if <EMCLASS="emphasis">N</EM> has not been applied to a line.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">The following script prints each line containing <CODECLASS="replaceable"><I>word</I></CODE>and also the line before it:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">N/<CODECLASS="replaceable"><I>word</I></CODE>/PD</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">q</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address</I></CODE>]<CODECLASS="literal">q</CODE><ACLASS="indexterm"NAME="AUTOID-39854"></A></P><PCLASS="para">Quit when <CODECLASS="replaceable"><I>address</I></CODE> is encountered. The addressed line is firstwritten to output (if default output is not suppressed),along with any text appended to it by previous <EMCLASS="emphasis">a</EM> or <EMCLASS="emphasis">r</EM> commands.See articles <ACLASS="xref"HREF="ch34_21.htm"TITLE="Uses of the sed Quit Command ">34.21</A> and<ACLASS="xref"HREF="ch34_22.htm"TITLE="Dangers of the sed Quit Command ">34.22</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">Delete everything after the addressed line:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/Garbled text follows:/q</PRE></BLOCKQUOTE></P><PCLASS="para">&#13;Print only the first 50 lines of a file:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">50q</PRE></BLOCKQUOTE></P></DD><DTCLASS="term"><CODECLASS="literal">r</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address</I></CODE>]<CODECLASS="literal">r </CODE><CODECLASS="replaceable"><I>file</I></CODE></P><PCLASS="para">Read contents of <CODECLASS="replaceable"><I>file</I></CODE> and append after the contents of thepattern space.Exactly one space must be put between the <CODECLASS="literal">r</CODE> and <CODECLASS="replaceable"><I>file</I></CODE>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/The list of items follows:/r item_file</PRE></BLOCKQUOTE></P></DD><DTCLASS="term"><CODECLASS="literal">s</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">s/</CODE><CODECLASS="replaceable"><I>pattern</I></CODE><CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>replacement</I></CODE><CODECLASS="literal">/</CODE>[<CODECLASS="replaceable"><I>flags</I></CODE>]</P><PCLASS="para">Substitute <CODECLASS="replaceable"><I>replacement</I></CODE> for <CODECLASS="replaceable"><I>pattern</I></CODE> on each addressed line.If pattern addresses are used, the pattern <CODECLASS="literal">//</CODE> represents the lastpattern address specified.The following flags can be specified:<DLCLASS="variablelist"><DTCLASS="term"><CODECLASS="replaceable"><I>n</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Replace <CODECLASS="replaceable"><I>n</I></CODE>th instance of <CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>pattern</I></CODE><CODECLASS="literal">/</CODE> on each addressed line.<CODECLASS="replaceable"><I>n</I></CODE> is any number in the range 1 to 512 (default is 1).See article<ACLASS="xref"HREF="ch34_11.htm"TITLE="Search &amp; Replacement: One Match Among Many ">34.11</A>.</P></DD><DTCLASS="term"><CODECLASS="literal">g</CODE></DT><DDCLASS="listitem"><PCLASS="para">Replace all instances of <CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>pattern</I></CODE><CODECLASS="literal">/</CODE> on each addressed line, notjust the first instance.</P></DD><DTCLASS="term"><CODECLASS="literal">p</CODE></DT><DDCLASS="listitem"><PCLASS="para">Print the line if a successful substitution is done. If severalsuccessful substitutions are done, multiple copies of the line will beprinted.Often used in scripts with the<SPANCLASS="link"><EMCLASS="emphasis">-n</EM> command-line option (<ACLASS="linkend"HREF="ch34_02.htm"TITLE="Invoking sed ">34.2</A>)</SPAN>.</P></DD><DTCLASS="term"><CODECLASS="literal">w&nbsp;</CODE><CODECLASS="replaceable"><I>file</I></CODE></DT><DDCLASS="listitem"><PCLASS="para">Write the line to a <CODECLASS="replaceable"><I>file</I></CODE> if a replacement was done. A maximumof ten different files can be opened in a script.See articles <ACLASS="xref"HREF="ch34_07.htm"TITLE="Delimiting a Regular Expression ">34.7</A> through <ACLASS="xref"HREF="ch34_10.htm"TITLE="Referencing Portions of a Search String ">34.10</A>.</P><PCLASS="para"><EMCLASS="emphasis">Examples</EM></P><PCLASS="para">Here are some short, commented scripts:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Change third and fourth quote to ( and ):/function/{    s/&quot;/)/4    s/&quot;/(/3}# Remove all quotes on a given line:/Title/s/&quot;//g# Remove first colon or all quotes; print resulting lines:s/://ps/&quot;//gp# Change first &quot;if&quot; but leave &quot;ifdef&quot; alone:/ifdef/!s/if/   if/</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD></DL></P></DD><DTCLASS="term"><CODECLASS="literal">t</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">t </CODE>[<CODECLASS="replaceable"><I>label</I></CODE>]</P><PCLASS="para">Test if any substitutions have been made on addressed lines,and if so, branch to line marked by <CODECLASS="literal">:</CODE><CODECLASS="replaceable"><I>label</I></CODE>.(See <EMCLASS="emphasis">b</EM> and <CODECLASS="literal">:</CODE>.) If<CODECLASS="replaceable"><I>label</I></CODE> is not specified, control falls through to bottom of script.See article<ACLASS="xref"HREF="ch34_20.htm"TITLE="The sed Test Command ">34.20</A>.</P><PCLASS="para">The <EMCLASS="emphasis">t</EM> command can be used like a<SPANCLASS="link"><EMCLASS="emphasis">case</EM> statement (<ACLASS="linkend"HREF="ch44_05.htm"TITLE="Test String Values with Bourne Shell case ">44.5</A>)</SPAN>in the Bourne shell.You test each case: when it's true, you exit the construct.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para">Suppose you want to fill empty fields of a database. You have this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ID: 1   Name: greg   Rate: 45ID: 2   Name: daleID: 3</PRE></BLOCKQUOTE></P><PCLASS="para">You want this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ID: 1   Name: greg   Rate: 45   Phone: ??ID: 2   Name: dale   Rate: ??   Phone: ??ID: 3   Name: ????   Rate: ??   Phone: ??</PRE></BLOCKQUOTE></P><PCLASS="para">You need to test the number of fields already there.Here's the script (fields are tab-separated):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/ID/{    s/ID: .* Name: .* Rate: .*/&amp;   Phone: ??/p    t    s/ID: .* Name: .*/&amp;   Rate: ??   Phone: ??/p    t    s/ID: .*/&amp;   Name: ??     Rate: ??   Phone: ??/p}</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">w</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">w </CODE><CODECLASS="replaceable"><I>file</I></CODE></P><PCLASS="para">Append, contents of pattern space to <CODECLASS="replaceable"><I>file</I></CODE>. This action occurs when the command is encountered rather than when the pattern space isoutput. Exactly one spacemust separate the <CODECLASS="literal">w</CODE> and <CODECLASS="replaceable"><I>file</I></CODE>.A maximum of ten different files can be opened in a script.This command will create the file if it does not exist; if the fileexists, its contents will be overwritten each time the scriptis executed. Multiple write commands that direct output to thesame file append to the end of the file.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Store tbl and eqn blocks in a file:/^\.TS/,/^\.TE/w troff_stuff/^\.EQ/,/^\.EN/w troff_stuff</PRE></BLOCKQUOTE></P><PCLASS="para"></P></DD><DTCLASS="term"><CODECLASS="literal">x</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">x</CODE></P><PCLASS="para">Exchange contents of the pattern space with the contents of thehold space.For examples, see <EMCLASS="emphasis">h</EM> and articles<ACLASS="xref"HREF="ch34_13.htm"TITLE="Hold Space: The Set-Aside Buffer ">34.13</A>and<ACLASS="xref"HREF="ch34_16.htm"TITLE="The Deliberate Scrivener ">34.16</A>.&#13;</P></DD><DTCLASS="term"><CODECLASS="literal">y</CODE></DT><DDCLASS="listitem"><PCLASS="para">[<CODECLASS="replaceable"><I>address1</I></CODE>][<CODECLASS="literal">,</CODE><CODECLASS="replaceable"><I>address2</I></CODE>]<CODECLASS="literal">y/</CODE><CODECLASS="replaceable"><I>abc</I></CODE><CODECLASS="literal">/</CODE><CODECLASS="replaceable"><I>xyz</I></CODE><CODECLASS="literal">/</CODE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-40026"></A>Translate characters. Change every instance of <CODECLASS="replaceable"><I>a</I></CODE>to <CODECLASS="replaceable"><I>x</I></CODE>, <CODECLASS="replaceable"><I>b</I></CODE> to <CODECLASS="replaceable"><I>y</I></CODE>, <CODECLASS="replaceable"><I>c</I></CODE> to <CODECLASS="replaceable"><I>z</I></CODE>, etc.See articles<ACLASS="xref"HREF="ch34_12.htm"TITLE="Transformations on Text ">34.12</A>and<ACLASS="xref"HREF="ch34_14.htm"TITLE="Transforming Part of a Line ">34.14</A>.</P><PCLASS="para"><EMCLASS="emphasis">Example</EM></P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># Change item 1, 2, 3 to Item A, B, C .../^item [1-9]/y/i123456789/IABCDEFGHI/</PRE></BLOCKQUOTE></P></DD></DL><ACLASS="indexterm"NAME="AUTOID-40041"></A><ACLASS="indexterm"NAME="AUTOID-40042"></A><ACLASS="indexterm"NAME="AUTOID-40046"></A></DIV><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DG</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">UNIX in a Nutshell (SVR4/Solaris)</CITE></SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch34_23.htm"TITLE="34.23 sed Newlines, Quoting, and Backslashes in a Shell Script"><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 34.23 sed Newlines, Quoting, and Backslashes in a Shell Script"BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="CHAPTER"HREF="ch35_01.htm"TITLE="35. You Can't Quite Call This Editing"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35. You Can't Quite Call This Editing"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">34.23 sed Newlines, Quoting, and Backslashes in a Shell Script</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">35. You Can't Quite Call This Editing</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>