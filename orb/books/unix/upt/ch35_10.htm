<HTML><HEAD><TITLE>[Chapter 35] 35.10 Splitting Files by Context: csplit </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:48:09Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch35_01.htm"TITLE="35. You Can't Quite Call This Editing"><LINKREL="prev"HREF="ch35_09.htm"TITLE="35.9 Splitting Files at Fixed Points: split "><LINKREL="next"HREF="ch35_11.htm"TITLE="35.11 Hacking on Characters with tr "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_09.htm"TITLE="35.9 Splitting Files at Fixed Points: split "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 35.9 Splitting Files at Fixed Points: split "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 35<BR>You Can't Quite Call This Editing</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_11.htm"TITLE="35.11 Hacking on Characters with tr "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35.11 Hacking on Characters with tr "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-2890">35.10 Splitting Files by Context: csplit </A></H2><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="csplit">csplit</A><BR></TH><TDVALIGN="TOP"><ACLASS="indexterm"NAME="UPT-ART-2890-IX-CSPLIT-PROGRAM"></A>Like<SPANCLASS="link"><EMCLASS="emphasis">split</EM> (<ACLASS="linkend"HREF="ch35_09.htm"TITLE="Splitting Files at Fixed Points: split ">35.9</A>)</SPAN>,<EMCLASS="emphasis">csplit</EM> lets you break a file into smaller pieces,but <EMCLASS="emphasis">csplit</EM> (context split) also allows the file to be broken intodifferent-sized pieces, according to context. With <EMCLASS="emphasis">csplit</EM>,you give the locations (line numbers or search patterns)at which to break each section.<EMCLASS="emphasis">csplit</EM> comes with System V, but there are alsofreely available versions.</TD></TR></TABLE><PCLASS="para">Let's look at search patterns first.Suppose you have an outline consisting of three main sections. You couldcreate a separate file for each section by typing:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit outline /I./ /II./ /III./</B></CODE>28 <ICLASS="lineannotation">number of characters in each file</I>415                   .372                   .554                   .% <CODECLASS="userinput"><B>ls</B></CODE>outlinexx00   <ICLASS="lineannotation"> outline title, etc.</I>xx01   <ICLASS="lineannotation"> Section I</I>xx02   <ICLASS="lineannotation"> Section II</I>xx03   <ICLASS="lineannotation"> Section III</I></PRE></BLOCKQUOTE></P><PCLASS="para">This command creates four new files (<EMCLASS="emphasis">outline</EM> remains intact).<EMCLASS="emphasis">csplit</EM> displays the character counts for each file. Note thatthe first file (<EMCLASS="emphasis">xx00</EM>) contains any text up to <EMCLASS="emphasis">but not including</EM> the first pattern, and that <EMCLASS="emphasis">xx01</EM> contains the first section, as you'dexpect. This is why the naming scheme begins with <EMCLASS="emphasis">00</EM>.(Even if <EMCLASS="emphasis">outline</EM> had begun immediately with a <CODECLASS="literal">I.</CODE>,<EMCLASS="emphasis">xx01</EM> would still contain Section I, but <EMCLASS="emphasis">xx00</EM> would be empty in thiscase.)</P><PCLASS="para">If you don't want to save the text that occurs before a specified pattern,use a percent sign as the pattern delimiter:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit outline %I.% /II./ /III./</B></CODE>415372554% <CODECLASS="userinput"><B>ls</B></CODE>outlinexx00 <ICLASS="lineannotation"> Section I</I>xx01 <ICLASS="lineannotation"> Section II</I>xx02 <ICLASS="lineannotation"> Section III</I></PRE></BLOCKQUOTE></P><PCLASS="para">The preliminary text file has been suppressed, andthe created files now begin where the actual outline starts (the filenumbering is off, however).</P><PCLASS="para">Let's make some further refinements. We'll use the <EMCLASS="emphasis">-s</EM> option to suppress the display of the character counts, and we'll use the <EMCLASS="emphasis">-f</EM> option to specify a file prefix other than the conventional <EMCLASS="emphasis">xx</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit -s -f part. outline /I./ /II./ /III./</B></CODE>% <CODECLASS="userinput"><B>ls</B></CODE>outlinepart.00part.01part.02part.03</PRE></BLOCKQUOTE></P><PCLASS="para">There's still a slight problem though. In search patterns, a period is a <SPANCLASS="link">metacharacter (<ACLASS="linkend"HREF="ch26_10.htm"TITLE="Pattern Matching Quick Reference with Examples ">26.10</A>)</SPAN>that matches any single character, so the pattern <CODECLASS="literal">/I./</CODE> may inadvertentlymatch words like <EMCLASS="emphasis">Introduction</EM>. We need to escape the period with abackslash; however, the backslash has meaning both to the pattern and tothe shell, so in fact, we need either to use a double backslash or to surroundthe pattern in<SPANCLASS="link">quotes (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>.A subtlety, yes, but one that can drive you crazyif you don't remember it. Our command line becomes:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit -s -f part. outline &quot;/I\./&quot; /II./ /III./</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">You can also break a file at repeated occurrences of the same pattern.Let's say you have a file that describes 50 ways to cook a chicken,and you want each method stored in a separate file. Each section beginswith headings <EMCLASS="emphasis">WAY #1</EM>, <EMCLASS="emphasis">WAY #2</EM>, and so on. To divide the file,use <EMCLASS="emphasis">csplit</EM>'s repeat argument:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit -s -f cook. fifty_ways /^WAY/ &quot;{49}&quot;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This command splits the file at the first occurrence of <EMCLASS="emphasis">WAY</EM>,and the number in braces tells <EMCLASS="emphasis">csplit</EM> to repeat the split 49 more times.Note that a caret is used to match the beginning of the line and thatthe C shell requires quotes around the<SPANCLASS="link">braces (<ACLASS="linkend"HREF="ch09_05.htm"TITLE="Build Strings with {&nbsp;} ">9.5</A>)</SPAN>.The command has created50 files:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls cook.*</B></CODE>cook.00cook.01  ...cook.48cook.49</PRE></BLOCKQUOTE></P><PCLASS="para">Quite often, when you want to split a file repeatedly,you don't know or don't care how many files will be created; you just want to make sure that the necessary number of splits takes place.In this case, it makes sense to specify a repeat count that is slightly higherthan what you need (maximum is 99). Unfortunately, if you tell <EMCLASS="emphasis">csplit</EM> tocreate more files than it's able to, this produces an &quot;out of range&quot; error.Furthermore, when <EMCLASS="emphasis">csplit</EM> encounters an error, it exits by removing any files it created along the way. (A bug, if you ask me.) This is where the<EMCLASS="emphasis">-k</EM> option comes in.Specify <EMCLASS="emphasis">-k</EM> to <EMCLASS="emphasis">k</EM>eep the files around, even when the &quot;out of range&quot;message occurs.</P><PCLASS="para"><EMCLASS="emphasis">csplit</EM> allows you to break a file at some number of lines above or belowa given search pattern. For example, to break a file at the line that is five lines below the one containing <EMCLASS="emphasis">Sincerely,</EM> you could type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit -s -f letter. all_letters /Sincerely/+5</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">This situation might arise if you have a series of business lettersstrung together in one file. Each letter begins differently, but each one begins five lines after the previous letter's <EMCLASS="emphasis">Sincerely</EM> line.Here's another example, adapted from AT&amp;T's UNIX <EMCLASS="emphasis">User's Reference Manual</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit -s -k -f routine. prog.c '%main(%' '/^}/+1' '{99}'</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">The idea is that the file <EMCLASS="emphasis">prog.c</EM> contains a group of C routines,and we want to place each one in a separate file (<EMCLASS="emphasis">routine.00</EM>, <EMCLASS="emphasis">routine.01</EM>, etc.). The first pattern uses <CODECLASS="literal">%</CODE>because we want to discard anything before <EMCLASS="emphasis">main</EM>. The next argumentsays, &quot;Look for a closing brace at the beginning of a line (the conventionalend of a routine) and split on the following line (the assumed beginning ofthe next routine).&quot; Repeat this split up to 99 times, using <EMCLASS="emphasis">-k</EM> to preserve the created files.[4]</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[4] In this case, the repeat can actually occur only 98 times, since we've already specified two arguments and the maximum number is 100.</P></BLOCKQUOTE><PCLASS="para">The <EMCLASS="emphasis">csplit</EM> command takes line-number arguments in addition to patterns.You can say:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit stuff 50 373 955</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">to create files split at some arbitrary line numbers.In that example, the new file <EMCLASS="emphasis">xx00</EM>will have lines 1-49 (49 lines total), <EMCLASS="emphasis">xx01</EM> will have lines50-372 (323 lines total), <EMCLASS="emphasis">xx02</EM> will have lines 373-954(582 lines total), and <EMCLASS="emphasis">xx03</EM> will hold the rest of <EMCLASS="emphasis">stuff</EM>.</P><PCLASS="para"><EMCLASS="emphasis">csplit</EM> works like <EMCLASS="emphasis">split</EM> if you repeat the argument. The command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>csplit top_ten_list 10 &quot;{18}&quot;</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">breaks the list into 19 segments of 10 lines each.[5]<ACLASS="indexterm"NAME="AUTOID-40665"></A><ACLASS="indexterm"NAME="AUTOID-40666"></A></P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] Not really. The first file contains only nine lines (1-9); the restcontain 10. In this case, you're better off saying <CODECLASS="literal">split&nbsp;-10&nbsp;top_ten_list</CODE>.</P></BLOCKQUOTE><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">DG</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_09.htm"TITLE="35.9 Splitting Files at Fixed Points: split "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 35.9 Splitting Files at Fixed Points: split "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_11.htm"TITLE="35.11 Hacking on Characters with tr "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35.11 Hacking on Characters with tr "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">35.9 Splitting Files at Fixed Points: split </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">35.11 Hacking on Characters with tr </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>