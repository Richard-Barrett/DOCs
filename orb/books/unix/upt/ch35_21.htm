<HTML><HEAD><TITLE>[Chapter 35] 35.21 Using IFS to Split Strings </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:48:27Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch35_01.htm"TITLE="35. You Can't Quite Call This Editing"><LINKREL="prev"HREF="ch35_20.htm"TITLE="35.20 Quick Reference: uniq "><LINKREL="next"HREF="ch35_22.htm"TITLE="35.22 Straightening Jagged Columns "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_20.htm"TITLE="35.20 Quick Reference: uniq "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 35.20 Quick Reference: uniq "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 35<BR>You Can't Quite Call This Editing</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_22.htm"TITLE="35.22 Straightening Jagged Columns "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35.22 Straightening Jagged Columns "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0191">35.21 Using IFS to Split Strings </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-41276"></A>It might not be obvious why the Bourne shellhas an <EMCLASS="emphasis">IFS</EM> (internal field separator) shell variable.By default, it holds three characters: SPACE, TAB, and NEWLINE.These are the places that the shell parses command lines.So what?</P><PCLASS="para">If you have a line of text&nbsp;- say, from a database&nbsp;- and you want to split itinto fields, the <EMCLASS="emphasis">IFS</EM> variable can help.Put the field separator into <EMCLASS="emphasis">IFS</EM> temporarily, use the shell's<SPANCLASS="link"><EMCLASS="emphasis">set</EM> (<ACLASS="linkend"HREF="ch44_19.htm"TITLE="The Bourne Shell set Command ">44.19</A>)</SPAN>command to store the fields in command-line parameters; then restore the old<EMCLASS="emphasis">IFS</EM>.</P><PCLASS="para">For example, the chunk of a shell script below gets current terminalsettings from<SPANCLASS="link"><EMCLASS="emphasis">stty&nbsp;-g</EM> (<ACLASS="linkend"HREF="ch42_04.htm"TITLE="Checklist for Resetting a Messed Up Terminal ">42.4</A>)</SPAN>,which looks like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">2506:5:bf:8a3b:3:1c:8:15:4:0:0:0:11:13:1a:19:12:f:17:16:0:0</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-41291"></A>The shell parses the line returned from <EMCLASS="emphasis">stty</EM> by the<SPANCLASS="link">backquotes (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>.It stores <EMCLASS="emphasis">x</EM> in <CODECLASS="literal">$1</CODE>.This trick stops errors if <EMCLASS="emphasis">stty</EM> failsfor some reason&nbsp;- without the <EMCLASS="emphasis">x</EM>, if <EMCLASS="emphasis">stty</EM> made no standard output,the shell's <EMCLASS="emphasis">set</EM> command would print a list of all shell variables.Then <EMCLASS="emphasis">2506</EM> goes into <CODECLASS="literal">$2</CODE>, <EMCLASS="emphasis">5</EM> into <CODECLASS="literal">$3</CODE>,and so on.The original Bourne shell can only handle nine parameters (through<CODECLASS="literal">$9</CODE>); if your input lines may have more than nine fields, thisisn't a good technique.But this script uses the Korn shell, which (along with <EMCLASS="emphasis">bash</EM>)doesn't have that limit.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/ksholdifs=&quot;$IFS&quot;# Change IFS to a colon:IFS=:# Put x in $1, stty -g output in $2 thru ${23}:set x `stty -g`IFS=&quot;$oldifs&quot;# Window size is in 16th field (not counting the first &quot;x&quot;):echo &quot;Your window has ${17} rows.&quot;</PRE></BLOCKQUOTE></P><PCLASS="para">Because you don't need a subprocess to parse the output of <EMCLASS="emphasis">stty</EM>, thiscan be faster than using an external command like<SPANCLASS="link"><EMCLASS="emphasis">cut</EM> (<ACLASS="linkend"HREF="ch35_14.htm"TITLE="Cutting Columns or Fields with cut ">35.14</A>)</SPAN>or<SPANCLASS="link"><EMCLASS="emphasis">awk</EM> (<ACLASS="linkend"HREF="ch33_11.htm"TITLE="Quick Reference: awk ">33.11</A>)</SPAN>.</P><PCLASS="para">There are places where <EMCLASS="emphasis">IFS</EM> can't be used because the shellseparates command lines at spaces before it splitsat <EMCLASS="emphasis">IFS</EM>.It doesn't split the results of variable substitution or<SPANCLASS="link">command substitution (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>at spaces, though.Here's an example&nbsp;- three different ways to parse a line from<EMCLASS="emphasis">/etc/passwd</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>cat splitter</B></CODE>#!/bin/shIFS=:line='larry:Vk9skS323kd4q:985:100:Larry Smith:/u/larry:/bin/tcsh'set x $lineecho &quot;case 1: \$6 is '$6'&quot;set x `grep larry /etc/passwd`echo &quot;case 2: \$6 is '$6'&quot;set x larry:Vk9skS323kd4q:985:100:Larry Smith:/u/larry:/bin/tcshecho &quot;case 3: \$6 is '$6'&quot;% <CODECLASS="userinput"><B>./splitter</B></CODE>case 1: $6 is 'Larry Smith'case 2: $6 is 'Larry Smith'case 3: $6 is 'Larry'</PRE></BLOCKQUOTE></P><PCLASS="para">Case&nbsp;1 used variable substitution and case&nbsp;2 used commandsubstitution; the sixth field contained the space.In case&nbsp;3, though, with the colons on the command line,the sixth field was split:<CODECLASS="literal">$6</CODE> became <EMCLASS="emphasis">Larry</EM> and <CODECLASS="literal">$7</CODE> was <EMCLASS="emphasis">Smith</EM>.Another problem would have come up if any of the fields hadbeen empty (as in <CODECLASS="literal">larry::985:100:</CODE><EMCLASS="emphasis">etc...</EM>)-theshell would &quot;eat&quot; the empty field and <CODECLASS="literal">$6</CODE> would contain<EMCLASS="emphasis">/u/larry</EM>.Using <EMCLASS="emphasis">sed</EM> with its<SPANCLASS="link">escaped parentheses (<ACLASS="linkend"HREF="ch34_10.htm"TITLE="Referencing Portions of a Search String ">34.10</A>)</SPAN>to do the searching and the parsing could solve the last two problems.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_20.htm"TITLE="35.20 Quick Reference: uniq "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 35.20 Quick Reference: uniq "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch35_22.htm"TITLE="35.22 Straightening Jagged Columns "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 35.22 Straightening Jagged Columns "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">35.20 Quick Reference: uniq </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">35.22 Straightening Jagged Columns </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>