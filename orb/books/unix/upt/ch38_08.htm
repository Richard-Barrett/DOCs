<HTML><HEAD><TITLE>[Chapter 38] 38.8 What Are Signals? </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:49:41Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch38_01.htm"TITLE="38. Starting, Stopping, and Killing Processes"><LINKREL="prev"HREF="ch38_07.htm"TITLE="38.7 Why ps Prints Some Commands in Parentheses "><LINKREL="next"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_07.htm"TITLE="38.7 Why ps Prints Some Commands in Parentheses "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.7 Why ps Prints Some Commands in Parentheses "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 38<BR>Starting, Stopping, and Killing Processes</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.9 Killing Foreground Jobs "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-2010">38.8 What Are Signals? </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-42819"></A>Signals are a simple, but important means of interprocesscommunication. Interprocess communication sounds fancy, but it'sreally a simple concept: it's the means by which one program sends amessage to another program. It's common to think of signals asspecial messages sent by the <SPANCLASS="link">UNIX kernel (<ACLASS="linkend"HREF="ch01_14.htm"TITLE="The Kernel and Daemons ">1.14</A>)</SPAN>but, in fact, any program can signal any other program.</P><PCLASS="para">What kinds of messages can you send with a signal? Relatively few, inreality. Signals aren't &quot;arbitrary&quot; messages, like letters; they area small group of pre-defined messages, each with its own specialmeaning. System V UNIX supports 16 signals, each of which is assigneda number; BSD-derived UNIX implementations and SVR4 have 32 signals.<ACLASS="xref"HREF="ch38_08.htm#UPT-ART-2010-TAB-0"TITLE="Common Signals">Table 38.2</A>lists some of the more commonly used signals.  It also lists keyboardcharacters that send common signals on BSD systems (these canbe changed; see article<ACLASS="xref"HREF="ch05_09.htm"TITLE="Setting Your Erase, Kill, and Interrupt Characters ">5.9</A>).<ACLASS="indexterm"NAME="AUTOID-42825"></A><ACLASS="indexterm"NAME="AUTOID-42827"></A><ACLASS="indexterm"NAME="AUTOID-42830"></A><ACLASS="indexterm"NAME="AUTOID-42832"></A><ACLASS="indexterm"NAME="AUTOID-42835"></A><ACLASS="indexterm"NAME="AUTOID-42837"></A><ACLASS="indexterm"NAME="AUTOID-42839"></A><ACLASS="indexterm"NAME="AUTOID-42841"></A><ACLASS="indexterm"NAME="AUTOID-42844"></A><ACLASS="indexterm"NAME="AUTOID-42846"></A><ACLASS="indexterm"NAME="AUTOID-42849"></A><ACLASS="indexterm"NAME="AUTOID-42851"></A><ACLASS="indexterm"NAME="AUTOID-42853"></A><ACLASS="indexterm"NAME="AUTOID-42855"></A><ACLASS="indexterm"NAME="AUTOID-42858"></A><ACLASS="indexterm"NAME="AUTOID-42860"></A><ACLASS="indexterm"NAME="AUTOID-42862"></A><ACLASS="indexterm"NAME="AUTOID-42864"></A><ACLASS="indexterm"NAME="AUTOID-42866"></A></P><TABLECLASS="table"><CAPTIONCLASS="table"><ACLASS="title"NAME="UPT-ART-2010-TAB-0">Table 38.2: Common Signals</A></CAPTION><THEADCLASS="thead"><TRCLASS="row"VALIGN="TOP"><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Signal Name</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Number</TH><THCLASS="entry"ALIGN="LEFT"ROWSPAN="1"COLSPAN="1">Meaning and Typical Use</TH></TR></THEAD><TBODYCLASS="tbody"><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">HUP</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">1</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Hangup&nbsp;- stop running. Sent when you log out or disconnect a modem.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">INT</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">2</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Interrupt&nbsp;- stop running. Sent when you type CTRL-c.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">QUIT</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">3</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Quit&nbsp;- stop running(and<SPANCLASS="link">dump core (<ACLASS="linkend"HREF="glossary.htm#UPT-ART-1010"TITLE="Glossary">52.9</A>)</SPAN>).Sent when you typeCTRL-\.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">KILL</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">9</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Kill&nbsp;- stop unconditionally and immediately; a good &quot;emergency kill.&quot;</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">SEGV</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">11</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Segmentation violation&nbsp;- you have tried to access illegal memory.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">TERM</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">15</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Terminate&nbsp;- terminate gracefully, if possible.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">STOP</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">17</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Stop unconditionally and immediately; continue with CONT.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">TSTP</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">18</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Stop&nbsp;- stopexecuting, ready to continue (in either background orforeground). Sent when you type CTRL-z.  <SPANCLASS="link"><EMCLASS="emphasis">stty</EM> (<ACLASS="linkend"HREF="ch05_09.htm"TITLE="Setting Your Erase, Kill, and Interrupt Characters ">5.9</A>)</SPAN> calls this<EMCLASS="emphasis">susp</EM>.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CONT</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">19</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Continue&nbsp;- continue executing after STOP or TSTP.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">CHLD</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">20</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">Child&nbsp;- a child process's status has changed.</TD></TR><TRCLASS="row"VALIGN="TOP"><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">USR1</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">30</TD><TDCLASS="entry"ROWSPAN="1"COLSPAN="1">User-defined signal.</TD></TR></TBODY></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-42927"></A><ACLASS="indexterm"NAME="AUTOID-42929"></A>While this list isn't definitive, it shows you the types of thingssignals can do. Many signals, like <EMCLASS="emphasis">SIGSEGV</EM>, are warning orerror messages. You've probably seen the frustrating &quot;segmentationviolation&quot; message. That message came when the kernel detectedsomething wrong and sent your program a <EMCLASS="emphasis">SIGSEGV</EM> signal; in response, yourprogram quit. Others signals, like <EMCLASS="emphasis">SIGTSTP</EM>, are generated in response tospecial characters on the keyboard. And a lot of signals just say,&quot;Your time is up, goodbye!&quot;</P><PCLASS="para">When a process receives a signal, it can take a number of actions; for example:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">It can take whatever default action is specified for the signal. Bydefault, some signals kill the process that receives them. For somesignals, the default action is to stop running and dump core.(<EMCLASS="emphasis">SIGQUIT</EM> is an example of this.) Othersignals have no effect by default.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-42942"></A><ACLASS="indexterm"NAME="AUTOID-42944"></A>It can <SPANCLASS="link">trap (<ACLASS="linkend"HREF="ch44_12.htm"TITLE="Trapping Exits Caused by Interrupts ">44.12</A>)</SPAN>the signal and run a special &quot;signal handling&quot;function&nbsp;- in which case, it can do whatever it wants. A signalhandler often does whatever's necessary to shut the program downnicely: make sure that files are closed and left in a consistentstate, and so on.</P></LI><LICLASS="listitem"><PCLASS="para">It can ignore the signal, in which case nothing happens.</P></LI></UL><PCLASS="para">You've probably read that the command <EMCLASS="emphasis">kill -9</EM> is guaranteed to kill aprocess.Why?Two special signals in<ACLASS="xref"HREF="ch38_08.htm#UPT-ART-2010-TAB-0"TITLE="Common Signals">Table 38.2</A>can't be caught or ignored: the <EMCLASS="emphasis">KILL</EM> and <EMCLASS="emphasis">STOP</EM>signals.</P><PCLASS="para">The <SPANCLASS="link"><EMCLASS="emphasis">kill</EM> (<ACLASS="linkend"HREF="ch38_10.htm"TITLE="Destroying Processes with kill ">38.10</A>)</SPAN>command doesn't kill&nbsp;- it really does nothing more thansend signals. As you now know, signals often bring death anddestruction&nbsp;- but there's no necessary reason for them to do so.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_07.htm"TITLE="38.7 Why ps Prints Some Commands in Parentheses "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.7 Why ps Prints Some Commands in Parentheses "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.9 Killing Foreground Jobs "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">38.7 Why ps Prints Some Commands in Parentheses </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">38.9 Killing Foreground Jobs </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>