<HTML><HEAD><TITLE>[Chapter 38] 38.10 Destroying Processes with kill </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:49:46Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch38_01.htm"TITLE="38. Starting, Stopping, and Killing Processes"><LINKREL="prev"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "><LINKREL="next"HREF="ch38_11.htm"TITLE="38.11 Printer Queue Watcher: A Restartable Daemon Shell Script"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.9 Killing Foreground Jobs "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 38<BR>Starting, Stopping, and Killing Processes</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_11.htm"TITLE="38.11 Printer Queue Watcher: A Restartable Daemon Shell Script"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.11 Printer Queue Watcher: A Restartable Daemon Shell Script"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-6120">38.10 Destroying Processes with kill </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43009"></A><ACLASS="indexterm"NAME="AUTOID-43012"></A><ACLASS="indexterm"NAME="AUTOID-43015"></A>Sometimes it's necessary to eliminate a process entirely or to<SPANCLASS="link">signal a process (<ACLASS="linkend"HREF="ch38_11.htm"TITLE="Printer Queue Watcher: A Restartable Daemon Shell Script">38.11</A>)</SPAN>;this is the purposeof the <EMCLASS="emphasis">kill</EM> command. You can use the <EMCLASS="emphasis">kill</EM> command with orwithout a signal id:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>kill</B></CODE> <CODECLASS="replaceable"><I>pid</I></CODE>% <CODECLASS="userinput"><B>kill</B></CODE> <CODECLASS="replaceable"><I>-signal pid</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">where <EMCLASS="emphasis">pid</EM> is the process' identification number, and <EMCLASS="emphasis">signal</EM> (which is optional) isthe signal to send to the process. The default signal isnumber 15, the <EMCLASS="emphasis">TERM</EM> signal, which tells the process to terminate. UnderSystem V, the signal must be specified numerically; under BSD, either thesignal number or its symbolic name may be used.[Use <EMCLASS="emphasis">kill -l</EM> for a list of signal names;unfortunately, the listing doesn't show the correspondence of namesand numbers. However, they are in order, so if you can count, youcan figure it out. <EMCLASS="emphasis">-TOR</EM>&nbsp;]</P><PCLASS="para">Sometimes, a process may still exist after a <EMCLASS="emphasis">kill</EM> command. If thishappens, execute the <EMCLASS="emphasis">kill</EM> command with the <EMCLASS="emphasis">-9</EM> option, whichsends theprocess signal 9, appropriately named <EMCLASS="emphasis">KILL</EM>. This almost always guaranteesthat the process will be destroyed. However, it does not allow the dyingprocess to clean up, and therefore may leave the process' files in aninconsistent state. </P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43038"></A>Occasionally, processes will not die even after being sent the<EMCLASS="emphasis"> KILL</EM> signal.The vast majority of such processes fall into one of three categories:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43044"></A><ACLASS="indexterm"NAME="AUTOID-43046"></A>Zombies.A process in the<SPANCLASS="link">zombie state (<ACLASS="linkend"HREF="ch38_16.htm"TITLE="Why You Can't Kill a Zombie ">38.16</A>)</SPAN><SPANCLASS="link"> is displayed as <EMCLASS="emphasis">Z</EM> status in BSD<EMCLASS="emphasis">ps</EM> displays and as <EMCLASS="emphasis">&lt;defunct&gt;</EM> under System V . (<ACLASS="linkend"HREF="ch38_05.htm"TITLE="The ps Command ">38.5</A>)</SPAN>When a process isexiting, it informs its parent of its imminent death; when it receives anacknowledgment, its PID is removed from the process table.A zombie processis one whose total resources have been freed, but the parent process'acknowledgment has not occurred. Usually, <EMCLASS="emphasis">init</EM> will step in when theparent is gone, but very occasionally this fails to happen. Zombiesare always cleared the next time the system is booted and do not adverselyaffect system performance.</P></LI><LICLASS="listitem"><PCLASS="para">Processes waiting for unavailable<SPANCLASS="link">NFS (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>resources (for example, trying towrite to a remote file on a system that has crashed) will not die if sent a<EMCLASS="emphasis">KILL</EM> signal.Use the <EMCLASS="emphasis">QUIT</EM> signal (3) or the <EMCLASS="emphasis">INT</EM> (interrupt) signal (2)to kill such processes.</P></LI><LICLASS="listitem"><PCLASS="para">Processes waiting for a device to complete an operation before exiting.Often this means waiting for a tape to finish rewinding.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43063"></A><ACLASS="indexterm"NAME="AUTOID-43066"></A>Killing a process may also kill all of its children.Child processes may not die if they're blocking or &quot;catching&quot; the signal youuse-although, as explained above, the <EMCLASS="emphasis">KILL</EM> signal (9) will usuallyterminate those processes.Killing a shell cantherefore kill all the foreground and stopped background processesinitiated from that shell (including other shells). Killing a user's loginshell is equivalent to logging the user out. This is a useful (if somewhatpainful) way to recover from certain kinds of problems. For example, if auser manages to confuse his editor by mistyping control keys and escapesequences, or enters an infinite loop that he can't terminate by normalmeans, killing his shell will let him regain control of the situation,possibly at the cost of some work. Use the<EMCLASS="emphasis">ps</EM> commandto determine which process is the offending user's shell. Remember that youmust be<SPANCLASS="link">superuser (<ACLASS="linkend"HREF="ch01_24.htm"TITLE="The Superuser (Root) ">1.24</A>)</SPAN>in order to kill someone else's process.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">AF</SPAN> <SPANCLASS="bibliomisc">from O'Reilly &amp; Associates' <CITECLASS="citetitle">Essential System Administration</CITE>, Chapter 7</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_09.htm"TITLE="38.9 Killing Foreground Jobs "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.9 Killing Foreground Jobs "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_11.htm"TITLE="38.11 Printer Queue Watcher: A Restartable Daemon Shell Script"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.11 Printer Queue Watcher: A Restartable Daemon Shell Script"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">38.9 Killing Foreground Jobs </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">38.11 Printer Queue Watcher: A Restartable Daemon Shell Script</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>