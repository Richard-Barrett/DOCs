<HTML><HEAD><TITLE>[Chapter 38] 38.16 Why You Can't Kill a Zombie </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:49:59Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch38_01.htm"TITLE="38. Starting, Stopping, and Killing Processes"><LINKREL="prev"HREF="ch38_15.htm"TITLE="38.15 Cleaning Up an Unkillable Process "><LINKREL="next"HREF="ch38_17.htm"TITLE="38.17 Automatically Kill Background Processes on Logout in csh"></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_15.htm"TITLE="38.15 Cleaning Up an Unkillable Process "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.15 Cleaning Up an Unkillable Process "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 38<BR>Starting, Stopping, and Killing Processes</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_17.htm"TITLE="38.17 Automatically Kill Background Processes on Logout in csh"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.17 Automatically Kill Background Processes on Logout in csh"BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0113">38.16 Why You Can't Kill a Zombie </A></H2><PCLASS="para"><EMCLASS="emphasis">[Processes in your </EM>ps <EMCLASS="emphasis">output that are in the &lt;exiting&gt; or Zstatus arecalled zombies</EM>. -JP]</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43355"></A>You cannot kill zombies; they are already dead.</P><PCLASS="para">&quot;What is a zombie?&quot; I hear you ask. &quot;Why should a dead process stayaround?&quot;</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43359"></A>Dead processes stick around for two principal reasons. The lesser ofthese is that they provide a sort of &quot;context&quot; for closing<SPANCLASS="link">open file descriptors (<ACLASS="linkend"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>)</SPAN>,and shutting down other resources (memory, swap space,and so forth). This generally happens immediately, and the processremains only for its major purpose: to hold on to its name and<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43365"></A><ACLASS="indexterm"NAME="AUTOID-43367"></A><ACLASS="indexterm"NAME="AUTOID-43369"></A><ACLASS="indexterm"NAME="AUTOID-43371"></A>A process is named by its <EMCLASS="emphasis">process ID</EM> or PID.Each process also has associated with it a <EMCLASS="emphasis">Parent Process ID</EM>.The parent PID is the PID of the process that created it via<SPANCLASS="link"><EMCLASS="emphasis">fork</EM> (<ACLASS="linkend"HREF="ch38_02.htm"TITLE="fork and exec ">38.2</A>)</SPAN>,or, if thatparticular process has since vanished, 1 (the PID of<SPANCLASS="link"><EMCLASS="emphasis">init</EM> (<ACLASS="linkend"HREF="ch38_02.htm"TITLE="fork and exec ">38.2</A>)</SPAN>).While the original parent is around, it can remember the PIDs ofits children. These PIDs cannot be re-used until the parent knowsthe children are done. The parent can also get a single byte of<SPANCLASS="link">status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>from each child. The <EMCLASS="emphasis">wait</EM> system call looks for a zombie child,then &quot;collects&quot; it, making its PID available and returning that status.The <EMCLASS="emphasis">init</EM>(8) program is always waiting, so that once a parent exits,<EMCLASS="emphasis">init</EM> will collect all its children as they exit, and promptlyignore each status.</P><PCLASS="para">So, to get rid of a zombie, you must wait for it. If you have alreadydone so or if the process' PPID is 1, the process is almost certainlystuck in a<SPANCLASS="link">device driver (<ACLASS="linkend"HREF="ch42_01.htm#UPT-ART-1142"TITLE="Making Sense Out of the Terminal Mess ">42.1</A>)</SPAN>close routine, and if it remains that way forever,the driver has a bug.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">CT</SPAN> <SPANCLASS="bibliomisc">in <ACLASS="systemitem.newsgroup"HREF="news:comp.unix.questions">comp.unix.questions</A> on Usenet, 16 January 1989</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_15.htm"TITLE="38.15 Cleaning Up an Unkillable Process "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 38.15 Cleaning Up an Unkillable Process "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch38_17.htm"TITLE="38.17 Automatically Kill Background Processes on Logout in csh"><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 38.17 Automatically Kill Background Processes on Logout in csh"BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">38.15 Cleaning Up an Unkillable Process </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">38.17 Automatically Kill Background Processes on Logout in csh</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>