<HTML><HEAD><TITLE>[Chapter 39] 39.3 The csh time variable </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:50:11Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch39_01.htm"TITLE="39. Time and Performance"><LINKREL="prev"HREF="ch39_02.htm"TITLE="39.2 Timing Programs "><LINKREL="next"HREF="ch39_04.htm"TITLE="39.4 Average Command Runtimes with runtime "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch39_02.htm"TITLE="39.2 Timing Programs "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 39.2 Timing Programs "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 39<BR>Time and Performance</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch39_04.htm"TITLE="39.4 Average Command Runtimes with runtime "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 39.4 Average Command Runtimes with runtime "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-1230">39.3 The csh time variable </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43578"></A><ACLASS="indexterm"NAME="AUTOID-43580"></A>The C shell's variable named <EMCLASS="emphasis">time</EM> controls the built-in <EMCLASS="emphasis">csh</EM><SPANCLASS="link"><EMCLASS="emphasis">time</EM> command (<ACLASS="linkend"HREF="ch39_02.htm"TITLE="Timing Programs ">39.2</A>)</SPAN>.It lets you run <EMCLASS="emphasis">time</EM> by default on commands that takemore than a certain number of CPU seconds, and it lets you control theformat of <EMCLASS="emphasis">time</EM>'s output.</P><PCLASS="para">We'll start with the simple stuff. On virtually any UNIX system,you can use the <EMCLASS="emphasis">time</EM><SPANCLASS="link">shell variable (<ACLASS="linkend"HREF="ch06_08.htm"TITLE="Shell Variables ">6.8</A>)</SPAN>to run <EMCLASS="emphasis">time</EM> automaticallywhen commands take more than a set amount of CPU time. Decidewhat your threshhold is (i.e., the point at which you want <EMCLASS="emphasis">time</EM>to run automatically), in CPU seconds.Then set the <EMCLASS="emphasis">time</EM> shellvariable to thisnumber.For example, if you want to run <EMCLASS="emphasis">time</EM>automatically on programs that require more than 10 CPU seconds, givethe command:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch43_13.htm"TITLE="43.13 The Text Formatters nroff, troff, ditroff, ... ">nroff</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">% <CODECLASS="userinput"><B>set time=10</B></CODE>% <CODECLASS="userinput"><B>ls</B></CODE>file1.ms   file2.ms   file3.ms% <CODECLASS="userinput"><B>nroff -ms *.ms | lpr</B></CODE>4.3u 9.8s 0:23 60% 0+200k 106+103io 143pf+0w</PRE></TD></TR></TABLE></P><PCLASS="para">The <EMCLASS="emphasis">ls</EM> command didn't generate a <EMCLASS="emphasis">time</EM> report because itran in well under 10 seconds.The <EMCLASS="emphasis">nroff</EM> command took about14.1 CPU seconds, so it did generate a report.</P><PCLASS="para">Why would you want to do this? It lets you monitor theperformance of long jobs automatically without being bothered bystatistics for the small jobs.</P><PCLASS="para">On many C shells, you can also use the <EMCLASS="emphasis">time</EM> variable to customizethe timing report.Sometimes this is useful; the standard reportgives you a lot of information, but it's pretty ugly. For somereason, this feature often goes undocumented.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43609"></A>To customize a timing report, give a command like this:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set time=(</B></CODE><CODECLASS="replaceable"><I>threshold </I></CODE><CODECLASS="userinput"><B>&quot;</B></CODE><CODECLASS="replaceable"><I>format-string</I></CODE><CODECLASS="userinput"><B>&quot;)</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Note that you have to give a threshold, whether you want one or not.If you don't want execution times reported automatically, set<EMCLASS="emphasis">threshold</EM> to some large number.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43621"></A><ACLASS="indexterm"NAME="AUTOID-43624"></A>The format string can be any combination of text and tags. Eachtag causes <EMCLASS="emphasis">time</EM> to insert particular statistics.The validtags seem to vary some from system-to-system (and are undocumentedsome places, so you may not be able to tell).We've used two sources: a version for 4.1BSD written byMark Wittenberg and one supplied with Solaris 2.4.Where the two are different, Mark's is labeled <BCLASS="emphasis.bold">A&gt;</B> and Sun'sis <BCLASS="emphasis.bold">B&gt;</B>.</P><DLCLASS="variablelist"><DTCLASS="term">%D</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">A&gt;</B> Average kilobytes of resident data+stack pages.</P><PCLASS="para"><BCLASS="emphasis.bold">B&gt;</B> Average amount of unshared data space used,in kilobytes. This excludes any &quot;shared data.&quot; Shared memory is arelatively new feature; many programs don't use it.</P></DD><DTCLASS="term">%E</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43641"></A>The elapsed time required to execute the program. This is the amountof time you'd measure if you sat with a stopwatch and waited for theprogram to finish; it's often called &quot;wall clock&quot; time.</P></DD><DTCLASS="term">%F</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43647"></A>The number of page faults; i.e., the number of times UNIX had to bringa page of virtual memory in from disk.A large number of page faults may mean that your program is taking anunnecessarily long time to run, and you can fix the problem by buyingmore memory.&#13;</P></DD><DTCLASS="term">%I</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43654"></A>The number of block input operations. This is the number of times theprogram needed to read data from disk.</P></DD><DTCLASS="term">%K</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">A&gt;</B> Average kilobytes of resident text+data+stack pages.</P><PCLASS="para"><BCLASS="emphasis.bold">B&gt;</B> Average amount of unshared stack space used,in kilobytes.</P></DD><DTCLASS="term">%M</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43667"></A>The maximum amount of real memory (physical memory) used by theprogram during execution, in kilobytes.(On 17 October 1986, Daniel V. Klein reported on Usenet <EMCLASS="emphasis">net.unix</EM> thatthe amount %M gives is really just <EMCLASS="emphasis">half</EM> the maximum.The number does seem to be smaller than %K sometimes, so Daniel isprobably right.Don't you love undocumented features?)</P></DD><DTCLASS="term">%O</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43675"></A>The number of block output operations.</P></DD><DTCLASS="term">%P</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43681"></A>The program's total CPU time, as a percentage of elapsed time. Ifyou're the only user on the system and the program does little I/O,this should be close to 100%. It will decrease as the program's I/Orequirements and the system's overall load increase.</P></DD><DTCLASS="term">%S</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43688"></A>CPU system time; the number of seconds the CPU spent in the &quot;system&quot; state onbehalf of your program&nbsp;- i.e., how much time the system spent executingsystem calls on behalf of your program.</P></DD><DTCLASS="term">%U</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43694"></A>CPU user time; the number of seconds the CPU spent in the &quot;user&quot; state onbehalf of your program&nbsp;- i.e., how much time the system spent executingyour program itself.</P></DD><DTCLASS="term">%W</DT><DDCLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-43700"></A>The number of &quot;swaps&quot;; the number of times the system needed to moveyour whole program to disk in order to free memory. If this isnon-zero, your system needs more memory.</P></DD><DTCLASS="term">%X</DT><DDCLASS="listitem"><PCLASS="para"><BCLASS="emphasis.bold">A&gt;</B> Average kilobytes of resident text pages.</P><PCLASS="para"><BCLASS="emphasis.bold">B&gt;</B> The average amount of shared memory that your program required, inkilobytes.<ACLASS="indexterm"NAME="AUTOID-43709"></A></P></DD></DL><PCLASS="para">For example, let's say that we want time statistics for programs thatrequire more than 10 seconds of CPU time, and that we want toreport the system time, the user time, and the elapsed time.</P><PCLASS="para">Despite the huge number of statistics you can get, these are all thatyou really care about, unless you're a performance expert. To do so,we'll set the <EMCLASS="emphasis">time</EM> variable like this (you can also set it inyour<SPANCLASS="link"><EMCLASS="emphasis">.cshrc</EM> file (<ACLASS="linkend"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>)</SPAN>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>set time=(10 &quot;System time: %S  User time: %U  Elapsed time: %E&quot;)</B></CODE>% <CODECLASS="userinput"><B>nroff -man * &gt; /dev/null</B></CODE>System time: 0.3  User time: 41.2  Elapsed time: 0:43</PRE></BLOCKQUOTE></P><PCLASS="para">This report is much clearer than the mess you get by default. Itshows clearly that the <EMCLASS="emphasis">nroff</EM> command required 0.3 seconds ofsystem-state CPU time, 41.2 seconds of user-state CPU time, and atotal elapsed time of 43 seconds.&#13;</P><BLOCKQUOTECLASS="note"><PCLASS="para"><STRONG>NOTE:</STRONG> I have seen a note somewhere saying thatmany of <EMCLASS="emphasis">time</EM>'s more obscure statistics weren't reportedcorrectly. By &quot;obscure statistics,&quot; I mean page faults, averageamount of unshared stack space, and the like. You can trust the user and system CPU time, the elapsed time, and other basicstatistics, but if you really care about the fancy statistics, beware.I seriously doubt that any vendor has fixed these problems.</P></BLOCKQUOTE><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN>, <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch39_02.htm"TITLE="39.2 Timing Programs "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 39.2 Timing Programs "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch39_04.htm"TITLE="39.4 Average Command Runtimes with runtime "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 39.4 Average Command Runtimes with runtime "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">39.2 Timing Programs </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">39.4 Average Command Runtimes with runtime </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>