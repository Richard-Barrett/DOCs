<HTML><HEAD><TITLE>[Chapter 43] 43.21 Preprocessing troff Input with sed </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-10-23T15:52:07Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch43_01.htm"TITLE="43. Printing"><LINKREL="prev"HREF="ch43_20.htm"TITLE="43.20 Displaying a troff Macro Definition "><LINKREL="next"HREF="ch43_22.htm"TITLE="43.22 Converting Text Files to PostScript "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch43_20.htm"TITLE="43.20 Displaying a troff Macro Definition "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 43.20 Displaying a troff Macro Definition "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 43<BR>Printing</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch43_22.htm"TITLE="43.22 Converting Text Files to PostScript "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 43.22 Converting Text Files to PostScript "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7776">43.21 Preprocessing troff Input with sed </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-7776-IX-COMMANDS-SED-EDITOR"></A><ACLASS="indexterm"NAME="UPT-ART-7776-IX-SED-EDITOR"></A><ACLASS="indexterm"NAME="UPT-ART-7776-IX-TROFF-PROGRAM-PREPROCESSING"></A><ACLASS="indexterm"NAME="UPT-ART-7776-IX-TYPOGRAPHICAL-CHARACTERS"></A><ACLASS="indexterm"NAME="AUTOID-48763"></A>On a typewriter-like device (including a CRT), an em-dashis typed as a pair of hyphens (<CODECLASS="literal">--</CODE>).[2]In typesetting, it isprinted as a single, long dash (&nbsp;- ).<EMCLASS="emphasis">troff</EM> provides aspecial character name for the em-dash, but it is inconvenient to type <CODECLASS="literal">\&nbsp;- </CODE>, and the escapesequence is also inappropriate for use with <EMCLASS="emphasis">nroff</EM>.</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[2] Typists often use three hyphens (<CODECLASS="literal">---</CODE>) for an em-dash,and two (<CODECLASS="literal">--</CODE>) for the shorter en-dash.</P></BLOCKQUOTE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-48774"></A><ACLASS="indexterm"NAME="AUTOID-48776"></A><ACLASS="indexterm"NAME="AUTOID-48779"></A><ACLASS="indexterm"NAME="UPT-ART-7776-IX-TYPESETTING-TYPOGRAPHICAL-CHARACTERS"></A>Similarly, a typesetter provides &quot;curly&quot; quotation marks (&quot;and &quot;) as opposed to a typewriter's straight quotes (<CODECLASS="literal">&lt;&quot;&gt;</CODE>).In standard <EMCLASS="emphasis">troff</EM>, you can substitute two backquote characters(<CODECLASS="literal">&quot;</CODE>) for open quote and two frontquote characters(<CODECLASS="literal">&quot;</CODE>) for closed quote;  these characters would appearas &quot; and &quot;.  But it would be much betterif we could just continue to type in <CODECLASS="literal">&lt;&quot;&gt;</CODE> and have the computerdo the dirty work.</P><PCLASS="para">A peculiarity of<EMCLASS="emphasis">troff</EM> is that it generates the space before each word in the font used at the beginning of that word.  This means that when we mix a constant-width font such as Courier within text, we get a noticeably large space before each word, which can be distractingfor readers&nbsp;- for example: The following<CODECLASS="literal"> text</CODE> is in<CODECLASS="literal"> Courier</CODE>; note the<CODECLASS="literal"> spaces</CODE>.The fix for this is to force<EMCLASS="emphasis">troff</EM> to generate the space in the previous font by insertinga no-space character (<CODECLASS="literal">\&amp;</CODE>) before each constant-width font change.  As you can imagine, this can turn into a largeundertaking.</P><PCLASS="para">The solution for each of these problems is to preprocess <EMCLASS="emphasis">troff</EM> input with<SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_24.htm"TITLE="Quick Reference: sed ">34.24</A>)</SPAN>.This is an application that shows <EMCLASS="emphasis">sed</EM>in its role as a true stream editor, making edits in a pipeline&nbsp;- editsthat are never written back into a file.</P><PCLASS="para">We almost never invoke <EMCLASS="emphasis">troff</EM> directly.Instead, we invoke it with ascript that strings together a pipeline including the standardpreprocessors (when appropriate) as well as doing this specialpreprocessing with <EMCLASS="emphasis">sed</EM>.</P><PCLASS="para">The <EMCLASS="emphasis">sed</EM> commands themselves are fairly simple.</P><PCLASS="para">The following command changes two consecutive dashesinto an em-dash:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">s/-/\\(em/g</PRE></BLOCKQUOTE></P><PCLASS="para">We double the backslashes in the replacement stringfor <CODECLASS="literal">\&nbsp;- </CODE>, since the backslash has a special meaning to <EMCLASS="emphasis">sed</EM>.</P><PCLASS="para">However, there may be cases in which we don't want this substitutioncommand to be applied.What if someone is using hyphens to draw ahorizontal line? We can refine the script to exclude lines containing three or more consecutive hyphens. To do this, we use the<SPANCLASS="link">! address modifier (<ACLASS="linkend"HREF="ch34_19.htm"TITLE="Making Edits Everywhere Except... ">34.19</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">/--/!s/-/\\(em/g</PRE></BLOCKQUOTE></P><PCLASS="para">It may take a moment to penetrate this syntax. What's differentis that we use a pattern address to restrict the linesthat are affected by the substitute command, and we use ! toreverse the sense of the pattern match. It says, simply, &quot;Ifyou find a line containing three consecutive hyphens, don't apply theedit.&quot; Onall other lines, the substitute command will be applied. </P><PCLASS="para">Similarly, to deal with the font change problem, we can use <EMCLASS="emphasis">sed</EM>to search for all strings matching <CODECLASS="literal">\f(CW</CODE>, <CODECLASS="literal">\f(CI</CODE>, and<CODECLASS="literal">\f(CB</CODE>, and insert <CODECLASS="literal">\&amp;</CODE> before them.  This can bewritten as follows:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">s/\\f(C[WIB]/\\\&amp;&amp;/g</PRE></BLOCKQUOTE></P><PCLASS="para">To deal with the open and closed quoteproblem, the script needs to be more involved because there aremany separate cases that must be accounted for.You need to make <EMCLASS="emphasis">sed</EM> smart enough to change doublequotes to open quotes only at the beginning of words and tochange them to closed quotes only at the end of words.Such a script might look like the one below, which obviouslycould be shortened by judicious application of<SPANCLASS="link"><CODECLASS="literal">\([...]\)</CODE> (<ACLASS="linkend"HREF="ch34_10.htm"TITLE="Referencing Portions of a Search String ">34.10</A>)</SPAN>regular expression syntax, but it is shown in its long form for effect.</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">s/^&quot;/``/s/&quot;$/''/s/&quot;? /''? /gs/&quot;?$/''?/s/ &quot;/ ``/gs/&quot; /'' /gs/<KBDCLASS="keycap">[TAB]</KBD>&quot;/<KBDCLASS="keycap">[TAB]</KBD>``/gs/&quot;<KBDCLASS="keycap">[TAB]</KBD>/''<KBDCLASS="keycap">[TAB]</KBD>/gs/&quot;)/'')/gs/&quot;]/'']/gs/(&quot;/(``/gs/\[&quot;/\[``/gs/&quot;;/'';/gs/&quot;:/'':/gs/,&quot;/,''/gs/&quot;,/'',/gs/\.&quot;/.\\\&amp;''/gs/&quot;\./''.\\\&amp;/gs/&quot;\\(em/''\\(em/gs/\\(em&quot;/\\(em``/g</PRE></BLOCKQUOTE></P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="cleanup.sed">cleanup.sed</A><BR></TH><TDVALIGN="TOP">&#13;The preceding code shows the kind of contortions you need to go through to captureall the possible situations in which quotation marks appear.The solution to the other problems mentioned earlier in the article is leftfor your imagination.If you prefer,a more complete &quot;typesetting preprocessor&quot; script written in <EMCLASS="emphasis">sed</EM>,and suitable for integration into a <EMCLASS="emphasis">troff</EM> environment (perhapswith a bit of tweaking), can be found on the disc.</TD></TR></TABLE><PCLASS="para">In addition to the changes described above, it tightens up thespacing of ellipses (...), and <SPANCLASS="link">doesn't do anything between certain pairs of <EMCLASS="emphasis">troff</EM> macros (<ACLASS="linkend"HREF="ch34_19.htm"TITLE="Making Edits Everywhere Except... ">34.19</A>)</SPAN>.<ACLASS="indexterm"NAME="AUTOID-48843"></A><ACLASS="indexterm"NAME="AUTOID-48844"></A><ACLASS="indexterm"NAME="AUTOID-48845"></A><ACLASS="indexterm"NAME="AUTOID-48846"></A><ACLASS="indexterm"NAME="AUTOID-48847"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">TOR,</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch43_20.htm"TITLE="43.20 Displaying a troff Macro Definition "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 43.20 Displaying a troff Macro Definition "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch43_22.htm"TITLE="43.22 Converting Text Files to PostScript "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 43.22 Converting Text Files to PostScript "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">43.20 Displaying a troff Macro Definition </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">43.22 Converting Text Files to PostScript </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>