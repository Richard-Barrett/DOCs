<HTML><HEAD><TITLE>[Chapter 44] 44.13 read: Reading from the Keyboard </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:53:49Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch44_01.htm"TITLE="44. Shell Programming for the Uninitiated"><LINKREL="prev"HREF="ch44_12.htm"TITLE="44.12 Trapping Exits Caused by Interrupts "><LINKREL="next"HREF="ch44_14.htm"TITLE="44.14 Putting awk, sed, etc., Inside Shell Scripts "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_12.htm"TITLE="44.12 Trapping Exits Caused by Interrupts "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 44.12 Trapping Exits Caused by Interrupts "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 44<BR>Shell Programming for the Uninitiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_14.htm"TITLE="44.14 Putting awk, sed, etc., Inside Shell Scripts "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 44.14 Putting awk, sed, etc., Inside Shell Scripts "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7700">44.13 read: Reading from the Keyboard </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51140"></A><ACLASS="indexterm"NAME="AUTOID-51143"></A>The Bourne shell <EMCLASS="emphasis">read</EM> command reads a line of one or more words from thekeyboard (or standard input)[5]and stores the words in one or more shell variables.This is usually what you use to read an answer from the keyboard.For example:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[5] Some early versions of <EMCLASS="emphasis">read</EM> don't handle<SPANCLASS="link"><CODECLASS="literal">&lt;</CODE> redirection (<ACLASS="linkend"HREF="ch13_01.htm#UPT-ART-1023"TITLE="Using Standard Input and Output">13.1</A>)</SPAN>;they can only read from the terminal.</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">echo -n &quot;Type the filename: &quot;read filename</PRE></BLOCKQUOTE></P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para">If you give the name of one shell variable, <EMCLASS="emphasis">read</EM> stores everythingfrom the line into that variable:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">read <CODECLASS="replaceable"><I>varname</I></CODE></PRE></BLOCKQUOTE></P><PCLASS="para"></P></LI><LICLASS="listitem"><PCLASS="para">If you name more than one variable, the first word typed goes into thefirst variable, the second word into the second variable, and so on...all leftover words go into the last variable.So, for example, with these commands:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">echo -n &quot;Enter first and last name: &quot;read fn ln</PRE></BLOCKQUOTE></P><PCLASS="para">If a user types <CODECLASS="literal">John</CODE> <CODECLASS="literal">Smith</CODE>, the word <EMCLASS="emphasis">John</EM> would beavailable from <CODECLASS="literal">$fn</CODE> and <EMCLASS="emphasis">Smith</EM> would be in <CODECLASS="literal">$ln</CODE>.If the user types <CODECLASS="literal">Jane</CODE> <CODECLASS="literal">de</CODE> <CODECLASS="literal">Boes</CODE>, then <EMCLASS="emphasis">Jane</EM>would be in <CODECLASS="literal">$fn</CODE> and the two words <EMCLASS="emphasis">de Boes</EM> are in <CODECLASS="literal">$ln</CODE>.</P></LI></UL><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51180"></A>Some Bourne shells have a built-in function named <EMCLASS="emphasis">line</EM> thatreads a line from standard input and writes it to standard output.Use it this way:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">value=`line`</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51186"></A>The<SPANCLASS="link"><EMCLASS="emphasis">grabchars</EM> (<ACLASS="linkend"HREF="ch45_32.htm"TITLE="A Better read Command: grabchars ">45.32</A>)</SPAN>program lets you read from the keyboard without needing to pressRETURN.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_12.htm"TITLE="44.12 Trapping Exits Caused by Interrupts "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 44.12 Trapping Exits Caused by Interrupts "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_14.htm"TITLE="44.14 Putting awk, sed, etc., Inside Shell Scripts "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 44.14 Putting awk, sed, etc., Inside Shell Scripts "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">44.12 Trapping Exits Caused by Interrupts </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">44.14 Putting awk, sed, etc., Inside Shell Scripts </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>