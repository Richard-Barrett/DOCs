<HTML><HEAD><TITLE>[Chapter 44] 44.19 The Bourne Shell set Command </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:54:00Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch44_01.htm"TITLE="44. Shell Programming for the Uninitiated"><LINKREL="prev"HREF="ch44_18.htm"TITLE="44.18 Standard Command-Line Parsing "><LINKREL="next"HREF="ch44_20.htm"TITLE="44.20 test: Testing Files and Strings "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_18.htm"TITLE="44.18 Standard Command-Line Parsing "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 44.18 Standard Command-Line Parsing "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 44<BR>Shell Programming for the Uninitiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_20.htm"TITLE="44.20 test: Testing Files and Strings "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 44.20 test: Testing Files and Strings "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-6810">44.19 The Bourne Shell set Command </A></H2><PCLASS="para">[Most of this article, except <ICLASS="filename">IFS</I> and <CODECLASS="literal">--</CODE>, also applies to theC shell. -JP]</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51786"></A><ACLASS="indexterm"NAME="AUTOID-51788"></A>The Bourne shell command line can have options like <EMCLASS="emphasis">-e</EM> (exit ifany command returns non-zero status).It can also have other arguments; these are passed to shell scripts.You can set new command-line parameters while you're typing interactivecommands (at a shell prompt) or in a shell script.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51793"></A>To reset the command-line parameters, just type <EMCLASS="emphasis">set</EM> followed by the newparameters.So, for example, to ask the shell to show expanded versions of command linesafter you type them, set the<SPANCLASS="link"><EMCLASS="emphasis">-v</EM> (verbose) option (<ACLASS="linkend"HREF="ch08_17.htm"TITLE="verbose and echo Variables Show Quoting ">8.17</A>)</SPAN>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="userinput"><B>set -v</B></CODE>$ <CODECLASS="userinput"><B>mail $group1 &lt; message</B></CODE>mail andy ellen heather steve wilma &lt; message$ <CODECLASS="userinput"><B>mail $group2 &lt; message</B></CODE>mail jpeek@jpeek.com randy@xyz.edu yori@mongo.medfly.com &lt; message$ <CODECLASS="userinput"><B>set +v</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">Typing <CODECLASS="literal">set&nbsp;+v</CODE> cancels the <EMCLASS="emphasis">v</EM> option on many Bourne shells.</P><PCLASS="para">You can put filenames or any other strings in the command-line parametersinteractively or from a shell script.That's handy for storing and parsing the output of a UNIX command with<SPANCLASS="link">backquotes (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>.For example, you can get a list of all logged-in users from the parameters<CODECLASS="literal">$1</CODE>, <CODECLASS="literal">$2</CODE>, and so on.Use<EMCLASS="emphasis">users</EM>if your system has it.Otherwise, use<SPANCLASS="link"><EMCLASS="emphasis">who</EM> (<ACLASS="linkend"HREF="ch51_04.htm"TITLE="Who's On? ">51.4</A>)</SPAN>-and<SPANCLASS="link"><EMCLASS="emphasis">cut</EM> (<ACLASS="linkend"HREF="ch35_14.htm"TITLE="Cutting Columns or Fields with cut ">35.14</A>)</SPAN>to strip off everything but theusernames:</P><PCLASS="para"><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist">&#13;<ACLASS="co"HREF="ch44_16.htm"TITLE="44.16 Handling Command-Line Arguments with a for Loop ">for</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">$ <CODECLASS="userinput"><B>set `users`</B></CODE>$ <CODECLASS="userinput"><B>set `who | cut -c1-8`</B></CODE>$ <CODECLASS="userinput"><B>for u</B></CODE>&gt; <CODECLASS="userinput"><B>do</B></CODE>&gt; <ICLASS="lineannotation">...do something with each user ($u)...</I>&gt; <CODECLASS="userinput"><B>done</B></CODE></PRE></TD></TR></TABLE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51827"></A>You can save the original parameters in another variable and reset themlater:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">oldparms=&quot;$*&quot;set <CODECLASS="replaceable"><I>something new</I></CODE>    <ICLASS="lineannotation">...use new settings...</I>set $oldparms</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51835"></A><ACLASS="indexterm"NAME="AUTOID-51838"></A>If the first parameter you <EMCLASS="emphasis">set</EM> starts with a dash, like <CODECLASS="literal">-e</CODE>,the shell will treat it as its own option instead of as a string toput into the command-line parameters.<ACLASS="indexterm"NAME="AUTOID-51843"></A>To avoid this, use <CODECLASS="literal">--</CODE> (two dashes) as the first argument to<EMCLASS="emphasis">set</EM>.In this example, <CODECLASS="literal">$1</CODE> gets <EMCLASS="emphasis">-e</EM>, and the filenames expandedfrom the wildcard pattern go into <CODECLASS="literal">$2</CODE>, <CODECLASS="literal">$3</CODE>, etc.:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">set -- -e file*</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51855"></A><ACLASS="indexterm"NAME="AUTOID-51858"></A><ACLASS="indexterm"NAME="AUTOID-51861"></A><ACLASS="indexterm"NAME="AUTOID-51864"></A><ACLASS="indexterm"NAME="AUTOID-51867"></A><ACLASS="indexterm"NAME="AUTOID-51870"></A>Because the shell parses and scans the new parameters before it stores them,<SPANCLASS="link">wildcards (<ACLASS="linkend"HREF="ch15_02.htm"TITLE="Filename Wildcards in a Nutshell ">15.2</A>)</SPAN>and other<SPANCLASS="link">special characters (<ACLASS="linkend"HREF="ch08_19.htm"TITLE='"Special&quot; Characters and Operators '>8.19</A>)</SPAN>will be interpreted&nbsp;- watch your<SPANCLASS="link">quoting (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>.You can take advantage of this to parse lines of text into pieces thataren't separated with the usual spaces and TABs&nbsp;- for instance, a line from adatabase with colon-separated fields&nbsp;- by setting the<SPANCLASS="link"><EMCLASS="emphasis">IFS</EM> (<ACLASS="linkend"HREF="ch35_21.htm"TITLE="Using IFS to Split Strings ">35.21</A>)</SPAN>variable before the <EMCLASS="emphasis">set</EM> command.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-51880"></A>If you want to save any special quoting on the original command line,be careful; the quoting will be lost unless you're clever.For example, if <CODECLASS="literal">$1</CODE> used to be <EMCLASS="emphasis">John Smith</EM>, it'll be splitafter it's restored: <CODECLASS="literal">$1</CODE> will have <EMCLASS="emphasis">John</EM> and <CODECLASS="literal">$2</CODE> will be<EMCLASS="emphasis">Smith</EM>.A bettersolution might be to use a<SPANCLASS="link">subshell (<ACLASS="linkend"HREF="ch13_07.htm"TITLE="The () Subshell Operators ">13.7</A>)</SPAN>for the part of the script where you need to reset the command-lineparameters:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"># reset command-line parameters during subshell only:(set <CODECLASS="replaceable"><I>some new parameters</I></CODE>   ...<EMCLASS="emphasis">do something with new parameters</EM>...)# original parameters aren't affected from here on...</PRE></BLOCKQUOTE></P><PCLASS="para">One last note: <EMCLASS="emphasis">set</EM> won't set <CODECLASS="literal">$0</CODE>, the name of the script file.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_18.htm"TITLE="44.18 Standard Command-Line Parsing "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 44.18 Standard Command-Line Parsing "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch44_20.htm"TITLE="44.20 test: Testing Files and Strings "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 44.20 test: Testing Files and Strings "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">44.18 Standard Command-Line Parsing </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">44.20 test: Testing Files and Strings </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>