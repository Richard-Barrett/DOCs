<HTML><HEAD><TITLE>[Chapter 45] 45.21 n&gt;&amp;m: Swap Standard Output and Standard Error </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:54:48Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch45_01.htm"TITLE="45. Shell Programming for the Initiated"><LINKREL="prev"HREF="ch45_20.htm"TITLE="45.20 Overview: Open Files and File Descriptors "><LINKREL="next"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_20.htm"TITLE="45.20 Overview: Open Files and File Descriptors "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.20 Overview: Open Files and File Descriptors "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 45<BR>Shell Programming for the Initiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.22 Handling Files Line-by-Line "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7930">45.21 n&gt;&amp;m: Swap Standard Output and Standard Error </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="UPT-ART-7930-IX-NGT-AMP-M-DESCRIBED"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-FILE-DESCRIPTORS-REDIRECTING"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-REDIRECTING-FILE-DESCRIPTORS"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-REDIRECTING-STANDARD-ERROR"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-REDIRECTING-STANDARD-OUTPUT"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-STANDARD-ERRORS-REDIRECTING"></A><ACLASS="indexterm"NAME="UPT-ART-7930-IX-STANDARD-OUTPUT-REDIRECTING"></A>By default, a command's standard error goes to your terminal.The standard output goes to the terminal or is redirected somewhere(to a file, down a pipe, into backquotes).</P><PCLASS="para">Sometimes you want the opposite.For instance, you may need to send a command's standard output to the screenand grab the error messages (standard error) withbackquotes.Or, you might want to send a command's standard output to a file and thestandard error down a pipe to an error-processing command.Here's how to do that in the Bourne shell.(The C shell can't do this.)</P><PCLASS="para">File descriptors 0, 1, and 2 are, respectively, the standardinput, standard output, and standard error(article<ACLASS="xref"HREF="ch45_20.htm"TITLE="Overview: Open Files and File Descriptors ">45.20</A>explains).Without redirection, they're all associated with the terminal file<SPANCLASS="link"><EMCLASS="emphasis">/dev/tty</EM> (<ACLASS="linkend"HREF="ch45_20.htm"TITLE="Overview: Open Files and File Descriptors ">45.20</A>)</SPAN>.It's easy to redirect any descriptor to any file&nbsp;- if you know the filename.For instance, to redirect file descriptor 2 to <EMCLASS="emphasis">errfile</EM>, type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="replaceable"><I>command</I></CODE><CODECLASS="userinput"><B> 2&gt;errfile</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">You know that a pipe and backquotes also redirect the standard output:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="replaceable"><I>command</I></CODE><CODECLASS="userinput"><B> | ...</B></CODE>$ <CODECLASS="userinput"><B>var=`</B></CODE><CODECLASS="replaceable"><I>command</I></CODE><CODECLASS="userinput"><B>`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">But there's no filename associated with the pipe or backquotes, soyou can't use the <CODECLASS="literal">2&gt;</CODE> redirection.You need to rearrange the file descriptors without knowing the file(or whatever) that they're associated with.Here's how.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-53713"></A><ACLASS="indexterm"NAME="AUTOID-53716"></A><ACLASS="indexterm"NAME="AUTOID-53719"></A>Let's start slowly: by sending both standard output and standard errorto the pipe or backquotes.The Bourne shell operator <CODECLASS="replaceable"><I>n</I></CODE><CODECLASS="literal">&gt;&amp;</CODE><CODECLASS="replaceable"><I>m</I></CODE> rearranges the files and file descriptors.It says &quot;make file descriptor <EMCLASS="emphasis">n</EM> point to the same file asfile descriptor <EMCLASS="emphasis">m</EM>.&quot;Let'suse that operator on the previous example.We'll send standard error to the same place standard output is going:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="replaceable"><I>command</I></CODE> <CODECLASS="userinput"><B>2&gt;&amp;1 | ...</B></CODE>$ <CODECLASS="userinput"><B>var=`</B></CODE><CODECLASS="replaceable"><I>command</I></CODE><CODECLASS="userinput"><B> 2&gt;&amp;1`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">In both those examples, <CODECLASS="literal">2&gt;&amp;1</CODE> means &quot;send standard error (filedescriptor 2) to the same place standard output (file descriptor 1)is going.&quot;Simple, eh?</P><PCLASS="para">You can use more than one of those <CODECLASS="replaceable"><I>n</I></CODE><CODECLASS="literal">&gt;&amp;</CODE><CODECLASS="replaceable"><I>m</I></CODE> operators.The shell reads them left-to-right before it executes the command.</P><PCLASS="para">&quot;Oh!&quot; you might say,&quot;To swap standard output and standard error&nbsp;- make <EMCLASS="emphasis">stderr</EM> go down apipe and <EMCLASS="emphasis">stdout</EM> go to the screen-I could do this!&quot;</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="replaceable"><I>command</I></CODE> <CODECLASS="userinput"><B>2&gt;&amp;1 1&gt;&amp;2 | ...</B></CODE>     <EMCLASS="emphasis">(wrong...)</EM></PRE></BLOCKQUOTE></P><PCLASS="para">Sorry, Charlie.When the shell sees <CODECLASS="literal">2&gt;&amp;1&nbsp;1&gt;&amp;2</CODE>, the shell first does <CODECLASS="literal">2&gt;&amp;1</CODE>.You've seen that before&nbsp;- it makes file descriptor 2 (<EMCLASS="emphasis">stderr</EM>) go the same place as file descriptor 1 (<EMCLASS="emphasis">stdout</EM>).Then, the shell does <CODECLASS="literal">1&gt;&amp;2</CODE>.It makes <EMCLASS="emphasis">stdout</EM> (<CODECLASS="literal">1</CODE>) go the same place as <EMCLASS="emphasis">stderr</EM>(<CODECLASS="literal">2</CODE>)... but <EMCLASS="emphasis">stderr</EM> is already going the same place as<EMCLASS="emphasis">stdout</EM>, down the pipe.</P><PCLASS="para">This is one place the other file descriptors, 3 through 9, come in handy.They normally aren't used.You can use one of them as a &quot;holding place,&quot; to remember where anotherfile descriptor &quot;pointed.&quot;For example, one way to read the operator <CODECLASS="literal">3&gt;&amp;2</CODE> is &quot;make<CODECLASS="literal">3</CODE> point the same place as <CODECLASS="literal">2</CODE>.&quot;After you use <CODECLASS="literal">3&gt;&amp;2</CODE> to grab the location of <CODECLASS="literal">2</CODE>,you can make <CODECLASS="literal">2</CODE> point somewhere else.Then, make <CODECLASS="literal">1</CODE> point where <CODECLASS="literal">2</CODE> used to (where <CODECLASS="literal">3</CODE>points now).</P><PCLASS="para">We'll take that step-by-step below.The command line you want is one of these:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">$ <CODECLASS="replaceable"><I>command</I></CODE> <CODECLASS="userinput"><B>3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3 | ...</B></CODE>$ <CODECLASS="userinput"><B>var=`</B></CODE><CODECLASS="replaceable"><I>command</I></CODE><CODECLASS="userinput"><B> 3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3`</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">How does it work?The next four figuresbreak the second command line (with the backquotes) into the samesteps the shell follows as it rearranges the file descriptors.You can try these on your terminal, if you'd like.Each figure adds another <CODECLASS="replaceable"><I>n</I></CODE><CODECLASS="literal">&gt;&amp;</CODE><CODECLASS="replaceable"><I>m</I></CODE> operator andshows the location of each file descriptor after that operator.</P><PCLASS="para">The figures use a <EMCLASS="emphasis">grep</EM> command reading two files.<EMCLASS="emphasis">afone</EM> is readable and <EMCLASS="emphasis">grep</EM> finds one matching line in it;the line is written to the standard output.<EMCLASS="emphasis">bfoen</EM> is misspelled and so is not readable; <EMCLASS="emphasis">grep</EM> writes anerror message to the standard error.In each figure, you'll see the terminal output (if any) just after thevariable-setting command with the backquotes.The text grabbed by the backquotes goes into the shell variable;the <EMCLASS="emphasis">echo</EM> command shows that text.</P><PCLASS="para">By <ACLASS="xref"HREF="ch45_21.htm#UPT-ART-7930-FIG-3"TITLE="File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1&nbsp;1&gt;&amp;3 Redirection">Figure 45.6</A>the redirection is correct.Standard output goes to the screen, and standard error is captured bythe backquotes.</P><PCLASS="para"><H4CLASS="figure"><ACLASS="title"NAME="UPT-ART-7930-FIG-0">Figure 45.3: File Descriptors Before Redirection</A></H4><IMGCLASS="graphic"SRC="figs/7930a.gif"ALT="Figure 45.3"></P><PCLASS="para"><H4CLASS="figure"><ACLASS="title"NAME="UPT-ART-7930-FIG-1">Figure 45.4: File Descriptors After 3&gt;&amp;2 Redirection</A></H4><IMGCLASS="graphic"SRC="figs/7930b.gif"ALT="Figure 45.4"></P><PCLASS="para"><H4CLASS="figure"><ACLASS="title"NAME="UPT-ART-7930-FIG-2">Figure 45.5: File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1 Redirection</A></H4><IMGCLASS="graphic"SRC="figs/7930c.gif"ALT="Figure 45.5"></P><PCLASS="para"><H4CLASS="figure"><ACLASS="title"NAME="UPT-ART-7930-FIG-3">Figure 45.6: File Descriptors After 3&gt;&amp;2&nbsp;2&gt;&amp;1&nbsp;1&gt;&amp;3 Redirection</A></H4><IMGCLASS="graphic"SRC="figs/7930d.gif"ALT="Figure 45.6"><ACLASS="indexterm"NAME="AUTOID-53807"></A><ACLASS="indexterm"NAME="AUTOID-53810"></A></P><PCLASS="para">Open files are automatically closed when a process exits.But it's safer to close the files yourself as soon as you're done with them.That way, if you forget and use the same descriptor later for somethingelse (for instance, use F.D. 3 to redirect some other command, or asubprocess uses F.D. 3), you won't run into conflicts.Use <CODECLASS="replaceable"><I>m</I></CODE><CODECLASS="literal">&lt;&amp;-</CODE> to close input file descriptor <CODECLASS="replaceable"><I>m</I></CODE> and<CODECLASS="replaceable"><I>m</I></CODE><CODECLASS="literal">&gt;&amp;-</CODE> to close output file descriptor <CODECLASS="replaceable"><I>m</I></CODE>.If you need to close standard input, use <CODECLASS="literal">&lt;&amp;-</CODE>;<CODECLASS="literal">&gt;&amp;-</CODE> will close standard output.<ACLASS="indexterm"NAME="AUTOID-53822"></A><ACLASS="indexterm"NAME="AUTOID-53823"></A><ACLASS="indexterm"NAME="AUTOID-53824"></A><ACLASS="indexterm"NAME="AUTOID-53825"></A><ACLASS="indexterm"NAME="AUTOID-53826"></A><ACLASS="indexterm"NAME="AUTOID-53827"></A><ACLASS="indexterm"NAME="AUTOID-53828"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_20.htm"TITLE="45.20 Overview: Open Files and File Descriptors "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.20 Overview: Open Files and File Descriptors "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.22 Handling Files Line-by-Line "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">45.20 Overview: Open Files and File Descriptors </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">45.22 Handling Files Line-by-Line </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>