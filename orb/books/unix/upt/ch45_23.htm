<HTML><HEAD><TITLE>[Chapter 45] 45.23 The Ins and Outs of Redirected I/O Loops </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:54:52Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch45_01.htm"TITLE="45. Shell Programming for the Initiated"><LINKREL="prev"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "><LINKREL="next"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.22 Handling Files Line-by-Line "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 45<BR>Shell Programming for the Initiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.24 A Shell Can Read a Script from its Standard Input, But..."BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7928">45.23 The Ins and Outs of Redirected I/O Loops </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54021"></A><ACLASS="indexterm"NAME="AUTOID-54023"></A><ACLASS="indexterm"NAME="AUTOID-54026"></A><ACLASS="indexterm"NAME="AUTOID-54029"></A>The Bourne shell usually runs<SPANCLASS="link">a loop with redirected input or output (<ACLASS="linkend"HREF="ch45_22.htm"TITLE="Handling Files Line-by-Line ">45.22</A>)</SPAN>in a<SPANCLASS="link">subshell (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>.For the <EMCLASS="emphasis">formprog</EM> script in article<ACLASS="xref"HREF="ch45_22.htm"TITLE="Handling Files Line-by-Line ">45.22</A>,this means, among other things, that:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54039"></A>Any command inside the loop that reads its standard input willread from the pipe or file redirected to the loop's standard input.That's something you have to pay attention to, because the only command that should read from the file is usually the <EMCLASS="emphasis">read</EM> command at the topof the loop.The inputs of other commands inside the loop&nbsp;- like commands that readfrom the terminal&nbsp;- have to be redirected to read from somewhere otherthan the loop's standard input.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54045"></A><ACLASS="indexterm"NAME="AUTOID-54048"></A>In many Bourne shells, if you use the<SPANCLASS="link"><EMCLASS="emphasis">exit</EM> (<ACLASS="linkend"HREF="ch38_04.htm"TITLE="Subshells ">38.4</A>)</SPAN>command inside aredirected loop, that will only terminate the subshell that's runningthe loop; it will <EMCLASS="emphasis">not</EM> terminate thescript.It's hard to call this a &quot;feature&quot;; I'd call it a bug.The script in article<ACLASS="xref"HREF="ch45_22.htm"TITLE="Handling Files Line-by-Line ">45.22</A>has a workaround for this; see the next paragraph.Later versions of Bourne-like shells have fixed this problem, more or less,but the fix below should work in all Bourne shells.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54057"></A><ACLASS="indexterm"NAME="AUTOID-54060"></A><ACLASS="indexterm"NAME="AUTOID-54063"></A>If there's any error inside the loop that should terminate the script,an error message is written to file descriptor 2.File descriptor 2 is redirected to an error-holding file at the subshell(loop) output.A <EMCLASS="emphasis">break</EM> command can end the loop right away.After the loop ends, if the error file has anything in it, that meansthere was an error&nbsp;- if there are more commands to run, the script canterminate before running them.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54069"></A><ACLASS="indexterm"NAME="AUTOID-54072"></A>You can test the<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>of the redirected-I/O loop.To end the loop, use a command like <CODECLASS="literal">exit&nbsp;0</CODE>, <CODECLASS="literal">exit&nbsp;2</CODE>,and so on.Just after the <CODECLASS="literal">done</CODE> command outside the loop, use<SPANCLASS="link"><CODECLASS="literal">case&nbsp;$?</CODE> (<ACLASS="linkend"HREF="ch44_05.htm"TITLE="Test String Values with Bourne Shell case ">44.5</A>)</SPAN>to test the loop's status.For instance, a 0 status might mean the loop worked fine, a 1 couldsignal one kind of error, a 2 status a different error, and so on.</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54083"></A><ACLASS="indexterm"NAME="AUTOID-54086"></A>If you change the value of any shell or environment variables inside theloop, their values outside the loop (after the <EMCLASS="emphasis">done</EM> command atthe end of the loop) will not be changed.Here's the usual fix for that problem.You use another file descriptor, like file descriptor 6,and write variable-settingcommands to it.You redirect that file descriptor to a temporary file.Then, use the shell's<SPANCLASS="link">dot command (<CODECLASS="literal">.</CODE>) (<ACLASS="linkend"HREF="ch44_23.htm"TITLE="Reading Files with the . and source Commands ">44.23</A>)</SPAN>to read the temporary file into the shell outside the loop.For example, to get the value of a variable named <EMCLASS="emphasis">varname</EM> outside theloop:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><ACLASS="indexterm"NAME="AUTOID-54095"></A>while whateverdo  ...   echo &quot;varname='value'&quot; 1&gt;&amp;6    ...done 6&gt; var_set_file. var_set_file</PRE></BLOCKQUOTE></P></LI></UL><PCLASS="para">Greg Ubben sent me two other ways that he prefers.The first one depends on having a <EMCLASS="emphasis">read</EM> that accepts redirectionon its command line, which most do these days.The second works when you can put the usage in the same scope (withinthe<SPANCLASS="link">curly braces (<ACLASS="linkend"HREF="ch13_08.htm"TITLE="Using {list} to Group Bourne Shell Commands ">13.8</A>)</SPAN>)as the redirection:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">exec 3&lt; file   {while read line &lt;&amp;3       while read linedo       do     var=value            var=valuedone       doneexec 3&lt;&amp;-       echo &quot;var = $var&quot;echo &quot;var = $var&quot;   } &lt; file</PRE></BLOCKQUOTE></P><PCLASS="para">Putting the loop inside a function and redirecting into the functionalso seems to avoid the subshell problem.But don't take my (our) word for it:test it on the shell you'll be using.<ACLASS="indexterm"NAME="AUTOID-54104"></A><ACLASS="indexterm"NAME="AUTOID-54105"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_22.htm"TITLE="45.22 Handling Files Line-by-Line "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.22 Handling Files Line-by-Line "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.24 A Shell Can Read a Script from its Standard Input, But..."BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">45.22 Handling Files Line-by-Line </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">45.24 A Shell Can Read a Script from its Standard Input, But...</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>