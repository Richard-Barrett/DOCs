<HTML><HEAD><TITLE>[Chapter 45] 45.24 A Shell Can Read a Script from its Standard Input, But...</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:54:55Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch45_01.htm"TITLE="45. Shell Programming for the Initiated"><LINKREL="prev"HREF="ch45_23.htm"TITLE="45.23 The Ins and Outs of Redirected I/O Loops "><LINKREL="next"HREF="ch45_25.htm"TITLE="45.25 Shell Scripts On-the-Fly from Standard Input "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_23.htm"TITLE="45.23 The Ins and Outs of Redirected I/O Loops "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.23 The Ins and Outs of Redirected I/O Loops "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 45<BR>Shell Programming for the Initiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_25.htm"TITLE="45.25 Shell Scripts On-the-Fly from Standard Input "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.25 Shell Scripts On-the-Fly from Standard Input "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0365">45.24 A Shell Can Read a Script from its Standard Input, But...</A></H2><DIVCLASS="msgset"><DIVCLASS="msgentry"><DIVCLASS="msg"><DIVCLASS="msgtext"><PCLASS="para"><BCLASS="msgentry.role">Q:</B> <ACLASS="indexterm"NAME="AUTOID-54118"></A><ACLASS="indexterm"NAME="AUTOID-54121"></A><ACLASS="indexterm"NAME="AUTOID-54124"></A> What is the difference between <CODECLASS="literal">sh&nbsp;&lt;&nbsp;file</CODE> and<CODECLASS="literal">sh&nbsp;file</CODE>?</P></DIV></DIV></DIV><DIVCLASS="msgentry"><DIVCLASS="msg"><DIVCLASS="msgtext"><PCLASS="para"><BCLASS="msgentry.role">A:</B>  The first way keeps the script from reading anything else from itsinput.Consider the <EMCLASS="emphasis">zip</EM> script:</P><PCLASS="para"><BCLASS="msgentry.role">A:</B> <BLOCKQUOTECLASS="screen"><PRECLASS="screen">while read worddo   echo $word | sed s/foo/bar/done</PRE></BLOCKQUOTE></P></DIV></DIV></DIV></DIV><PCLASS="para">If run as <CODECLASS="literal">sh zip</CODE>, it will read from your terminal, replacing <CODECLASS="literal">foo</CODE>with <CODECLASS="literal">bar</CODE>. If run as <CODECLASS="literal">sh&nbsp;&lt;&nbsp;zip</CODE>, it will exit right away, sinceafter reading the script, there's no input left.</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54143"></A></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">CT</SPAN> <SPANCLASS="bibliomisc">in <ACLASS="systemitem.newsgroup"HREF="news:net.unix">net.unix</A> on Usenet, 29 December 1984</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_23.htm"TITLE="45.23 The Ins and Outs of Redirected I/O Loops "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.23 The Ins and Outs of Redirected I/O Loops "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_25.htm"TITLE="45.25 Shell Scripts On-the-Fly from Standard Input "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.25 Shell Scripts On-the-Fly from Standard Input "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">45.23 The Ins and Outs of Redirected I/O Loops </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">45.25 Shell Scripts On-the-Fly from Standard Input </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>