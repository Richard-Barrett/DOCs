<HTML><HEAD><TITLE>[Chapter 45] 45.25 Shell Scripts On-the-Fly from Standard Input </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:54:55Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch45_01.htm"TITLE="45. Shell Programming for the Initiated"><LINKREL="prev"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."><LINKREL="next"HREF="ch45_26.htm"TITLE="45.26 Quoted hereis Document Terminators: sh vs. csh "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.24 A Shell Can Read a Script from its Standard Input, But..."BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 45<BR>Shell Programming for the Initiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_26.htm"TITLE="45.26 Quoted hereis Document Terminators: sh vs. csh "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.26 Quoted hereis Document Terminators: sh vs. csh "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-0431">45.25 Shell Scripts On-the-Fly from Standard Input </A></H2><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="xref.warning"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But...">Warning!</A> </TH><TDVALIGN="TOP"><ACLASS="indexterm"NAME="AUTOID-54152"></A><ACLASS="indexterm"NAME="AUTOID-54155"></A><ACLASS="indexterm"NAME="AUTOID-54158"></A>The shell can read commands from its standard input or from a file.To run a series of commands that can change, you may want to use oneprogram to create the command lines automatically&nbsp;- and pipe that program'soutput to a shell, which will run those &quot;automatic&quot; commands.</TD></TR></TABLE><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54162"></A><ACLASS="indexterm"NAME="AUTOID-54165"></A>Here's an example.[3]You want to copy files from a subdirectory and all its subdirectoriesinto a single directory.The filenames in the destination directory can't conflict; no twofiles can have the same name.An easy way to name the copies is to replace each slash (<CODECLASS="literal">/</CODE>)in the file's relative pathname with a minus sign (<CODECLASS="literal">-</CODE>).[4]For instance, the file named <EMCLASS="emphasis">lib/glob/aprog.c</EM> would be copied toa file named <EMCLASS="emphasis">lib-glob-aprog.c</EM>.You can use <SPANCLASS="link"><EMCLASS="emphasis">sed</EM> (<ACLASS="linkend"HREF="ch34_01.htm#UPT-ART-7996"TITLE="Two Things You Must Know About sed ">34.1</A>)</SPAN>to convert the filenames and output <EMCLASS="emphasis">cp</EM>commands like these:</P><BLOCKQUOTECLASS="footnote"><PCLASS="para">[3] This isn't recommended for systems with a 14-character filename limit.</P><PCLASS="para">[4] A replacement like CTRL-a would make uniquefilenames (but ones that are harder to type).</P></BLOCKQUOTE><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">cp <CODECLASS="replaceable"><I>from</I></CODE>/lib/glob/aprog.c <CODECLASS="replaceable"><I>to</I></CODE>/lib-glob-aprog.ccp <CODECLASS="replaceable"><I>from</I></CODE>/lib/glob/aprog.h <CODECLASS="replaceable"><I>to</I></CODE>/lib-glob-aprog.h    <ICLASS="lineannotation">...</I></PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54188"></A>However, an even better solution can be developed using <SPANCLASS="link"><EMCLASS="emphasis">nawk</EM> (<ACLASS="linkend"HREF="ch33_12.htm"TITLE="Versions of awk ">33.12</A>)</SPAN>.The following example uses <SPANCLASS="link"><EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_01.htm#UPT-ART-7410"TITLE="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A>)</SPAN>to make a list of pathnames, one perline, in and below the <EMCLASS="emphasis">copyfrom</EM> directory.Next it runs <EMCLASS="emphasis">nawk</EM> to create the destinationfile pathnames (like <CODECLASS="replaceable"><I>to</I></CODE><CODECLASS="literal">/lib-glob-aprog.c</CODE>) and write thecompleted command lines to the standard output.The shell reads the command lines from its standard input, through thepipe.</P><PCLASS="para">This example is in a script file because it's a little long to type at a prompt.But you can type commands like these at a prompt, too, if you want to:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">#!/bin/shfind copyfrom -type f -print |nawk '{ out = $0gsub(&quot;/&quot;, &quot;-&quot;, out)sub(&quot;^copyfrom-&quot;, &quot;copyto/&quot;, out)print &quot;cp&quot;, $0, out }' |sh</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54203"></A>If you change the last line to <CODECLASS="literal">sh&nbsp;-v</CODE>, the shell's <SPANCLASS="link">verbose option (<ACLASS="linkend"HREF="ch46_01.htm#UPT-ART-7160"TITLE="Tips for Debugging Shell Scripts ">46.1</A>)</SPAN>will show each command line before executing it.If the last line has <CODECLASS="literal">sh&nbsp;-e</CODE>, the shell will quit immediatelyafter any command returns a non-zero<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>-thatmight happen, for instance, if the disk fills up and <EMCLASS="emphasis">cp</EM> can'tmake the copy.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_24.htm"TITLE="45.24 A Shell Can Read a Script from its Standard Input, But..."><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.24 A Shell Can Read a Script from its Standard Input, But..."BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_26.htm"TITLE="45.26 Quoted hereis Document Terminators: sh vs. csh "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.26 Quoted hereis Document Terminators: sh vs. csh "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">45.24 A Shell Can Read a Script from its Standard Input, But...</TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">45.26 Quoted hereis Document Terminators: sh vs. csh </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>