<HTML><HEAD><TITLE>[Chapter 45] 45.32 A Better read Command: grabchars </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:55:12Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch45_01.htm"TITLE="45. Shell Programming for the Initiated"><LINKREL="prev"HREF="ch45_31.htm"TITLE="45.31 Nested Command Substitution "><LINKREL="next"HREF="ch45_33.htm"TITLE="45.33 Testing Two Strings with One case Statement "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_31.htm"TITLE="45.31 Nested Command Substitution "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.31 Nested Command Substitution "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 45<BR>Shell Programming for the Initiated</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_33.htm"TITLE="45.33 Testing Two Strings with One case Statement "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.33 Testing Two Strings with One case Statement "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-7916">45.32 A Better read Command: grabchars </A></H2><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="grabchars">grabchars</A><BR></TH><TDVALIGN="TOP"><ACLASS="indexterm"NAME="AUTOID-54921"></A><ACLASS="indexterm"NAME="AUTOID-54924"></A><ACLASS="indexterm"NAME="AUTOID-54926"></A><ACLASS="indexterm"NAME="AUTOID-54929"></A><EMCLASS="emphasis">grabchars</EM> gets characters from the user as they aretyped in, without having to wait for the RETURN key tobe pressed.Among other things, this allows shell scriptsto be written with highly interactive menus.</TD></TR></TABLE><PCLASS="para">By default,<EMCLASS="emphasis">grabchars</EM>will obtain one character from the standard input, echo that character tothe standard output, and return an<SPANCLASS="link">exit status (<ACLASS="linkend"HREF="ch44_07.htm"TITLE="Exit Status of UNIX Processes ">44.7</A>)</SPAN>of one&nbsp;- meaning one character was read.Options (see the manual page) accept more than one character, acceptonly certain characters, prompt the user, and more.</P><PCLASS="para">Here's an example.With the standard<SPANCLASS="link"><EMCLASS="emphasis">echo</EM> (<ACLASS="linkend"HREF="ch08_06.htm"TITLE="Output Command-Line Arguments ">8.6</A>)</SPAN>and<SPANCLASS="link"><EMCLASS="emphasis">read</EM> (<ACLASS="linkend"HREF="ch44_13.htm"TITLE="read: Reading from the Keyboard ">44.13</A>)</SPAN>commands, you'd prompt a user this way:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">echo -n &quot;Answer y or n, then press RETURN: &quot;read ans</PRE></BLOCKQUOTE></P><PCLASS="para">With <EMCLASS="emphasis">grabchars</EM>,a prompt can be printed to standard error,the user's answer read as soon as the character is pressed, and<SPANCLASS="link">backquotes (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>used to grab the standard output (the user's answer, echoed by <EMCLASS="emphasis">grabchars</EM>):</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ans=`grabchars -q'Answer y or n: '`</PRE></BLOCKQUOTE></P><PCLASS="para">By default, the answer that <EMCLASS="emphasis">grabchars</EM> reads and echoeswill be &quot;eaten&quot; by the backquotes; the user won't see what she typed.That's nice when the answer needs to be a secret.To show the answer, you have two choices:</P><ULCLASS="itemizedlist"><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54953"></A>You can use the <EMCLASS="emphasis">-b</EM> option.<EMCLASS="emphasis">grabchars</EM> will echo the answer to both <EMCLASS="emphasis">stdout</EM> (which thebackquotes read) and <EMCLASS="emphasis">stderr</EM> (which is usually the terminal).</P></LI><LICLASS="listitem"><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54962"></A>You can also use one of my favorite tricks, completing the user'sanswer before their eyes.For example, if the user types <CODECLASS="userinput"><B>y</B></CODE>, the script echoes <CODECLASS="literal">yes</CODE>.An <CODECLASS="userinput"><B>n</B></CODE> answer echoes as <CODECLASS="literal">no</CODE>.Any other answer (<EMCLASS="emphasis">x</EM>) echoes as:<CODECLASS="replaceable"><I>x</I></CODE><CODECLASS="literal">?</CODE> <CODECLASS="literal">Please</CODE> <CODECLASS="literal">answer</CODE> <CODECLASS="literal">y</CODE> <CODECLASS="literal">or</CODE><CODECLASS="literal">n</CODE>.Here's that sample code, including a<SPANCLASS="link"><EMCLASS="emphasis">while</EM> loop (<ACLASS="linkend"HREF="ch44_10.htm"TITLE="Loops That Test Exit Status ">44.10</A>)</SPAN>to repeat until the user types the right answer:</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-54979"></A><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch45_09.htm"TITLE='45.9 The Unappreciated Bourne Shell  ":&quot; Operator'>:</A> <ACLASS="co"HREF="ch08_06.htm"TITLE="8.6 Output Command-Line Arguments ">1&gt;&amp;2</A> <ACLASS="co"HREF="ch45_09.htm"TITLE='45.9 The Unappreciated Bourne Shell  ":&quot; Operator'>break</A> &#13;</PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">while :do    ans=`grabchars -q'Answer y or n: '`    case &quot;$ans&quot; in<ACLASS="indexterm"NAME="AUTOID-54984"></A>y) echo &quot;yes&quot; 1&gt;&amp;2; break ;;    n) echo &quot;no&quot; 1&gt;&amp;2; break ;;    *) echo &quot;${ans}?  Please answer y or n.&quot; 1&gt;&amp;2 ;;    esacdone</PRE></TD></TR></TABLE></P></LI></UL><PCLASS="para">The option <CODECLASS="literal">-c</CODE><CODECLASS="replaceable"><I>valid-characters</I></CODE> tells <EMCLASS="emphasis">grachars</EM> toaccept only characters listed in <EMCLASS="emphasis">valid-characters</EM> (this can be aregular expression like <CODECLASS="literal">[a-z]</CODE>).If the user types something that isn't listed, <EMCLASS="emphasis">grabchars</EM> will ignorethe answer and wait.So, to accept only <EMCLASS="emphasis">y</EM> or <EMCLASS="emphasis">n</EM>:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ans=`grabchars -c'yn' -q'Answer y or n: '`</PRE></BLOCKQUOTE></P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-55001"></A><ACLASS="indexterm"NAME="AUTOID-55004"></A>There are lots of other options.I'd like to explain two more.(Please look at the manual page for the rest.)You can give <EMCLASS="emphasis">grabchars</EM> a time limit with the<EMCLASS="emphasis">-t</EM> option.If the user doesn't answer bythen, <EMCLASS="emphasis">grabchars</EM> can quit&nbsp;- and also give a default answer from the<EMCLASS="emphasis">-d</EM> option.The timeout option lets you write shell scripts where you can offer someassistance if it's obvious that the user might be stuck&nbsp;- or to let a useranswer a prompt only if he doesn't want the default.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">ans=`grabchars -t5 -d'y' -q'To stop, type n within 5 seconds: '`</PRE></BLOCKQUOTE></P><PCLASS="para">If the user doesn't type anything in 5 seconds, <EMCLASS="emphasis">grabchars</EM> willanswer <EMCLASS="emphasis">y</EM> automatically.</P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">JP</SPAN>, <SPANCLASS="authorinitials">DS</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_31.htm"TITLE="45.31 Nested Command Substitution "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 45.31 Nested Command Substitution "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch45_33.htm"TITLE="45.33 Testing Two Strings with One case Statement "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 45.33 Testing Two Strings with One case Statement "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">45.31 Nested Command Substitution </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">45.33 Testing Two Strings with One case Statement </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>