<HTML><HEAD><TITLE>[Chapter 50] 50.8 Which Version Am I Using? </TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:56:58Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="ch50_01.htm"TITLE="50. Help--Online Documentation, etc."><LINKREL="prev"HREF="ch50_07.htm"TITLE="50.7 How UNIX Systems Remember Their Name "><LINKREL="next"HREF="ch50_09.htm"TITLE="50.9 Reading a Permuted Index "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch50_07.htm"TITLE="50.7 How UNIX Systems Remember Their Name "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 50.7 How UNIX Systems Remember Their Name "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Chapter 50<BR>Help--Online Documentation, etc.</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch50_09.htm"TITLE="50.9 Reading a Permuted Index "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 50.9 Reading a Permuted Index "BORDER="0"></A></TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DIVCLASS="SECT1"><H2CLASS="sect1"><ACLASS="title"NAME="UPT-ART-6740">50.8 Which Version Am I Using? </A></H2><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-59354"></A><ACLASS="indexterm"NAME="AUTOID-59357"></A><ACLASS="indexterm"NAME="AUTOID-59359"></A><ACLASS="indexterm"NAME="AUTOID-59362"></A><ACLASS="indexterm"NAME="AUTOID-59365"></A><ACLASS="indexterm"NAME="AUTOID-59368"></A><ACLASS="indexterm"NAME="AUTOID-59371"></A><ACLASS="indexterm"NAME="AUTOID-59374"></A><ACLASS="indexterm"NAME="AUTOID-59377"></A>The <EMCLASS="emphasis">which</EM> command is a real life saver.It has becomeincreasingly important in the lastfew years.Many vendors (like Sun) are providing separate directoriesof BSD-compatible and System V-compatible commands.Which commandyou'll get depends on your <SPANCLASS="link"><EMCLASS="emphasis">PATH</EM> (<ACLASS="linkend"HREF="ch06_04.htm"TITLE="The PATH Environment Variable ">6.4</A>)</SPAN>environment variable.It's often essential to know which version you're using.For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>which sort</B></CODE>/bin/sort</PRE></BLOCKQUOTE></P><PCLASS="para">tells me exactly which version of the <EMCLASS="emphasis">sort</EM> program I'm using.(Under SunOS 4.1, this is the BSD-compatible version in <EMCLASS="emphasis">/bin</EM>,not the System V version in <EMCLASS="emphasis">/usr/5bin</EM>.)</P><PCLASS="para">You'll find that <EMCLASS="emphasis">which</EM> comes in handy in lots of othersituations.I find that I'm always using <EMCLASS="emphasis">which</EM> inside ofbackquotes to get a precise path.For example, when I was writing these articles, I startedwondering whether or not <EMCLASS="emphasis">man</EM>, <EMCLASS="emphasis">apropos</EM>, and <EMCLASS="emphasis">whatis</EM>were really the same executable.It's a simple question, but one Ihad never bothered to think about.There's one good way to find out:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>ls -li `which man` `which apropos` `which whatis`</B></CODE>102352 -rwxr-xr-x  3 root        24576 Feb  8  1990 /usr/ucb/apropos102352 -rwxr-xr-x  3 root        24576 Feb  8  1990 /usr/ucb/man102352 -rwxr-xr-x  3 root        24576 Feb  8  1990 /usr/ucb/whatis</PRE></BLOCKQUOTE></P><PCLASS="para">What does this tell us?First, the three commands have the same filesize, which means that they're likely to be identical; furthermore,each file has three links, meaning that each file has three names.The <EMCLASS="emphasis">-i</EM> option confirms it; all three files have the same<SPANCLASS="link">i-number (<ACLASS="linkend"HREF="ch01_22.htm"TITLE="How UNIX Keeps Track of Files: Inodes ">1.22</A>)</SPAN>.So, <EMCLASS="emphasis">apropos</EM>, <EMCLASS="emphasis">man</EM>, and <EMCLASS="emphasis">whatis</EM> are justone executable file that has three hard links.</P><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="which">which</A><BR></TH><TDVALIGN="TOP">A few System V implementations don't have a <EMCLASS="emphasis">which</EM> command.The version of <EMCLASS="emphasis">which</EM> on the CD-ROM is even betterthan the BSD <EMCLASS="emphasis">which</EM>, anyway.By default, this new <EMCLASS="emphasis">which</EM> works about the same as the BSD <EMCLASS="emphasis">which</EM>.The new <EMCLASS="emphasis">which</EM> has a big plus: it doesn't try to read your <EMCLASS="emphasis">.cshrc</EM>file to see what aliases you've set there.Instead, you set it up with its <EMCLASS="emphasis">-\i</EM> optionto read your shell's <EMCLASS="emphasis">current</EM> list of aliases.This lets the new <EMCLASS="emphasis">which</EM> show aliases that you've typed at a promptand haven't stored in <EMCLASS="emphasis">.cshrc</EM>.The new <EMCLASS="emphasis">which</EM> also works in<SPANCLASS="link">Bourne-like shells (<ACLASS="linkend"HREF="ch01_08.htm"TITLE="There Are Many Shells ">1.8</A>)</SPAN>that have<SPANCLASS="link">shell functions (<ACLASS="linkend"HREF="ch10_09.htm"TITLE="Shell Functions ">10.9</A>)</SPAN>.</TD></TR></TABLE><TABLECLASS="para.programreference"BORDER="1"><TR><THVALIGN="TOP"><ACLASS="programreference"HREF="examples/index.htm"TITLE="csh_init">csh_init</A><BR><ACLASS="programreference"HREF="examples/index.htm"TITLE="sh_init">sh_init</A><BR></TH><TDVALIGN="TOP">To make the new <EMCLASS="emphasis">which</EM> read your current aliases, you need a trick.<ACLASS="indexterm"NAME="AUTOID-59423"></A><ACLASS="indexterm"NAME="AUTOID-59426"></A>Here's the trick: make an alias or shell function that runs <EMCLASS="emphasis">which</EM>,passing the definition (if any) of the alias or function you name.</TD></TR></TABLE><PCLASS="para">Let's look at the setup, then explain it.For the C shell, use the following line in your <EMCLASS="emphasis">.cshrc</EM> file:</P><PCLASS="para"><ACLASS="indexterm"NAME="AUTOID-59435"></A><TABLECLASS="screen.co"BORDER="1"><TR><THVALIGN="TOP"><PRECLASS="calloutlist"><ACLASS="co"HREF="ch10_03.htm"TITLE="10.3 C Shell Aliases with Command-Line Arguments ">!\$</A> <ACLASS="co"HREF="ch10_03.htm"TITLE="10.3 C Shell Aliases with Command-Line Arguments ">!\*</A> </PRE></TH><TDVALIGN="TOP"><PRECLASS="screen">alias which alias !\$  /usr/local/bin/which -i !\*</PRE></TD></TR></TABLE></P><PCLASS="para">(There's a similar shell function on the CD-ROM.)For this example, let's say you've also defined an alias for <EMCLASS="emphasis">sort</EM>that looks like:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias sort /usr/local/bin/quicksort</PRE></BLOCKQUOTE></P><PCLASS="para">Okay.To run <EMCLASS="emphasis">which</EM>, you type:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>which sort</B></CODE>sort    /usr/local/bin/quicksort</PRE></BLOCKQUOTE></P><PCLASS="para">How did that work?The C shell runs the alias you defined for <EMCLASS="emphasis">which</EM>.In this example, that executes the following command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias sort | /usr/local/bin/which -i sort</PRE></BLOCKQUOTE></P><PCLASS="para">The first part of that command,<CODECLASS="literal">alias&nbsp;sort</CODE>, will pipe the definition of the <EMCLASS="emphasis">sort</EM> alias to thestandard input of <CODECLASS="literal">/usr/local/bin/which&nbsp;-i&nbsp;sort</CODE>.When <EMCLASS="emphasis">/usr/local/bin/which&nbsp;-i&nbsp;sort</EM> sees an alias definition on itsstandard input, it outputs that definition.</P><PCLASS="para">What if you ask <EMCLASS="emphasis">which</EM> to find a command that you haven't aliased?</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>which tr</B></CODE>/bin/tr</PRE></BLOCKQUOTE></P><PCLASS="para">The shell runs this command:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">alias tr | /usr/local/bin/which -i tr</PRE></BLOCKQUOTE></P><PCLASS="para">Because there's no alias for <EMCLASS="emphasis">tr</EM>, the shell command <CODECLASS="literal">alias&nbsp;tr</CODE>sends no output down the pipe.When <CODECLASS="literal">/usr/local/bin/which&nbsp;-i&nbsp;tr</CODE> doesn't read text on standardinput, it looks through your search path for the first command named <EMCLASS="emphasis">tr</EM>.</P><PCLASS="para">Nice trick, isn't it?Maarten Litmaath, the program's author, is a clever guy.</P><PCLASS="para">That's not all the new <EMCLASS="emphasis">which</EM> can do.With the <EMCLASS="emphasis">-a</EM> option, it shows any alias you name and <EMCLASS="emphasis">also</EM>searches your path for <EMCLASS="emphasis">all</EM> commands with that name.This is useful when you want to know all available versions of the command.Let's end this article with an example from the manual page.The first command shows all aliases (in this case, that's just thealias for the new <EMCLASS="emphasis">which</EM>).Second, we run the new <EMCLASS="emphasis">which</EM> to find which <EMCLASS="emphasis">which</EM> we're running<CODECLASS="literal">:-)</CODE>; it shows the alias for <EMCLASS="emphasis">which</EM>.Third, the <EMCLASS="emphasis">-a</EM> option shows all available <EMCLASS="emphasis">which</EM>es:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen">% <CODECLASS="userinput"><B>alias</B></CODE>which   alias !$ | /usr/local/bin/which -i !*% <CODECLASS="userinput"><B>which which</B></CODE>which   alias !$ | /usr/local/bin/which -i !*% <CODECLASS="userinput"><B>which -a which</B></CODE>which   alias !$ | /usr/local/bin/which -i !*/usr/local/bin/which/usr/ucb/which%</PRE></BLOCKQUOTE></P><DIVCLASS="sect1info"><PCLASS="SECT1INFO">- <SPANCLASS="authorinitials">ML</SPAN>, <SPANCLASS="authorinitials">JP,&nbsp;MAL</SPAN></P></DIV></DIV><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch50_07.htm"TITLE="50.7 How UNIX Systems Remember Their Name "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 50.7 How UNIX Systems Remember Their Name "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch50_09.htm"TITLE="50.9 Reading a Permuted Index "><IMGSRC="../gifs/txtnexta.gif"ALT="Next: 50.9 Reading a Permuted Index "BORDER="0"></A></TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">50.7 How UNIX Systems Remember Their Name </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">50.9 Reading a Permuted Index </TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>