<HTML><HEAD><TITLE>Glossary</TITLE><METANAME="DC.title"CONTENT="UNIX Power Tools"><METANAME="DC.creator"CONTENT="Jerry Peek, Tim O'Reilly &amp; Mike Loukides"><METANAME="DC.publisher"CONTENT="O'Reilly &amp; Associates, Inc."><METANAME="DC.date"CONTENT="1998-08-04T21:59:10Z"><METANAME="DC.type"CONTENT="Text.Monograph"><METANAME="DC.format"CONTENT="text/html"SCHEME="MIME"><METANAME="DC.source"CONTENT="1-56592-260-3"SCHEME="ISBN"><METANAME="DC.language"CONTENT="en-US"><METANAME="generator"CONTENT="Jade 1.1/O'Reilly DocBook 3.0 to HTML 4.0"><LINKREV="made"HREF="mailto:online-books@oreilly.com"TITLE="Online Books Comments"><LINKREL="up"HREF="part09.htm"TITLE="IX. Miscellaneous "><LINKREL="prev"HREF="ch52_09.htm"TITLE="52.9 Software Support from RTR "></HEAD><BODYBGCOLOR="#FFFFFF"TEXT="#000000"><DIVCLASS="htmlnav"><H1><IMGSRC="gifs/smbanner.gif"ALT="UNIX Power Tools"USEMAP="#srchmap"BORDER="0"></H1><MAPNAME="srchmap"><AREASHAPE="RECT"COORDS="0,0,466,58"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="467,0,514,18"HREF="../search/psrch.htm"ALT="Search this book"></MAP><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch52_09.htm"TITLE="52.9 Software Support from RTR "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 52.9 Software Support from RTR "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><B><FONTFACE="ARIEL,HELVETICA,HELV,SANSERIF"SIZE="-1">Glossary</FONT></B></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">&nbsp;</TD></TR></TABLE>&nbsp;<HRALIGN="LEFT"WIDTH="515"TITLE="footer"></DIV><DLCLASS="GLOSSARY"><H1CLASS="glossary"><ACLASS="title"NAME="UPT-ART-1010">Glossary</A></H1><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-AIX">AIX</A></DT><DDCLASS="glossdef"><PCLASS="para">A version of UNIX from the IBM Corporation.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-ARGUMENT">argument</A></DT><DDCLASS="glossdef"><PCLASS="para">Zero or more characters passed to a program as a single unit.The shell breaks a command line into arguments by cutting it atunquoted white space. <EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch08_05.htm"TITLE="Command-Line Evaluation ">8.5</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-WORD"TITLE="">word</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-ARRAY">array</A></DT><DDCLASS="glossdef"><PCLASS="para">An ordered collection of data items.An array has a single overall name; each item in it is called an <EMCLASS="emphasis">element</EM>or <EMCLASS="emphasis">member</EM>.For instance, the C shell stores its command search path in an<SPANCLASS="link">array (<ACLASS="linkend"HREF="ch47_05.htm"TITLE="Using C Shell Arrays ">47.5</A>)</SPAN>named<SPANCLASS="link"><EMCLASS="emphasis">path</EM> (<ACLASS="linkend"HREF="ch06_05.htm"TITLE="PATH and path ">6.5</A>)</SPAN>.The first array member is named <CODECLASS="literal">$path[1]</CODE>, the second is<CODECLASS="literal">$path[2]</CODE>, and so on.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-ASCII-FILE">ASCII file</A></DT><DDCLASS="glossdef"><PCLASS="para">Formally, a file containing only<SPANCLASS="link">ASCII (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>)</SPAN>characters.More commonly (in the USA, at least) a file containing text that'sprintable, viewable, and has no &quot;binary&quot; (non-ASCII) characters.ASCII characters use only seven of the bits in a (8-bit) byte.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BACKQUOTE">backquote</A></DT><DDCLASS="glossdef"><PCLASS="para">The character <CODECLASS="literal">`</CODE>.Not the same as a single quote (<CODECLASS="literal">'</CODE>).Does<SPANCLASS="link">command substitution (<ACLASS="linkend"HREF="ch09_16.htm"TITLE="Command Substitution ">9.16</A>)</SPAN>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BACKSLASH">backslash</A></DT><DDCLASS="glossdef"><PCLASS="para">The character <CODECLASS="literal">\</CODE>.In UNIX, it changes the interpretation of the next character in some way.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch08_20.htm"TITLE="How Many Backslashes?">8.20</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-SLASH"TITLE="">slash</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BATCH-QUEUE">batch queue</A></DT><DDCLASS="glossdef"><PCLASS="para">A mechanism for sequencing large jobs. A batch queue receives jobrequests from users. It then executes the jobs one at a time. Batchqueues go back to the earliest days of data processing. They are anextremely effective, if uncomfortable, way to manage system load.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch40_06.htm"TITLE="System V.4 Batch Queues ">40.6</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BIN-DIRECTORY">bin directory</A></DT><DDCLASS="glossdef"><PCLASS="para">A directory for storing executable programs.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch04_02.htm"TITLE="A bin Directory for Your Programs and Scripts ">4.2</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BINARIES-BINARY-FILE">binaries, binary file</A></DT><DDCLASS="glossdef"><PCLASS="para">A file with non-text characters.Often, a directly executable file that can be run as a program.Binary characters use all the bits in a (8-bit) byte.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-ASCII-FILE"TITLE="">ASCII file</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BLOCK-SIZE">block size</A></DT><DDCLASS="glossdef"><PCLASS="para">The largest amount of data that a UNIX filesystem will alwaysallocate contiguously. For example, if a filesystem's block size is 8KB, files of size up to 8 KB are always physically contiguous (i.e.,in one place), rather than spread across the disk. Files that arelarger than the filesystem's block size may be fragmented: 8 KB pieces ofthe file are located in different places on the disk. Fragmentationlimits filesystem performance. Note that the filesystem block size isdifferent from a disk's physical block size, which is almost always 512&nbsp;bytes.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BRAIN-DAMAGED">brain-damaged</A></DT><DDCLASS="glossdef"><PCLASS="para">A program with poor design or other errors can be called <EMCLASS="emphasis">brain-damaged</EM>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BSD-UNIX">BSD UNIX</A></DT><DDCLASS="glossdef"><PCLASS="para">The versions of UNIX developed at the University of California,Berkeley. BSD UNIX has been dominant in academia and hashistorically had some more advanced features than System V: BSDintroduced virtual memory, networking, and the &quot;fast filesystem&quot; tothe UNIX community. It is also the system on which SunOS was based.System V Release 4 and some vendors' earlier System V versionsalso have Berkeley features.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-BUFFER">buffer</A></DT><DDCLASS="glossdef"><PCLASS="para">A temporary storage place such as a file or an area of the computer'smemory.Most text editors store the file you're editing in a buffer; when you'redone editing, the edited buffer is copied over (i.e., replaces) the original file.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-COMMAND-LINE">command line</A></DT><DDCLASS="glossdef"><PCLASS="para">The text you type at a shell prompt.A UNIX shell reads the command line, parses it to find the command name(which is the first word on the command line), and executes the command.A command line may have more than one command joined by operators like<SPANCLASS="link">semicolons (<CODECLASS="literal">;</CODE>) (<ACLASS="linkend"HREF="ch08_05.htm"TITLE="Command-Line Evaluation ">8.5</A>)</SPAN>,<SPANCLASS="link">pipes (<CODECLASS="literal">|</CODE>) (<ACLASS="linkend"HREF="ch01_04.htm"TITLE="Using Pipes to Create a New Tool ">1.4</A>)</SPAN>,or<SPANCLASS="link">double ampersands (<CODECLASS="literal">&amp;&amp;</CODE>) (<ACLASS="linkend"HREF="ch44_09.htm"TITLE="Testing Your Success ">44.9</A>)</SPAN>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-CONTROL-CHARACTER">control character</A></DT><DDCLASS="glossdef"><PCLASS="para">A character you make by holding down the keyboard CTRL (Control) keywhile pressing a letter or another character key.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-CORE-FILE-CORE-DUMP">core file, core dump</A></DT><DDCLASS="glossdef"><PCLASS="para">When a program terminates abnormally, it may make a file named <EMCLASS="emphasis">core</EM>.The <EMCLASS="emphasis">core</EM> file can be used for debugging.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch24_05.htm"TITLE="Limiting File Sizes ">24.5</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-.CSHRC-FILE">.cshrc file</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-DOT-FILES"TITLE="">dot (.) files (.cshrc, .login, .profile</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-CTRL-X">CTRL-x</A></DT><DDCLASS="glossdef"><PCLASS="para">The character called &quot;control <EMCLASS="emphasis">x</EM>,&quot; where <EMCLASS="emphasis">x</EM> is a key on the keyboard.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-CONTROL-CHARACTER"TITLE="">control character</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-DAEMON">daemon</A></DT><DDCLASS="glossdef"><PCLASS="para">A program that is invisible to users but provides important systemservices. Daemons manage everything from paging to networking tonotification of incoming mail. BSD UNIX has many different daemons:without counting, I would guess that there are roughly two&nbsp;dozen.Daemons normally spend most of their time &quot;sleeping&quot; or waiting for something to do, so that they don'taccount for a lot of CPU load.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_14.htm"TITLE="The Kernel and Daemons ">1.14</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-DATA-SWITCH">data switch</A></DT><DDCLASS="glossdef"><PCLASS="para">This hardware is something like a telephone switchboard.A data switch connects many terminals to two or more computers.The user, on a terminal or through a modem, tells the data switch whichcomputer she wants a connection to.Also called a <EMCLASS="emphasis">terminal multiplexor</EM>.Computers without data switches usually have one terminal connected toeach<SPANCLASS="link"><EMCLASS="emphasis">tty</EM> (<ACLASS="linkend"HREF="ch03_08.htm"TITLE="What tty Am I On? ">3.8</A>)</SPAN>port; characteristics like the<SPANCLASS="link">terminal type (<ACLASS="linkend"HREF="ch05_10.htm"TITLE="Finding What Terminal Names You Can Use ">5.10</A>)</SPAN>can be set in system files.Conversely,computers with data switches can't know in advance what sort of terminalis connected to each <EMCLASS="emphasis">tty</EM> port.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-DEFAULT">default</A></DT><DDCLASS="glossdef"><PCLASS="para">In a program that gives you more than one choice, the default choice isthe one you get by not choosing.The default is usually the most common choice.As an example, the default file for many UNIX programs is the standardinput.If you don't give a filename on the command line, a program willread its standard input.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-DOT-FILES">dot (.) files (.cshrc, .login, .profile</A></DT><DDCLASS="glossdef"><PCLASS="para">Files that are read when you start a program (including when you log in andstart a shell).These set up your environment and run any other UNIX commands (forinstance,<EMCLASS="emphasis">tset</EM>).If your account uses the C shell, it will read <EMCLASS="emphasis">.cshrc</EM> and <EMCLASS="emphasis">.login</EM>.Accounts that use the Bourne shell and shells like it read <EMCLASS="emphasis">.profile</EM>.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch02_02.htm"TITLE="Shell Setup Files-Which, Where, and Why ">2.2</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-DOUBLE-QUOTE">double quote</A></DT><DDCLASS="glossdef"><PCLASS="para">The <CODECLASS="literal">&quot;</CODE> character. This isn't the same as two single quotes (<CODECLASS="literal">''</CODE>)together.The <CODECLASS="literal">&quot;</CODE> is used around a part of a UNIX command line wherethe shell should do variable and command substitution (and, on the Cshell, history substitution), but no other interpretation.<EMCLASS="emphasis">See also</EM> articles<ACLASS="xref"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>and<ACLASS="xref"HREF="ch08_15.htm"TITLE="Differences Between Bourne and C Shell Quoting ">8.15</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-SINGLE-QUOTE"TITLE="">single quote</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-ESCAPE">escape</A></DT><DDCLASS="glossdef"><PCLASS="para">When you <EMCLASS="emphasis">escape</EM> a character or a string of characters, you changethe way it is interpreted.Escaping something can take away its special meaning, as in<SPANCLASS="link">shell quoting (<ACLASS="linkend"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>)</SPAN>-or can add special meaning, as in<SPANCLASS="link">terminal escape sequences (<ACLASS="linkend"HREF="ch05_08.htm"TITLE="Terminal Escape Sequences ">5.8</A>)</SPAN>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-FLAG">flag</A></DT><DDCLASS="glossdef"><PCLASS="para">In programming, a <EMCLASS="emphasis">flag variable</EM> is set to signal that somecondition has been met or that something should be done.For example, a flag can be set (&quot;raised&quot;) if the user has entered somethingwrong; the program can test for this flag and not continue untilthe problem has been fixed.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-FLAME">flame</A></DT><DDCLASS="glossdef"><PCLASS="para">A heated or irrational statement.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-FRAGMENT">fragment</A></DT><DDCLASS="glossdef"><PCLASS="para">In the BSD &quot;fast filesystem,&quot; a fragment is a portion of a diskblock&nbsp;- usually one-eighth of a block, but possibly one-quarter or one-half of a block. If the last portion of a file doesn't occupy a full disk block, the filesystem will allocate one or more fragments rather than an entire block. Don't confuse &quot;fragments&quot; with &quot;fragmentation.&quot; Fragments allow the BSD filesystem to use larger block sizes without becoming inefficient.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-FREE-SOFTWARE-FOUNDATION">Free Software Foundation, FSF</A></DT><DDCLASS="glossdef"><PCLASS="para">A group that develops the freely available GNU software.Their address is: 675 Massachusetts Avenue, Cambridge, MA 02139 USA.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-FULL-DUPLEX">full-duplex</A></DT><DDCLASS="glossdef"><PCLASS="para">Communications between a terminal and a computer where data flows in bothdirections at the same time.<EMCLASS="emphasis">Half-duplex</EM> communications, where data flows in only one directionat a time, are unusual these days.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch41_02.htm"TITLE="stty and All That Stuff ">41.2</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-GNU">GNU</A></DT><DDCLASS="glossdef"><PCLASS="para">Gnu's Not Unix, a system of software planned toeventually be a freely available substitute for UNIX.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-FREE-SOFTWARE-FOUNDATION"TITLE="">Free Software Foundation, FSF</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-GOTCHA">gotcha</A></DT><DDCLASS="glossdef"><PCLASS="para">A &quot;catch,&quot; difficulty, or surprise in the way that a program works.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-HARDCODED">hardcoded</A></DT><DDCLASS="glossdef"><PCLASS="para">In general, a value that can't be changed.For example, in a shell script with the command <CODECLASS="literal">grep jane</CODE>, thevalue <CODECLASS="literal">jane</CODE> is hardcoded; <EMCLASS="emphasis">grep</EM> will always search for<EMCLASS="emphasis">jane</EM>.But in the command <CODECLASS="literal">grep&nbsp;$USER</CODE>, the text that <EMCLASS="emphasis">grep</EM> searches foris not hardcoded; it's a variable value.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-HASH-TABLE">hash table</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">Hashing</EM> data into the format of a hash table letsspecially designed programs search for data quickly.A hash table assigns a special search code to each piece of data.For example, the C shell uses a hash table to locate commandsmore quickly; the<SPANCLASS="link"><EMCLASS="emphasis">rehash</EM> (<ACLASS="linkend"HREF="ch04_02.htm"TITLE="A bin Directory for Your Programs and Scripts ">4.2</A>)</SPAN>command rebuilds the hash table after you add a new command.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-IO">I/O</A></DT><DDCLASS="glossdef"><PCLASS="para">Input/output of text from software or hardware.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-INODE">inode</A></DT><DDCLASS="glossdef"><PCLASS="para">A data structure that describes a file. Within any filesystem, thenumber of inodes, and hence the maximum number of files, is set whenthe filesystem is created.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_22.htm"TITLE="How UNIX Keeps Track of Files: Inodes ">1.22</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-I-NUMBER">i-number</A></DT><DDCLASS="glossdef"><PCLASS="para">A UNIX file has a name (for people to identify it with) and an i-number(for UNIX to identify it with).Each file's i-number is stored in a directory, along with the filename, tolet UNIX find the file that you name.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_22.htm"TITLE="How UNIX Keeps Track of Files: Inodes ">1.22</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-JOB">job</A></DT><DDCLASS="glossdef"><PCLASS="para">One UNIX command. It is easy to be sloppy and use the terms job,process, and program interchangeably. I do it and I'm sure you do,too. Within UNIX documentation, though, the word &quot;job&quot; is usuallyused to mean one, and only one, command line. Note that one commandline can be complex. For example:</P><PCLASS="para"><BLOCKQUOTECLASS="screen"><PRECLASS="screen"><CODECLASS="userinput"><B>pic a.ms | tbl | eqn | troff -ms</B></CODE></PRE></BLOCKQUOTE></P><PCLASS="para">is one command, and hence one job, that is formed from four processes.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-JOB-NUMBER">job number</A></DT><DDCLASS="glossdef"><PCLASS="para">Shells with job control assign a job number to every command that is stopped orthat is running in the<SPANCLASS="link">background (<ACLASS="linkend"HREF="ch01_26.htm"TITLE="What a Multiuser System Can Do for You ">1.26</A>)</SPAN>.You can use job numbers to referto your own commands or groups of commands. Job numbers aregenerally easier to use than process IDs; they are much smaller(typically between 1 and 10), and therefore easier to remember.The C shell <EMCLASS="emphasis">jobs</EM> command displays job numbers.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch12_01.htm#UPT-ART-0439"TITLE="Job Control: Work Faster, Stop Runaway Jobs ">12.1</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-KERNEL">kernel</A></DT><DDCLASS="glossdef"><PCLASS="para">The part of the UNIX operating system that provides memorymanagement, I/O services, and all other low-level services. Thekernel is the &quot;core&quot; or &quot;heart&quot; of the operating system.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_14.htm"TITLE="The Kernel and Daemons ">1.14</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-KLUDGE">kludge</A></DT><DDCLASS="glossdef"><PCLASS="para">A program or a solution to a problem that isn't written carefully, doesn'twork as well as it should, doesn't use good programming style, and so on.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-LIBRARY-FUNCTION">library function</A></DT><DDCLASS="glossdef"><PCLASS="para">Packages of system calls (and of other library functions) for programmersin C and other languages.In general (though not always), a library function is a &quot;higher-leveloperation&quot; than a system call.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-SYSTEM-CALL"TITLE="">system call</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-LOAD-AVERAGE">load average</A></DT><DDCLASS="glossdef"><PCLASS="para">A measure of how busy the CPU is. The load average is useful, thoughimprecise. It is defined as the average number of jobs in the runqueue plus the average number of jobs that are blocked while waiting fordisk I/O.The<SPANCLASS="link"><EMCLASS="emphasis">uptime</EM> (<ACLASS="linkend"HREF="ch39_07.htm"TITLE="Checking System Load: uptime ">39.7</A>)</SPAN>command shows the load average.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-.LOGIN-FILE">.login file</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM> <ACLASS="xref"HREF="glossary.htm#GLOSS-DOT-FILES"TITLE="">dot (.) files (.cshrc, .login, .profile</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-MODE">mode</A></DT><DDCLASS="glossdef"><PCLASS="para">In UNIX, anoctal numberthat describes what access a file's owner, group,and others have to the file.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_23.htm"TITLE="File Access Permissions ">1.23</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-MODULO">modulo</A></DT><DDCLASS="glossdef"><PCLASS="para">Think back to your fourth grade arithmetic.When you divide twonumbers, you have a <EMCLASS="emphasis">dividend</EM> (the number on top), a<EMCLASS="emphasis">divisor</EM> (the number on the bottom), a <EMCLASS="emphasis">quotient</EM> (theanswer), and a <EMCLASS="emphasis">remainder</EM> (what's left over).In computer science, this kind of division is very important.However, we're usually more interested in the remainder than in the quotient.When we're interested in the remainder, we call the operation a<EMCLASS="emphasis">modulus</EM> (or <EMCLASS="emphasis">modulo</EM>, or <EMCLASS="emphasis">mod</EM>).For instance, one of the examples on your fourth grade arithmetic textmight have been <CODECLASS="literal">13&nbsp;&#247;&nbsp;3&nbsp;=&nbsp;4</CODE> (with a remainder of 1).As computer users, we're more interested in <CODECLASS="literal">13&nbsp;mod&nbsp;3&nbsp;=&nbsp;1</CODE>.It's really the same operation, though.<EMCLASS="emphasis">Modulo</EM> is also used in expressions like &quot;modulo wildcards,&quot;which means &quot;everything but wildcards.&quot;</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-NFS">NFS</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">N</EM>etwork <EMCLASS="emphasis">F</EM>ile <EMCLASS="emphasis">S</EM>ystem. NFS allows UNIX systems and many non-UNIXsystems to share files via a TCP/IP network. Subject to certainsecurity restrictions, systems are allowed complete access to anothersystem's files.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-TCP-IP"TITLE="">TCP/IP</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-NEWLINE">newline</A></DT><DDCLASS="glossdef"><PCLASS="para">The character that marks the end of a line of text in most UNIX files.(This is a convention, not a requirement.)</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-NULL">null</A></DT><DDCLASS="glossdef"><PCLASS="para">Empty, zero-length, with no characters&nbsp;- for example, a <EMCLASS="emphasis">null string</EM>.This is <EMCLASS="emphasis">not</EM> the same as an<SPANCLASS="link">ASCII NUL (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>)</SPAN>character.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-OCTAL-NUMBER">octal number</A></DT><DDCLASS="glossdef"><PCLASS="para">The base&nbsp;8 numbering system.Octal numbers are made with the digits 0 through 7.For example, the decimal (base&nbsp;10) number <CODECLASS="literal">12</CODE> is the same as theoctal number <CODECLASS="literal">14</CODE>.<SPANCLASS="link">ASCII character codes (<ACLASS="linkend"HREF="ch51_03.htm"TITLE="ASCII Characters: Listing and Getting Values ">51.3</A>)</SPAN>are often shown as octal numbers.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-OPTION-SWITCH">option switch</A></DT><DDCLASS="glossdef"><PCLASS="para">Typed on a command line to modify the way that a UNIX command works.Usually starts with a dash (<CODECLASS="literal">-</CODE>).The terms <EMCLASS="emphasis">option</EM> and <EMCLASS="emphasis">switch</EM> are more or less interchangeable.An option may have several settings, but a switch usually has twosettings:on or off, enabled or disabled, yes or no, etc.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PANIC">panic</A></DT><DDCLASS="glossdef"><PCLASS="para">UNIX jargon for a &quot;crash.&quot; A panic is really a special kind of acrash. Panics occur when UNIX detects someirreconcilable inconsistency in one of its internal data structures. Thekernel throws up its hands and shuts the system down before any damagecan be done. As it is going down, it prints a &quot;panic&quot; message onthe console.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PARSE">parse</A></DT><DDCLASS="glossdef"><PCLASS="para">To split into pieces and interpret.Article<ACLASS="xref"HREF="ch08_05.htm"TITLE="Command-Line Evaluation ">8.5</A>explains how the shell parses a command line.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PARTITION">partition</A></DT><DDCLASS="glossdef"><PCLASS="para">A portion of a disk drive. UNIX disk drives typically have eightpartitions, although not all are in use.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PATH-SEARCH">path, search</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM> <ACLASS="xref"HREF="glossary.htm#GLOSS-SEARCH-PATH"TITLE="">search path</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PIPE">pipe</A></DT><DDCLASS="glossdef"><PCLASS="para">A UNIX mechanism for sending the output of one program directly tothe input of another program, without using an intermediate file. AllUNIX systems support pipes.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_04.htm"TITLE="Using Pipes to Create a New Tool ">1.4</A>.System V and SunOS also provide &quot;namedpipes,&quot; which are FIFO (first-in/first-out) buffers that have namesand can be accessed via the filesystem.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PORTABLE">portable</A></DT><DDCLASS="glossdef"><PCLASS="para">A program that's <EMCLASS="emphasis">portable</EM> can be used on more than one version ofUNIX or with more than one version of a command.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-POSIX">POSIX</A></DT><DDCLASS="glossdef"><PCLASS="para">An &quot;open&quot; computer operating system that issimilar to UNIX.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PRIORITY">priority</A></DT><DDCLASS="glossdef"><PCLASS="para">A number that determines how often the kernel will run a process.A higher-priority process will run more often and, therefore, willfinish faster, than a low-priority process.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PROCESS">process</A></DT><DDCLASS="glossdef"><PCLASS="para">A lot of the time, a process is nothing more thananother name for a program that is running on the system. But thereis a more formal definition: a process is a single execution thread, or a single stream of computer instructions.One job may be built from many different processes. For example, acommand line with<SPANCLASS="link">pipes (<ACLASS="linkend"HREF="ch01_04.htm"TITLE="Using Pipes to Create a New Tool ">1.4</A>)</SPAN>starts two or more processes.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PROCESS-ID-PID">process ID (PID)</A></DT><DDCLASS="glossdef"><PCLASS="para">UNIX assigns every process an ID number (called a PID) when it starts.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch38_03.htm"TITLE="Managing Processes: Overall Concepts ">38.3</A>.This number allows you to refer to a process at a later time. If youneed to<SPANCLASS="link">kill (<ACLASS="linkend"HREF="ch38_10.htm"TITLE="Destroying Processes with kill ">38.10</A>)</SPAN>a runaway program, you refer to it by its process ID.The<SPANCLASS="link"><EMCLASS="emphasis">ps</EM> (<ACLASS="linkend"HREF="ch38_05.htm"TITLE="The ps Command ">38.5</A>)</SPAN>command displays process IDs.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-.PROFILE-FILE">.profile file</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM> <ACLASS="xref"HREF="glossary.htm#GLOSS-DOT-FILES"TITLE="">dot (.) files (.cshrc, .login, .profile</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PROMPT">prompt</A></DT><DDCLASS="glossdef"><PCLASS="para">How a program asks you for information: by printing a short stringlike <CODECLASS="literal">Delete afile?</CODE> to the terminal and waiting for a response.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-SHELL-PROMPT"TITLE="">shell prompt</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-PSEUDO-CODE">pseudo-code</A></DT><DDCLASS="glossdef"><PCLASS="para">A way to write out program text, structured like a program, without using the actual programming language.Pseudo-code is usually used to explain a program.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-QUOTE">quote</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-BACKQUOTE"TITLE="">backquote</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-READ-ONLY-FILESYSTEM">read-only filesystem</A></DT><DDCLASS="glossdef"><PCLASS="para">Filesystems are usually set up to allow write access to users who havethe proper<SPANCLASS="link">permissions (<ACLASS="linkend"HREF="ch01_23.htm"TITLE="File Access Permissions ">1.23</A>)</SPAN>.The system administrator can mount a filesystem <EMCLASS="emphasis">read-only</EM>; then nouser will be able to make changes to files there.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-RECURSIVE">recursive</A></DT><DDCLASS="glossdef"><PCLASS="para">A program or routine that re-executes itself or repeats an action overand over.For example, the<SPANCLASS="link"><EMCLASS="emphasis">find</EM> (<ACLASS="linkend"HREF="ch17_01.htm#UPT-ART-7410"TITLE="The find Command Is Great; The Problem Is Finding How to Use It">17.1</A>)</SPAN>program moves through a directory tree recursively, doing something ineach directory.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-REVERSE-VIDEO">reverse video</A></DT><DDCLASS="glossdef"><PCLASS="para">On a video display, reversed foreground and background colors or tones.Reverse video is used to highlight an area or to identify text to be used or modified.For instance, if text is usually shown with black letters on a whitebackground, reverse video would have white letters on a black background.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch05_08.htm"TITLE="Terminal Escape Sequences ">5.8</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SCSI">SCSI</A></DT><DDCLASS="glossdef"><PCLASS="para">Small Computer Systems Interface, a standard interface for disk andtape devices now used on many UNIX (and non-UNIX) systems.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SEARCH-PATH">search path</A></DT><DDCLASS="glossdef"><PCLASS="para">A list of directories that the shell searches to find the program file youwant to execute.<EMCLASS="emphasis">See also</EM> articles<ACLASS="xref"HREF="ch06_04.htm"TITLE="The PATH Environment Variable ">6.4</A>and <ACLASS="xref"HREF="ch08_07.htm"TITLE="Setting Your Search Path ">8.7</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SHELL">shell</A></DT><DDCLASS="glossdef"><PCLASS="para">A program that reads and interprets command lines and also runs those programs.<EMCLASS="emphasis">See also</EM> articles<ACLASS="xref"HREF="ch08_05.htm"TITLE="Command-Line Evaluation ">8.5</A>and<ACLASS="xref"HREF="ch44_03.htm"TITLE="What's a Shell, Anyway? ">44.3</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SHELL-PROMPT">shell prompt</A></DT><DDCLASS="glossdef"><PCLASS="para">A signal from a shell (when it's used interactively) that the shell isready to read a command line.By default, the percent sign (<CODECLASS="literal">%</CODE>) is the C shell prompt and the dollar sign (<CODECLASS="literal">$</CODE>) is the Bourne shell prompt.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SLASH">slash</A></DT><DDCLASS="glossdef"><PCLASS="para">The character <CODECLASS="literal">/</CODE>.It separates elements in a pathname.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-BACKSLASH"TITLE="">backslash</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SINGLE-QUOTE">single quote</A></DT><DDCLASS="glossdef"><PCLASS="para">The <CODECLASS="literal">'</CODE> character.This isn't the same as a backquote (<CODECLASS="literal">`</CODE>).The single quote is used around a part of a UNIX command line where the shell should do no interpretation (except history substitution in the C shell).<EMCLASS="emphasis">See also</EM> articles<ACLASS="xref"HREF="ch08_14.htm"TITLE="Bourne Shell Quoting ">8.14</A>and<ACLASS="xref"HREF="ch08_15.htm"TITLE="Differences Between Bourne and C Shell Quoting ">8.15</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-DOUBLE-QUOTE"TITLE="">double quote</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SPECIAL-FILE">special file</A></DT><DDCLASS="glossdef"><PCLASS="para">An entity in the filesystem that accesses I/O devices. There is aspecial file for every terminal, every network controller, everypartition of every disk drive, and every possible way of accessingevery tape drive.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch01_29.htm"TITLE="When Is a File Not a File? ">1.29</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-STRING">string</A></DT><DDCLASS="glossdef"><PCLASS="para">A sequence of characters.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-WORD"TITLE="">word</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SUBDIRECTORY">subdirectory</A></DT><DDCLASS="glossdef"><PCLASS="para">A directory within a directory.<EMCLASS="emphasis">See also</EM> articles<ACLASS="xref"HREF="ch01_21.htm"TITLE="Making Pathnames ">1.21</A>and<ACLASS="xref"HREF="ch04_07.htm"TITLE="Make More Directories! ">4.7</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SWAPPING">swapping</A></DT><DDCLASS="glossdef"><PCLASS="para">A technique that the UNIX kernel uses to clean up physical memory.The kernel moves entire processes from memory to disk and thenreassigns the memory to some other function. Processes that have beenidle for more than a certain period may be removed from memory to save space.Swapping is also used to satisfy extreme memory shortages. When thesystem is extremely short of memory, active processes may be &quot;swapped out.&quot;</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SWITCH">switch</A></DT><DDCLASS="glossdef"><PCLASS="para"><EMCLASS="emphasis">See</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-OPTION-SWITCH"TITLE="">option switch</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SYSTEM-CALL">system call</A></DT><DDCLASS="glossdef"><PCLASS="para">The lowest-level access to the UNIX operating system.Everything else in UNIX is built on system calls.<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-LIBRARY-FUNCTION"TITLE="">library function</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-SYSTEM-V-UNIX">System V UNIX</A></DT><DDCLASS="glossdef"><PCLASS="para">A version of UNIX from AT&amp;T.The most recent Release of System&nbsp;V is Release&nbsp;4, known as V.4 or SVR4.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TCP-IP">TCP/IP</A></DT><DDCLASS="glossdef"><PCLASS="para">A network protocol that is commonly used for communications via an Ethernet.TCP/IP is also called the &quot;Internet protocol.&quot; It is also common touse TCP/IP over leased lines for long-distance communications.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TERMCAP">termcap</A></DT><DDCLASS="glossdef"><PCLASS="para">Stands for <EMCLASS="emphasis">term</EM>inal <EMCLASS="emphasis">cap</EM>abilities, an early (and still common)way to describe terminals to UNIX.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch41_11.htm"TITLE="How termcap and terminfo Describe Terminals ">41.11</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-TERMINFO"TITLE="">terminfo</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TERMINAL-EMULATOR">terminal emulator</A></DT><DDCLASS="glossdef"><PCLASS="para">A program that makes a computer display emulate (act like) a terminal.For example, many terminal emulator programs emulate the DigitalEquipment Corporation VT100 terminal.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TERMINFO">terminfo</A></DT><DDCLASS="glossdef"><PCLASS="para">A newer way to describe terminal capabilities to UNIX.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch41_11.htm"TITLE="How termcap and terminfo Describe Terminals ">41.11</A>,<ACLASS="xref"HREF="glossary.htm#GLOSS-TERMCAP"TITLE="">termcap</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-THE-NET">the Net</A></DT><DDCLASS="glossdef"><PCLASS="para">A term for two particular networks:<SPANCLASS="link">Usenet and Internet (<ACLASS="linkend"HREF="ch01_33.htm"TITLE="UNIX Networking and Communications ">1.33</A>)</SPAN>.For instance, &quot;I read it on the Net&quot; or &quot;You can get that file on the Net.&quot;</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TIMESTAMP">timestamp</A></DT><DDCLASS="glossdef"><PCLASS="para">The UNIX filesystem stores the times that each file was lastmodified, accessed, or had a change to its inode.These times&nbsp;- especially the modification time&nbsp;- are often called<EMCLASS="emphasis">timestamps</EM>.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch21_13.htm"TITLE="Read an Inode with stat ">21.13</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-TRUNCATE">truncate</A></DT><DDCLASS="glossdef"><PCLASS="para">To cut, to shorten&nbsp;- for example, &quot;truncate a file after line&nbsp;10&quot; meansto remove all lines after line&nbsp;10.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-UUENCODE-UUDECODE">uuencode, uudecode</A></DT><DDCLASS="glossdef"><PCLASS="para">Utilities that encode files with binary (8-bit) characters into an ASCII(7-bit) format&nbsp;- and decode them back into the original binary format.This is used for transferring data across communications links thatcan't transfer binary (8-bit) data.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch19_05.htm"TITLE="Using tar to Create and Unpack Archives ">19.5</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-VAX-VMS">VAX/VMS</A></DT><DDCLASS="glossdef"><PCLASS="para">A popular computer operating system from the Digital Equipment Corporation.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-WEDGED">wedged</A></DT><DDCLASS="glossdef"><PCLASS="para">A terminal or program is <EMCLASS="emphasis">wedged</EM> when it's &quot;frozen&quot; or &quot;stuck.&quot;The normal activity stops and often can't be restarted withoutresetting the terminal or killing the program.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-WHITE-SPACE">white space</A></DT><DDCLASS="glossdef"><PCLASS="para">A series of one or more space or TAB characters.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-WORD">word</A></DT><DDCLASS="glossdef"><PCLASS="para">Similar to a word in a spoken language like English, a word is a unitmade up of one or more characters.But unlike English,words in UNIX can contain white space; they can also have nocharacters (a <EMCLASS="emphasis">zero-length</EM> word).<EMCLASS="emphasis">See also</EM><ACLASS="xref"HREF="glossary.htm#GLOSS-ARGUMENT"TITLE="">argument</A>.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-XENIX">XENIX</A></DT><DDCLASS="glossdef"><PCLASS="para">One of the first versions of UNIX to run on IBM PCs, and one of thefew that will run on 80286 systems. XENIX descends from Version&nbsp;7UNIX, a version developed by AT&amp;T in the late 1970s. It has manyresemblances to BSD UNIX. Over time, XENIX has been rewritten as avariant of System&nbsp;V.2.</P></DD><DTCLASS="glossterm"><ACLASS="glossterm"NAME="GLOSS-ZOMBIES">zombies</A></DT><DDCLASS="glossdef"><PCLASS="para">Dead processes that have not yet been deleted from the process table.Zombies normally disappear almost immediately. However, at times itis impossible to delete a zombie from the process table, so it remainsthere (and in your <EMCLASS="emphasis">ps</EM> output) until you reboot. Aside fromtheir slot in the process table, zombies don't require any of thesystem's resources.<EMCLASS="emphasis">See also</EM> article<ACLASS="xref"HREF="ch38_16.htm"TITLE="Why You Can't Kill a Zombie ">38.16</A>.</P></DD><DIVCLASS="docinfo"><PCLASS="DOCINFO">- <SPANCLASS="authorinitials">JP</SPAN>, <SPANCLASS="authorinitials">ML</SPAN></P></DIV></DL><DIVCLASS="htmlnav"><P></P><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><TABLEWIDTH="515"BORDER="0"CELLSPACING="0"CELLPADDING="0"><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172"><ACLASS="SECT1"HREF="ch52_09.htm"TITLE="52.9 Software Support from RTR "><IMGSRC="../gifs/txtpreva.gif"ALT="Previous: 52.9 Software Support from RTR "BORDER="0"></A></TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="book"HREF="index.htm"TITLE="UNIX Power Tools"><IMGSRC="../gifs/txthome.gif"ALT="UNIX Power Tools"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">&nbsp;</TD></TR><TR><TDALIGN="LEFT"VALIGN="TOP"WIDTH="172">52.9 Software Support from RTR </TD><TDALIGN="CENTER"VALIGN="TOP"WIDTH="171"><ACLASS="index"HREF="index/idx_0.htm"TITLE="Book Index"><IMGSRC="../gifs/index.gif"ALT="Book Index"BORDER="0"></A></TD><TDALIGN="RIGHT"VALIGN="TOP"WIDTH="172">&nbsp;</TD></TR></TABLE><HRALIGN="LEFT"WIDTH="515"TITLE="footer"><IMGSRC="../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></DIV></BODY></HTML>