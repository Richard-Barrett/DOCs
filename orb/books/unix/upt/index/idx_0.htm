<HTML><HEAD><TITLE>Index</TITLE></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><P><A HREF="../index.htm"><IMG SRC="../gifs/smbanns.gif" ALT="Book Home" BORDER=0></A><P><FONT SIZE="-1">Symbols| <A HREF="idx_a.htm">A</A>| <A HREF="idx_b.htm">B</A>| <A HREF="idx_c.htm">C</A>| <A HREF="idx_d.htm">D</A>| <A HREF="idx_e.htm">E</A>| <A HREF="idx_f.htm">F</A>| <A HREF="idx_g.htm">G</A>| <A HREF="idx_h.htm">H</A>| <A HREF="idx_i.htm">I</A>| <A HREF="idx_j.htm">J</A>| <A HREF="idx_k.htm">K</A>| <A HREF="idx_l.htm">L</A>| <A HREF="idx_m.htm">M</A>| <A HREF="idx_n.htm">N</A>| <A HREF="idx_o.htm">O</A>| <A HREF="idx_p.htm">P</A>| <A HREF="idx_q.htm">Q</A>| <A HREF="idx_r.htm">R</A>| <A HREF="idx_s.htm">S</A>| <A HREF="idx_t.htm">T</A>| <A HREF="idx_u.htm">U</A>| <A HREF="idx_v.htm">V</A>| <A HREF="idx_w.htm">W</A>| <A HREF="idx_x.htm">X</A>| <A HREF="idx_y.htm">Y</A>| <A HREF="idx_z.htm">Z</A></FONT><H1>Index: Symbols and Numbers</H1><DL><DT><A NAME=".22batch-editing.22">&quot;batch editing&quot;</A>: <A HREF="../ch33_01.htm">33. Batch Editing</A><DT><A NAME=".28zero.29-process-id">0 (zero) process ID</A>: <A HREF="../ch38_12.htm">38.12. Killing All Your Processes </A><DT><A NAME=".2d.31-process-id">-1 process ID</A>: <A HREF="../ch38_12.htm">38.12. Killing All Your Processes </A><DT><A NAME=".31">1</A><DD><DL>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A></DL><DT><A NAME=".2en-filename-extension">.n filename extension</A>: <A HREF="../ch01_17.htm">1.17. Filename Extensions </A><DT><A NAME=".38.2dbit-filenames">8-bit filenames</A>: <A HREF="../ch23_15.htm">23.15. Using unlink to Remove a File with a Strange Name </A><DT><A NAME="cols-file">80cols file</A><DD><DL>  <DT><A HREF="../ch42_06.htm#UPT-ART-7000-SECT-1.1">42.6.1. Single Line Screen Width: 80cols </A>  <DT><A HREF="../ch52_04.htm">52.4. Quick Descriptions of What's on the Disc </A></DL><DT><A NAME=".39.2dtrack-tapes">9-track tapes</A>: <A HREF="../ch20_06.htm">20.6. Writing a Tape Drive on a Remote Machine </A><DT><A NAME=".26">&amp; (ampersand)</A><DD><DL>  <DT>&amp;&amp;: <A HREF="../ch48_04.htm#UPT-ART-3180-SECT-1.3">48.4.3. Automating Your Own Calendar </A>  <DT>&amp;&amp; C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>&amp;&amp; operator: <A HREF="../ch44_09.htm">44.9. Testing Your Success </A>  <DD><DL>    <DT>examples: <A HREF="../ch44_09.htm">44.9. Testing Your Success </A>  </DL>  <DT>&amp;&amp; sequence: <A HREF="../ch11_09.htm">11.9. Running a Series of Commands on a File </A>  <DT>&amp;=: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>on command line: <A HREF="../ch01_27.htm">1.27. How Background Processing Works </A>  <DT>at end of commands: <A HREF="../ch38_03.htm">38.3. Managing Processes: Overall Concepts </A>  <DT>escaping special characters using: <A HREF="../ch51_03.htm">51.3. ASCII Characters: Listing and Getting Values </A>  <DT>as logical operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A></DL><DT><A NAME=".2a">* (asterisk)</A><DD><DL>  <DT>*= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>as arithmetic operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.2">47.4.3.2. Arithmetic Operators </A>  <DT>examples: <A HREF="../ch50_06.htm">50.6. Searching Online Manual Pages </A>  <DT>filename wildcard: <A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>  <DT>in pcal: <A HREF="../ch48_09.htm">48.9. PostScript Calendars with pcal </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>regular expression metacharacter  <DD><DL>    <DT><A HREF="../ch26_03.htm">26.3. Understanding Expressions </A>    <DT><A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.6">26.4.6. Repeating Character Sets with * </A>  </DL>  <DT>as wildcard character: <A HREF="../ch01_16.htm">1.16. Wildcards </A></DL><DT><A NAME=".40">@ (at sign)</A>: <A HREF="../ch09_05.htm">9.5. Build Strings with {&nbsp;} </A><DT><A NAME=".40-commands">@ commands (csh)</A><DD><DL>  <DT><A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT><A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.4">47.4.4. Examples</A></DL><DT><A NAME=".40.2dfunctions">@-functions (vi)</A>: <A HREF="../ch31_04.htm">31.4. vi @-Functions </A><DT><A NAME=".5c">\ (backslash)</A><DD><DL>  <DT>\&lt; \&gt; metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.8">26.4.8. Matching Words with \&nbsp;&lt; and \&nbsp;&gt; </A>  <DT>\( \) metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.9">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>  <DT>\1, \2, ... metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.9">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>  <DT>\{ \} metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.7">26.4.7. Matching a Specific Number of Sets with \&nbsp;{ and \&nbsp;} </A>  <DT>for avoiding multiline commands: <A HREF="../ch09_13.htm">9.13. Multiline Commands, Secondary Prompts </A>  <DT>before newline  <DD><DL>    <DT><A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.4">8.14.4. Multiline Quoting </A>    <DT><A HREF="../ch08_15.htm#UPT-ART-7929-SECT-1.2">8.15.2. How Quoting Works </A>  </DL>  <DT>in C shell scripts: <A HREF="../ch44_14.htm">44.14. Putting awk, sed, etc., Inside Shell Scripts </A>  <DT>for escape sequences: <A HREF="../ch08_06.htm#UPT-ART-7911-SECT-1.1">8.6.1. Portability </A>  <DT>escaping special characters: <A HREF="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>  <DT>placement of: <A HREF="../ch08_20.htm">8.20. How Many Backslashes?</A>  <DT>preventing history substitution: <A HREF="../ch08_05.htm">8.5. Command-Line Evaluation </A>  <DT>in prompt settings: <A HREF="../ch07_12.htm">7.12. External Commands Send Signals to Set Variables </A>  <DT>quoting and: <A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.2">8.14.2. How Quoting Works </A>  <DT>in stty command: <A HREF="../ch05_09.htm">5.9. Setting Your Erase, Kill, and Interrupt Characters </A></DL><DT><A NAME=".60">` (backquotes)</A><DD><DL>  <DT>command substitution: <A HREF="../ch09_16.htm">9.16. Command Substitution </A>  <DT>examples  <DD><DL>    <DT><A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>    <DT><A HREF="../ch50_03.htm">50.3. apropos on Systems Without apropos </A>  </DL>  <DT>for loops combined with: <A HREF="../ch45_16.htm">45.16. Standard Input to a for Loop </A>  <DT>nesting: <A HREF="../ch45_31.htm">45.31. Nested Command Substitution </A></DL><DT><A NAME=".21">! (bang)</A><DD><DL>  <DT>!* variable: <A HREF="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>  <DT>!:script: <A HREF="../ch52_04.htm">52.4. Quick Descriptions of What's on the Disc </A>  <DT>!= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>!= relational operator: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>!\*: <A HREF="../ch50_08.htm">50.8. Which Version Am I Using? </A>  <DT>automatic temporary files: <A HREF="../ch09_18.htm#UPT-ART-109-SECT-1.2">9.18.2. Automatic Temporary Files with ! </A>  <DT>with brackets wildcards: <A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>  <DT>in C shell quoting: <A HREF="../ch08_15.htm#UPT-ART-7929-SECT-1.2">8.15.2. How Quoting Works </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>history substitution commands: <A HREF="../ch11_07.htm">11.7. History Substitutions </A>  <DD><DL>    <DT>!:n* sequence    <DD><DL>      <DT><A HREF="../ch11_04.htm">11.4. My Favorite Is !:n* </A>      <DT><A HREF="../ch11_07.htm">11.7. History Substitutions </A>    </DL>    <DT>!$ sequence    <DD><DL>      <DT><A HREF="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>      <DT><A HREF="../ch11_03.htm">11.3. My Favorite Is !$ </A>      <DT><A HREF="../ch11_06.htm">11.6. Using !$ for Safety with Wildcards </A>      <DT><A HREF="../ch11_07.htm">11.7. History Substitutions </A>    </DL>  </DL>  <DT>NOT operator  <DD><DL>    <DT><A HREF="../ch17_01.htm#UPT-ART-7410">17.1. The find Command Is Great; The Problem Is Finding How to Use It</A>    <DT><A HREF="../ch17_06.htm">17.6. Be an Expert on find Search Operators </A>  </DL>  <DT>preceding operators: <A HREF="../ch05_03.htm">5.3. Setting the Terminal Type When You Log In </A>  <DT>terms for: <A HREF="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A></DL><DT><A NAME=".7b-.7d">{ } (braces)</A><DD><DL>  <DT>{ cmd } C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>/{ /} metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>\{ \} metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.7">26.4.7. Matching a Specific Number of Sets with \&nbsp;{ and \&nbsp;} </A>  <DT>Bourne shell list operators: <A HREF="../ch13_08.htm">13.8. Using {list} to Group Bourne Shell Commands </A>  <DT>building strings: <A HREF="../ch09_05.htm">9.5. Build Strings with {&nbsp;} </A>  <DT>in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.1">47.4.1. Variables </A>  <DT>creating new files with: <A HREF="../ch01_16.htm">1.16. Wildcards </A>  <DT>filename wildcards  <DD><DL>    <DT><A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>    <DT><A HREF="../ch15_03.htm">15.3. Adding { } Operators to Korn (and Bourne) Shells </A>  </DL>  <DT>find -exec command and: <A HREF="../ch17_10.htm">17.10. Running Commands on What You Find </A>  <DT>foreach loop and: <A HREF="../ch09_11.htm">9.11. Repeating a Command with a foreach Loop </A>  <DT>in shells: <A HREF="../ch01_18.htm">1.18. Who Handles Wildcards? </A>  <DT>with variable names: <A HREF="../ch06_08.htm">6.8. Shell Variables </A></DL><DT><A NAME=".5b-.5d">[ ] (brackets)</A><DD><DL>  <DT>[ command  <DD><DL>    <DT><A HREF="../ch46_04.htm">46.4. Stop Syntax Errors in Numeric Tests </A>    <DT><A HREF="../ch46_05.htm">46.5. Stop Syntax Errors in String Tests </A>  </DL>  <DT>[ at start of escape sequence: <A HREF="../ch05_08.htm">5.8. Terminal Escape Sequences </A>  <DT>fast find and: <A HREF="../ch17_18.htm">17.18. Using "Fast find&quot;</A>  <DT>filename wildcards: <A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>  <DT>regular expression metacharacter: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.4">26.4.4. Specifying a Range of Characters with [...] </A>  <DT>sc program using: <A HREF="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A>  <DT>wildcards: <A HREF="../ch09_04.htm">9.4. Use Wildcards to Create Files? </A></DL><DT><A NAME=".5e">^ (caret)</A><DD><DL>  <DT>^[: (see <A HREF="idx_c.htm#ctrl-key">CTRL key</A>)  <DT>^^ sequence: <A HREF="../ch11_05.htm">11.5. My Favorite Is ^^ </A>  <DT>^= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>^^ sequence: <A HREF="../ch11_07.htm">11.7. History Substitutions </A>  <DT>^M: (see <A HREF="idx_c.htm#ctrl.2dm-character">CTRL-m character</A>)  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>filename wildcard: <A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>  <DT>in control character: <A HREF="../ch41_11.htm#UPT-ART-7967-SECT-1.0.1">41.11.1. Special Character Codes </A>  <DT>regular expression metacharacter: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.1">26.4.1. The Anchor Characters: ^ and $ </A>  <DT>within [ ] metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.5">26.4.5. Exceptions in a Character Set </A></DL><DT><A NAME=".3a">: (colon)</A><DD><DL>  <DT>:p operator: <A HREF="../ch11_10.htm">11.10. Check Your History First with :p </A>  <DT>as alternative to #: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>as comment character: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>as parameter substitute: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>colon-separated lists: <A HREF="../ch04_10.htm">4.10. Find All Command Versions with whereiz </A>  <DT>examples: <A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>  <DT>if loops using: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>as logical operator for expr  <DD><DL>    <DT><A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>    <DT><A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  </DL>  <DT>as null character: <A HREF="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>  <DT>as parameter substitute: <A HREF="../ch45_12.htm">45.12. Parameter Substitution </A>  <DT>separating fields  <DD><DL>    <DT><A HREF="../ch01_09.htm">1.9. Which Shell Am I Running? </A>    <DT><A HREF="../ch05_06.htm">5.6. Checklist: Terminal Hangs When I Log In </A>  </DL>  <DT>separating values: <A HREF="../ch05_03.htm">5.3. Setting the Terminal Type When You Log In </A>  <DT>shell script comments: <A HREF="../ch45_02.htm">45.2. The Story of  : #  #! </A>  <DT>string editing operator: <A HREF="../ch09_06.htm">9.6. String Editing (Colon) Operators </A>  <DT>trap used with: <A HREF="../ch45_08.htm">45.8. Handling Signals to Child Processes </A>  <DT>while loops using: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A></DL><DT><A NAME=".2c">, (comma) in filenames</A>: <A HREF="../ch01_15.htm">1.15. Filenames </A><DT><A NAME=".24">$ (dollar sign)</A><DD><DL>  <DT>$0 parameter: <A HREF="../ch44_22.htm">44.22. Finding a Program Name; Multiple Program Names </A>  <DT>$1 command-line arguments  <DD><DL>    <DT><A HREF="../ch44_11.htm">44.11. Set Exit Status of a Shell (Script) </A>    <DT><A HREF="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A>    <DT><A HREF="../ch44_15.htm">44.15. Handling Command-Line Arguments in Shell Scripts </A>  </DL>  <DT>$* argument: <A HREF="../ch45_30.htm#UPT-ART-232-SECT-1.1">45.30.1. Matching with expr </A>  <DT>$@ argument: <A HREF="../ch45_30.htm#UPT-ART-232-SECT-1.1">45.30.1. Matching with expr </A>  <DT>$! variable: <A HREF="../ch47_02.htm#UPT-ART-393-SECT-1.5">47.2.5. Variable Syntax </A>  <DT>$$ command-line arguments: <A HREF="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A>  <DT>$# command-line argument: <A HREF="../ch44_15.htm#UPT-ART-7130-SECT-1.3">44.15.3. Counting Arguments with $# </A>  <DT>$&lt; variable: <A HREF="../ch47_02.htm#UPT-ART-393-SECT-1.1.2">47.2.1.2. Reading Files </A>  <DT>$() command: <A HREF="../ch45_31.htm">45.31. Nested Command Substitution </A>  <DT>$? variable: <A HREF="../ch47_02.htm#UPT-ART-393-SECT-1.1.4">47.2.1.4. More Elaborate Combinations </A>  <DT>$*: <A HREF="../ch46_07.htm">46.7. Quoting and Command-Line Parameters </A>  <DT>$@: <A HREF="../ch46_07.htm">46.7. Quoting and Command-Line Parameters </A>  <DD><DL>    <DT>passing arguments to getopt: <A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>  </DL>  <DT>$@ argument: <A HREF="../ch44_15.htm#UPT-ART-7130-SECT-1.1">44.15.1. With the  $@"</A>  <DT>as wildcard: <A HREF="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>  <DT>Bourne shell script variable: <A HREF="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>  <DT>in C shells: <A HREF="../ch47_05.htm">47.5. Using C Shell Arrays </A>  <DT>quoting and: <A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.2">8.14.2. How Quoting Works </A>  <DT>regular expression metacharacter: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.1">26.4.1. The Anchor Characters: ^ and $ </A>  <DT>with variable names: <A HREF="../ch06_08.htm">6.8. Shell Variables </A></DL><DT><A NAME=".24.2d-test">$- test</A>: <A HREF="../ch02_11.htm">2.11. Faster ksh and bash Startup with $- Test </A><DT><A NAME=".2e">. (dot)</A><DD><DL>  <DT>. command, subroutines compared to: <A HREF="../ch44_23.htm">44.23. Reading Files with the . and source Commands </A>  <DT>. scripts: <A HREF="../ch44_23.htm">44.23. Reading Files with the . and source Commands </A>  <DT>.. for parent directory: <A HREF="../ch18_04.htm#UPT-ART-7944-SECT-1.2">18.4.2. Links to a Directory </A>  <DT>for current directory: <A HREF="../ch18_04.htm#UPT-ART-7944-SECT-1.2">18.4.2. Links to a Directory </A>  <DT>in filenames  <DD><DL>    <DT><A HREF="../ch01_15.htm">1.15. Filenames </A>    <DT><A HREF="../ch01_16.htm">1.16. Wildcards </A>  </DL>  <DT>filenames starting with: (see <A HREF="idx_d.htm#dot-files">dot files</A>)  <DT>in pathnames: <A HREF="../ch01_21.htm">1.21. Making Pathnames </A>  <DT>regular expression metacharacter  <DD><DL>    <DT><A HREF="../ch26_03.htm">26.3. Understanding Expressions </A>    <DT><A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.3">26.4.3. Match any Character with . (Dot) </A>  </DL>  <DT>terms for: <A HREF="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A></DL><DT><A NAME=".3d">= (equal sign)</A><DD><DL>  <DT>== C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>=~ C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>for alias definitions: <A HREF="../ch10_04.htm">10.4. Aliases in ksh and bash </A>  <DT>as arithmetic operator for expr: <A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>as relational operator for expr  <DD><DL>    <DT><A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>    <DT><A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  </DL></DL><DT><A NAME=".23"># (hash mark)</A><DD><DL>  <DT>: (colon) used in place of: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>#!  <DD><DL>    <DT>Bourne shell scripts using: <A HREF="../ch44_04.htm">44.4. Testing How Your System Executes Files </A>  </DL>  <DT>#! notation  <DD><DL>    <DT><A HREF="../ch08_17.htm">8.17. verbose and echo Variables Show Quoting </A>    <DT><A HREF="../ch45_02.htm">45.2. The Story of  : #  #! </A>    <DT><A HREF="../ch45_04.htm">45.4. Fun with #! </A>    <DT>in Bourne shell scripts: <A HREF="../ch44_02.htm">44.2. Writing a Simple Shell Program </A>    <DT>character limit: <A HREF="../ch45_04.htm">45.4. Fun with #! </A>    <DT>examples    <DD><DL>      <DT><A HREF="../ch45_03.htm">45.3. Don't Need a Shell for Your Script?  Don't Use One </A>      <DT><A HREF="../ch45_04.htm">45.4. Fun with #! </A>    </DL>    <DT>executing files without showing: <A HREF="../ch45_05.htm">45.5. A File That Shows Itself... and What #! Does </A>    <DT>making programs executable: <A HREF="../ch45_04.htm">45.4. Fun with #! </A>  </DL>  <DT>alternatives to: <A HREF="../ch45_09.htm">45.9. The Unappreciated Bourne Shell  ":&quot; Operator</A>  <DT>for comments: <A HREF="../ch10_02.htm#UPT-ART-2340-SECT-1.1">10.2.1. Simple Aliases </A>  <DT>in crontab entries: <A HREF="../ch40_12.htm#UPT-ART-5410-SECT-1.1">40.12.1. Execution Scheduling </A>  <DT>shell script comments: <A HREF="../ch45_02.htm">45.2. The Story of  : #  #! </A></DL><DT><A NAME=".2d">- (hyphen)</A><DD><DL>  <DT>-= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>-- (two dashes) as argument to set command: <A HREF="../ch44_19.htm">44.19. The Bourne Shell set Command </A>  <DT>- as dashes: <A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>  <DT>as arithmetic operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>C shell operator  <DD><DL>    <DT><A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>    <DT><A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.2">47.4.3.2. Arithmetic Operators </A>  </DL>  <DT>command-line arguments starting with  <DD><DL>    <DT><A HREF="../ch44_16.htm">44.16. Handling Command-Line Arguments with a for Loop </A>    <DT><A HREF="../ch44_17.htm">44.17. Handling Arguments with while and shift </A>  </DL>  <DT>filenames starting with: <A HREF="../ch23_14.htm">23.14. Handling a Filename Starting with a Dash (-) </A>  <DT>with &lt;&lt; operator: <A HREF="../ch08_18.htm">8.18. Here Documents </A>  <DT>in login shell: <A HREF="../ch02_16.htm">2.16. Approved Shells: Using Unapproved Login Shell </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>for stdin (on command line): <A HREF="../ch13_13.htm">13.13. The "Filename&quot; - </A></DL><DT><A NAME=".3c">&lt; (left angle bracket)</A><DD><DL>  <DT>&lt;= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>&lt;= relational operator: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>&lt;&lt; C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>&lt;&lt; operator  <DD><DL>    <DT><A HREF="../ch08_18.htm">8.18. Here Documents </A>    <DT><A HREF="../ch19_02.htm">19.2. Introduction to Shell Archives </A>  </DL>  <DT>&lt;&lt;- operator  <DD><DL>    <DT><A HREF="../ch08_18.htm">8.18. Here Documents </A>    <DT><A HREF="../ch09_14.htm">9.14. Using Here Documents for Form Letters, etc. </A>  </DL>  <DT>/&lt; /&gt; metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>\&lt; \&gt; metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.8">26.4.8. Matching Words with \&nbsp;&lt; and \&nbsp;&gt; </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>examples: <A HREF="../ch48_04.htm#UPT-ART-3180-SECT-1.3">48.4.3. Automating Your Own Calendar </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>as relational operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A></DL><DT><A NAME=".28-.29">( ) (parentheses)</A><DD><DL>  <DT>\( \) metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.9">26.4.9. Remembering Patterns with \&nbsp;(, \&nbsp;), and \1 </A>  <DT>in extended regular expressions: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>grouping expressions using: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>as operators: <A HREF="../ch02_02.htm">2.2. Shell Setup Files-Which, Where, and Why </A>  <DT>subshell operators: <A HREF="../ch13_07.htm">13.7. The () Subshell Operators </A></DL><DT><A NAME=".25">% (percent sign)</A><DD><DL>  <DT>%= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>as arithmetic operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.2">47.4.3.2. Arithmetic Operators </A>  <DT>default C shell prompt: <A HREF="../ch07_01.htm#UPT-ART-4820">7.1. Why Change Your Prompt? </A>  <DT>for job numbers  <DD><DL>    <DT><A HREF="../ch12_01.htm#UPT-ART-439-SECT-1.1">12.1.1. Foreground and Background </A>    <DT><A HREF="../ch12_03.htm">12.3. The "Current Job&quot; Isn't Always What You Expect</A>  </DL>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A></DL><DT><A NAME=".2b">+ (plus sign)</A><DD><DL>  <DT>+= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>as arithmetic operator for expr  <DD><DL>    <DT><A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>    <DT><A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  </DL>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.2">47.4.3.2. Arithmetic Operators </A>  <DT>in job reports: <A HREF="../ch12_01.htm#UPT-ART-439-SECT-1.1">12.1.1. Foreground and Background </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>regular expression metacharacter: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A></DL><DT><A NAME=".3f">? (question mark)</A><DD><DL>  <DT>?*) wildcard: <A HREF="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>  <DT>?) wildcard: <A HREF="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>  <DT>Bourne shell script variable: <A HREF="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>  <DT>examples: <A HREF="../ch47_05.htm">47.5. Using C Shell Arrays </A>  <DT>fast find and: <A HREF="../ch17_18.htm">17.18. Using "Fast find&quot;</A>  <DT>filename wildcard: <A HREF="../ch15_02.htm">15.2. Filename Wildcards in a Nutshell </A>  <DT>foreach loop and: <A HREF="../ch09_11.htm">9.11. Repeating a Command with a foreach Loop </A>  <DT>in C shells: <A HREF="../ch47_05.htm">47.5. Using C Shell Arrays </A>  <DT>regular expression metacharacter: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>shell variable: <A HREF="../ch06_09.htm">6.9. Special C Shell Variables </A>  <DT>as wildcard character: <A HREF="../ch01_16.htm">1.16. Wildcards </A></DL><DT><A NAME=".27">' (single quotes)</A>: <A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.3">8.14.3. Single Quotes Inside Single Quotes? </A><DD><DL>  <DT>around PS1 string: <A HREF="../ch07_08.htm">7.8. Highlighting in Shell Prompts </A>  <DT>with bash pre-prompt commands: <A HREF="../ch07_13.htm">7.13. Pre-Prompt Commands in bash </A>  <DT>passing wildcards to programs: <A HREF="../ch01_18.htm">1.18. Who Handles Wildcards? </A>  <DT>prompt setting and: <A HREF="../ch07_04.htm">7.4. Faster Prompt Setting with Built-Ins </A>  <DT>protecting special characters: <A HREF="../ch10_03.htm">10.3. C Shell Aliases with Command-Line Arguments </A>  <DT>quoting and  <DD><DL>    <DT><A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.2">8.14.2. How Quoting Works </A>    <DT><A HREF="../ch08_15.htm">8.15. Differences Between Bourne and C Shell Quoting </A>  </DL>  <DT>sc program using: <A HREF="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A></DL><DT><A NAME=".22">&quot; (double quotes)</A><DD><DL>  <DT>aliases in: <A HREF="../ch10_02.htm#UPT-ART-2340-SECT-1.2">10.2.2. Using More Complex Aliases </A>  <DT>for comments: <A HREF="../ch04_09.htm">4.9. Setting Up vi with the .exrc File </A>  <DT>passing wildcards to programs: <A HREF="../ch01_18.htm">1.18. Who Handles Wildcards? </A>  <DT>prompt setting: <A HREF="../ch07_08.htm">7.8. Highlighting in Shell Prompts </A>  <DT>quoting and  <DD><DL>    <DT><A HREF="../ch08_14.htm#UPT-ART-12-SECT-1.2">8.14.2. How Quoting Works </A>    <DT><A HREF="../ch08_15.htm">8.15. Differences Between Bourne and C Shell Quoting </A>  </DL>  <DT>sc program using: <A HREF="../ch49_08.htm">49.8. It's Great to Have a Spreadsheet </A>  <DT>in sed scripts: <A HREF="../ch51_06.htm">51.6. Cleaning script Files </A>  <DT>terms for: <A HREF="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A></DL><DT><A NAME=".3e">&gt; (right angle bracket)</A><DD><DL>  <DT>&gt;=: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>&gt;&amp; operator: <A HREF="../ch13_05.htm">13.5. Redirection in C Shell: Capture Errors, Too? </A>  <DT>&gt;= relational operator  <DD><DL>    <DT><A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>    <DT><A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  </DL>  <DT>&gt;&gt; C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>&gt;&gt; for appending files: <A HREF="../ch45_22.htm">45.22. Handling Files Line-by-Line </A>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.4">47.4.3.4. Comparison Operators </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>redirection operator: <A HREF="../ch06_09.htm">6.9. Special C Shell Variables </A>  <DT>as relational operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A></DL><DT><A NAME=".3b">; (semicolon)</A><DD><DL>  <DT>on command line: <A HREF="../ch08_05.htm">8.5. Command-Line Evaluation </A>  <DT>separating commands: <A HREF="../ch44_12.htm">44.12. Trapping Exits Caused by Interrupts </A></DL><DT><A NAME=".2f">/ (slash)</A><DD><DL>  <DT>/*/ wildcard: <A HREF="../ch44_06.htm">44.6. Pattern Matching in case Statements </A>  <DT>/{ /} metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>/= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>/&lt; /&gt; metacharacters: <A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT>as arithmetic operator for expr  <DD><DL>    <DT><A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>    <DT><A HREF="../ch45_28.htm#UPT-ART-4030-SECT-1.0.1">45.28.1. Examples </A>  </DL>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.2">47.4.3.2. Arithmetic Operators </A>  <DT>fast find and: <A HREF="../ch17_18.htm">17.18. Using "Fast find&quot;</A>  <DT>in filenames  <DD><DL>    <DT><A HREF="../ch01_15.htm">1.15. Filenames </A>    <DT><A HREF="../ch01_16.htm">1.16. Wildcards </A>  </DL>  <DT>in pathnames  <DD><DL>    <DT><A HREF="../ch01_21.htm">1.21. Making Pathnames </A>    <DT><A HREF="../ch14_02.htm">14.2. Using Relative and Absolute Pathnames </A>  </DL>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>for root directory: <A HREF="../ch01_19.htm">1.19. The Tree Structure of the Filesystem </A>  <DT>terms for: <A HREF="../ch51_08.htm">51.8. Type Bang Splat.  Don't Forget the Rabbit Ears </A></DL><DT><A NAME=".7e">~ (tilde)</A><DD><DL>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>ending filenames: <A HREF="../ch14_11.htm">14.11. Finding (Anyone's) Home Directory, Quickly </A>  <DT>filenames ending with: <A HREF="../ch17_18.htm">17.18. Using "Fast find&quot;</A>  <DT>for home directory  <DD><DL>    <DT><A HREF="../ch07_11.htm">7.11. dirs in Your Prompt: Better than $cwd </A>    <DT><A HREF="../ch14_11.htm">14.11. Finding (Anyone's) Home Directory, Quickly </A>  </DL>  <DT>in pathnames: <A HREF="../ch01_21.htm">1.21. Making Pathnames </A></DL><DT><A NAME=".5f">_ (underscore) in filenames</A>: <A HREF="../ch01_15.htm">1.15. Filenames </A><DT><A NAME=".7c">| (vertical bar)</A><DD><DL>  <DT><A HREF="../ch26_04.htm#UPT-ART-427-SECT-1.11">26.4.11. Extended Regular Expressions </A>  <DT><A HREF="../ch44_07.htm">44.7. Exit Status of UNIX Processes </A>  <DT><A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>  <DT>(see also <A HREF="idx_p.htm#pipelines">pipelines</A>)  <DT>|&amp; operator  <DD><DL>    <DT><A HREF="../ch13_03.htm">13.3. Send (only) Standard Error Down a Pipe </A>    <DT><A HREF="../ch13_05.htm">13.5. Redirection in C Shell: Capture Errors, Too? </A>  </DL>  <DT>|= C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.1">47.4.3.1. Assignment Operators </A>  <DT>|| operator  <DD><DL>    <DT><A HREF="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>    <DT><A HREF="../ch44_09.htm">44.9. Testing Your Success </A>    <DT><A HREF="../ch44_18.htm">44.18. Standard Command-Line Parsing </A>    <DT><A HREF="../ch46_06.htm">46.6. Watch Out for Bourne Shell -e Bug </A>    <DT><A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>    <DT>examples: <A HREF="../ch44_09.htm">44.9. Testing Your Success </A>    <DT>inverse of a condition: <A HREF="../ch44_08.htm">44.8. Test Exit Status with the if Statement </A>  </DL>  <DT>C shell operator: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.3.3">47.4.3.3. Bitwise and Logical Operators </A>  <DT>as logical operator for expr: <A HREF="../ch45_28.htm">45.28. Quick Reference: expr </A>  <DT>noclobber variable and: <A HREF="../ch13_06.htm">13.6. Safe I/O Redirection with noclobber </A>  <DT>pipes: <A HREF="../ch01_03.htm">1.3. Programs Are Designed to Work Together </A>  <DT>piping commands: <A HREF="../ch13_03.htm">13.3. Send (only) Standard Error Down a Pipe </A>  <DT>precedence in C shell: <A HREF="../ch47_04.htm#UPT-ART-7650-SECT-1.2">47.4.2. Expressions </A>  <DT>|| operator: <A HREF="../ch45_06.htm">45.6. Making Sure Your Script Runs with Bourne Shell, Without #! </A></DL></DL><P><HR WIDTH="515" ALIGN="LEFT"><P><FONT SIZE="-1">Symbols| <A HREF="idx_a.htm">A</A>| <A HREF="idx_b.htm">B</A>| <A HREF="idx_c.htm">C</A>| <A HREF="idx_d.htm">D</A>| <A HREF="idx_e.htm">E</A>| <A HREF="idx_f.htm">F</A>| <A HREF="idx_g.htm">G</A>| <A HREF="idx_h.htm">H</A>| <A HREF="idx_i.htm">I</A>| <A HREF="idx_j.htm">J</A>| <A HREF="idx_k.htm">K</A>| <A HREF="idx_l.htm">L</A>| <A HREF="idx_m.htm">M</A>| <A HREF="idx_n.htm">N</A>| <A HREF="idx_o.htm">O</A>| <A HREF="idx_p.htm">P</A>| <A HREF="idx_q.htm">Q</A>| <A HREF="idx_r.htm">R</A>| <A HREF="idx_s.htm">S</A>| <A HREF="idx_t.htm">T</A>| <A HREF="idx_u.htm">U</A>| <A HREF="idx_v.htm">V</A>| <A HREF="idx_w.htm">W</A>| <A HREF="idx_x.htm">X</A>| <A HREF="idx_y.htm">Y</A>| <A HREF="idx_z.htm">Z</A></FONT><P><A HREF="../../copyrght.htm">Copyright</A> &copy; 1998 <A HREF="http://www.oreilly.com/">O'Reilly &amp; Associates, Inc.</A>All Rights Reserved.</HTML><P><IMGSRC="../../gifs/smnavbar.gif"USEMAP="#map"BORDER="0"ALT="The UNIX CD Bookshelf Navigation"><MAPNAME="map"><AREASHAPE="RECT"COORDS="0,0,73,21"HREF="../../index.htm"ALT="The UNIX CD Bookshelf"><AREASHAPE="RECT"COORDS="74,0,163,21"HREF="../index.htm"ALT="UNIX Power Tools"><AREASHAPE="RECT"COORDS="164,0,257,21"HREF="../../unixnut/index.htm"ALT="UNIX in a Nutshell"><AREASHAPE="RECT"COORDS="258,0,321,21"HREF="../../vi/index.htm"ALT="Learning the vi Editor"><AREASHAPE="RECT"COORDS="322,0,378,21"HREF="../../sedawk/index.htm"ALT="sed &amp; awk"><AREASHAPE="RECT"COORDS="379,0,438,21"HREF="../../ksh/index.htm"ALT="Learning the Korn Shell"><AREASHAPE="RECT"COORDS="439,0,514,21"HREF="../../lrnunix/index.htm"ALT="Learning the UNIX Operating System"></MAP></BODY></HTML>