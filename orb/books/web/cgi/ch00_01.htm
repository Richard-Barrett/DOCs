<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Preface 0] Preface</TITLE><META NAME="author" CONTENT="Shishir Gundavaram"><META NAME="date" CONTENT="Mon Mar 17 13:18:39 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="cgi programming"><META NAME="title" CONTENT="CGI Programming on the World Wide Web"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="CGI Programming on the World Wide Web"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top>&nbsp;</td><td width=171 align=center valign=top><b>Preface</b></td><td width=172 align=right valign=top><A HREF="ch00_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=preface><A CLASS="TITLE" NAME="CGI-CHP-0">Preface</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>What's in the Book<br><A HREF="ch00_02.htm">What You Are Expected to Know Before Reading</A><BR><A HREF="ch00_03.htm">Organization of This Book</A><BR><A HREF="ch00_04.htm">Conventions in This Book</A><BR><A HREF="ch00_05.htm">Acknowledgments</A><BR></DIV><P CLASS=para>The Common Gateway Interface (CGI) emerged as the first wayto present dynamically generated information on the World Wide Web.CGI allows the computer to generate Web pages instantly at the user'srequest rather than being written by someone in advance. And atthe time of this writing, it remains the only stable and well-understoodmethod for creating such pages. Java presents problems that havenot yet been solved. Other products are currently just in the announcementstage.<P CLASS=para>CGI is fun. You can get a kick out of writing scripts thatperform tricks for you, and the users enjoy the spice the scriptsadd to your Web pages. But CGI has a serious side too: It lets theInternet offer the kind of interactive, user-driven applicationsthat modern computer users have come to expect. CGI opens up anentire class of modern applications to the Web.<P CLASS=para>Today's computer users expect custom answers to particularquestions. Gone are the days when people were satisfied by the computingcenter staff passing out a single, general report to all users.Instead, each salesperson, manager, and engineer wants to enterspecific queries and get up-to-date responses. And if a single computercan do that, why not the Web?<P CLASS=para>This is the promise of CGI. You can display sales figuresfor particular products month by month, as requested by your staff,using beautiful pie charts or plots. You can let customers enterkeywords in order to find information on your products. You canalso offer day-to-day conveniences, like collecting comments fromusers, offering them searches through your archives, and lettingthem sign your guestbook.<DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="CGI-CHP-0-SECT-1">0.1 What's in the Book</A></h2><P CLASS=para>So, on to the book. What will you encounter here? A varietyof powerful applications that you can use and that will serve asmodels for your own CGI scripts. Among the complete applicationsin the book are an animated clock, a search tool, a survey, a quizprogram, a game, a gateway to Usenet News, and an appointment calendarbased on a clickable imagemap.<P CLASS=para>If you want to set up your own database and can't afford acommercial product like Oracle, you can use the Sprite extensionto Perl that I wrote. Sprite offers a subset of SQL commands witha flat file as the database. I also offer a debugging program calledCGI Lint, and a program that lets you write and parse extensionsto HTML. I wrote the latter program to supportmy quiz application, but you can adapt it to other purposes withoutmuch trouble. <A HREF="appe_01.htm">Appendix E, <i>Applications, Modules, Utilities, and Documentation</i></A>, lists where you can get Spriteand CGI Lint.<P CLASS=para>But the most important tool I hope to give you is not anyparticular program, but a thorough understanding of CGI's potentialand how to invoke it. The ideas in these programs should becomeyours for any purpose you want, no matter what operating systemor language you use. The old adage about "teaching someone how tofish" may no longer be politically correct, in a world of dangerouslydepleted fish stocks, but the metaphor describes what I want todo. The techniques I show in this book are fundamental CGI practices:passing information between client (browser) and server, interactingwith databases through SQL, generating graphics, writing gatewaysto existing programs, and storing information while handling multipleforms.</DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top>&nbsp;</td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch00_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>&nbsp;</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>What You Are Expected to Know Before Reading</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>