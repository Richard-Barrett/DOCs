<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 3] 3.5 Server Redirection</TITLE><META NAME="author" CONTENT="Shishir Gundavaram"><META NAME="date" CONTENT="Mon Mar 17 13:22:10 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="cgi programming"><META NAME="title" CONTENT="CGI Programming on the World Wide Web"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="CGI Programming on the World Wide Web"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_04.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 3</b></td><td width=172 align=right valign=top><A HREF="ch03_06.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="CGI-CHP-3-SECT-5">3.5 Server Redirection</A></h2><P CLASS=para>Thus far we've seen CGI examplesthat return virtual documents created on the fly. However, anotherthing CGI programs can do is to instruct the server to retrievean existing document and return that document instead. This is knownas server redirection.<P CLASS=para>To perform server redirection, you need to send a <i CLASS=command>Location</i>header to tell the server what document to send. The server willretrieve the specified document from the Web, giving the appearancethat the client had <I CLASS=emphasis>not</I> requested your CGIprogram, but that document (see <A HREF="ch03_05.htm#CGI-CHP-3-FIG-1">Figure 3.1</A>).<DIV CLASS=figure><h4 CLASS=figure><A CLASS="TITLE" NAME="CGI-CHP-3-FIG-1">Figure 3-1: Server redirection</A></h4><p><img align=middle src="./figs/cgi0301.gif" alt="[Graphic: Figure 3-1]" width=502 height=382></DIV><P CLASS=para>A common use for this feature is to return a generic documentthat contains static information. For example, say you have a formfor users to fill out, and you want to display a thank-you messageafter someone completes the form. You can have the CGI program createand display the message each time it is called. But a more efficientway would be for the program to send instructions to the serverto redirect and retrieve a file that contains a generic thank-youmessage.<P CLASS=para>Suppose you have an HTML file (<I CLASS=emphasis>thanks.html</I>)like the one below, that you want to display after the user fillsout one of your forms:<DIV CLASS=screen><P><PRE>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;Thank You!&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;&lt;H1&gt;Thank You!&lt;/H1&gt;&lt;HR&gt;Thank You for filling out this form. We will be using yourinput to improve our products.Thanks again,WWW Software, Inc.&lt;/BODY&gt;&lt;/HTML&gt;</PRE></DIV><P CLASS=para>You could use the programs discussed earlier to return staticdocuments, but it would be counterproductive to do it in that manner.Instead, it is much quicker and simpler to do the following:<DIV CLASS=screen><P><PRE>#!/usr/local/bin/perlprint "Location: /thanks.html", "\n\n";exit (0);</PRE></DIV><P CLASS=para>The server will return the HTML file <I CLASS=emphasis>thanks.html</I>located in the document root directory. You don't have to worryabout returning the MIME content type for the document; it is takencare of by the server. An important thing to note is that you cannotreturn any content type headers when you are using server redirection.<P CLASS=para>Youcan use server redirection to your advantage and design CGI applicationslike the following:<DIV CLASS=screen><P><PRE>#!/usr/local/bin/perl$uptime = `/usr/ucb/uptime`;($load_average) = ($uptime =~ /average: ([^,]*)/);$load_limit = 10.0;$simple_document = "/simple.html";$complex_document = "/complex.html";if ($load_average &gt;= $load_limit) {		print "Location: $simple_document", "\n\n";} else {		print "Location: $complex_document", "\n\n";}exit (0);</PRE></DIV><P CLASS=para>This program checks the load average of the host system withthe <I CLASS=emphasis>uptime</I>command (see <A HREF="ch03_01.htm">Chapter 3, <i>Output from the Common Gateway Interface</i></A> for an explanationof the regular expression). Depending on the load average, one oftwo documents is returned; a rich, complicated HTML document withgraphics if the system is not "busy," or a simple text-only documentotherwise.<P CLASS=para>Andthe last thing to note is that you are not limited to returningdocuments on your own server. You can also return a document (staticor virtual) located elsewhere on the Internet, so long as it hasa valid URL:<DIV CLASS=screen><P><PRE>print "Location: http://www.ora.com", "\n\n";</PRE></DIV><P CLASS=para>For example, this statement will return the home page forO'Reilly and Associates.</DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_04.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch03_06.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>The Content-length Header</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>The "Expires" and "Pragma" Headers</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>