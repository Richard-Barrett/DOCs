<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 3] Anatomy of an HTML Document</TITLE><META NAME="author" CONTENT="Chuck Musciano and Bill Kennedy"><META NAME="date" CONTENT="Mon Mar 17 08:52:28 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="HTML"><META NAME="title" CONTENT="HTML: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="HTML: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch02_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 3</b></td><td width=172 align=right valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=chapter><A CLASS="TITLE" NAME="USING-HTML-CH03">Anatomy of an HTML Document</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Appearances Can Deceive<br><A HREF="ch03_02.htm">Structure of an HTML Document</A><BR><A HREF="ch03_03.htm">HTML Tags</A><BR><A HREF="ch03_04.htm">Document Content</A><BR><A HREF="ch03_05.htm">HTML Document Elements</A><BR><A HREF="ch03_06.htm">The Document Header</A><BR><A HREF="ch03_07.htm">The Document Body</A><BR></DIV><P CLASS=para><A NAME="CH03.HTMLDOCS"></A>HTML documents are very simple and writing oneshouldn't intimidate even the most timid of computer users. First,although you might use a fancy WYSIWYG editor tohelp you compose it, an HTML document ultimately isstored, distributed, and read by a browser as a simpleASCII text file.[1]That's why even the poorest user with a barebones text editor cancompose the most elaborate of HTMLpages. (Accomplished webmasters often elicit the admiration ofHTML ``newbies'' by composingastonishingly cool pages using the crudest text editor on a cheaplaptop computer and performing in odd places like on a bus or in thebathroom.) HTML writers should, however, keepseveral of the popular browsers on hand and alternate among them toview new documents under construction. Remember, browsers differ inhow they display a page, not all browsers implement all of theHTML standards, and some have their own specialextensions to the language.<blockquote class=footnote><P CLASS=para>[1] Informally, both the text and the markup tags in anHTML document are ASCIIcharacters. Technically, unless you specify otherwise, text and tagsare made up of eight-bit characters as defined in the standardISO-8859-1 Latin character set. The HTML standarddoes support alternative character encodings, including Arabic andCyrillic. See <A HREF="appd_01.htm">Appendix D, <i>Character Entities</i></A>, for details.</blockquote><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-1">3.1 Appearances Can Deceive</A></h2><P CLASS=para>HTML documents never look alike whendisplayed by a text editor and when displayed by anHTML browser. Simply take a look at any sourceHTML document off the World Wide Web. At the veryleast, return characters, tabs, and leading spaces, although importantfor readability of the source text document, are for the most partignored in HTML. There also is a lot of extra textin an HTML source document, mostly from the displaytags and interactivity markers and their parameters that affectportions of the document, but don't themselves appear in the display.<P CLASS=para> Accordingly, new HTML authors areconfronted with having to develop not only a presentation style fortheir HTML pages, but a different style for theirHTML source text. The source document's layoutshould highlight the programming-like markup aspects ofHTML, not its display aspects. And it should bereadable not only by you, the author, but by others, as well.<P CLASS=para> Experienced HTML document writerstypically adopt a programming-like style, albeit very relaxed, fortheir source HTML text. We do the same throughoutthe book, and that style will become apparent as you compare oursource HTML examples with the actual display of thedocument by a browser.<P CLASS=para>Our formatting style is simple, but serves to create readable, easilymaintained documents:<P><UL CLASS=itemizedlist><li CLASS=listitem>Except for the document structural tags like <TT>&lt;html&gt;</TT>,<TT>&lt;head&gt;</TT>, and <TT>&lt;body&gt;</TT>, anyHTML element we used to structure the contentof a document is placed on a separate line and indented to show itsnesting level within the document.  Such elements include lists,forms, tables, and similar tags.<P><li CLASS=listitem>Any HTML element used to control theappearance or style of text is inserted in the current line oftext.  This includes basic font style tags like <TT>&lt;b&gt;</TT>(bold text) and document linkages like <TT>&lt;a&gt;</TT> (hypertextanchor).<P><li CLASS=listitem>Avoid, where possible, the breaking of a URLonto two lines. <P><li CLASS=listitem>Add extraneousnewline characters to set apart special sections of theHTML document, for instance around paragraphs ortables.<P></UL><P CLASS=para>The task of maintaining the indentation of your sourceHTML ranges from trivial to onerous. Some texteditors like Emacs manage the indentation automatically; others likecommon word processors couldn't care less about indentation and leavethe task completely up to you. If your editor makes your lifedifficult, you might consider striking a compromise, perhaps byindenting the tags to show structure, but leaving the actual textwithout indentation to make modifications easier.<P CLASS=para> No matter what compromises or stands you make on sourcecode style, however, it's important that you adopt one. You'll be veryglad you did when you go back to that HTML documentyou wrote three months ago searching for that really cool trick youdid with.... Now, where was that?</DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch02_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" BORDER=0></a></td><td width=172 align=right valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Forging Ahead</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Structure of an HTML Document</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>