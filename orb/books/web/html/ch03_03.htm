<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 3] 3.3 HTML Tags</TITLE><META NAME="author" CONTENT="Chuck Musciano and Bill Kennedy"><META NAME="date" CONTENT="Mon Mar 17 08:52:31 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="HTML"><META NAME="title" CONTENT="HTML: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="HTML: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 3</b></td><td width=172 align=right valign=top><A HREF="ch03_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3">3.3 HTML Tags</A></h2><P CLASS=para>For the most part, HTML document tags are simple tounderstand and use since they are made up of common words,abbreviations, and notations. For instance, the <TT>&lt;i&gt;</TT>and <TT>&lt;/i&gt;</TT> tags tell the browser to respectively startand stop italicizing the text characters that come betweenthem. Accordingly, the syllable ``simp'' in our barebonesHTML example would appear italicized on a browserdisplay.<P CLASS=para> The HTML standard and its variousextensions define how and where you place tags within adocument. Let's take a closer look at that syntactic sugar that holdstogether all HTML documents.<DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.1">The Syntax of a Tag</A></h3><P CLASS=para><A NAME="CH03.TAGSYNTAX"></A><A NAME="CH03.ATTRIBUTES"></A>Every HTML tag consists of a tag<I CLASS=emphasis>name</I>, sometimes followed by an optional list oftag <I CLASS=emphasis>attributes</I>, all placed between opening andclosing brackets (&lt; and &gt;). Thesimplest tag is nothing more than a name appropriately enclosed inbrackets, such as <TT>&lt;head&gt;</TT> and<TT>&lt;i&gt;</TT>. More complicated tags have attributes, which mayhave specific values that are defined by the document author; othersmodify the behavior of the tag.<P CLASS=para> Tag and attribute names are not case sensitive. There's nodifference in effect between <TT>&lt;head&gt;</TT>,<TT>&lt;Head&gt;</TT>, <TT>&lt;HEAD&gt;</TT>, or even<TT>&lt;HeaD&gt;</TT>; they are all equivalent. The values that youassign to a particular attribute may be case sensitive, however,depending on your browser and server. In particular, file location andname references--universal resource locators(URLs)--are case sensitive. <I CLASS=emphasis>[URLs, <A HREF="ch06_02.htm#USING-HTML-CH06-SECT-2">6.2</A>]</I><P CLASS=para>Tag attributes, if any, belong after the tag name, each separated byone or more tab, space, or return characters. Their order ofappearance is not important.<P CLASS=para>A tag attribute's value, if any, follows an equal sign(=) after the attribute name. You may include spaces around the equalsign, so that width=6, width = 6, width=6, and width= 6 all meanthe same. For readability, however, we prefer not to includespaces. That way, it's easier to pick out an attribute/value pairfrom a crowd of pairs in a lengthy tag.<P CLASS=para>If an attribute's value is a single word or number (no spaces), you maysimply add it after the equal sign. All other values should beenclosed in single or double quotes, especially those values thatcontain several words separated by spaces. The length of the value islimited to 1024 characters.<P CLASS=para>Most browsers are tolerant of how tags are punctuated and brokenacross lines. Nonetheless, avoid breaking tags across lines in yoursource document whenever possible. This rule promotes readability andreduces potential errors in your HTML documents.</DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.2">Sample Tags</A></h3><P CLASS=para>Here are some tags with attributes:<DIV CLASS=screen><P><PRE><TT>&lt;a href="http://www.ora.com/catalog.html"&gt;</TT><TT>&lt;ul compact&gt;</TT><TT>&lt;input name=filename size=24 maxlength=80&gt;</TT><TT>&lt;link title="Table of Contents"&gt;</TT></PRE></DIV><P CLASS=para>The first example is the <TT>&lt;a&gt;</TT> tag for a hyperlink toO'Reilly &amp; Associates' World Wide Web-based catalog ofproducts. It has a single attribute, href, followed by the catalog's address incyberspace--its URL.<P CLASS=para> The second example shows a tag that formats text into anunordered list of items. Its single attribute--compact, which limits the space between listitems--does not require a value.<P CLASS=para> The third example shows a tag with multiple attributes,each with a value that does not require enclosing quotes.<P CLASS=para>The last example shows proper use of enclosing quotes when theattribute value is more than one word long.<P CLASS=para> Finally, what is not immediately evident in theseexamples is that while attribute names are not case sensitive(href works the same as HREF and HreF), attribute values mostly are casesensitive. The value <tt CLASS=literal>filename</tt> for the name attribute in the<TT>&lt;input&gt;</TT> tag example is not the same as the value<tt CLASS=literal>Filename</tt>, for instance.</DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.3">Starting and Ending Tags</A></h3><P CLASS=para><A NAME="CH03.SAETAGS1"></A><A NAME="CH03.SAETAGS2"></A>We alluded earlier to the fact that most HTML tags have a beginningand an end and affect the portion of text in between. That enclosedtext segment may be large or small, from a single text character,syllable, or word, such as the italicized ``simp'' syllablein our barebones example, to the <TT>&lt;html&gt;</TT> tag that bounds the entiredocument. The starting component of any tag is the tag name and itsattributes, if any. The corresponding ending tag is the tag namealone, preceded by a forward slash (/). Ending tags haveno attributes.</DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.4">Proper and Improper Nesting</A></h3><P CLASS=para>Tags can be put inside the affected segment of another tag (nested)for multiple tag effects on a single segment of theHTML document. For example, a portion of thefollowing text is both emboldened and included as part of an anchordefined by the <TT>&lt;a&gt;</TT> tag:<DIV CLASS=screen><P><PRE><TT>&lt;body&gt;</TT>This is some text in the body, with a<TT>&lt;a href="another_doc.html"&gt;</TT>link, a portion of whichis <TT>&lt;b&gt;</TT>set in bold<TT>&lt;/b&gt;</TT><TT>&lt;/a&gt;</TT><TT>&lt;/body&gt;</TT></PRE></DIV><P CLASS=para>According to the HTML standard, you must end nestedtags starting with the most recent one and work your way back out. Forinstance in the example, we end the bold tag (<TT>&lt;/b&gt;</TT>)before ending the link tag (<TT>&lt;/a&gt;</TT>) since we started inthe reverse order: <TT>&lt;a&gt;</TT> tag first, then<TT>&lt;b&gt;</TT> tag. It's a good idea to follow that standard,even though most browsers don't absolutely insist you do so. You mayget away with violating this nesting rule for one browser, sometimeseven with all current browsers. But eventually a new browser versionwon't allow the violation and you'll be hard pressed to straighten outyour source HTML document.</DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.5">Tags Without Ends</A></h3><P CLASS=para>According to the HTML standard, only a few tags donot have an ending tag. For example, the <TT>&lt;br&gt;</TT> tagcauses a line break; it has no effect otherwise on the subsequentportion of the document and, hence, does not need an ending tag.<P CLASS=para>The standard HTML tags that do not have corresponding ending tags are:<TT>&lt;base&gt;</TT>, <TT>&lt;br&gt;</TT>, <TT>&lt;dd&gt;</TT>, <TT>&lt;dt&gt;</TT>, <TT>&lt;hr&gt;</TT>, <TT>&lt;img&gt;</TT>, <TT>&lt;input&gt;</TT>, <TT>&lt;isindex&gt;</TT>, <TT>&lt;li&gt;</TT>, <TT>&lt;link&gt;</TT>, <TT>&lt;meta&gt;</TT>, <TT>&lt;nextid&gt;</TT>, and <TT>&lt;option&gt;</TT></DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.6">Omitting Tags</A></h3><P CLASS=para>You often see documents in which the author seemingly has forgotten toinclude many ending tags in apparent violation of theHTML standard. But your browser doesn't complain,and the documents displays just fine. What gives? TheHTML standard lets you omit certain tags or theirendings for clarity and ease of preparation. TheHTML standard writers didn't intend the language tobe tedious.<P CLASS=para> For example, the <TT>&lt;p&gt;</TT> tag that definesthe start of a paragraph has a corresponding end tag<TT>&lt;/p&gt;</TT>, but the <TT>&lt;/p&gt;</TT> ending tag rarelyis used. In fact, many HTML authors don't even knowit exists! <I CLASS=emphasis>[<TT>&lt;p&gt;</TT>, <A HREF="ch04_01.htm#USING-HTML-CH04-SECT-1.2">4.1.2</A>]</I><P CLASS=para> Rather, the HTML standard lets youomit a starting tag or ending tag whenever it can be unambiguouslyinferred by the surrounding context. Many browsers make good guesseswhen confronted with missing tags, leading the document author toassume that a valid omission was made. When in doubt, add the endingtag: it'll make life easier for yourself, the browser, and anyoneelse who might need to modify your document in the future.</DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="USING-HTML-CH03-SECT-3.7">Ignored or Redundant Tags</A></h3><P CLASS=para>Browsers sometimes ignore tags. This usually happens with redundanttags whose effects merely cancel or substitute for themselves. Thebest example is a series of <TT>&lt;p&gt;</TT> tags, one after theother with no intervening text. Unlike the similar series of repeatingreturn characters in a text-processing document, most browsers skip toa new line only once. The extra <TT>&lt;p&gt;</TT> tags areredundant and usually ignored by the browser.<P CLASS=para>In addition, most browsers ignore any tag that they don't understandor that was incorrectly specified by the document author. Browsershabitually forge ahead and make some sense of a document, no matterhow badly formed and error-ridden it may be. This isn't just a tacticto overcome errors, it's also an important strategy forextensibility. Imagine how much harder it would be to add new featuresto the language if the existing base of browsers choked on them.<P CLASS=para> The thing to watch out for with nonstandard tags thataren't supported by most browsers is their enclosed contents, ifany. Browsers that recognize the new tag may process those contentsdifferently than those that don't support the new tag. For example,Internet Explorer supports a <TT>&lt;comment&gt;</TT> tag whosecontents serve to document the source HTML and arenot intended to be viewed by the user. However, none ofthe other browsers recognize the <TT>&lt;comment&gt;</TT> tag andrender its contents on the user's screen, effectively defeating thetag's purpose besides ruining the document's appearance. <I CLASS=emphasis>[<TT>&lt;comment&gt;</TT>, <A HREF="ch03_04.htm#USING-HTML-CH03-SECT-4.3">3.4.3</A>]</I></DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" BORDER=0></a></td><td width=172 align=right valign=top><A HREF="ch03_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Structure of an HTML Document</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Document Content</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>