<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Appendix C] Differences between Navigator 2.0 and 3.0</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Tue Apr 22 18:18:59 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="appb_03.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Appendix C</b></td><td width=172 align=right valign=top><A HREF="appc_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=appendix><A CLASS="TITLE" NAME="JSCRIPT-APP-DIFFS11">C. Differences between Navigator 2.0 and 3.0</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Core Language Changes<br><A HREF="appc_02.htm">LiveConnect</A><BR><A HREF="appc_03.htm">JavaScript Security</A><BR><A HREF="appc_04.htm">Image Manipulation</A><BR><A HREF="appc_05.htm">The Window Object</A><BR><A HREF="appc_06.htm">The Location Object</A><BR><A HREF="appc_07.htm">Forms and Form Elements</A><BR><A HREF="appc_08.htm">Miscellaneous Changes</A><BR></DIV><P CLASS=para>    There have been quite a few changes between Navigator 2.0 and    Navigator 3.0. Some of these are differences in the core JavaScript    language--differences between JavaScript 1.0 and JavaScript 1.1.    Others are the addition of new objects, the implementation of    LiveConnect, and changed functionality in existing objects. The    changes are listed below. Details can be found on the various    reference entries, and in the main chapters of the book.<A NAME="APPC.DIFF1"></A>  <DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="appc-SECT1-AUTOID.1">C.1 Core Language Changes</A></h2><P CLASS=para>      There have been quite a few additions and improvements to the core      JavaScript language, and to the way that it is embedded in HTML      files:     <P><UL CLASS=itemizedlist><li CLASS=listitem>	  The <tt CLASS=literal>typeof</tt> and <tt CLASS=literal>void</tt>	  operators have been added. See <A HREF="ch04_01.htm">Chapter 4, <i>Expressions and Operators</i></A>.	<P><li CLASS=listitem>	  The <tt CLASS=literal>constructor</tt> property of all objects	  completements the <tt CLASS=literal>typeof</tt> operator as a	  way to determine the type of objects. (The	  <tt CLASS=literal>type</tt> property the Element object serves a	  similar purpose for HTML form elements). See <A HREF="ch07_01.htm">Chapter 7, <i>Objects</i></A> and the <A HREF="reference/objco.htm">Object.constructor</A> reference entry.	<P><li CLASS=listitem>	  Constructor functions may now have a prototype object that	  defines methods, constants, and default properties shared by	  all objects created by the constructor. See <A HREF="ch07_01.htm">Chapter 7, <i>Objects</i></A>, and the <A HREF="reference/objco.htm">Object.constructor</A> reference entry.	<P><li CLASS=listitem>	  The String object is now a true JavaScript object, with a	  constructor, and a new <tt CLASS=literal>split()</tt> method.	<P><li CLASS=listitem>	  The Boolean and Number objects have been added. The Number	  object defines several useful constants.	<P><li CLASS=listitem>	  The Function object now supports a constructor for the	  creation of "anonymous" functions. See	  <A HREF="ch06_01.htm">Chapter 6, <i>Functions</i></A>.	<P><li CLASS=listitem>	  The Array object provides a useful constructor for the	  creation of arrays, and also new <tt CLASS=literal>sort()</tt>,	  <tt CLASS=literal>reverse()</tt>, and <tt CLASS=literal>join()</tt>	  methods. Array handling in JavaScript 1.1 is much improved	  over JavaScript 1.0. See <A HREF="ch08_01.htm">Chapter 8, <i>Arrays</i></A>.	<P><li CLASS=listitem>	  The <tt CLASS=literal>Math.random()</tt> method works on all	  platforms in JavaScript 1.1, and the Not-a-Number value,	  <tt CLASS=literal>NaN</tt>, and the <tt CLASS=literal>isNaN()</tt>	  function are implemented on all palatforms. This means that	  <tt CLASS=literal>parseInt()</tt> and	  <tt CLASS=literal>parseFloat()</tt> can now correctly return	  <tt CLASS=literal>NaN</tt> to signal invalid input.	<P><li CLASS=listitem>	  The <tt CLASS=literal>eval()</tt> function of JavaScript 1.0 has	  become a method of all objects in JavaScript 1.1. This	  allows JavaScript code to be evaluated in the context of any	  desired object. When used as a function in JavaScript 1.1,	  <tt CLASS=literal>eval()</tt> will evaluate the code in the	  context of the current window, just as it did in JavaScript	  1.0. 	<P><li CLASS=listitem>	  All objects can now be given an <tt CLASS=literal>assign()</tt>	  method, which essentially overloads the assignment operator	  for that particular object.	  See <A HREF="ch07_01.htm">Chapter 7, <i>Objects</i></A>.	<P><li CLASS=listitem>	  Files of pure JavaScript code, given the	  <i CLASS=filename>.js</i> file extension, may now be included	  within HTML files with the <tt CLASS=literal>SRC</tt> attribute	  of the <tt CLASS=literal>&lt;SCRIPT&gt;</tt> tag.	  See <A HREF="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>.	<P><li CLASS=listitem>	  You can specify code that requires JavaScript 1.1 and should	  not be run on JavaScript 1.0 platforms with the	  <tt CLASS=literal>LANGUAGE="JavaScript1.1"</tt> attribute of the	  <tt CLASS=literal>&lt;SCRIPT&gt;</tt> tag.	  See <A HREF="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>.	<P><li CLASS=listitem>	  JavaScript code can also be embedded within HTML tags	  between <tt CLASS=literal>&amp;{</tt> and <tt CLASS=literal>};</tt>	  using the new JavaScript entity.	  See <A HREF="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>.	<P></UL></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="appb_03.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="appc_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Form Bugs</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>LiveConnect</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>