<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 3] Variables and Data Types</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Thu Apr 24 13:13:47 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch02_07.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 3</b></td><td width=172 align=right valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=chapter><A CLASS="TITLE" NAME="JSCRIPT-CH-DATATYPES">3. Variables and Data Types</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Variables<br><A HREF="ch03_02.htm">Numbers</A><BR><A HREF="ch03_03.htm">Strings</A><BR><A HREF="ch03_04.htm">Boolean Values</A><BR><A HREF="ch03_05.htm">Functions</A><BR><A HREF="ch03_06.htm">Objects</A><BR><A HREF="ch03_07.htm">Arrays</A><BR><A HREF="ch03_08.htm">Null</A><BR><A HREF="ch03_09.htm">Undefined</A><BR><A HREF="ch03_10.htm">The Date Object</A><BR><A HREF="ch03_11.htm">Data Type Wrapper Objects</A><BR></DIV><P CLASS=para>    This chapter introduces two of the most important concepts of    programming languages:  variables and data types. A variable is a    name associated with a data value; we say that the variable "stores"    or "contains" the value. Variables allow us to store and manipulate    data in our programs.   <P CLASS=para>    Just as fundamental as variables are data types. These, as the    name suggests, are the types of data that our programs can    manipulate.  In <A HREF="ch02_01.htm">Chapter 2, <i>Lexical Structure</i></A>, we saw that    we can include numeric, string, and Boolean literals directly in    our programs. This chapter provides more detail about these data    types, and also introduces three new ones: functions, objects, and    arrays.[1]    Later chapters of the book will provide much more detail about    functions, objects, and arrays.  <blockquote class=footnote><P CLASS=para>[1] 	Technically, objects and arrays are actually two distinct	uses of a single data type. Because they are used in such	distinct ways, we will usually consider them as separate types	in this book.      </blockquote><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch03-SECT1-AUTOID.1">3.1 Variables</A></h2><P CLASS=para><A NAME="CH03.VAR1"></A>      In <A HREF="ch02_01.htm">Chapter 2, <i>Lexical Structure</i></A>, we considered JavaScript      literals: constant values embedded directly (or literally) into a      JavaScript program. A program that operated only on constant,      literal values would not be a very interesting one, and so      JavaScript (and all programming languages) use      <I CLASS=emphasis>variables</I>. Variables are names that have      values assigned to them. They provide a way to manipulate values by      name. The value associated with a name need not be constant; new      values may be assigned to existing names. Since the value      associated with a name may vary, the names are called variables.      For example, the following line of JavaScript assigns the value      <tt CLASS=literal>2</tt> to a variable named <tt CLASS=literal>i</tt>.      <DIV CLASS=programlisting><P><PRE>i = 2;</PRE></DIV>    <P CLASS=para>      And the following line adds 3 to <tt CLASS=literal>i</tt> and assigns      the result to a new variable <tt CLASS=literal>sum</tt>:      <DIV CLASS=programlisting><P><PRE>sum = i + 3;</PRE></DIV>    <DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch03-SECT2-AUTOID.1">Variable Declaration</A></h3><P CLASS=para>	Although it is often unnecessary, it is good programming style to	<I CLASS=emphasis>declare</I> variables before using them. You do	this with the <tt CLASS=literal>var</tt> keyword, like this:      <DIV CLASS=programlisting><P><PRE>var i;var sum;</PRE></DIV><P CLASS=para>	You can also declare multiple variables with the same	<tt CLASS=literal>var</tt> keyword:      <DIV CLASS=programlisting><P><PRE>var i, sum;</PRE></DIV><P CLASS=para>	And you can combine variable declaration with initial assignment	to the variable:      <DIV CLASS=programlisting><P><PRE>var i = 2;</PRE></DIV><P CLASS=para>	As mentioned above, however, variable declaration is not	usually required. The first time you use a variable that is	not already declared, it will automatically be declared. The	only time you actually need to declare a variable with	<tt CLASS=literal>var</tt> is when declaring a local variable	inside a function definition (we haven't introduced functions	yet) and that variable name is also in use as a "global"	variable outside of the function. If you simply used the	variable in the function without declaring it, then JavaScript	would assume you meant the global variable declared outside	the function, and would not automatically declare a local one	within the function.      </DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch03-SECT2-AUTOID.2">Untyped Variables</A></h3><P CLASS=para>	An important difference between JavaScript and languages like Java	and C is that JavaScript is <I CLASS=emphasis>untyped</I>. This	means, in part, that variables can hold values of any data type,	unlike Java and C variables which can only hold one type of	data. For example, it is perfectly legal in JavaScript to	assign a number to a variable and later assign a string to it:	<DIV CLASS=programlisting><P><PRE>i = 10;i = "ten";</PRE></DIV>	In C, C++, or Java, these lines of code would be illegal.      <P CLASS=para>	A related implication of the fact that JavaScript is an untyped	language is that variable declarations do not have to specify a	data type for the variable as they do in C, C++, and Java. In	those languages, you declare a variable by specifying the name of	the data type it will hold and following that by the variable:	<DIV CLASS=programlisting><P><PRE>int i;  //<tt CLASS=replaceable><i> a declaration of an integer variable in C, C++, or Java</i></tt></PRE></DIV>	As we've seen, we just use the <tt CLASS=literal>var</tt> keyword to	declare variable in JavaScript, with no need to specify a type:	<DIV CLASS=programlisting><P><PRE>var i;  //<tt CLASS=replaceable><i> a declaration of an untyped JavaScript variable.</i></tt></PRE></DIV>	In fact, although it is good programming style to declare	variables in JavaScript, it is usually unnecessary, precisely	because JavaScript is untyped.      <P CLASS=para>	Another feature of JavaScript's lack of typing is that values	are conveniently and automatically converted from one type to	another. If you attempt to append a number to a string, for	example, JavaScript will automatically convert the number to the	corresponding string so that it can be appended. We'll see more	about data type conversion in <A HREF="ch09_01.htm">Chapter 9, <i>Further Topics in JavaScript</i></A>.      <P CLASS=para>	JavaScript is obviously a simpler language for being untyped.	The advantage of typed languages, like C++ and Java, is that they	enforce rigorous programming, and therefore make it easier to	write, maintain, and reuse long, complex programs. Since most	JavaScript programs are shorter "scripts," this rigor is not	necessary, and we benefit from the simpler syntax.      </DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch02_07.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch03_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Reserved Words</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Numbers</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>