<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 4] Expressions and Operators</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:04:41 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 4</b></td><td width=172 align=right valign=top><A HREF="ch04_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=chapter><A CLASS="TITLE" NAME="JSCRIPT-CH-OPERATORS">4. Expressions and Operators</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Expressions<br><A HREF="ch04_02.htm">Operator Overview</A><BR><A HREF="ch04_03.htm">Arithmetic Operators</A><BR><A HREF="ch04_04.htm">Comparison Operators</A><BR><A HREF="ch04_05.htm">String Operators</A><BR><A HREF="ch04_06.htm">Logical Operators</A><BR><A HREF="ch04_07.htm">Bitwise Operators</A><BR><A HREF="ch04_08.htm">Assignment Operators</A><BR><A HREF="ch04_09.htm">Miscellaneous Operators</A><BR></DIV><P CLASS=para>    Expressions and operators are fundamental to most programming    languages. This chapter explains how they work in JavaScript. If    you are familiar with C, C++, or Java, you'll notice that    expressions and operators in JavaScript are very similar, and    you'll be able to skim this chapter quickly. If you are not a C,    C++, or Java programmer, this chapter will teach you what you need    to know about expressions and operators in JavaScript.  <DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch04-SECT1-AUTOID.1">4.1 Expressions</A></h2><P CLASS=para>      An <I CLASS=emphasis>expression</I> is a "phrase" of JavaScript      that a JavaScript interpreter can <I CLASS=emphasis>evaluate</I>      to produce a value. Simple expressions are constants (e.g.,      string or numeric literals) or variable names, like these:      <DIV CLASS=programlisting><P><PRE>1.7                               //<tt CLASS=replaceable><i> a numeric literal</i></tt>"Oh no!  We're out of coffee!"    //<tt CLASS=replaceable><i> a string literal</i></tt>true                              //<tt CLASS=replaceable><i> a Boolean literal</i></tt>null                              //<tt CLASS=replaceable><i> the literal null value</i></tt>i                                 //<tt CLASS=replaceable><i> the variable i</i></tt>sum                               //<tt CLASS=replaceable><i> the variable sum</i></tt></PRE></DIV>    <P CLASS=para>      The value of a constant expression is simply the constant      itself. The value of a variable expression is the value that the      variable refers to.    <P CLASS=para>      These expressions are not particularly interesting. More complex      (and interesting) expressions can be created by combining simple      expressions. For example, we saw that <tt CLASS=literal>1.7</tt> is an      expression and <tt CLASS=literal>i</tt> is an expression, so the      following is also an expression:      <DIV CLASS=programlisting><P><PRE>i + 1.7</PRE></DIV>      The value of this expression is determined by adding the values of      the two simpler expressions. The plus sign in this example is an      <I CLASS=emphasis>operator</I> that is used to combine two      expressions into a more complex expression. Another operator is      <tt CLASS=literal>-</tt> which is used to combine expressions by      subtraction. For example:      <DIV CLASS=programlisting><P><PRE>(i + 1.7) - sum</PRE></DIV>      This expression uses the <tt CLASS=literal>-</tt> operator to subtract      the value of the <tt CLASS=literal>sum</tt> variable from the value of      our previous expression <tt CLASS=literal>i + 1.7</tt>. JavaScript      supports a number of other operators, besides <tt CLASS=literal>+</tt>      and <tt CLASS=literal>-</tt>, which we'll learn about in the next      section.    </DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch03_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch04_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Data Type Wrapper Objects</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Operator Overview</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>