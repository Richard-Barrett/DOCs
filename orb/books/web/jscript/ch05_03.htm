<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 5] 5.3 if</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:06:18 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch05_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 5</b></td><td width=172 align=right valign=top><A HREF="ch05_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch05-SECT1-AUTOID.3">5.3 if</A></h2><P CLASS=para><A NAME="CH05.IF"></A><A NAME="CH05.CONDITION"></A>      The <tt CLASS=literal>if</tt> statement is the fundamental "control      statement" that allows JavaScript to "make decisions," or to      execute statements conditionally. This statement has two      forms. The first is:    <DIV CLASS=programlisting><P><PRE>if (<tt CLASS=replaceable><i>expression</i></tt>)     <tt CLASS=replaceable><i>statement</i></tt></PRE></DIV><P CLASS=para>      In this form, the <tt CLASS=replaceable><i>expression</i></tt> is      evaluated. If it is <tt CLASS=literal>true</tt>, then      <tt CLASS=replaceable><i>statement</i></tt> is executed. If the      <tt CLASS=replaceable><i>expression</i></tt> is <tt CLASS=literal>false</tt>,      then <tt CLASS=replaceable><i>statement</i></tt> is not executed. For      example:    <DIV CLASS=programlisting><P><PRE>if (name == null)    name = "John Doe";</PRE></DIV><P CLASS=para>      Note that the parentheses around the expression are a required      part of the syntax for the <tt CLASS=literal>if</tt> statement.      Although they look extraneous, they are actually a required part      of the complete statement.    <P CLASS=para>      As mentioned above, we can always replace a single statement      with a statement block. So the <tt CLASS=literal>if</tt> statement might      also look like this:    <DIV CLASS=programlisting><P><PRE>if ((address == null) || (address == "")) {    address = "undefined";    alert("Please specify a mailing address.");}</PRE></DIV><P CLASS=para>      Note that the indentation used in these examples is not      mandatory. Extra spaces and tabs are ignored in JavaScript and      since we used semicolons after all the primitive statements,      these examples could be written all on one line if we wanted      to. Using line breaks and indentation as shown here,      however, makes the code easier to read and understand.    <P CLASS=para><A NAME="CH05.IF2"></A>      The second form of the <tt CLASS=literal>if</tt> statement introduces      an <tt CLASS=literal>else</tt> clause that is executed when the      <tt CLASS=replaceable><i>expression</i></tt> is      <tt CLASS=literal>false</tt>. Its syntax is:    <DIV CLASS=programlisting><P><PRE>if (<tt CLASS=replaceable><i>expression</i></tt>)     <tt CLASS=replaceable><i>statement1</i></tt>else    <tt CLASS=replaceable><i>statement2</i></tt></PRE></DIV><P CLASS=para>      In this form of the statement, the      <tt CLASS=replaceable><i>expression</i></tt> is evaluated, and if it is      <tt CLASS=literal>true</tt>, then      <tt CLASS=replaceable><i>statement1</i></tt> is executed; otherwise      <tt CLASS=replaceable><i>statement2</i></tt> is executed. For example:    <DIV CLASS=programlisting><P><PRE>if (name != null)     alert("Hello " + name + "\nWelcome to my home page.");else {    name = prompt("Welcome!\n What is your name?");    alert("Hello " + name);}</PRE></DIV><P CLASS=para>      When you have nested <tt CLASS=literal>if</tt> statements with      <tt CLASS=literal>else</tt> clauses, some caution is required to      ensure that the <tt CLASS=literal>else</tt> clause goes with the      appropriate <tt CLASS=literal>if</tt> statement. Consider the      following lines:    <DIV CLASS=programlisting><P><PRE>i = j = 1;k = 2;if (i == j)     if (j == k)        document.write("i equals k");else     document.write("i doesn't equal j");    //<tt CLASS=replaceable><i> WRONG!!</i></tt></PRE></DIV><P CLASS=para>      In this example, the inner <tt CLASS=literal>if</tt> statement forms      the single statement allowed by the syntax of the outer      <tt CLASS=literal>if</tt> statement. Unfortunately, it is not clear      (except from the hint given by the indentation) which      <tt CLASS=literal>if</tt> the <tt CLASS=literal>else</tt> goes with. And      in this example, the indenting "hint" is wrong, because a      JavaScript interpreter will actually interpret the above as:    <DIV CLASS=programlisting><P><PRE>if (i == j) {    if (j == k)        document.write("i equals k");    else         document.write("i doesn't equal j");    //<tt CLASS=replaceable><i> OOPS!</i></tt>}</PRE></DIV><P CLASS=para>      The rule in JavaScript (as in most programming languages) is that      an <tt CLASS=literal>else</tt> clause is part of the nearest      <tt CLASS=literal>if</tt> statement. To make this example less      ambiguous and easier to read, understand, maintain, and debug, you      should use curly braces:    <DIV CLASS=programlisting><P><PRE>if (i == j) {    if (j == k) {        document.write("i equals k");    }}else { //<tt CLASS=replaceable><i> what a difference the location of a curly brace makes! </i></tt>    document.write("i doesn't equal j");}</PRE></DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch05_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch05_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Compound Statements</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>while</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>