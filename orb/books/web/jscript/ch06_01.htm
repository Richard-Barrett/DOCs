<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 6] Functions</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:07:34 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch05_14.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 6</b></td><td width=172 align=right valign=top><A HREF="ch06_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=chapter><A CLASS="TITLE" NAME="JSCRIPT-CH-FUNCTIONS">6. Functions</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Defining and Invoking Functions<br><A HREF="ch06_02.htm">Functions as Data Types</A><BR><A HREF="ch06_03.htm">The Function Object</A><BR><A HREF="ch06_04.htm">Built-in Functions</A><BR><A HREF="ch06_05.htm">Event Handlers</A><BR></DIV><P CLASS=para><A NAME="CH06.FUN1"></A>    Functions are an important and complex part of the JavaScript    language. This chapter examines functions from several points of    view. First, functions are introduced from the syntactic standpoint,    explaining how functions are defined and invoked. Second, it is shown    that functions are data types in JavaScript, with examples of the    useful programming techniques that are possible by treating functions    as data. Finally, the Function object and its properties are    discussed, which support a number of advanced techniques for    manipulating functions and their arguments.  <P CLASS=para>    Functions in JavaScript are closely integrated with JavaScript    objects, and there are features of functions that are not documented    in this chapter. <A HREF="ch07_01.htm">Chapter 7, <i>Objects</i></A>, explains the    specialized uses of functions as methods, constructors, and    event-handlers.  <DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch06-SECT1-AUTOID.1">6.1 Defining and Invoking Functions</A></h2><P CLASS=para>      As we saw in <A HREF="ch05_01.htm">Chapter 5, <i>Statements</i></A>, functions are      defined with the <tt CLASS=literal>function</tt> keyword, followed by:      <P><UL CLASS=itemizedlist><li CLASS=listitem>	    the name of the function	  <P><li CLASS=listitem>	    a comma-separated list of argument names in parentheses	  <P><li CLASS=listitem>	    the JavaScript statements that comprise the body of the	    function, contained within curly braces	  <P></UL>    <P CLASS=para>      <A HREF="ch06_01.htm#JSCRIPT-CH-FUNCTIONS-EX-1">Example 6-1</A> shows the definition of      several functions. Although these functions are short and very      simple, they all contain each of the elements listed above. Note      that functions may be defined to expect varying numbers of      arguments, and that they may or may not contain a      <tt CLASS=literal>return</tt> statement. The      <tt CLASS=literal>return</tt> statement was introduced in <A HREF="ch05_01.htm">Chapter 5, <i>Statements</i></A>; it causes the function to stop      executing and return the value of its expression (if any) to the      caller. If a function does not contain a      <tt CLASS=literal>return</tt> statement, then it simply executes each      statement in the function body and returns no value to the caller.    <DIV CLASS=example><h4 CLASS=example><A CLASS="TITLE" NAME="JSCRIPT-CH-FUNCTIONS-EX-1">Example 6-1: Defining JavaScript Functions</A></h4><DIV CLASS=programlisting><P><PRE>//<tt CLASS=replaceable><i> A short-cut function, sometimes useful instead of document.write()</i></tt>//<tt CLASS=replaceable><i> This function has no return statement, so it returns no value.</i></tt>function print(msg){    document.write(msg, "&lt;BR&gt;");}//<tt CLASS=replaceable><i> A function that computes and returns the distance between two points.</i></tt>function distance(x1, y1, x2, y2){    var dx = (x2 - x1);    var dy = (y2 - y1);    return Math.sqrt(dx*dx + dy*dy);}//<tt CLASS=replaceable><i> A recursive function (one that calls itself) that computes factorials.</i></tt>//<tt CLASS=replaceable><i> Recall that x! is the product of x and all positive integers less than it.</i></tt>function factorial(x){    if (x &lt;= 1)         return 1;    else         return x * factorial(x-1);}</PRE></DIV></DIV><P CLASS=para>      Once a function has been defined, it may be invoked with the      <tt CLASS=literal>()</tt> operator, introduced in      <A HREF="ch04_01.htm">Chapter 4, <i>Expressions and Operators</i></A>. Recall that the      parentheses appear after the name of the function, and that a      comma-separated list of argument values (or expressions) appear      within the parentheses. The functions defined in      <A HREF="ch06_01.htm#JSCRIPT-CH-FUNCTIONS-EX-1">Example 6-1</A> could be invoked with      code like the following:      <DIV CLASS=programlisting><P><PRE>print("Hello, " + name);print("Welcome to my home page!");total_dist = distance(0,0,2,1) + distance(2,1,3,5);print("The probability of that is: " + factorial(13)/factorial(52));</PRE></DIV>      When you invoke a function, each of the expressions you specify      between the parentheses is evaluated, and the resulting value is      used as an <I CLASS=emphasis>argument</I> or      <I CLASS=emphasis>parameter</I> of the function. These values are      assigned to the variables named (within parentheses) when the      function was defined, and the function operates on its parameters      by referring to them by name. Note that these parameter variables      are only defined while the function is being executed; they do not      persist once the function returns.    <P CLASS=para>      Since JavaScript is an untyped language, you are not expected to      specify a data type for function arguments, and JavaScript does      not check that you have passed the type of data that the function      expects. If the data type of an argument is important, you can      test it yourself with the <tt CLASS=literal>typeof</tt> operator.      JavaScript does not check that you have passed the correct number      of arguments, either. If you pass more arguments than the      function expects, the extra values will simply be ignored. If you      pass fewer than expected, then some of the parameters will be      given the undefined value--which will, in many circumstances,      cause your function to behave incorrectly. Later in this chapter      we'll see a technique you can use to test that the correct number      of arguments have been passed to a function.    <P CLASS=para>      Note that because our <tt CLASS=literal>print()</tt> function does not      contain a <tt CLASS=literal>return</tt> statement and does not return      a value, it cannot be used as part of a larger expression. The      <tt CLASS=literal>distance()</tt> and <tt CLASS=literal>factorial()</tt>      functions, on the other hand, can be used as parts of larger      expressions, as shown in the examples above.    </DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch05_14.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch06_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Summary of JavaScript Statements</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Functions as Data Types</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>