<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 10] 10.7 JavaScript and Threads</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Thu Apr 24 13:34:14 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch10_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 10</b></td><td width=172 align=right valign=top><A HREF="ch11_01.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch10-SECT1-AUTOID.7">10.7 JavaScript and Threads</A></h2><P CLASS=para>      Since a web browser can display multiple documents at the same      time by using multiple windows and frames, and since any of those      documents can contain JavaScript code, it is natural to wonder      whether more than one script can be running at the same time.    <P CLASS=para>      The answer is no. Although Navigator, like most browsers, is      multithreaded, JavaScript in Navigator 2.0 and 3.0 is      single-threaded: only one script may run at a time. If a script is      running, other scripts will not be able to run until it has      finished. This is an implementation-dependent feature of      Navigator, not something inherent about client-side JavaScript      itself. It could be that we will see multithreaded JavaScript in      future releases.    <P CLASS=para>      Because JavaScript is not multithreaded, scripts and event      handlers should be written so that they do only small amounts of      computation and return quickly. If a script or event handler runs      for more than about a half second, the delay will potentially be      noticeable and annoying to the user. If your script runs for      even longer than this (say 3 or more seconds) then the browser may      appear to have "locked up" or "frozen" and the user may think that      it has crashed. Note that Navigator 2.0 and 3.0 do not display the      <b>Stop</b> button while JavaScript code      is running, so there is no way for the user to abort a script that      is taking a long time (see the subsection below for an exception,      however).     <P CLASS=para>      If you need to write a computation-intensive script, one technique      is to break it up into small chunks and have each chunk do its      computation, and then invoke the next chunk through the      <tt CLASS=literal>Window.setTimeout()</tt> method. Doing this,      even with a 0 millisecond delay, will give Navigator a chance to      do any updating it needs to do itself <I CLASS=emphasis>and will also give      scripts from other windows a chance to run</I>. In other words, as      far as the user is concerned, it will look as if JavaScript is      multithreaded. See the reference section for more details on the      <tt CLASS=literal>setTimeout()</tt> method of the Window      object.    <DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch10-SECT2-AUTOID.14">Infinite Loops in JavaScript</A></h3><P CLASS=para>	JavaScript is one of the few programming languages in which you	cannot write an infinite loop!  In order to prevent buggy or	malicious code from monopolizing the browser and consuming lots	of CPU time,[5]	the JavaScript interpreter keeps track of how long a script has	run for. When a script seems excessively long, Navigator pops	up a dialog box that informs you that a script is still running	("Lengthy JavaScript still running. Continue?"), and gives you	the choice of continuing it or aborting it.      <blockquote class=footnote><P CLASS=para>[5] 	    When malicious code does this intentionally, it is called a	    "denial-of-service attack".	  </blockquote><P CLASS=para>	Execution time is not measured in absolute time for these	purposes, but in the number of branches the JavaScript code	makes. Every one million branches, Navigator will ask again if	you want to continue running it. For example, a very simple	loop like <tt CLASS=literal>for(var i = 0;;i++);</tt> will run one	million times before Navigator asks you if you want to abort	it. More complex loops will run fewer times. The actual time	elapsed before Navigator gives you the option of aborting the	script depends entirely upon the speed of your computer.      </DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch10_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch11_01.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Execution of JavaScript Programs</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Windows and the JavaScript Name Space</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>