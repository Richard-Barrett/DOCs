<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 11] 11.2 Multiple Windows and Explicit Window References</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:14:42 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch11_01.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 11</b></td><td width=172 align=right valign=top><A HREF="ch11_03.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch11-SECT1-AUTOID.2">11.2 Multiple Windows and Explicit Window References</A></h2><P CLASS=para>      The difficulty with an implicit window reference is that most web      browsers, including Navigator, allow more than one browser window      to be open at a time. Since there can be more than one window,      there must be more than one Window object, but the implicit window      reference can only refer to one of them. Logically, the implicit      reference is a reference to the <I CLASS=emphasis>current</I>      window--the window that is displaying the HTML document that      contains the JavaScript code being executed.    <P CLASS=para>      If you want use the properties or methods of a Window object other      than the current, implicit, window, you must obtain an explicit      reference to it. In general, the only way to obtain an explicit      reference to another Window object is to create that Window (and      the browser window it represents) yourself. You open a new      browser window, and create the Window object that represents it      with the <tt CLASS=literal>open()</tt> method of the Window object.      You might use it like this. (Note that we access it through the      <tt CLASS=literal>window</tt> property of the implicit Window object      to make more clear what it is we are opening.)      <DIV CLASS=programlisting><P><PRE>var newwin = window.open("sitemap.html", "site_map_window");</PRE></DIV>      The first argument to this method is the URL of the document to be      displayed in the new window. The second argument is a name for      the new window. We'll see what this name can be used for later in      this chapter. For now, note that this is not a variable name; you      can't refer directly to the new window with this name. There is      also a third, optional argument to the      <tt CLASS=literal>Window.open()</tt> method that specifies the size of      the new window, and the features, such as a menubar, toolbar, and      so on, that it should contain. See the reference section for full      details on this third argument and on the method itself.    <P CLASS=para>      The most important feature of the <tt CLASS=literal>open()</tt> method      is the value it returns. This is the explicit reference to the      new Window object that we need. In the line of code above, we      store this reference in a variable named      <tt CLASS=literal>newwin</tt>. (Note the difference between the name      of the variable that contains a reference to the window and the      name of the window itself.)  With this explicit reference to the      new Window object, we can use properties and methods of the new      window. For example, to set the text in the new window's status      line, we could do this:      <DIV CLASS=programlisting><P><PRE>newwin.defaultStatus = "Site Map. Click map for details.";</PRE></DIV>    <P CLASS=para>      The code shown above is intended to run in the original window,      and use the <tt CLASS=literal>newwin</tt> variable defined in that      window to refer explicitly to the newly created window. Any code      in the new window (i.e., JavaScript that is part of the      <i CLASS=filename>sitemap.html</i> document displayed in that      window) can of course refer to that new window with an implicit      reference--for that code, the new window is the "current"      window. This raises the question of how code in the new window      can refer to the original window, in order to use properties and      methods of that Window object. Once again, an explicit reference      is needed. In this case, the original window can provide that      explicit reference for the use of the new window. The code to do      so might look like this:      <DIV CLASS=programlisting><P><PRE>//<tt CLASS=replaceable><i> Create a new window.</i></tt>var newwin = window.open("sitemap.html", "site_map_window");//<tt CLASS=replaceable><i> Set a property in the new window that contains an explicit reference </i></tt>//<tt CLASS=replaceable><i> to the original window. There is nothing special about the name "creator";</i></tt>//<tt CLASS=replaceable><i> we can choose any property name we want.</i></tt>newwin.creator = self;</PRE></DIV>      Code in the new window can use this <tt CLASS=literal>creator</tt>      property to refer back to the original window:      <DIV CLASS=programlisting><P><PRE>//<tt CLASS=replaceable><i> Code in the new window. Note that we refer to the creator property </i></tt>//<tt CLASS=replaceable><i> of the new window using the implicit window reference for that window.</i></tt>creator.alert("Hello old window, this is the new window!");</PRE></DIV>      In Navigator 3.0 and Internet Explorer 3.0, the      <tt CLASS=literal>open()</tt> method automatically creates an      <tt CLASS=literal>opener</tt> property for the new window that refers      back to the window that opened it. This <tt CLASS=literal>opener</tt>      property can be used just like the <tt CLASS=literal>creator</tt>      property in the example above.    <P CLASS=para>      We've seen how we can use the <tt CLASS=literal>Window.open()</tt>      method to create a new browser window and obtain an explicit      reference to it. The <tt CLASS=literal>open()</tt> method also allows      us to obtain an explicit reference to windows that already exist,      if we know the name of that window. We mean here the name of the      window itself, of course, not the name of a variable that refers      to the window. This is the name specified by the second argument      to <tt CLASS=literal>Window.open()</tt>. In the examples above, we've      used the name "site_map_window". So, if we know that a window by      this name already exists, but we do not have a variable or a      property that refers to the Window object for that window, then we      can obtain such a reference like this:      <DIV CLASS=programlisting><P><PRE>//<tt CLASS=replaceable><i> Return a reference to a named window that already exists, or, if it</i></tt>//<tt CLASS=replaceable><i> doesn't actually exist, then create a window with this name.</i></tt>site_map = window.open("", "site_map_window");</PRE></DIV>      The syntax used here is exactly the same as that we used when      creating a window--if you specify the name of window that already      exists, the <tt CLASS=literal>open()</tt> method returns a reference      to that window rather than creating a new one. On the other hand,      if no window with the specified name exists, then      <tt CLASS=literal>open()</tt> creates one and returns a reference to      it. Note that in Navigator 3.0 the <tt CLASS=literal>open()</tt> sets      the <tt CLASS=literal>opener</tt> property of the named window      whenever it is called, not only when it is created. So, this      property of a window refers either to the window that created it      or to the window that most recently looked it up by name.    <DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch11-SECT2-AUTOID.1">Closing Windows</A></h3><P CLASS=para>	After all this talk of opening new windows, we should	note that the Window object also has a <tt CLASS=literal>close()</tt>	method. If your program has created and used a new browser	window, and that window is no longer needed, then it can close the	new window with code like this:	<DIV CLASS=programlisting><P><PRE>window.close(site_map);</PRE></DIV>	Or, the new window could close itself when it is no longer needed:	<DIV CLASS=programlisting><P><PRE>window.close(self);</PRE></DIV>	Once a window has been closed, you should no longer use any of its	properties or methods. (In Navigator 3.0, you may safely test the	<tt CLASS=literal>closed</tt> property of a closed window--if this	property is <tt CLASS=literal>true</tt> it lets you know that the	window has already been closed and that you should not use any of	the other properties.)        <P CLASS=para>	Note that you are only allowed to automatically close windows that	your code created. If you attempt to close a window that the user	opened, your attempt will either fail (in Navigator 2.0) or will	pop up a prompt dialog asking the user if the window should really	be closed (Navigator 3.0). This prevents malicious coders from	creating web pages to lure unsuspecting surfers in and then close	their main (and only) browser window!      </DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch11_01.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch11_03.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>The Implicit Window Reference</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Windows and Frames</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>