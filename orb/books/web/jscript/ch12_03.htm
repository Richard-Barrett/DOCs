<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 12] 12.3 The Status Line</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:16:01 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch12_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 12</b></td><td width=172 align=right valign=top><A HREF="ch12_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch12-SECT1-AUTOID.3">12.3 The Status Line</A></h2><P CLASS=para><A NAME="CH12.STATUS1"></A><A NAME="CH12.STATUS2"></A>      At the bottom of every browser window (except for those we      <tt CLASS=literal>open()</tt> without it) is a <I CLASS=emphasis>status	line</I>. This is a location in which the browser can      display messages to the user. When you move the mouse over a      hypertext link, for example, the browser displays the URL that      the link points to. And when you move the mouse over a browser      control button, the browser displays a simple "context help"      message that explains the purpose of the button. You can also      make use of this status line in your own programs--its contents      are controlled by two properties of the Window object:      <tt CLASS=literal>status</tt> and <tt CLASS=literal>defaultStatus</tt>.<A NAME="CH12.STATUS3"></A><A NAME="CH12.STATUS4"></A>    <P CLASS=para>      We've just said that browsers display the URL of a hypertext      link when you pass the mouse pointer over the link. This is      generally the case, but in your excursions through the web, you      may have found some links that don't behave this way--links that      display some text other than the link's URL. This is done with      the <tt CLASS=literal>status</tt> property of the Window object, and      the <tt CLASS=literal>onMouseOver()</tt> event handler of hypertext      links, as shown in <A HREF="ch12_03.htm#JSCRIPT-CH-WINDOWS-EX-3">Example 12-3</A>.    <DIV CLASS=example><h4 CLASS=example><A CLASS="TITLE" NAME="JSCRIPT-CH-WINDOWS-EX-3">Example 12-3: Displaying a Link's Destination in the Status Line</A></h4><DIV CLASS=programlisting><P><PRE>&lt;!--<tt CLASS=replaceable><i> Here's how you set the status line in a hyperlink.   -- Note that the event handler *must* return true for this to work. </i></tt>--&gt;Lost? Dazed and confused? Visit the&lt;A HREF="sitemap.html" onMouseOver="status='Go to Site Map'; return true;"&gt;  Site Map&lt;/A&gt;&lt;!--<tt CLASS=replaceable><i> You can do the same thing for client-side image maps.</i></tt>--&gt;&lt;IMG SRC="images/imgmap1.gif" USEMAP="#map1"&gt;&lt;MAP NAME="map1"&gt;  &lt;AREA COORDS="0,0,50,20" HREF="info.html"    onMouseover="status='Visit our Information Center'; return true;"&gt;  &lt;AREA COORDS="0,20,50,40" HREF="order.html"     onMouseOver="status='Place an order'; return true;"&gt;  &lt;AREA COORDS="0,40,50,60" HREF="help.html"     onMouseOver="status='Get help fast!'; return true;"&gt;&lt;/MAP&gt;</PRE></DIV></DIV><P CLASS=para>      In <A HREF="ch12_03.htm#JSCRIPT-CH-WINDOWS-EX-3">Example 12-3</A> note that the      <tt CLASS=literal>onMouseOver()</tt> event handler must return      <tt CLASS=literal>true</tt>. This tells the browser that it should      not perform its own default action for the event--that is, it      should not display the URL of the link in the status line. If      you forget to return <tt CLASS=literal>true</tt>, then the browser      will overwrite whatever message the handler displayed in the      status line with its own URL.    <P CLASS=para>      When you move the mouse pointer over a hyperlink, the browser      displays the URL for the link, and then erases it when the mouse      moves off the hyperlink. The same is true when you use an      <tt CLASS=literal>onMouseOver()</tt> event handler to set the Window      <tt CLASS=literal>status</tt> property--your custom message will be      displayed while the mouse is over the hyperlink, and then will      be erased when it moves off the link. Or that is the way it is      supposed to work, anyway. In the Windows version of Navigator      (but not the Mac or X11 versions), the status line is not      automatically cleared when you set the <tt CLASS=literal>status</tt>      property from an <tt CLASS=literal>onMouseOver()</tt> event      handler. To force it to be erased, you can use the      <tt CLASS=literal>onMouseOut()</tt> event handler, like this:      <DIV CLASS=programlisting><P><PRE>&lt;A HREF="sitemap.html"    onMouseOver="status='Go to Site Map'; return true;"   onMouseOut="status='';"&gt;Site Map&lt;/A&gt;</PRE></DIV>    <P CLASS=para>      The <tt CLASS=literal>status</tt> property is intended for exactly      the sort of transient message we saw above. Sometimes, though,      you want to display a message that is not so transient in the      status line--for example, you might display a welcome message to      users visiting your web page, or might display a simple line of      help text for novice visitors. To do this, you set the      <tt CLASS=literal>defaultStatus</tt> property of the Window--this      property specifies the default text displayed in the status      line. That text will temporarily be replaced with URLs, context      help messages, or other transient text when the mouse pointer is      over hyperlinks or browser control buttons, but once the mouse      moves off of those areas, the default text will be restored.    <P CLASS=para>      You might use the <tt CLASS=literal>defaultStatus</tt> property like      this to provide a friendly and helpful message to real beginners:      <DIV CLASS=programlisting><P><PRE>&lt;SCRIPT&gt;defaultStatus = "Welcome!  Click on underlined blue text to navigate.";&lt;/SCRIPT&gt;</PRE></DIV>      If your web page contained an HTML form, you might change the      <tt CLASS=literal>defaultStatus</tt> property as the user enters      data in the form, in order to to display step-by-step      instructions for completing it.    <P CLASS=para>      Any time you can programmatically set a value and cause a      user-visible change to appear on the screen, the true JavaScript      programmer's mind turns immediately to the possibilities of      animation--that is of updating a value (that updates the screen)      periodically to produce some sort of special effect. In      general, animations involving the status bar are gaudy and in      very poor taste; shun them!      <P CLASS=para>      On the other hand, status bar animation is interesting because      it demonstrates important JavaScript programming techniques,      including the use of the <tt CLASS=literal>Window.setTimeout()</tt>      method. <A HREF="ch12_03.htm#JSCRIPT-CH-WINDOWS-EX-4">Example 12-4</A>      shows a simple status bar animation (that is in good taste). It      displays the current time in the status bar, and updates that      time once a minute. Because the update only occurs once a      minute, this animation does not produce a constant flickering      distraction at the bottom of the browser window like so many      others do. Note the use of the <tt CLASS=literal>setTimeout()</tt>      method in this example--it causes JavaScript code to be executed      after a specified number of milliseconds elapse. It was first      introduced in <A HREF="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>. Also note the      use of the <tt CLASS=literal>onLoad()</tt> event handler to start      the clock running. <tt CLASS=literal>onLoad()</tt> is an event      handler of the Window object, and is specified here as an      attribute of the <tt CLASS=literal>&lt;BODY&gt;</tt> tag. It was      first introduced in <A HREF="ch10_01.htm">Chapter 10, <i>Client-Side Program Structure</i></A>.    <DIV CLASS=example><h4 CLASS=example><A CLASS="TITLE" NAME="JSCRIPT-CH-WINDOWS-EX-4">Example 12-4: A Digital Clock in the Status Line</A></h4><DIV CLASS=programlisting><P><PRE>&lt;HTML&gt;&lt;HEAD&gt;&lt;SCRIPT&gt;//<tt CLASS=replaceable><i> This function displays the time in the status line.</i></tt>//<tt CLASS=replaceable><i> Invoke it once to activate the clock; it will call itself from then on.</i></tt>function display_time_in_status_line(){    var d = new Date();                //<tt CLASS=replaceable><i> get current time;</i></tt>    var h = d.getHours();              //<tt CLASS=replaceable><i> extract hours: 0 to 23</i></tt>    var m = d.getMinutes();            //<tt CLASS=replaceable><i> extract minutes: 0 to 59</i></tt>    var ampm = (h &gt;= 12)?"PM":"AM";    //<tt CLASS=replaceable><i> is it am or pm?</i></tt>    if (h &gt; 12) h -= 12;               //<tt CLASS=replaceable><i> convert 24-hour format to 12-hour</i></tt>    if (h == 0) h = 12;                //<tt CLASS=replaceable><i> convert 0 o'clock to midnight</i></tt>    if (m &lt; 10) m = "0" + m;           //<tt CLASS=replaceable><i> convert 0 minutes to 00 minutes, etc.</i></tt>    var t = h + ':' + m + ' ' + ampm;  //<tt CLASS=replaceable><i> put it all together</i></tt>    defaultStatus = t;                 //<tt CLASS=replaceable><i> display it in the status line</i></tt>    //<tt CLASS=replaceable><i> arrange to do it all again in 1 minute. </i></tt>    setTimeout("display_time_in_status_line()", 60000); //<tt CLASS=replaceable><i> 60000 ms in 1 minute</i></tt>}&lt;/SCRIPT&gt;&lt;/HEAD&gt;&lt;!--<tt CLASS=replaceable><i> Don't bother starting the clock 'till everything is loaded. The  -- status line will be busy with other messages during loading, anyway </i></tt>--&gt;&lt;BODY onLoad="display_time_in_status_line();"&gt;&lt;!--<tt CLASS=replaceable><i> The HTML document contents go here </i></tt>--&gt;&lt;/BODY&gt;&lt;/HTML&gt;</PRE></DIV></DIV><P CLASS=para>      If you write a JavaScript program that performs any sort of      lengthy computation, you might decide to use a simple status bar      animation to give the user feedback that your program is      computing, and is making progress. Without some kind of      feedback, there is a danger that the user might think the      browser has hung. Unfortunately, this sort of animation won't      work. You can update the <tt CLASS=literal>defaultStatus</tt> and      <tt CLASS=literal>status</tt> properties at any time, but your      specified text won't actually appear in status line until all      the JavaScript code that is running completes. Thus, if you      attempt to animate the line to indicate progress during a      lengthy computation, none of your updates to the status line      will actually appear to the user.    </DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch12_02.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch12_04.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Opening and Closing Windows</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Frame Programming Techniques</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>