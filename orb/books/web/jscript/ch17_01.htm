<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 17] Forms and Form Elements</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:22:03 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch16_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 17</b></td><td width=172 align=right valign=top><A HREF="ch17_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><H1 CLASS=chapter><A CLASS="TITLE" NAME="JSCRIPT-CH-FORMS">17. Forms and Form Elements</A></H1><DIV CLASS=htmltoc><p><b>Contents:</b><br>Forms in CGI and JavaScript<br><A HREF="ch17_02.htm">The Form Object</A><BR><A HREF="ch17_03.htm">Form Elements</A><BR><A HREF="ch17_04.htm">Form Element Names and Values</A><BR><A HREF="ch17_05.htm">Naming Forms and Form Elements</A><BR><A HREF="ch17_06.htm">Form Verification Example</A><BR></DIV><P CLASS=para>    As we've seen in examples throughout this book, the use of HTML    forms is basic to almost all web programs, whether implemented with    CGI, JavaScript, or a combination of the two. This    chapter explains the details of programming with forms in    JavaScript. It is assumed that you already are at least somewhat    familiar with the creation of HTML forms and with the input elements    that they contain. If not, you may want to refer to a good book on    HTML.[1]    In addition, the reference section of this book lists the HTML    syntax as well as JavaScript syntax for forms and form elements;    you may find these listings helpful as well. <A NAME="CH17.FORM1"></A>  <blockquote class=footnote><P CLASS=para>[1] 	Such as <I CLASS=emphasis>HTML: The Definitive Guide</I>, by	Chuck Musciano and Bill Kennedy, published by O'Reilly &amp;	Associates.      </blockquote><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch17-SECT1-AUTOID.1">17.1 Forms in CGI and JavaScript</A></h2><P CLASS=para>      If you are already familiar with CGI programming using HTML      forms, you may find that things are done somewhat differently when      forms are used with JavaScript. In the CGI model, a form, and the      input data it contains is "submitted"--sent to the web server--all      at once. The emphasis is on processing a complete "batch" of      input data and dynamically producing a new web page in response.      With JavaScript, the programming model is quite different. In      JavaScript programs, the emphasis is not on form submission and      processing but instead on event handling. Forms and the input      elements they contain each have event handlers that JavaScript can      use to respond to user interactions with a form. If the user      clicks on a checkbox, for example, a JavaScript program can      receive notification through an event handler, and might respond      by changing the value displayed in some other element of the form.    <P CLASS=para>      With CGI programs, an HTML form can't be useful unless it has a      <b>Submit</b> button (or unless it has      only a single text input field and allows the user to strike the      <b>Return</b> key as a shortcut for      submission). With JavaScript, on the other hand, a Submit button      is never necessary (unless the JavaScript program is working with      a cooperating CGI program, of course). With JavaScript, your      forms can have any number of push-buttons with event handlers that      perform any number of actions when clicked. In previous      chapters, we've seen some of the possible      actions that such a button can trigger: replacing one image with      another, using the location property to load and display a new web      page, opening a new browser window, or dynamically generating a      new HTML document in another window or frame. As we'll see later      in this section, a JavaScript event handler can even trigger a      form to be submitted.    <P CLASS=para>      As we've seen in examples throughout this book, event handlers are      almost always the central element of any interesting JavaScript      program. And the most commonly used event handlers (excluding the      event handlers of the Link object) are used with forms or form      elements. The following subsections introduce the JavaScript      Form object, and the various JavaScript objects that represent      form elements. The section concludes with an example that      illustrates how you can use JavaScript to validate user input on      the client before submitting it to a CGI program running on the      web server.    </DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch16_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch17_02.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Other Image Techniques</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>The Form Object</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>