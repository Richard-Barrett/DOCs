<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 19] 19.7 Working with Java in Internet Explorer</TITLE><META NAME="author" CONTENT="David Flanagan"><META NAME="date" CONTENT="Wed Apr 23 18:25:06 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="JavaScript"><META NAME="title" CONTENT="JavaScript: The Definitive Guide"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Javascript: The Definitive Guide"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch19_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 19</b></td><td width=172 align=right valign=top><A HREF="ch19_08.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="ch19-SECT1-AUTOID.7">19.7 Working with Java in Internet Explorer</A></h2><P CLASS=para>      Internet Explorer 3.0 does not support LiveConnect. Instead, it      treats Java applets as ActiveX objects and allows JavaScript to      interact with them through that mechanism. This gives Internet      Explorer some, but not all, of the capabilities of LiveConnect.    <DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch19-SECT2-AUTOID.14">Interacting with Applets</A></h3><P CLASS=para>	Internet Explorer 3.0 can invoke the public methods of Java	applets and can read and write the values of public fields of	Java applets, in much the same way that Navigator 3.0 can.	Although the underlying mechanism is different, the basic syntax	is the same:	<DIV CLASS=programlisting><P><PRE>document.<tt CLASS=replaceable><i>appletname</i></tt>.<tt CLASS=replaceable><i>property</i></tt>document.<tt CLASS=replaceable><i>appletname</i></tt>.<tt CLASS=replaceable><i>method</i></tt>(...)</PRE></DIV>      <P CLASS=para>	The data conversion that occurs when Internet Explorer passes	values back and forth to Java follows ActiveX's rules, and is	not documented here.      <P CLASS=para>	There are a couple of restrictions on IE 3.0 interactions with	applets. First, note that it does not support the	<tt CLASS=literal>applets[]</tt> array of the Document object. So	if you want to read or write properties or invoke methods of an	applet, you must call the applet by name, and you must assign	a name to the applet with the <tt CLASS=literal>NAME</tt>	attribute of the <tt CLASS=literal>&lt;APPLET&gt;</tt> tag.      <P CLASS=para>	Second, note the Internet Explorer can only read and write	properties and invoke methods of the applet object itself. IE	does not have an equivalent to the LiveConnect JavaObject	object, so if an applet has a property that refers to some other	Java object, IE cannot read and write properties or invoke	methods of that other object. To work around this shortcoming,	you simply need to be sure that all functionality you need to	access from JavaScript is implemented as a method of the applet,	even if some of those methods do nothing more than invoke a	method of some other object.      <P CLASS=para>	Third, Internet Explorer can only invoke the public	<I CLASS=emphasis>instance</I> methods of an applet. It has no	mechanism for invoking with Java class methods.      </DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch19-SECT2-AUTOID.15">Interacting with Plug-Ins and System Classes</A></h3><P CLASS=para>	Internet Explorer 3.0 can install and use Navigator plug-ins, but	it does not allow JavaScript to interact with them in the way	that Navigator does. Similarly, it does not have JavaPackage or	JavaClass objects, and so has no way to read or write properties	of system classes, invoke methods of system classes or create	instances of system classes.      </DIV><DIV CLASS=sect2><h3 CLASS=sect2><A CLASS="TITLE" NAME="ch19-SECT2-AUTOID.16">Calling JavaScript from Applets</A></h3><P CLASS=para>	Internet Explorer does not support the	<I CLASS=emphasis>netscape.javascript.JSObject</I> class, and	does not allow Java applets to invoke JavaScript methods or read	and write JavaScript properties.       <P CLASS=para>	Microsoft's ActiveX technology does allow Java applets in IE to	interact with OLE objects embedded in a web page, as long as the	applet is compiled so that it supports the desired object and as	long as JavaScript passes a reference to the OLE control to the	applet. Once JavaScript has told the applet where it can find	the OLE control, any interaction occurs directly between the	applet and the OLE object, without the intervention of	JavaScript. This differs from the LiveConnect model in which an	applet can use JavaScript as an intermediary to control any	arbitrary applet or plug-in without special compilation being	required to enable direct communication between the first applet	and the other applet or plug-in.      </DIV></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch19_06.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch19_08.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>Using JavaScript from Java</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Summary</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>