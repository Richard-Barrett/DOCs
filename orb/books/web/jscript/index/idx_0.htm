<HTML><HEAD><TITLE>Index</TITLE></HEAD><BODY BGCOLOR="#FFFFFF" TEXT="#000000"><!-- JavaScript: pathbegin.js --><B>Index</B><P><FONT SIZE="-1">Symbols |<A HREF="idx_a.htm">A</A> |<A HREF="idx_b.htm">B</A> |<A HREF="idx_c.htm">C</A> |<A HREF="idx_d.htm">D</A> |<A HREF="idx_e.htm">E</A> |<A HREF="idx_f.htm">F</A> |<A HREF="idx_g.htm">G</A> |<A HREF="idx_h.htm">H</A> |<A HREF="idx_i.htm">I</A> |<A HREF="idx_j.htm">J</A> |<A HREF="idx_k.htm">K</A> |<A HREF="idx_l.htm">L</A> |<A HREF="idx_m.htm">M</A> |<A HREF="idx_n.htm">N</A> |<A HREF="idx_o.htm">O</A> |<A HREF="idx_p.htm">P</A> |<A HREF="idx_q.htm">Q</A> |<A HREF="idx_r.htm">R</A> |<A HREF="idx_s.htm">S</A> |<A HREF="idx_t.htm">T</A> |<A HREF="idx_u.htm">U</A> |<A HREF="idx_v.htm">V</A> |<A HREF="idx_w.htm">W</A> |<A HREF="idx_x.htm">X</A> |<A HREF="idx_y.htm">Y</A> |<A HREF="idx_z.htm">Z</A> </FONT><HR><h1>Symbols</h1><DL><DT>sqrt(2)/2 constant   : <A HREF="../reference/mats1.htm#JSCRIPT-REF-MATH-SQRT1-2">Math.SQRT1_2</A><DT>sqrt(2) constant   : <A HREF="../reference/mats2.htm#JSCRIPT-REF-MATH-SQRT2">Math.SQRT2</A><DT>&amp; (bitwise and) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.22">Bitwise And (<tt CLASS=replaceable><i>&amp;</i></tt>)</A><DT>&amp;&amp; (logical and) operator   <DL>   <DT><A HREF="../appd_09.htm#appd-SECT1-AUTOID.9">Miscellaneous Differences</A>   <DT><A HREF="../ch04_06.htm#ch04-SECT2-AUTOID.19">Logical And (<tt CLASS=replaceable><i>&amp;&amp;</i></tt>)</A>   </DL><DT>&amp;{} for entities   <DL>   <DT><A HREF="../appc_01.htm#appc-SECT1-AUTOID.1">Core Language Changes</A>   <DT><A HREF="../ch10_05.htm#ch10-SECT1-AUTOID.5">JavaScript Entities</A>   </DL><DT>' (apostrophe)   <DL>   <DT><A HREF="../ch02_05.htm#ch02-SECT2-AUTOID.5">String Literals</A>   <DT><A HREF="../ch02_05.htm#ch02-SECT2-AUTOID.6">Escape Sequences in String Literals</A>   </DL><DT>* (multiplication) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.7">Multiplication (*)</A><DT>\ (backslash)   : <A HREF="../ch02_05.htm#ch02-SECT2-AUTOID.6">Escape Sequences in String Literals</A><DT>!= (inequality) operator   : <A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.14">Inequality (!=)</A><DT>! (logical not) operator   : <A HREF="../ch04_06.htm#ch04-SECT2-AUTOID.21">Logical Not (!)</A><DT>[] (brackets)   <DL>   <DT><A HREF="../ch03_07.htm#ch03-SECT1-AUTOID.7">Arrays</A>   <DT><A HREF="../ch04_09.htm#ch04-SECT2-AUTOID.36">Array and Object Access Operators</A>   <DT><A HREF="../ch05_06.htm#ch05-SECT1-AUTOID.6">for...in</A>   <DT><A HREF="../ch07_06.htm#ch07-SECT1-AUTOID.6">Objects as Associative Arrays</A>   <DT><A HREF="../ch08_01.htm#ch08-SECT2-AUTOID.1">Reading and Writing Array Elements</A>   <DT><A HREF="../ch09_01.htm#ch09-SECT2-AUTOID.4">Conversions to Objects</A>   </DL><DT>^ (bitwise exclusive or) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.24">Bitwise Xor (^)</A><DT>, (comma) operator   <DL>   <DT><A HREF="../ch04_09.htm#ch04-SECT2-AUTOID.35">The Comma Operator (,)</A>   <DT><A HREF="../ch05_05.htm#ch05-SECT1-AUTOID.5">for</A>   </DL><DT>{} (curly braces)   <DL>   <DT><A HREF="../ch05_02.htm#ch05-SECT1-AUTOID.2">Compound Statements</A>   <DT><A HREF="../ch05_11.htm#ch05-SECT1-AUTOID.11">function</A>   </DL><DT>$ (dollar sign)   : <A HREF="../ch02_06.htm#ch02-SECT1-AUTOID.6">Identifiers</A><DT>. (dot) operator   <DL>   <DT><A HREF="../ch04_09.htm#ch04-SECT2-AUTOID.36">Array and Object Access Operators</A>   <DT><A HREF="../ch07_01.htm#ch07-SECT2-AUTOID.1">Reading and Writing Object Properties</A>   <DT><A HREF="../ch08_07.htm#ch08-SECT1-AUTOID.7">Arrays in Navigator 2.0</A>   <DT><A HREF="../ch09_01.htm#ch09-SECT2-AUTOID.4">Conversions to Objects</A>   </DL><DT>XX_DQUOTE_XX (double quote)   : <A HREF="../ch02_05.htm#ch02-SECT2-AUTOID.5">String Literals</A><DT>= (assignment) operator   <DL>   <DT><A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.13">Equality (==)</A>   <DT><A HREF="../ch04_08.htm#ch04-SECT1-AUTOID.8">Assignment Operators</A>   <DT><A HREF="../ch07_07.htm#ch07-SECT2-AUTOID.7">The assign() Method</A>   <DT>combined with operations      : <A HREF="../ch04_08.htm#ch04-SECT2-AUTOID.29">Assignment with Operation</A>   </DL><DT>== (equality) operator   : <A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.13">Equality (==)</A><DT>&gt; (greater than) operator   <DL>   <DT><A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.16">Greater Than (&gt;)</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   </DL><DT>&gt;= (greater than or equal) operator   <DL>   <DT><A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.18">Greater Than or Equal (&gt;=)</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   </DL><DT>&gt;&gt; (shift right with sign) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.27">Shift Right with Sign (&gt;&gt;)</A><DT>&gt;&gt;&gt; (shift right zero fill) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.28">Shift Right Zero Fill (&gt;&gt;&gt;)</A><DT>- (minus) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.6">Subtraction (-)</A><DT>- (negation) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.10">Unary Negation (-)</A><DT>-- (decrement) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.12">Decrement (--)</A><DT>&lt; (less than) operator   <DL>   <DT><A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.15">Less Than (&lt;)</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   </DL><DT>&lt;!-- --&gt; (comment tags)   <DL>   <DT><A HREF="../ch02_04.htm#ch02-SECT1-AUTOID.4">Comments</A>   <DT><A HREF="../ch18_02.htm#ch18-SECT2-AUTOID.6">Hiding Scripts from Old Browsers</A>   </DL><DT>&lt;= (less than or equal) operator   <DL>   <DT><A HREF="../ch04_04.htm#ch04-SECT2-AUTOID.17">Less Than or Equal (&lt;=)</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   </DL><DT>&lt;&lt; (shift left) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.26">Shift Left (&lt;&lt;)</A><DT>() (parentheses)   <DL>   <DT><A HREF="../ch03_05.htm#ch03-SECT1-AUTOID.5">Functions</A>   <DT><A HREF="../ch03_06.htm#ch03-SECT1-AUTOID.6">Objects</A>   <DT><A HREF="../ch04_02.htm#ch04-SECT2-AUTOID.3">Operator Precedence</A>   <DT><A HREF="../ch04_09.htm#ch04-SECT2-AUTOID.37">Function Call Operator</A>   <DT><A HREF="../ch06_01.htm#ch06-SECT1-AUTOID.1">Defining and Invoking Functions</A>   </DL><DT>% (modulo) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.9">Modulo (%)</A><DT>| (bitwise or) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.23">Bitwise Or (|)</A><DT>|| (logical or) operator   <DL>   <DT><A HREF="../appd_09.htm#appd-SECT1-AUTOID.9">Miscellaneous Differences</A>   <DT><A HREF="../ch04_06.htm#ch04-SECT2-AUTOID.20">Logical Or (||)</A>   </DL><DT>+ (plus/concatenate) operator   <DL>   <DT><A HREF="../ch03_03.htm#ch03-SECT1-AUTOID.3">Strings</A>   <DT><A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.5">Addition (+)</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   <DT><A HREF="../ch04_05.htm#ch04-SECT1-AUTOID.5">String Operators</A>   <DT><A HREF="../ch09_01.htm#ch09-SECT2-AUTOID.1">Conversions to Strings</A>   <DT><A HREF="../ch11_07.htm#ch11-SECT2-AUTOID.6">Workarounds for Navigator 2.0</A>   </DL><DT>++ (increment) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.11">Increment (++)</A><DT>?: (conditional) operator   : <A HREF="../ch04_09.htm#ch04-SECT2-AUTOID.30">The Conditional Operator (?:)</A><DT>; (semicolon)   <DL>   <DT><A HREF="../ch02_03.htm#ch02-SECT1-AUTOID.3">Optional Semicolons</A>   <DT><A HREF="../ch05_01.htm#JSCRIPT-CH-STATEMENTS">Statements</A>   </DL><DT>XX_SQUOTE_XX (single quote)   : <A HREF="../ch02_05.htm#ch02-SECT2-AUTOID.5">String Literals</A><DT>/ (division) operator   : <A HREF="../ch04_03.htm#ch04-SECT2-AUTOID.8">Division (/)</A><DT>// (comment marker)   : <A HREF="../ch02_04.htm#ch02-SECT1-AUTOID.4">Comments</A><DT>/**/ (comment markers)   : <A HREF="../ch02_04.htm#ch02-SECT1-AUTOID.4">Comments</A><DT>~ (bitwise not) operator   : <A HREF="../ch04_07.htm#ch04-SECT2-AUTOID.25">Bitwise Not (~)</A></DL>