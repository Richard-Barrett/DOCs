<!DOCTYPE HTML PUBLIC "-//ORA//DTD CD HTML 3.2//EN"><HTML><HEAD><TITLE>[Chapter 15] 15.12 Array and List Functions</TITLE><META NAME="author" CONTENT="Stephen Spainhour and Valerie Quercia"><META NAME="date" CONTENT="Mon Mar 17 14:32:12 1997"><META NAME="form" CONTENT="html"><META NAME="metadata" CONTENT="dublincore.0.1"><META NAME="objecttype" CONTENT="book part"><META NAME="otheragent" CONTENT="gmat dbtohtml"><META NAME="publisher" CONTENT="O'Reilly &amp; Associates, Inc."><META NAME="source" CONTENT="SGML"><META NAME="subject" CONTENT="Webmaster in a Nutshell"><META NAME="title" CONTENT="Webmaster in a Nutshell"><!-- JavaScript: pathcont.js --></HEAD><BODY BGCOLOR="#FFFFFF"><DIV CLASS=htmlnav><H1><IMG SRC="gifs/smbanner.gif" ALT="Webmaster in a Nutshell"></H1><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch15_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><b>Chapter 15</b></td><td width=172 align=right valign=top><A HREF="ch15_13.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --><hr align=left width=515></DIV><DIV CLASS=sect1><h2 CLASS=sect1><A CLASS="TITLE" NAME="WEB-CH-15-SECT-12">15.12 Array and List Functions</A></h2><P CLASS=para>  <P><DL CLASS=variablelist><DT CLASS=varlistentry><tt CLASS=literal>delete</tt> $<I CLASS=emphasis>hash</I>{<I CLASS=emphasis>key</I>}<DD><P CLASS=para>Deletes the specified value from the specified hash.Returns the deleted value (unless <I CLASS=emphasis>hash</I> is <tt CLASS=literal>tie</tt>d to a package thatdoes not support this).<p><DT CLASS=varlistentry><tt CLASS=literal>each</tt> %<I CLASS=emphasis>hash</I><DD><P CLASS=para>Returns a 2-element array consisting of the key and value for the nextvalue of the hash. Entries are returned in an apparentlyrandom order. After all values of the hash have been returned, a null array isreturned. The next call to <tt CLASS=literal>each</tt> after that will start iterating again.<p><DT CLASS=varlistentry><tt CLASS=literal>exists</tt> <I CLASS=emphasis>expr</I>(dagger)<DD><P CLASS=para>Checks if the specified hash key exists in its hash array.<p><DT CLASS=varlistentry><tt CLASS=literal>grep</tt> <I CLASS=emphasis>expr</I>, <I CLASS=emphasis>list</I><DD><P CLASS=para><p><DT CLASS=varlistentry><tt CLASS=literal>grep</tt> <I CLASS=emphasis>block</I> <I CLASS=emphasis>list</I><DD><P CLASS=para>Evaluates <I CLASS=emphasis>expr</I> or <I CLASS=emphasis>block</I> for each element of the <I CLASS=emphasis>list</I>,locally setting $_ to refer to the element. Modifying $_ will modify the corresponding element from <I CLASS=emphasis>list</I>. Returns the array of elements from <I CLASS=emphasis>list</I> for which<I CLASS=emphasis>expr</I> returned <tt CLASS=literal>true</tt>.<p><DT CLASS=varlistentry><tt CLASS=literal>join</tt> <I CLASS=emphasis>expr</I>, <I CLASS=emphasis>list</I><DD><P CLASS=para>Joins the separate strings of <I CLASS=emphasis>list</I> into a single string with fieldsseparated by the value of <I CLASS=emphasis>expr</I>, and returns the string.<p><DT CLASS=varlistentry><tt CLASS=literal>keys</tt> %<I CLASS=emphasis>hash</I><DD><P CLASS=para>Returns an array of all the keys of the named hash.<p><DT CLASS=varlistentry><tt CLASS=literal>map</tt> <I CLASS=emphasis>expr</I>, <I CLASS=emphasis>list</I><DD><P CLASS=para><p><DT CLASS=varlistentry><tt CLASS=literal>map</tt> <I CLASS=emphasis>block</I> <I CLASS=emphasis>list</I><DD><P CLASS=para>Evaluates <I CLASS=emphasis>expr</I> or <I CLASS=emphasis>block</I> for each element of the <I CLASS=emphasis>list</I>,locally setting $_ to refer to the element. Modifying $_ will modify the corresponding element from <I CLASS=emphasis>list</I>. Returns the list of results.<p><DT CLASS=varlistentry><tt CLASS=literal>pop</tt> @<I CLASS=emphasis>array</I><DD><P CLASS=para>Pops off and returns the last value of the array.<p><DT CLASS=varlistentry><tt CLASS=literal>push</tt> @<I CLASS=emphasis>array</I>, <I CLASS=emphasis>list</I><DD><P CLASS=para>Pushes the values of <I CLASS=emphasis>list</I> onto the end of the array.<p><DT CLASS=varlistentry><tt CLASS=literal>reverse</tt> <I CLASS=emphasis>list</I><DD><P CLASS=para>In array context, returns the <I CLASS=emphasis>list</I> in reverse order. In scalar context, returns the first element of <I CLASS=emphasis>list</I> with bytes reversed.<p><DT CLASS=varlistentry><tt CLASS=literal>scalar</tt> @<I CLASS=emphasis>array</I><DD><P CLASS=para>Returns the number of elements in the array.<p><DT CLASS=varlistentry><tt CLASS=literal>scalar</tt> %<I CLASS=emphasis>hash</I><DD><P CLASS=para>Returns a <tt CLASS=literal>true</tt> value if the hash has elements defined.<p><DT CLASS=varlistentry><tt CLASS=literal>shift</tt> [ @<I CLASS=emphasis>array</I> ]<DD><P CLASS=para>Shifts the first value of the array off and returns it, shortening thearray by 1 and moving everything down. If @<I CLASS=emphasis>array</I> is omitted, shifts@ARGV in main and @_ in subroutines.<p><DT CLASS=varlistentry><tt CLASS=literal>sort</tt> [ <I CLASS=emphasis>subroutine</I> ] <I CLASS=emphasis>list</I><DD><P CLASS=para>Sorts the <I CLASS=emphasis>list</I> and returns the sorted array value. <I CLASS=emphasis>subroutine</I>, if specified, must return less than zero, zero, or greater than zero, depending on how the elements of the array (available to the routine as $a and $b) are to be ordered.<I CLASS=emphasis>subroutine</I> may be the name of a user-defined routine, or a <I CLASS=emphasis>block</I>.<p><DT CLASS=varlistentry><tt CLASS=literal>splice</tt> @<I CLASS=emphasis>array</I>, <I CLASS=emphasis>offset</I> [, <I CLASS=emphasis>length</I> [ , <I CLASS=emphasis>list</I> ] ]<DD><P CLASS=para>Removes the elements of @<I CLASS=emphasis>array</I> designated by <I CLASS=emphasis>offset</I> and<I CLASS=emphasis>length</I>, and replaces them with <I CLASS=emphasis>list</I> (if specified). Returns the elements removed.<p><DT CLASS=varlistentry><tt CLASS=literal>split</tt> [ <I CLASS=emphasis>pattern</I> [ , <I CLASS=emphasis>expr</I>(dagger) [ , <I CLASS=emphasis>limit</I> ] ] ]<DD><P CLASS=para>Splits a string into an array of strings, and returns it. If <I CLASS=emphasis>limit</I>is specified, splits into at most that number of fields. If <I CLASS=emphasis>pattern</I> isalso omitted, splits at the whitespace. Ifnot in array context, returns number of fields and splits to @_.See also <A HREF="ch15_14.htm#WEB-CH-15-SECT-14">the section called "Search and Replace Functions"</A>.<p><DT CLASS=varlistentry><tt CLASS=literal>unshift</tt> @<I CLASS=emphasis>array</I>, <I CLASS=emphasis>list</I><DD><P CLASS=para>Prepends list to the front of the array, and returns the number ofelements in the new array.<p><DT CLASS=varlistentry><tt CLASS=literal>values</tt> %<I CLASS=emphasis>hash</I><DD><P CLASS=para>Returns a normal array consisting of all the values of the namedhash.</DL></DIV><DIV CLASS=htmlnav><P><HR align=left width=515><table width=515 border=0 cellpadding=0 cellspacing=0><tr><td width=172 align=left valign=top><A HREF="ch15_11.htm"><IMG SRC="gifs/txtpreva.gif" ALT="Previous" border=0></A></td><td width=171 align=center valign=top><a href="index.htm"><IMG SRC="gifs/txthome.gif" ALT="Home" border=0></a></td><td width=172 align=right valign=top><A HREF="ch15_13.htm"><IMG SRC="gifs/txtnexta.gif" ALT="Next" border=0></A></td></tr><tr><td width=172 align=left valign=top>String Functions</td><td width=171 align=center valign=top><a href="index/idx_0.htm">Book Index</a></td><td width=172 align=right valign=top>Regular Expressions</td></tr></table><!-- JavaScript: prev.js -->&nbsp;<!-- JavaScript: next.js --></DIV></BODY></HTML>